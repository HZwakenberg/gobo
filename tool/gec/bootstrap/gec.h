/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#define GE_ms(s,c) GE_ms8((s),(c))
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
  typedef unsigned __int64 uintptr_t;
#else
  typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t	EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t	EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE	EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t	rt_int_ptr;
typedef uintptr_t	rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#include <string.h>
#ifndef EIF_WINDOWS
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

	/* Macro used to manipulate native string, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen	_wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */

#define GE_nstr_cat_ascii(dest, src) { 						\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR) src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR) 0;			\
	}

#else /* not EIF_WINDOWS */

	/* Macro used to manipulate native string, i.e: (char*) */
#define GE_nstrlen  strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen	fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */

#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef EIF_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_thread_context_struct GE_thread_context;
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef EIF_THREADS
	GE_thread_context* thread; /* Thread context */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context();

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Pointer to function to create a new exception manager object.
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `code'.
 */
extern char* GE_exception_tag(long code);

/*
 * Raise an exception with code `code'.
 */
extern void GE_raise(long code);

/*
 * Raise an exception with code `code' and message `msg'.
 */
extern void GE_raise_with_message(long code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long code, char* meaning, char* message);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST((a_type).annotations & ATTACHED_FLAG)
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking();

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking();

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_instance_of_special_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_type) GE_new_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' element. To create a SPECIAL of
 * basic type, use `SPECIAL'.
 */
extern EIF_REFERENCE GE_new_special_any_instance_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_any_instance_of_encoded_type(a_type, a_capacity) GE_new_special_instance_of_type_index(GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_type) GE_new_instance_of_type_index(a_type)
#define GE_new_tuple_instance_of_encoded_type(a_type) GE_new_tuple_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ASCII string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */

#define GC_IGNORE_WARN
#include "gc.h"
#endif


/*
 * GC initialization.
 */

#ifdef EIF_BOEHM_GC
#define GE_init_gc() GC_INIT(); GC_enable_incremental()
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif


/*
 * Memory allocation.
 */

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc(x) GE_null(GC_MALLOC(x))
#else /* No GC */
#define GE_alloc(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_cleared
#else /* No GC */
#endif

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))
#else /* No GC */
#define GE_alloc_atomic(x) GE_null(malloc(x))
#endif

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */






/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
extern void* GE_raw_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_raw_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef EIF_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_raw_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef EIF_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, GE_malloc_cleared means that GE_malloc and GE_malloc_uncollectable
 * make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, GE_malloc_atomic_cleared means that GE_malloc_atomic and
 * GE_malloc_atomic_uncollectable make sure that the allocated memory is zeroed.
 */
#ifdef EIF_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif


/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef EIF_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif


/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H

#ifdef __cplusplus
extern "C" {
#endif

/*
	Initialize data to keep track of object ids.
*/
extern void GE_init_identified(void);

/*
	Get a new id for `object', assuming it is NOT in the stack.
*/
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
	Return the object associated with `id'.
*/
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
	Remove the object associated with `id' from the stack.
*/
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S19 T19;

/* ISE_EXCEPTION_MANAGER */
typedef struct S20 T20;

/* GEC */
typedef struct S23 T23;

/* HASH_TABLE [INTEGER_32, INTEGER_32] */
typedef struct S24 T24;

/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
typedef struct S25 T25;

/* CELL [detachable EXCEPTION] */
typedef struct S26 T26;

/* CELL [NO_MORE_MEMORY] */
typedef struct S27 T27;

/* [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
typedef struct S28 T28;

/* KL_TEXT_INPUT_FILE */
typedef struct S30 T30;

/* KL_ARGUMENTS */
typedef struct S31 T31;

/* ET_ISE_VARIABLES */
typedef struct S32 T32;

/* UT_ERROR_HANDLER */
typedef struct S33 T33;

/* ET_SYSTEM */
typedef struct S34 T34;

/* KL_STRING_ROUTINES */
typedef struct S35 T35;

/* ET_ERROR_HANDLER */
typedef struct S37 T37;

/* KL_EXCEPTIONS */
typedef struct S38 T38;

/* AP_PARSER */
typedef struct S39 T39;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S40 T40;

/* AP_ERROR */
typedef struct S41 T41;

/* AP_FLAG */
typedef struct S42 T42;

/* AP_ENUMERATION_OPTION */
typedef struct S44 T44;

/* AP_BOOLEAN_OPTION */
typedef struct S45 T45;

/* AP_INTEGER_OPTION */
typedef struct S46 T46;

/* AP_STRING_OPTION */
typedef struct S47 T47;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S51 T51;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S53 T53;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S54 T54;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S55 T55;

/* ST_SPLITTER */
typedef struct S56 T56;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S58 T58;

/* detachable KL_EQUALITY_TESTER [STRING_8] */
typedef struct S59 T59;

/* ET_XACE_SYSTEM */
typedef struct S62 T62;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S63 T63;

/* ET_ECF_ERROR_HANDLER */
typedef struct S64 T64;

/* ET_ECF_SYSTEM */
typedef struct S65 T65;

/* ET_ECF_TARGET */
typedef struct S66 T66;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S67 T67;

/* ET_ECF_VARIABLES */
typedef struct S68 T68;

/* ET_LACE_PARSER */
typedef struct S69 T69;

/* ET_LACE_ERROR_HANDLER */
typedef struct S70 T70;

/* ET_LACE_SYSTEM */
typedef struct S71 T71;

/* ET_DYNAMIC_SYSTEM */
typedef struct S72 T72;

/* ET_C_GENERATOR */
typedef struct S75 T75;

/* KL_SHELL_COMMAND */
typedef struct S76 T76;

/* DS_HASH_SET [STRING_8] */
typedef struct S77 T77;

/* ET_NULL_ERROR_HANDLER */
typedef struct S78 T78;

/* UT_VERSION */
typedef struct S79 T79;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S80 T80;

/* ET_CLASS_TYPE */
typedef struct S81 T81;

/* ET_TOKEN_CONSTANTS */
typedef struct S82 T82;

/* ET_CLASS */
typedef struct S83 T83;

/* KL_OPERATING_SYSTEM */
typedef struct S85 T85;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S87 T87;

/* UT_VERSION_NUMBER */
typedef struct S88 T88;

/* VOID_TARGET */
typedef struct S89 T89;

/* [attached] TYPE [VOID_TARGET] */
#define T90 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S91 T91;

/* [attached] TYPE [ROUTINE_FAILURE] */
#define T92 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S93 T93;

/* [attached] TYPE [OLD_VIOLATION] */
#define T94 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S95 T95;

/* INVARIANT_VIOLATION */
typedef struct S96 T96;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S97 T97;

/* IO_FAILURE */
typedef struct S98 T98;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S99 T99;

/* COM_FAILURE */
typedef struct S100 T100;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S101 T101;

/* PRECONDITION_VIOLATION */
typedef struct S104 T104;

/* POSTCONDITION_VIOLATION */
typedef struct S105 T105;

/* FLOATING_POINT_FAILURE */
typedef struct S106 T106;

/* CHECK_VIOLATION */
typedef struct S107 T107;

/* BAD_INSPECT_VALUE */
typedef struct S108 T108;

/* VARIANT_VIOLATION */
typedef struct S109 T109;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S110 T110;

/* RESCUE_FAILURE */
typedef struct S111 T111;

/* RESUMPTION_FAILURE */
typedef struct S112 T112;

/* CREATE_ON_DEFERRED */
typedef struct S113 T113;

/* EXTERNAL_FAILURE */
typedef struct S114 T114;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S115 T115;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S116 T116;

/* MISMATCH_FAILURE */
typedef struct S117 T117;

/* DEVELOPER_EXCEPTION */
typedef struct S118 T118;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S119 T119;

/* SERIALIZATION_FAILURE */
typedef struct S120 T120;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S121 T121;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S122 T122;

/* PRIMES */
typedef struct S123 T123;

/* SPECIAL [INTEGER_32] */
typedef struct S124 T124;

/* SPECIAL [BOOLEAN] */
typedef struct S125 T125;

/* detachable KL_LINKABLE [CHARACTER_8] */
typedef struct S127 T127;

/* MANAGED_POINTER */
typedef struct S129 T129;

/* FILE_INFO */
typedef struct S130 T130;

/* KL_STANDARD_FILES */
typedef struct S131 T131;

/* KL_STDERR_FILE */
typedef struct S132 T132;

/* KL_STDOUT_FILE */
typedef struct S133 T133;

/* UC_STRING */
typedef struct S134 T134;

/* KL_ANY_ROUTINES */
typedef struct S135 T135;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S137 T137;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S138 T138;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S139 T139;

/* AP_ERROR_HANDLER */
typedef struct S140 T140;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S141 T141;

/* ARRAY [STRING_8] */
typedef struct S142 T142;

/* SPECIAL [STRING_8] */
typedef struct S143 T143;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S144 T144;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S145 T145;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S148 T148;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S151 T151;

/* ET_XACE_AST_FACTORY */
typedef struct S152 T152;

/* XM_DOCUMENT */
typedef struct S153 T153;

/* XM_ELEMENT */
typedef struct S154 T154;

/* XM_POSITION_TABLE */
typedef struct S155 T155;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S157 T157;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S158 T158;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S159 T159;

/* ET_XACE_VALIDATOR */
typedef struct S160 T160;

/* ET_XACE_PREPROCESSOR */
typedef struct S161 T161;

/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S162 T162;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S163 T163;

/* XM_EIFFEL_PARSER */
typedef struct S164 T164;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S167 T167;

/* UT_MESSAGE */
typedef struct S168 T168;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S170 T170;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S171 T171;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S172 T172;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S173 T173;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S174 T174;

/* ET_ECF_AST_FACTORY */
typedef struct S175 T175;

/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
typedef struct S177 T177;

/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S178 T178;

/* ET_COMPRESSED_POSITION */
typedef struct S179 T179;

/* ET_IDENTIFIER */
typedef struct S181 T181;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S183 T183;

/* ET_ECF_STATE */
typedef struct S186 T186;

/* ET_ECF_TARGETS */
typedef struct S187 T187;

/* ET_ECF_LIBRARY */
typedef struct S188 T188;

/* ET_ADAPTED_LIBRARIES */
typedef struct S189 T189;

/* [attached] TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S191 T191;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S192 T192;

/* detachable TUPLE */
typedef struct S193 T193;

/* ET_ECF_LIBRARY_PARSER */
typedef struct S194 T194;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S195 T195;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S196 T196;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S197 T197;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S199 T199;

/* ET_ECF_ERROR */
typedef struct S200 T200;

/* EXECUTION_ENVIRONMENT */
typedef struct S201 T201;

/* ET_LACE_AST_FACTORY */
typedef struct S202 T202;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S203 T203;

/* YY_FILE_BUFFER */
typedef struct S204 T204;

/* YY_BUFFER */
typedef struct S205 T205;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S206 T206;

/* SPECIAL [detachable ANY] */
typedef struct S209 T209;

/* KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S210 T210;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S211 T211;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S212 T212;

/* ET_LACE_CLUSTERS */
typedef struct S213 T213;

/* ET_LACE_CLUSTER */
typedef struct S214 T214;

/* ET_LACE_EXCLUDE */
typedef struct S215 T215;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S216 T216;

/* SPECIAL [ET_LACE_SYSTEM] */
typedef struct S217 T217;

/* SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S218 T218;

/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S219 T219;

/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
typedef struct S220 T220;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S221 T221;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S222 T222;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S223 T223;

/* SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S224 T224;

/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S225 T225;

/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S226 T226;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S227 T227;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S228 T228;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S229 T229;

/* KL_PLATFORM */
typedef struct S230 T230;

/* KL_INTEGER_ROUTINES */
typedef struct S231 T231;

/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S232 T232;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S233 T233;

/* [attached] TUPLE [ET_CLASS] */
typedef struct S234 T234;

/* [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
typedef struct S235 T235;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S236 T236;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S237 T237;

/* ET_DYNAMIC_TYPE */
typedef struct S238 T238;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S239 T239;

/* DT_DATE_TIME */
typedef struct S240 T240;

/* DT_SYSTEM_CLOCK */
typedef struct S241 T241;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S242 T242;

/* ET_DYNAMIC_FEATURE */
typedef struct S247 T247;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S251 T251;

/* ET_EXTERNAL_FUNCTION */
typedef struct S259 T259;

/* ET_TUPLE_TYPE */
typedef struct S260 T260;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S261 T261;

/* detachable ARRAY [ET_TYPE] */
typedef struct S262 T262;

/* SPECIAL [ET_TYPE] */
typedef struct S263 T263;

/* ET_FORMAL_ARGUMENT */
typedef struct S264 T264;

/* ET_QUERY_LIST */
typedef struct S265 T265;

/* ET_PROCEDURE_LIST */
typedef struct S266 T266;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S267 T267;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S268 T268;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S269 T269;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S270 T270;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S271 T271;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S272 T272;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S273 T273;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S274 T274;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S275 T275;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S276 T276;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S277 T277;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S278 T278;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S279 T279;

/* DS_ARRAYED_LIST [ET_OBJECT_TEST] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S281 T281;

/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
typedef struct S282 T282;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S283 T283;

/* ET_EXPRESSION */
typedef struct S284 T284;

/* ET_CURRENT */
typedef struct S285 T285;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S286 T286;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S287 T287;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S290 T290;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S291 T291;

/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S292 T292;

/* ET_MANIFEST_TUPLE */
typedef struct S293 T293;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S294 T294;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S295 T295;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S296 T296;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S297 T297;

/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S298 T298;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S299 T299;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S300 T300;

/* ET_IDENTIFIER_TESTER */
typedef struct S301 T301;

/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S302 T302;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S303 T303;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S304 T304;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S305 T305;

/* UT_TEMPLATE_EXPANDER */
typedef struct S306 T306;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S307 T307;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S308 T308;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S309 T309;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S310 T310;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S311 T311;

/* ET_RESULT */
typedef struct S312 T312;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S313 T313;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S317 T317;

/* ET_OBJECT_TEST */
typedef struct S319 T319;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S320 T320;

/* ET_EQUALITY_EXPRESSION */
typedef struct S321 T321;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S322 T322;

/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S325 T325;

/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
typedef struct S326 T326;

/* ET_CREATE_EXPRESSION */
typedef struct S330 T330;

/* ET_QUALIFIED_CALL */
typedef struct S331 T331;

/* KL_DIRECTORY */
typedef struct S335 T335;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S336 T336;

/* ET_COMPOUND */
typedef struct S337 T337;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S338 T338;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S342 T342;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S349 T349;

/* ET_SYMBOL */
typedef struct S350 T350;

/* [attached] PROCEDURE [[attached] TUPLE] */
typedef struct S351 T351;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S352 T352;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S353 T353;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S354 T354;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S355 T355;

/* UT_INTEGER_FORMATTER */
typedef struct S356 T356;

/* STD_FILES */
typedef struct S359 T359;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S361 T361;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S363 T363;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S364 T364;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S365 T365;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S367 T367;

/* ET_ATTRIBUTE */
typedef struct S368 T368;

/* NATIVE_STRING */
typedef struct S370 T370;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S371 T371;

/* ET_FEATURE_CHECKER */
typedef struct S372 T372;

/* DS_CELL [INTEGER_32] */
typedef struct S373 T373;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S374 T374;

/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S375 T375;

/* ET_TYPE_CHECKER */
typedef struct S376 T376;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S378 T378;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S379 T379;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S380 T380;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S381 T381;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S382 T382;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S383 T383;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S384 T384;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S385 T385;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S386 T386;

/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S387 T387;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S388 T388;

/* ET_ATTACHMENT_SCOPE */
typedef struct S389 T389;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S390 T390;

/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
typedef struct S391 T391;

/* ET_PRECONDITIONS */
typedef struct S392 T392;

/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S393 T393;

/* ET_FEATURE_LIST */
typedef struct S395 T395;

/* ET_UNKNOWN_GROUP */
typedef struct S397 T397;

/* ET_BASE_TYPE_LIST */
typedef struct S399 T399;

/* ET_KEYWORD */
typedef struct S400 T400;

/* ET_CLASS_CODES */
typedef struct S401 T401;

/* PATH */
typedef struct S402 T402;

/* ARGUMENTS_32 */
typedef struct S404 T404;

/* ST_WORD_WRAPPER */
typedef struct S405 T405;

/* ET_AST_FACTORY */
typedef struct S407 T407;

/* ET_XACE_EXTERNALS */
typedef struct S408 T408;

/* ET_XACE_OPTIONS */
typedef struct S409 T409;

/* XM_ATTRIBUTE */
typedef struct S410 T410;

/* ET_XACE_OPTION_NAMES */
typedef struct S412 T412;

/* ET_XACE_CLUSTER */
typedef struct S414 T414;

/* ET_XACE_CLUSTERS */
typedef struct S415 T415;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S416 T416;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S417 T417;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S418 T418;

/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
typedef struct S420 T420;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S422 T422;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S423 T423;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S425 T425;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S426 T426;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S427 T427;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S428 T428;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S429 T429;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S430 T430;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S431 T431;

/* ET_AST_NULL_PROCESSOR */
typedef struct S433 T433;

/* [attached] TUPLE [ET_UNIVERSE] */
typedef struct S434 T434;

/* [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
typedef struct S435 T435;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
typedef struct S436 T436;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S437 T437;

/* DT_DATE_TIME_DURATION */
typedef struct S438 T438;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S439 T439;

/* ET_EIFFEL_PREPARSER */
typedef struct S440 T440;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S441 T441;

/* ET_EIFFEL_PARSER */
typedef struct S442 T442;

/* ET_PROVIDER_CHECKER */
typedef struct S443 T443;

/* ET_ANCESTOR_BUILDER */
typedef struct S444 T444;

/* ET_FEATURE_FLATTENER */
typedef struct S445 T445;

/* ET_INTERFACE_CHECKER */
typedef struct S446 T446;

/* DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
typedef struct S448 T448;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S449 T449;

/* ET_DOTNET_ASSEMBLY */
typedef struct S450 T450;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
typedef struct S451 T451;

/* [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S452 T452;

/* [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
typedef struct S453 T453;

/* [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
typedef struct S454 T454;

/* [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
typedef struct S455 T455;

/* [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
typedef struct S456 T456;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
typedef struct S457 T457;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S458 T458;

/* ET_LIBRARY */
typedef struct S460 T460;

/* [attached] TUPLE [ET_LIBRARY] */
typedef struct S461 T461;

/* [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
typedef struct S462 T462;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S463 T463;

/* ET_CLASS_NAME_TESTER */
typedef struct S464 T464;

/* ET_PARENT */
typedef struct S466 T466;

/* ET_PARENT_LIST */
typedef struct S467 T467;

/* ET_CLIENT_LIST */
typedef struct S468 T468;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S469 T469;

/* ET_MASTER_CLASS */
typedef struct S470 T470;

/* DS_HASH_SET [ET_UNIVERSE] */
typedef struct S471 T471;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S472 T472;

/* [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
typedef struct S473 T473;

/* [attached] TUPLE [ET_MASTER_CLASS] */
typedef struct S475 T475;

/* [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S476 T476;

/* [attached] TUPLE [ET_CLUSTER] */
typedef struct S477 T477;

/* [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
typedef struct S478 T478;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S479 T479;

/* DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
typedef struct S480 T480;

/* [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S481 T481;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S482 T482;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S483 T483;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S484 T484;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S485 T485;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S486 T486;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S487 T487;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S488 T488;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S489 T489;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S490 T490;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S491 T491;

/* ET_CLIENT */
typedef struct S492 T492;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S493 T493;

/* ET_RENAME_LIST */
typedef struct S494 T494;

/* ET_EXPORT_LIST */
typedef struct S495 T495;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S496 T496;

/* ET_LIKE_CURRENT */
typedef struct S499 T499;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S500 T500;

/* ET_NONE_GROUP */
typedef struct S501 T501;

/* [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
typedef struct S502 T502;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
typedef struct S503 T503;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S504 T504;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
typedef struct S505 T505;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S506 T506;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
typedef struct S509 T509;

/* [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
typedef struct S513 T513;

/* XM_NAMESPACE */
typedef struct S516 T516;

/* ARRAY [INTEGER_32] */
typedef struct S517 T517;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S518 T518;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S519 T519;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S520 T520;

/* ET_DO_PROCEDURE */
typedef struct S521 T521;

/* UT_CONFIG_PARSER */
typedef struct S523 T523;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S524 T524;

/* ET_SYSTEM_ERROR */
typedef struct S527 T527;

/* ET_INTERNAL_ERROR */
typedef struct S528 T528;

/* ET_VALIDITY_ERROR */
typedef struct S529 T529;

/* ET_DEFERRED_PROCEDURE */
typedef struct S530 T530;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S531 T531;

/* UTF_CONVERTER */
typedef struct S532 T532;
extern T0* GE_boxed532(T532 a1);
typedef struct Sb532 Tb532;

/* CELL [INTEGER_32] */
typedef struct S533 T533;

/* C_STRING */
typedef struct S534 T534;

/* KL_PATHNAME */
typedef struct S536 T536;

/* READABLE_STRING_32 */
typedef struct S538 T538;

/* SPECIAL [NATURAL_8] */
typedef struct S539 T539;

/* TYPED_POINTER [SPECIAL [NATURAL_8]] */
typedef struct S540 T540;
extern T0* GE_boxed540(T540 a1);
typedef struct Sb540 Tb540;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S541 T541;

/* SPECIAL [AP_OPTION] */
typedef struct S543 T543;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S544 T544;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S545 T545;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S546 T546;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S547 T547;

/* detachable DS_LINKABLE [STRING_8] */
typedef struct S548 T548;

/* detachable DS_LINKABLE [BOOLEAN] */
typedef struct S549 T549;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S550 T550;

/* detachable DS_LINKABLE [INTEGER_32] */
typedef struct S551 T551;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S552 T552;

/* XM_NAMESPACE_RESOLVER */
typedef struct S553 T553;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S554 T554;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S555 T555;

/* XM_CALLBACKS_NULL */
typedef struct S556 T556;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S557 T557;

/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S563 T563;

/* SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S564 T564;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
typedef struct S565 T565;

/* XM_EIFFEL_SCANNER */
typedef struct S566 T566;

/* XM_DEFAULT_POSITION */
typedef struct S567 T567;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S569 T569;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S570 T570;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S571 T571;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S573 T573;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S575 T575;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S576 T576;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S577 T577;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S578 T578;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S579 T579;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S580 T580;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S581 T581;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S582 T582;

/* XM_DTD_EXTERNAL_ID */
typedef struct S583 T583;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S584 T584;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S585 T585;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S586 T586;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S587 T587;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S588 T588;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S589 T589;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S590 T590;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S591 T591;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S592 T592;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S593 T593;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S594 T594;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S595 T595;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S596 T596;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S597 T597;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S598 T598;

/* XM_EIFFEL_DECLARATION */
typedef struct S599 T599;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S600 T600;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S603 T603;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S604 T604;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S606 T606;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S607 T607;

/* detachable KL_EQUALITY_TESTER [INTEGER_32] */
typedef struct S608 T608;

/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
typedef struct S609 T609;

/* SPECIAL [ET_ECF_LIBRARY] */
typedef struct S610 T610;

/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
typedef struct S613 T613;

/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S614 T614;

/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
typedef struct S617 T617;

/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S618 T618;

/* DS_ARRAYED_LIST [ET_ECF_TARGET] */
typedef struct S619 T619;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S620 T620;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S621 T621;

/* [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S622 T622;

/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S623 T623;

/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
typedef struct S624 T624;

/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S626 T626;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S627 T627;

/* [attached] TYPE [ET_IDENTIFIER] */
#define T628 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S629 T629;

/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
typedef struct S632 T632;

/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
typedef struct S633 T633;

/* SPECIAL [ET_MASTER_CLASS] */
typedef struct S634 T634;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S635 T635;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S636 T636;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S637 T637;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S638 T638;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S639 T639;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S642 T642;

/* C_DATE */
typedef struct S643 T643;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S647 T647;

/* ET_BRACKET_SYMBOL */
typedef struct S648 T648;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S650 T650;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S652 T652;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S653 T653;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S654 T654;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S655 T655;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S658 T658;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S659 T659;

/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S661 T661;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S662 T662;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S663 T663;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S664 T664;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S665 T665;

/* SPECIAL [ET_OBJECT_TEST] */
typedef struct S667 T667;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
typedef struct S668 T668;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
typedef struct S669 T669;

/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S670 T670;

/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S671 T671;

/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S672 T672;

/* SPECIAL [ET_EQUALITY_EXPRESSION] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
typedef struct S674 T674;

/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
typedef struct S675 T675;

/* SPECIAL [ET_AGENT] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S677 T677;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S678 T678;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S681 T681;

/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S683 T683;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S684 T684;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S685 T685;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S686 T686;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S687 T687;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S688 T688;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S690 T690;

/* SPECIAL [ET_FEATURE] */
typedef struct S691 T691;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S692 T692;

/* SPECIAL [ET_CONSTANT] */
typedef struct S693 T693;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S695 T695;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
typedef struct S696 T696;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S697 T697;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S699 T699;

/* SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S700 T700;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S702 T702;

/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S703 T703;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S704 T704;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S705 T705;

/* RX_BYTE_CODE */
typedef struct S709 T709;

/* RX_CHARACTER_SET */
typedef struct S710 T710;

/* RX_CASE_MAPPING */
typedef struct S711 T711;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S713 T713;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S714 T714;

/* TYPED_POINTER [ANY] */
typedef struct S715 T715;
extern T0* GE_boxed715(T715 a1);
typedef struct Sb715 Tb715;

/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S716 T716;

/* ARRAY [BOOLEAN] */
typedef struct S717 T717;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S723 T723;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S725 T725;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S726 T726;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S727 T727;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S728 T728;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S729 T729;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S731 T731;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S732 T732;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S733 T733;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S734 T734;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S735 T735;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S736 T736;

/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S737 T737;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
typedef struct S738 T738;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S739 T739;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S740 T740;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S742 T742;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
typedef struct S743 T743;

/* ET_NAMED_OBJECT_TEST */
typedef struct S746 T746;

/* SPECIAL [ET_NAMED_OBJECT_TEST] */
typedef struct S747 T747;

/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
typedef struct S748 T748;

/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
typedef struct S749 T749;

/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
typedef struct S750 T750;

/* SPECIAL [ET_ACROSS_COMPONENT] */
typedef struct S753 T753;

/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
typedef struct S754 T754;

/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
typedef struct S755 T755;

/* SPECIAL [ET_ATTACHMENT_SCOPE] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
typedef struct S758 T758;

/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
typedef struct S759 T759;

/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
typedef struct S760 T760;

/* SPECIAL [ET_ASSERTIONS] */
typedef struct S761 T761;

/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
typedef struct S763 T763;

/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
typedef struct S764 T764;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S765 T765;

/* ET_CLUSTERS */
typedef struct S767 T767;

/* UC_UNICODE_ROUTINES */
typedef struct S768 T768;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S769 T769;

/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S770 T770;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S771 T771;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S772 T772;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S773 T773;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S774 T774;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S775 T775;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S776 T776;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S777 T777;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S778 T778;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S781 T781;

/* UT_TRISTATE */
typedef struct S782 T782;

/* KL_AGENT_ROUTINES [ANY] */
typedef struct S783 T783;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S784 T784;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S785 T785;

/* [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
typedef struct S786 T786;

/* [attached] PREDICATE [[attached] TUPLE] */
typedef struct S787 T787;

/* UT_COUNTER */
typedef struct S789 T789;

/* KL_AGENT_ROUTINES [ET_CLASS] */
typedef struct S790 T790;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S791 T791;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S792 T792;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
typedef struct S793 T793;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
typedef struct S794 T794;

/* ET_ECF_CLUSTER */
typedef struct S795 T795;

/* ET_ECF_CLUSTERS */
typedef struct S796 T796;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S797 T797;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S798 T798;

/* ET_ECF_FILE_RULE */
typedef struct S799 T799;

/* ET_ECF_FILE_RULES */
typedef struct S800 T800;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S801 T801;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S802 T802;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S803 T803;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S804 T804;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S805 T805;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S806 T806;

/* ET_ECF_SETTINGS */
typedef struct S808 T808;

/* ET_ECF_OPTIONS */
typedef struct S809 T809;

/* ET_ECF_CONDITIONS */
typedef struct S810 T810;

/* ET_ECF_ROOT_CLASS */
typedef struct S811 T811;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S812 T812;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S814 T814;

/* ET_ECF_BUILD_CONDITION */
typedef struct S815 T815;

/* ET_ECF_MULTITHREADED_CONDITION */
typedef struct S816 T816;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S817 T817;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S818 T818;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S819 T819;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S820 T820;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S822 T822;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S823 T823;

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S824 T824;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S825 T825;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S829 T829;

/* ET_INFIX_FREE_NAME */
typedef struct S830 T830;

/* ET_CREATOR_LIST */
typedef struct S831 T831;

/* EXCEPTIONS */
typedef struct S833 T833;

/* XM_LINKED_LIST [XM_DOCUMENT_NODE] */
typedef struct S834 T834;

/* XM_LINKED_LIST [XM_ELEMENT_NODE] */
typedef struct S836 T836;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S840 T840;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S841 T841;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S842 T842;

/* UC_UTF8_ROUTINES */
typedef struct S843 T843;

/* UC_UTF8_STRING */
typedef struct S844 T844;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S845 T845;

/* [attached] TYPE [INTEGER_32] */
#define T848 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
typedef struct S849 T849;

/* KL_CHARACTER_BUFFER */
typedef struct S852 T852;

/* [attached] TUPLE [ET_LACE_CLUSTER] */
typedef struct S853 T853;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S854 T854;

/* SPECIAL [ET_QUERY] */
typedef struct S855 T855;

/* ET_ALIAS_NAME */
typedef struct S856 T856;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S857 T857;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S858 T858;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S859 T859;

/* CONSOLE */
typedef struct S863 T863;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S864 T864;

/* ET_LIKE_N */
typedef struct S866 T866;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S867 T867;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S868 T868;

/* ARRAY [IMMUTABLE_STRING_32] */
typedef struct S869 T869;

/* SPECIAL [IMMUTABLE_STRING_32] */
typedef struct S870 T870;

/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S871 T871;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S872 T872;

/* [attached] TUPLE [ET_XACE_CLUSTER] */
typedef struct S873 T873;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S874 T874;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S875 T875;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S876 T876;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S878 T878;

/* detachable DS_HASH_SET [ET_NAMED_CLASS] */
typedef struct S880 T880;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S881 T881;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S882 T882;

/* ET_SUPPLIER_BUILDER */
typedef struct S883 T883;

/* ET_POSTCONDITIONS */
typedef struct S885 T885;

/* ET_INVARIANTS */
typedef struct S886 T886;

/* KL_STDIN_FILE */
typedef struct S887 T887;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S889 T889;

/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S890 T890;

/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S891 T891;

/* DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S892 T892;

/* DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S893 T893;

/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S894 T894;

/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S895 T895;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S896 T896;

/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S897 T897;

/* KL_STRING_INPUT_STREAM */
typedef struct S898 T898;

/* ET_TEXT_GROUP */
typedef struct S899 T899;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S900 T900;

/* SPECIAL [detachable ET_KEYWORD] */
typedef struct S901 T901;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S902 T902;

/* ET_AGENT_KEYWORD */
typedef struct S903 T903;

/* SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S904 T904;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S905 T905;

/* ET_PRECURSOR_KEYWORD */
typedef struct S906 T906;

/* SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S907 T907;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S908 T908;

/* SPECIAL [detachable ET_SYMBOL] */
typedef struct S909 T909;

/* KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S910 T910;

/* SPECIAL [detachable ET_POSITION] */
typedef struct S911 T911;

/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S912 T912;

/* SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S914 T914;

/* KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S915 T915;

/* SPECIAL [detachable ET_BREAK] */
typedef struct S917 T917;

/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S918 T918;

/* SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S920 T920;

/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S921 T921;

/* SPECIAL [detachable ET_CURRENT] */
typedef struct S922 T922;

/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S923 T923;

/* ET_FREE_OPERATOR */
typedef struct S924 T924;

/* SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S925 T925;

/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S926 T926;

/* SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S928 T928;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S929 T929;

/* ET_KEYWORD_OPERATOR */
typedef struct S930 T930;

/* SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S931 T931;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S932 T932;

/* SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S933 T933;

/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S934 T934;

/* SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S936 T936;

/* KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S937 T937;

/* SPECIAL [detachable ET_RESULT] */
typedef struct S938 T938;

/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S939 T939;

/* ET_RETRY_INSTRUCTION */
typedef struct S940 T940;

/* SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S941 T941;

/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S942 T942;

/* ET_SYMBOL_OPERATOR */
typedef struct S943 T943;

/* SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S944 T944;

/* KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S945 T945;

/* ET_VOID */
typedef struct S946 T946;

/* SPECIAL [detachable ET_VOID] */
typedef struct S947 T947;

/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S948 T948;

/* ET_SEMICOLON_SYMBOL */
typedef struct S949 T949;

/* SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S950 T950;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S951 T951;

/* SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S952 T952;

/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S953 T953;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S954 T954;

/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S955 T955;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S956 T956;

/* ET_ACROSS_EXPRESSION */
typedef struct S957 T957;

/* SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S958 T958;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S959 T959;

/* ET_ACROSS_INSTRUCTION */
typedef struct S960 T960;

/* SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S961 T961;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S962 T962;

/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S963 T963;

/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S964 T964;

/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S965 T965;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S966 T966;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S967 T967;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S968 T968;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S970 T970;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S971 T971;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S972 T972;

/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S973 T973;

/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S974 T974;

/* SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S975 T975;

/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S976 T976;

/* SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S977 T977;

/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S978 T978;

/* SPECIAL [detachable ET_ASSIGNER] */
typedef struct S980 T980;

/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S981 T981;

/* ET_BRACKET_EXPRESSION */
typedef struct S982 T982;

/* SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S983 T983;

/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S984 T984;

/* ET_CALL_AGENT */
typedef struct S985 T985;

/* SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S986 T986;

/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S987 T987;

/* ET_CHECK_INSTRUCTION */
typedef struct S988 T988;

/* SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S989 T989;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S990 T990;

/* SPECIAL [detachable ET_CHOICE] */
typedef struct S992 T992;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S993 T993;

/* SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S995 T995;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S996 T996;

/* SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S998 T998;

/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S999 T999;

/* ET_CHOICE_LIST */
typedef struct S1000 T1000;

/* SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S1001 T1001;

/* KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S1002 T1002;

/* SPECIAL [detachable ET_CLASS] */
typedef struct S1003 T1003;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S1004 T1004;

/* SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S1005 T1005;

/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S1006 T1006;

/* ET_CLIENTS */
typedef struct S1007 T1007;

/* SPECIAL [detachable ET_CLIENTS] */
typedef struct S1008 T1008;

/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S1009 T1009;

/* SPECIAL [detachable ET_COMPOUND] */
typedef struct S1010 T1010;

/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S1011 T1011;

/* SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S1013 T1013;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1014 T1014;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1016 T1016;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1017 T1017;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S1018 T1018;

/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1019 T1019;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1020 T1020;

/* ET_CONSTRAINT_CREATOR */
typedef struct S1021 T1021;

/* SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S1022 T1022;

/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1023 T1023;

/* SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1025 T1025;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S1026 T1026;

/* SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S1028 T1028;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1029 T1029;

/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S1031 T1031;

/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1032 T1032;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S1033 T1033;

/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S1034 T1034;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S1035 T1035;

/* SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S1036 T1036;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S1037 T1037;

/* ET_CREATOR */
typedef struct S1038 T1038;

/* SPECIAL [detachable ET_CREATOR] */
typedef struct S1039 T1039;

/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S1040 T1040;

/* SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S1041 T1041;

/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1042 T1042;

/* ET_DEBUG_INSTRUCTION */
typedef struct S1043 T1043;

/* SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S1044 T1044;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S1045 T1045;

/* ET_ELSEIF_PART */
typedef struct S1046 T1046;

/* SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S1047 T1047;

/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1048 T1048;

/* ET_ELSEIF_PART_LIST */
typedef struct S1049 T1049;

/* SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S1050 T1050;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S1051 T1051;

/* SPECIAL [detachable ET_EXPORT] */
typedef struct S1053 T1053;

/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S1054 T1054;

/* SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S1055 T1055;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1056 T1056;

/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S1057 T1057;

/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1058 T1058;

/* SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S1060 T1060;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S1061 T1061;

/* ET_FEATURE_CLAUSE */
typedef struct S1062 T1062;

/* SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S1063 T1063;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1064 T1064;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S1065 T1065;

/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S1066 T1066;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S1067 T1067;

/* ET_FEATURE_EXPORT */
typedef struct S1068 T1068;

/* SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S1069 T1069;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S1070 T1070;

/* SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S1071 T1071;

/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1072 T1072;

/* SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S1074 T1074;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1075 T1075;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S1076 T1076;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1077 T1077;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1079 T1079;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1080 T1080;

/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1081 T1081;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S1082 T1082;

/* ET_FORMAL_PARAMETER */
typedef struct S1083 T1083;

/* SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S1084 T1084;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1085 T1085;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1087 T1087;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1088 T1088;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S1089 T1089;

/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S1090 T1090;

/* ET_IF_INSTRUCTION */
typedef struct S1091 T1091;

/* SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S1092 T1092;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S1093 T1093;

/* SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S1095 T1095;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S1096 T1096;

/* SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S1098 T1098;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S1099 T1099;

/* SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S1101 T1101;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1102 T1102;

/* SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S1104 T1104;

/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1105 T1105;

/* SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S1107 T1107;

/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1108 T1108;

/* ET_INSPECT_INSTRUCTION */
typedef struct S1109 T1109;

/* SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S1110 T1110;

/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S1111 T1111;

/* SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S1113 T1113;

/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S1114 T1114;

/* SPECIAL [detachable ET_INVARIANTS] */
typedef struct S1115 T1115;

/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1116 T1116;

/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1117 T1117;

/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S1118 T1118;

/* SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S1120 T1120;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S1121 T1121;

/* ET_LOCAL_VARIABLE */
typedef struct S1122 T1122;

/* SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S1123 T1123;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1124 T1124;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1126 T1126;

/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1127 T1127;

/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S1128 T1128;

/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S1129 T1129;

/* ET_LOOP_INVARIANTS */
typedef struct S1130 T1130;

/* SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S1131 T1131;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S1132 T1132;

/* ET_MANIFEST_ARRAY */
typedef struct S1133 T1133;

/* SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S1134 T1134;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1135 T1135;

/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S1137 T1137;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1138 T1138;

/* ET_MANIFEST_STRING_LIST */
typedef struct S1139 T1139;

/* SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S1140 T1140;

/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S1141 T1141;

/* SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S1142 T1142;

/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S1143 T1143;

/* SPECIAL [detachable ET_OBSOLETE] */
typedef struct S1145 T1145;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1146 T1146;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S1147 T1147;

/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1148 T1148;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S1149 T1149;

/* SPECIAL [detachable ET_PARENT] */
typedef struct S1150 T1150;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1151 T1151;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S1152 T1152;

/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S1153 T1153;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S1154 T1154;

/* SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S1155 T1155;

/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S1156 T1156;

/* SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S1157 T1157;

/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S1158 T1158;

/* SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S1159 T1159;

/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S1160 T1160;

/* SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S1161 T1161;

/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1162 T1162;

/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1164 T1164;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1165 T1165;

/* SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1167 T1167;

/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1168 T1168;

/* SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1169 T1169;

/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1170 T1170;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1171 T1171;

/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1172 T1172;

/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1173 T1173;

/* ET_STRIP_EXPRESSION */
typedef struct S1174 T1174;

/* SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1176 T1176;

/* SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1178 T1178;

/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1179 T1179;

/* SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1181 T1181;

/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1182 T1182;

/* ET_VARIANT */
typedef struct S1183 T1183;

/* SPECIAL [detachable ET_VARIANT] */
typedef struct S1184 T1184;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1185 T1185;

/* ET_WHEN_PART */
typedef struct S1186 T1186;

/* SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1187 T1187;

/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1188 T1188;

/* ET_WHEN_PART_LIST */
typedef struct S1189 T1189;

/* SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1190 T1190;

/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1191 T1191;

/* SPECIAL [detachable ET_WRITABLE] */
typedef struct S1192 T1192;

/* ET_OBJECT_TEST_LIST */
typedef struct S1195 T1195;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1196 T1196;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1197 T1197;

/* ET_VERBATIM_STRING */
typedef struct S1198 T1198;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1199 T1199;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S1200 T1200;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1201 T1201;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1202 T1202;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1203 T1203;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1204 T1204;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1205 T1205;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1206 T1206;

/* ET_TRUE_CONSTANT */
typedef struct S1208 T1208;

/* ET_FALSE_CONSTANT */
typedef struct S1209 T1209;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1210 T1210;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1211 T1211;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1215 T1215;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1216 T1216;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1217 T1217;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S1218 T1218;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1219 T1219;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1220 T1220;

/* ET_RENAME */
typedef struct S1221 T1221;

/* ET_ALL_EXPORT */
typedef struct S1222 T1222;

/* ET_CONVERT_FUNCTION */
typedef struct S1224 T1224;

/* ET_CONVERT_PROCEDURE */
typedef struct S1225 T1225;

/* ET_DO_FUNCTION */
typedef struct S1227 T1227;

/* ET_ONCE_FUNCTION */
typedef struct S1228 T1228;

/* ET_DEFERRED_FUNCTION */
typedef struct S1229 T1229;

/* ET_ONCE_PROCEDURE */
typedef struct S1231 T1231;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1232 T1232;

/* ET_PREFIX_NAME */
typedef struct S1233 T1233;

/* ET_PREFIX_FREE_NAME */
typedef struct S1234 T1234;

/* ET_INFIX_NAME */
typedef struct S1235 T1235;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1236 T1236;

/* ET_ALIAS_FREE_NAME */
typedef struct S1237 T1237;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1240 T1240;

/* ET_LIKE_FEATURE */
typedef struct S1242 T1242;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1243 T1243;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1244 T1244;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1245 T1245;

/* ET_ASSIGNMENT */
typedef struct S1246 T1246;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1247 T1247;

/* ET_LOOP_INSTRUCTION */
typedef struct S1248 T1248;

/* ET_NULL_INSTRUCTION */
typedef struct S1249 T1249;

/* ET_BANG_INSTRUCTION */
typedef struct S1250 T1250;

/* ET_CREATE_INSTRUCTION */
typedef struct S1251 T1251;

/* ET_CHOICE_RANGE */
typedef struct S1252 T1252;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1253 T1253;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1255 T1255;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1256 T1256;

/* ET_FEATURE_ADDRESS */
typedef struct S1257 T1257;

/* ET_CURRENT_ADDRESS */
typedef struct S1258 T1258;

/* ET_RESULT_ADDRESS */
typedef struct S1259 T1259;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1260 T1260;

/* ET_INFIX_EXPRESSION */
typedef struct S1261 T1261;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1262 T1262;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1263 T1263;

/* ET_MANIFEST_TYPE */
typedef struct S1264 T1264;

/* ET_PREFIX_EXPRESSION */
typedef struct S1265 T1265;

/* ET_OLD_EXPRESSION */
typedef struct S1266 T1266;

/* ET_OLD_OBJECT_TEST */
typedef struct S1267 T1267;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1268 T1268;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1269 T1269;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1270 T1270;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1271 T1271;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1272 T1272;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1273 T1273;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1274 T1274;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1275 T1275;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1276 T1276;

/* ET_TAGGED_ASSERTION */
typedef struct S1278 T1278;

/* ET_FILE_POSITION */
typedef struct S1279 T1279;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1280 T1280;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1281 T1281;

/* ET_PARENT_CHECKER1 */
typedef struct S1282 T1282;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1283 T1283;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1284 T1284;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1285 T1285;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1287 T1287;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1288 T1288;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1290 T1290;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1291 T1291;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1292 T1292;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1293 T1293;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1294 T1294;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1295 T1295;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1296 T1296;

/* ET_SIGNATURE_CHECKER */
typedef struct S1297 T1297;

/* ET_PARENT_CHECKER2 */
typedef struct S1298 T1298;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1299 T1299;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1300 T1300;

/* ET_PRECURSOR_CHECKER */
typedef struct S1301 T1301;

/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
typedef struct S1302 T1302;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S1303 T1303;

/* ET_PARENT_CHECKER3 */
typedef struct S1304 T1304;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1305 T1305;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1306 T1306;

/* ET_PARENT_FEATURE */
typedef struct S1308 T1308;

/* ET_INHERITED_FEATURE */
typedef struct S1309 T1309;

/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1310 T1310;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
typedef struct S1311 T1311;

/* SPECIAL [ET_DOTNET_ASSEMBLY] */
typedef struct S1312 T1312;

/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
typedef struct S1314 T1314;

/* ET_BRACED_TYPE_LIST */
typedef struct S1316 T1316;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1317 T1317;

/* DS_ARRAYED_LIST [ET_MASTER_CLASS] */
typedef struct S1318 T1318;

/* DS_HASH_SET_CURSOR [ET_UNIVERSE] */
typedef struct S1319 T1319;

/* SPECIAL [ET_UNIVERSE] */
typedef struct S1320 T1320;

/* KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
typedef struct S1322 T1322;

/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
typedef struct S1323 T1323;

/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
typedef struct S1325 T1325;

/* SPECIAL [ET_INTERNAL_UNIVERSE] */
typedef struct S1326 T1326;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1327 T1327;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1328 T1328;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1329 T1329;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1330 T1330;

/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
typedef struct S1331 T1331;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1332 T1332;

/* UT_SYNTAX_ERROR */
typedef struct S1333 T1333;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1334 T1334;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1336 T1336;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1337 T1337;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1339 T1339;

/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1340 T1340;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1341 T1341;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1342 T1342;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1343 T1343;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1344 T1344;

/* detachable DS_BILINKABLE [XM_POSITION] */
typedef struct S1345 T1345;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1346 T1346;

/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1347 T1347;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1348 T1348;

/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1351 T1351;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1352 T1352;

/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1353 T1353;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1354 T1354;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1355 T1355;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1356 T1356;

/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1357 T1357;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1358 T1358;

/* detachable DS_BILINKABLE [STRING_8] */
typedef struct S1359 T1359;

/* SPECIAL [ET_ECF_TARGET] */
typedef struct S1360 T1360;

/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
typedef struct S1361 T1361;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
typedef struct S1362 T1362;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1363 T1363;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1364 T1364;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1365 T1365;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1366 T1366;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1367 T1367;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1368 T1368;

/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1369 T1369;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1370 T1370;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1371 T1371;

/* SPECIAL [NATIVE_STRING] */
typedef struct S1372 T1372;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1373 T1373;

/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1374 T1374;

/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1375 T1375;

/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
typedef struct S1376 T1376;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S1378 T1378;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S1379 T1379;

/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
typedef struct S1380 T1380;

/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
typedef struct S1381 T1381;

/* KL_SPECIAL_ROUTINES [NATURAL_8] */
typedef struct S1384 T1384;

/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
typedef struct S1385 T1385;

/* STRING_8_SEARCHER */
typedef struct S1386 T1386;

/* detachable ARRAYED_LIST [INTEGER_32] */
typedef struct S1387 T1387;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1389 T1389;

/* [attached] TYPE [STRING_8] */
#define T1391 EIF_TYPE_OBJ

/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
typedef struct S1392 T1392;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
typedef struct S1393 T1393;

/* [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1394 T1394;

/* KL_AGENT_ROUTINES [ET_UNIVERSE] */
typedef struct S1395 T1395;

/* [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
typedef struct S1396 T1396;

/* [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
typedef struct S1397 T1397;

/* [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
typedef struct S1398 T1398;

/* KL_AGENT_HASH_FUNCTION [STRING_8] */
typedef struct S1401 T1401;

/* [attached] TUPLE [STRING_8] */
typedef struct S1402 T1402;

/* [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
typedef struct S1403 T1403;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S1404 T1404;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1405 T1405;

/* TYPED_POINTER [NATURAL_16] */
typedef struct S1406 T1406;
extern T0* GE_boxed1406(T1406 a1);
typedef struct Sb1406 Tb1406;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1407 T1407;
extern T0* GE_boxed1407(T1407 a1);
typedef struct Sb1407 Tb1407;

/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
typedef struct S1408 T1408;

/* XM_COMMENT */
typedef struct S1409 T1409;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1410 T1410;

/* XM_CHARACTER_DATA */
typedef struct S1411 T1411;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1417 T1417;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S1418 T1418;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1419 T1419;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S1420 T1420;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1421 T1421;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1422 T1422;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1423 T1423;

/* [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
typedef struct S1425 T1425;

/* ET_FEATURE_IDS */
typedef struct S1432 T1432;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1433 T1433;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1436 T1436;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1437 T1437;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1438 T1438;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1439 T1439;

/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1440 T1440;

/* DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
typedef struct S1441 T1441;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1442 T1442;

/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1443 T1443;

/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1444 T1444;

/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
typedef struct S1445 T1445;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1446 T1446;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1447 T1447;

/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1448 T1448;

/* DS_ARRAYED_LIST [ET_ECF_CONDITION] */
typedef struct S1449 T1449;

/* detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
typedef struct S1450 T1450;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1455 T1455;

/* UC_UTF16_ROUTINES */
typedef struct S1456 T1456;

/* SPECIAL [ET_ADAPTED_UNIVERSE] */
typedef struct S1457 T1457;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
typedef struct S1458 T1458;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
typedef struct S1459 T1459;

/* LX_DFA_WILDCARD */
typedef struct S1460 T1460;

/* DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
typedef struct S1461 T1461;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1463 T1463;

/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1464 T1464;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1465 T1465;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1466 T1466;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1467 T1467;

/* SPECIAL [ET_NAMED_CLASS] */
typedef struct S1468 T1468;

/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
typedef struct S1470 T1470;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1472 T1472;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1473 T1473;

/* SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1474 T1474;

/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1475 T1475;

/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1476 T1476;

/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1477 T1477;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1478 T1478;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1479 T1479;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1480 T1480;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1481 T1481;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1482 T1482;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1483 T1483;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1486 T1486;

/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1487 T1487;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1488 T1488;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1489 T1489;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1492 T1492;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1494 T1494;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1495 T1495;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1496 T1496;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1497 T1497;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1499 T1499;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1500 T1500;

/* SPECIAL [ET_CLIENT] */
typedef struct S1501 T1501;

/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
typedef struct S1502 T1502;

/* ET_CALL_NAME_TESTER */
typedef struct S1503 T1503;

/* DS_HASH_SET [ET_CALL_NAME] */
typedef struct S1505 T1505;

/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
typedef struct S1506 T1506;

/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1507 T1507;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1508 T1508;

/* ET_REDECLARED_FEATURE */
typedef struct S1509 T1509;

/* ET_REPLICATED_FEATURE */
typedef struct S1512 T1512;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1513 T1513;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1514 T1514;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1515 T1515;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1516 T1516;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1518 T1518;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1520 T1520;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
typedef struct S1521 T1521;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1522 T1522;

/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1523 T1523;

/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1524 T1524;

/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
typedef struct S1525 T1525;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1526 T1526;

/* [attached] TYPE [ET_CLASS] */
#define T1527 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
typedef struct S1528 T1528;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1529 T1529;

/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
typedef struct S1530 T1530;

/* SPECIAL [YY_BUFFER] */
typedef struct S1532 T1532;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1533 T1533;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1534 T1534;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1535 T1535;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1537 T1537;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1538 T1538;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1539 T1539;

/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1540 T1540;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S1541 T1541;

/* [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
typedef struct S1542 T1542;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
typedef struct S1543 T1543;

/* [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1544 T1544;

/* ET_CLUSTER_ERROR */
typedef struct S1545 T1545;

/* ET_SYNTAX_ERROR */
typedef struct S1546 T1546;

/* [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1547 T1547;

/* [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1548 T1548;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1554 T1554;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1555 T1555;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1556 T1556;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1558 T1558;

/* detachable DS_LINKABLE [XM_ELEMENT_NODE] */
typedef struct S1560 T1560;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1562 T1562;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1563 T1563;

/* [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1568 T1568;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1569 T1569;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S1570 T1570;

/* [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1571 T1571;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1572 T1572;

/* [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1573 T1573;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1574 T1574;

/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1576 T1576;

/* [attached] TUPLE [LX_WILDCARD] */
typedef struct S1577 T1577;

/* [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
typedef struct S1578 T1578;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S1579 T1579;

/* [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
typedef struct S1581 T1581;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S1582 T1582;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1586 T1586;

/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
typedef struct S1596 T1596;

/* [attached] TYPE [ET_FEATURE] */
#define T1597 EIF_TYPE_OBJ

/* SPECIAL [ET_CLUSTER] */
typedef struct S1599 T1599;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1600 T1600;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1601 T1601;

/* SPECIAL [NATURAL_64] */
typedef struct S1602 T1602;

/* SPECIAL [ET_ECF_CLUSTER] */
typedef struct S1603 T1603;

/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
typedef struct S1604 T1604;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
typedef struct S1605 T1605;

/* SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1606 T1606;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1607 T1607;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1608 T1608;

/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1609 T1609;

/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1610 T1610;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1611 T1611;

/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1612 T1612;

/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1613 T1613;

/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1614 T1614;

/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
typedef struct S1615 T1615;

/* SPECIAL [ET_ECF_FILE_RULE] */
typedef struct S1616 T1616;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
typedef struct S1617 T1617;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1618 T1618;

/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1619 T1619;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1620 T1620;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1621 T1621;

/* SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1622 T1622;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1623 T1623;

/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1624 T1624;

/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1625 T1625;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1626 T1626;

/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
typedef struct S1627 T1627;

/* SPECIAL [ET_ECF_CONDITION] */
typedef struct S1628 T1628;

/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
typedef struct S1629 T1629;

/* detachable DS_LINKABLE [CHARACTER_8] */
typedef struct S1630 T1630;

/* LX_WILDCARD_PARSER */
typedef struct S1631 T1631;

/* LX_DESCRIPTION */
typedef struct S1632 T1632;

/* LX_FULL_DFA */
typedef struct S1633 T1633;

/* SPECIAL [LX_WILDCARD] */
typedef struct S1635 T1635;

/* KL_SPECIAL_ROUTINES [LX_WILDCARD] */
typedef struct S1638 T1638;

/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
typedef struct S1639 T1639;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1640 T1640;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1641 T1641;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1642 T1642;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
typedef struct S1643 T1643;

/* SPECIAL [ET_RENAME] */
typedef struct S1644 T1644;

/* [attached] TYPE [ET_RENAME] */
#define T1647 EIF_TYPE_OBJ

/* [attached] TYPE [ET_CALL_NAME] */
#define T1648 EIF_TYPE_OBJ

/* SPECIAL [ET_CALL_NAME] */
typedef struct S1649 T1649;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1650 T1650;

/* KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
typedef struct S1651 T1651;

/* DS_HASH_SET_CURSOR [ET_CALL_NAME] */
typedef struct S1652 T1652;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
typedef struct S1653 T1653;

/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
typedef struct S1656 T1656;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1657 T1657;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1658 T1658;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1660 T1660;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1661 T1661;

/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1662 T1662;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1663 T1663;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1664 T1664;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1665 T1665;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1666 T1666;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1667 T1667;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1668 T1668;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1669 T1669;

/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1672 T1672;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1673 T1673;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1674 T1674;

/* detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1675 T1675;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1676 T1676;

/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
typedef struct S1678 T1678;

/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1679 T1679;

/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1680 T1680;

/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
typedef struct S1681 T1681;

/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1682 T1682;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1683 T1683;

/* AP_OPTION_COMPARATOR */
typedef struct S1684 T1684;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1685 T1685;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1690 T1690;

/* KL_CHARACTER_ROUTINES */
typedef struct S1693 T1693;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1694 T1694;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1695 T1695;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1696 T1696;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1700 T1700;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1701 T1701;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1705 T1705;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1708 T1708;

/* [attached] TUPLE [ET_CLIENT_LIST] */
typedef struct S1712 T1712;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S1718 T1718;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1721 T1721;

/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1724 T1724;

/* [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
typedef struct S1727 T1727;

/* SPECIAL [ET_LIKE_FEATURE] */
typedef struct S1730 T1730;

/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
typedef struct S1731 T1731;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
typedef struct S1732 T1732;

/* DS_ARRAYED_LIST [LX_RULE] */
typedef struct S1733 T1733;

/* LX_START_CONDITIONS */
typedef struct S1734 T1734;

/* LX_ACTION_FACTORY */
typedef struct S1735 T1735;

/* LX_SYMBOL_CLASS */
typedef struct S1736 T1736;

/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1737 T1737;

/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
typedef struct S1738 T1738;

/* SPECIAL [LX_SYMBOL_CLASS] */
typedef struct S1739 T1739;

/* KL_SPECIAL_ROUTINES [LX_NFA] */
typedef struct S1740 T1740;

/* LX_NFA */
typedef struct S1741 T1741;

/* SPECIAL [LX_NFA] */
typedef struct S1742 T1742;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S1743 T1743;

/* LX_RULE */
typedef struct S1744 T1744;

/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
typedef struct S1745 T1745;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S1746 T1746;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S1747 T1747;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S1748 T1748;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S1749 T1749;

/* LX_FULL_AND_META_ERROR */
typedef struct S1750 T1750;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S1751 T1751;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S1752 T1752;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S1753 T1753;

/* ARRAY [LX_RULE] */
typedef struct S1754 T1754;

/* SPECIAL [LX_RULE] */
typedef struct S1755 T1755;

/* LX_DFA_STATE */
typedef struct S1756 T1756;

/* DS_ARRAYED_LIST [LX_NFA_STATE] */
typedef struct S1757 T1757;

/* DS_ARRAYED_LIST [LX_DFA_STATE] */
typedef struct S1758 T1758;

/* LX_SYMBOL_PARTITIONS */
typedef struct S1759 T1759;

/* KL_ARRAY_ROUTINES [LX_RULE] */
typedef struct S1760 T1760;

/* LX_START_CONDITION */
typedef struct S1761 T1761;

/* LX_TRANSITION_TABLE [LX_DFA_STATE] */
typedef struct S1762 T1762;

/* DS_ARRAYED_LIST [LX_NFA] */
typedef struct S1763 T1763;

/* DS_HASH_TABLE [LX_NFA, INTEGER_32] */
typedef struct S1764 T1764;

/* LX_NFA_STATE */
typedef struct S1765 T1765;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1767 T1767;

/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
typedef struct S1769 T1769;

/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S1770 T1770;

/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
typedef struct S1773 T1773;

/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
typedef struct S1774 T1774;

/* ET_UNIVERSE_ERROR */
typedef struct S1775 T1775;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S1776 T1776;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1778 T1778;

/* TYPE [DEVELOPER_EXCEPTION] */
#define T1779 EIF_TYPE_OBJ

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S1781 T1781;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1796 T1796;

/* [attached] TUPLE [ET_ASSERTIONS] */
typedef struct S1803 T1803;

/* [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
typedef struct S1804 T1804;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1806 T1806;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1807 T1807;

/* [attached] TYPE [ET_NESTED_TYPE_CONTEXT] */
#define T1809 EIF_TYPE_OBJ

/* [attached] TYPE [ET_ACROSS_COMPONENT] */
#define T1810 EIF_TYPE_OBJ

/* [attached] TUPLE [ET_ECF_CLUSTER] */
typedef struct S1814 T1814;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
typedef struct S1815 T1815;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1816 T1816;

/* [attached] TUPLE [ET_ECF_FILE_RULE] */
typedef struct S1817 T1817;

/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1818 T1818;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S1819 T1819;

/* [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
typedef struct S1820 T1820;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S1821 T1821;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S1825 T1825;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1828 T1828;

/* KL_SPECIAL_ROUTINES [LX_RULE] */
typedef struct S1830 T1830;

/* DS_ARRAYED_LIST_CURSOR [LX_RULE] */
typedef struct S1831 T1831;

/* KL_ARRAY_ROUTINES [STRING_8] */
typedef struct S1832 T1832;

/* SPECIAL [LX_START_CONDITION] */
typedef struct S1833 T1833;

/* KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
typedef struct S1834 T1834;

/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
typedef struct S1835 T1835;

/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
typedef struct S1838 T1838;

/* LX_EPSILON_TRANSITION [LX_NFA_STATE] */
typedef struct S1840 T1840;

/* LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
typedef struct S1842 T1842;

/* ARRAY [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1843 T1843;

/* DS_BILINKABLE [INTEGER_32] */
typedef struct S1844 T1844;

/* SPECIAL [DS_BILINKABLE [INTEGER_32]] */
typedef struct S1845 T1845;

/* LX_ACTION */
typedef struct S1847 T1847;

/* DS_BUBBLE_SORTER [LX_NFA_STATE] */
typedef struct S1848 T1848;

/* DS_BUBBLE_SORTER [LX_RULE] */
typedef struct S1850 T1850;

/* SPECIAL [LX_NFA_STATE] */
typedef struct S1852 T1852;

/* KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
typedef struct S1854 T1854;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
typedef struct S1855 T1855;

/* SPECIAL [LX_DFA_STATE] */
typedef struct S1857 T1857;

/* KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
typedef struct S1858 T1858;

/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
typedef struct S1859 T1859;

/* KL_ARRAY [LX_RULE] */
typedef struct S1860 T1860;

/* ARRAY [detachable LX_DFA_STATE] */
typedef struct S1861 T1861;

/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S1862 T1862;

/* DS_ARRAYED_LIST_CURSOR [LX_NFA] */
typedef struct S1863 T1863;

/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
typedef struct S1865 T1865;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1870 T1870;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1871 T1871;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1872 T1872;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S1873 T1873;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1874 T1874;

/* [attached] TYPE [BOOLEAN] */
#define T1878 EIF_TYPE_OBJ

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S1879 T1879;

/* detachable DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1882 T1882;

/* DS_SHELL_SORTER [INTEGER_32] */
typedef struct S1884 T1884;

/* KL_COMPARABLE_COMPARATOR [LX_RULE] */
typedef struct S1885 T1885;

/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
typedef struct S1888 T1888;

/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1891 T1891;

/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1892 T1892;

/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1893 T1893;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1894 T1894;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1895 T1895;

/* KL_ARRAY [STRING_8] */
typedef struct S1896 T1896;

/* [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1898 T1898;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1899 T1899;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1900 T1900;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1901 T1901;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1902 T1902;

/* [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
typedef struct S1903 T1903;

/* [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1904 T1904;

/* [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S1905 T1905;

/* ET_AST_NULL_LEAF */
typedef struct S1908 T1908;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S532 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T532 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_8] */
struct Sb1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1407 z1; /* item */
};

/* Struct for type TYPED_POINTER [NATURAL_16] */
struct S1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [NATURAL_16] */
struct Sb1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1406 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [ANY] */
struct Sb715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T715 z1; /* item */
};

/* Struct for type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct S540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [SPECIAL [NATURAL_8]] */
struct Sb540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T540 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S19 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S23 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* gelint_flag */
	T0* a6; /* catcall_option */
	T0* a7; /* c_compile_option */
	T0* a8; /* split_option */
	T0* a9; /* split_size_option */
	T0* a10; /* new_instance_types_option */
	T0* a11; /* gc_option */
	T0* a12; /* silent_flag */
	T0* a13; /* verbose_flag */
	T0* a14; /* version_flag */
	T6 a15; /* split_size */
	T1 a16; /* ecf_gelint_option */
};

/* Struct for type HASH_TABLE [INTEGER_32, INTEGER_32] */
struct S24 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [detachable EXCEPTION] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type CELL [NO_MORE_MEMORY] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_ERROR_HANDLER */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* info_file */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
};

/* Struct for type ET_SYSTEM */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* attachment_type_conformance_mode */
	T0* a2; /* current_system */
	T0* a3; /* master_classes */
	T0* a4; /* error_handler */
	T0* a5; /* ast_factory */
	T0* a6; /* external_include_pathnames */
	T0* a7; /* external_object_pathnames */
	T0* a8; /* external_library_pathnames */
	T1 a9; /* console_application_mode */
	T1 a10; /* alias_transition_mode */
	T1 a11; /* unknown_builtin_reported */
	T1 a12; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a13; /* null_processor */
	T0* a14; /* eiffel_preparser */
	T0* a15; /* master_class_checker */
	T0* a16; /* eiffel_parser */
	T0* a17; /* provider_checker */
	T0* a18; /* ancestor_builder */
	T0* a19; /* feature_flattener */
	T0* a20; /* interface_checker */
	T0* a21; /* implementation_checker */
	T0* a22; /* flat_implementation_checker */
	T1 a23; /* scoop_mode */
	T0* a24; /* universe */
	T0* a25; /* name */
	T0* a26; /* libraries */
	T0* a27; /* clusters */
	T0* a28; /* dotnet_assemblies */
	T1 a29; /* preparse_shallow_mode */
	T1 a30; /* preparse_single_mode */
	T1 a31; /* preparse_multiple_mode */
	T0* a32; /* system_name */
	T0* a33; /* any_type */
	T0* a34; /* detachable_any_type */
	T0* a35; /* detachable_separate_any_type */
	T0* a36; /* separate_any_type */
	T0* a37; /* any_parent */
	T0* a38; /* any_parents */
	T0* a39; /* any_clients */
	T0* a40; /* tuple_type */
	T0* a41; /* detachable_tuple_type */
	T0* a42; /* tuple_like_current_type */
	T0* a43; /* unfolded_empty_tuple_actual_parameters */
	T0* a44; /* array_any_type */
	T0* a45; /* array_detachable_any_type */
	T0* a46; /* array_like_current_type */
	T0* a47; /* boolean_type */
	T0* a48; /* character_type */
	T0* a49; /* character_8_type */
	T0* a50; /* character_8_convert_feature */
	T0* a51; /* character_32_type */
	T0* a52; /* character_32_convert_feature */
	T0* a53; /* double_type */
	T0* a54; /* exception_type */
	T0* a55; /* detachable_exception_type */
	T0* a56; /* exception_manager_type */
	T0* a57; /* function_type */
	T0* a58; /* immutable_string_32_type */
	T0* a59; /* integer_type */
	T0* a60; /* integer_8_type */
	T0* a61; /* integer_8_convert_feature */
	T0* a62; /* integer_16_type */
	T0* a63; /* integer_16_convert_feature */
	T0* a64; /* integer_32_type */
	T0* a65; /* integer_32_convert_feature */
	T0* a66; /* integer_64_type */
	T0* a67; /* integer_64_convert_feature */
	T0* a68; /* ise_exception_manager_type */
	T0* a69; /* iterable_detachable_any_type */
	T0* a70; /* natural_type */
	T0* a71; /* natural_8_type */
	T0* a72; /* natural_8_convert_feature */
	T0* a73; /* natural_16_type */
	T0* a74; /* natural_16_convert_feature */
	T0* a75; /* natural_32_type */
	T0* a76; /* natural_32_convert_feature */
	T0* a77; /* natural_64_type */
	T0* a78; /* natural_64_convert_feature */
	T0* a79; /* none_type */
	T0* a80; /* detachable_none_type */
	T0* a81; /* pointer_type */
	T0* a82; /* predicate_like_current_type */
	T0* a83; /* procedure_like_current_type */
	T0* a84; /* real_type */
	T0* a85; /* real_32_type */
	T0* a86; /* real_32_convert_feature */
	T0* a87; /* real_64_type */
	T0* a88; /* real_64_convert_feature */
	T0* a89; /* routine_type */
	T0* a90; /* special_any_type */
	T0* a91; /* special_detachable_any_type */
	T0* a92; /* string_type */
	T0* a93; /* detachable_string_type */
	T0* a94; /* string_8_type */
	T0* a95; /* string_8_convert_feature */
	T0* a96; /* string_32_type */
	T0* a97; /* string_32_convert_feature */
	T0* a98; /* system_object_type */
	T0* a99; /* system_object_parents */
	T0* a100; /* system_string_type */
	T0* a101; /* type_any_type */
	T0* a102; /* type_type_any_type */
	T0* a103; /* type_detachable_any_type */
	T0* a104; /* type_detachable_like_current_type */
	T0* a105; /* detachable_type_exception_type */
	T0* a106; /* type_detachable_exception_type */
	T0* a107; /* detachable_type_detachable_any_type */
	T0* a108; /* type_like_current_type */
	T0* a109; /* typed_pointer_any_type */
	T0* a110; /* typed_pointer_like_current_type */
	T0* a111; /* wide_character_type */
	T1 a112; /* is_read_only */
	T1 a113; /* use_attribute_keyword */
	T1 a114; /* use_note_keyword */
	T1 a115; /* use_reference_keyword */
	T1 a116; /* use_attached_keyword */
	T1 a117; /* use_detachable_keyword */
	T6 a118; /* registered_class_count */
	T0* a119; /* implicit_attachment_type_mark */
	T6 a120; /* default_create_seed */
	T0* a121; /* ise_version */
	T1 a122; /* providers_enabled */
	T1 a123; /* preparse_readonly_mode */
	T1 a124; /* preparse_override_mode */
	T1 a125; /* cluster_dependence_enabled */
	T1 a126; /* use_cluster_dependence_pathnames */
	T1 a127; /* is_dotnet */
	T0* a128; /* internal_dotnet_assembly_consumer */
	T6 a129; /* registered_feature_count */
	T6 a130; /* registered_inline_constant_count */
	T6 a131; /* copy_seed */
	T6 a132; /* is_equal_seed */
	T6 a133; /* routine_call_seed */
	T6 a134; /* function_item_seed */
	T6 a135; /* dispose_seed */
	T6 a136; /* iterable_new_cursor_seed */
	T6 a137; /* iteration_cursor_after_seed */
	T6 a138; /* iteration_cursor_forth_seed */
	T1 a139; /* obsolete_routine_type_mode */
	T1 a140; /* target_type_attachment_mode */
};

/* Struct for type KL_STRING_ROUTINES */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S37 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T1 a2; /* benchmark_shown */
	T0* a3; /* info_file */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_PARSER */
struct S39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
	T1 a12; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T0* a5; /* description */
	T0* a6; /* parameter_description */
	T1 a7; /* needs_parameter */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_STRING_OPTION */
struct S47 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S51 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T0* a10; /* eiffel_ast_factory */
	T0* a11; /* eiffel_error_handler */
	T1 a12; /* is_shallow */
	T1 a13; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [STRING_8] */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_SYSTEM */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* immutable_string_32_type */
	T0* a29; /* array_any_type */
	T0* a30; /* typed_pointer_any_type */
	T0* a31; /* ise_version */
	T0* a32; /* routine_type */
	T0* a33; /* detachable_tuple_type */
	T0* a34; /* universe */
	T0* a35; /* ise_exception_manager_type */
	T0* a36; /* detachable_none_type */
	T0* a37; /* system_name */
	T0* a38; /* external_include_pathnames */
	T0* a39; /* external_library_pathnames */
	T0* a40; /* options */
	T0* a41; /* ast_factory */
	T0* a42; /* external_object_pathnames */
	T1 a43; /* console_application_mode */
	T1 a44; /* alias_transition_mode */
	T1 a45; /* unknown_builtin_reported */
	T1 a46; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a47; /* null_processor */
	T0* a48; /* eiffel_preparser */
	T0* a49; /* master_class_checker */
	T0* a50; /* provider_checker */
	T0* a51; /* ancestor_builder */
	T0* a52; /* feature_flattener */
	T0* a53; /* implementation_checker */
	T0* a54; /* flat_implementation_checker */
	T0* a55; /* current_system */
	T0* a56; /* tuple_type */
	T0* a57; /* integer_type */
	T0* a58; /* string_type */
	T0* a59; /* name */
	T0* a60; /* root_class_name */
	T0* a61; /* ecma_version */
	T1 a62; /* preparse_enabled */
	T1 a63; /* flat_dbc_mode */
	T1 a64; /* suppliers_enabled */
	T0* a65; /* dotnet_assemblies */
	T0* a66; /* libraries */
	T1 a67; /* flat_mode */
	T0* a68; /* mounted_libraries */
	T0* a69; /* clusters */
	T1 a70; /* exception_trace_mode */
	T1 a71; /* trace_mode */
	T1 a72; /* use_boehm_gc */
	T0* a73; /* creation_procedure_name */
	T1 a74; /* preparse_shallow_mode */
	T1 a75; /* preparse_single_mode */
	T1 a76; /* preparse_multiple_mode */
	T0* a77; /* detachable_any_type */
	T0* a78; /* detachable_separate_any_type */
	T0* a79; /* separate_any_type */
	T0* a80; /* any_parent */
	T0* a81; /* any_parents */
	T0* a82; /* any_clients */
	T0* a83; /* tuple_like_current_type */
	T0* a84; /* unfolded_empty_tuple_actual_parameters */
	T0* a85; /* array_detachable_any_type */
	T0* a86; /* array_like_current_type */
	T0* a87; /* character_type */
	T0* a88; /* character_8_convert_feature */
	T0* a89; /* character_32_convert_feature */
	T0* a90; /* double_type */
	T0* a91; /* exception_type */
	T0* a92; /* detachable_exception_type */
	T0* a93; /* exception_manager_type */
	T0* a94; /* function_type */
	T0* a95; /* integer_8_convert_feature */
	T0* a96; /* integer_16_convert_feature */
	T0* a97; /* integer_32_convert_feature */
	T0* a98; /* integer_64_convert_feature */
	T0* a99; /* iterable_detachable_any_type */
	T0* a100; /* natural_type */
	T0* a101; /* natural_8_convert_feature */
	T0* a102; /* natural_16_convert_feature */
	T0* a103; /* natural_32_convert_feature */
	T0* a104; /* natural_64_convert_feature */
	T0* a105; /* predicate_like_current_type */
	T0* a106; /* procedure_like_current_type */
	T0* a107; /* real_type */
	T0* a108; /* real_32_convert_feature */
	T0* a109; /* real_64_convert_feature */
	T0* a110; /* special_detachable_any_type */
	T0* a111; /* detachable_string_type */
	T0* a112; /* string_8_convert_feature */
	T0* a113; /* string_32_convert_feature */
	T0* a114; /* system_object_type */
	T0* a115; /* system_object_parents */
	T0* a116; /* system_string_type */
	T0* a117; /* type_any_type */
	T0* a118; /* type_type_any_type */
	T0* a119; /* type_detachable_any_type */
	T0* a120; /* type_detachable_like_current_type */
	T0* a121; /* detachable_type_exception_type */
	T0* a122; /* type_detachable_exception_type */
	T0* a123; /* detachable_type_detachable_any_type */
	T0* a124; /* type_like_current_type */
	T0* a125; /* typed_pointer_like_current_type */
	T0* a126; /* wide_character_type */
	T1 a127; /* is_read_only */
	T1 a128; /* use_attribute_keyword */
	T1 a129; /* use_note_keyword */
	T1 a130; /* use_reference_keyword */
	T1 a131; /* use_attached_keyword */
	T1 a132; /* use_detachable_keyword */
	T6 a133; /* registered_feature_count */
	T1 a134; /* cluster_dependence_enabled */
	T1 a135; /* is_preparsed */
	T0* a136; /* scm_read_mapping_builder */
	T0* a137; /* scm_write_mapping_builder */
	T6 a138; /* registered_class_count */
	T6 a139; /* routine_call_seed */
	T6 a140; /* function_item_seed */
	T6 a141; /* is_equal_seed */
	T6 a142; /* dispose_seed */
	T1 a143; /* attachment_type_conformance_mode */
	T1 a144; /* multithreaded_mode */
	T0* a145; /* internal_dotnet_assembly_consumer */
	T1 a146; /* scoop_mode */
	T0* a147; /* implicit_attachment_type_mark */
	T1 a148; /* providers_enabled */
	T1 a149; /* preparse_readonly_mode */
	T1 a150; /* preparse_override_mode */
	T1 a151; /* use_cluster_dependence_pathnames */
	T1 a152; /* is_dotnet */
	T6 a153; /* registered_inline_constant_count */
	T6 a154; /* copy_seed */
	T6 a155; /* iterable_new_cursor_seed */
	T6 a156; /* iteration_cursor_after_seed */
	T6 a157; /* iteration_cursor_forth_seed */
	T1 a158; /* obsolete_routine_type_mode */
	T1 a159; /* target_type_attachment_mode */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T1 a3; /* finalize_mode */
	T0* a4; /* parsed_libraries */
	T0* a5; /* parsed_dotnet_assemblies */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* error_handler */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
	T0* a2; /* libraries */
	T0* a3; /* filename */
	T0* a4; /* dotnet_assemblies */
	T0* a5; /* selected_target */
	T0* a6; /* error_handler */
	T0* a7; /* master_classes */
	T0* a8; /* root_type */
	T0* a9; /* none_type */
	T0* a10; /* any_type */
	T0* a11; /* stop_request */
	T0* a12; /* root_creation */
	T0* a13; /* eiffel_parser */
	T6 a14; /* default_create_seed */
	T0* a15; /* boolean_type */
	T0* a16; /* character_8_type */
	T0* a17; /* character_32_type */
	T0* a18; /* integer_8_type */
	T0* a19; /* integer_16_type */
	T0* a20; /* integer_32_type */
	T0* a21; /* integer_64_type */
	T0* a22; /* natural_8_type */
	T0* a23; /* natural_16_type */
	T0* a24; /* natural_32_type */
	T0* a25; /* natural_64_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* special_any_type */
	T0* a30; /* interface_checker */
	T0* a31; /* string_8_type */
	T0* a32; /* string_32_type */
	T0* a33; /* immutable_string_32_type */
	T0* a34; /* array_any_type */
	T0* a35; /* typed_pointer_any_type */
	T0* a36; /* ise_version */
	T0* a37; /* routine_type */
	T0* a38; /* detachable_tuple_type */
	T0* a39; /* universe */
	T0* a40; /* ise_exception_manager_type */
	T0* a41; /* detachable_none_type */
	T0* a42; /* implementation_checker */
	T1 a43; /* use_boehm_gc */
	T0* a44; /* external_include_pathnames */
	T0* a45; /* external_library_pathnames */
	T0* a46; /* external_object_pathnames */
	T0* a47; /* character_type */
	T0* a48; /* wide_character_type */
	T0* a49; /* integer_type */
	T0* a50; /* natural_type */
	T0* a51; /* real_type */
	T0* a52; /* double_type */
	T6 a53; /* routine_call_seed */
	T6 a54; /* function_item_seed */
	T6 a55; /* is_equal_seed */
	T6 a56; /* dispose_seed */
	T6 a57; /* registered_feature_count */
	T1 a58; /* attachment_type_conformance_mode */
	T1 a59; /* trace_mode */
	T1 a60; /* exception_trace_mode */
	T1 a61; /* multithreaded_mode */
	T1 a62; /* console_application_mode */
	T0* a63; /* system_name */
	T0* a64; /* name */
	T0* a65; /* ecma_version */
	T1 a66; /* preparse_enabled */
	T0* a67; /* eiffel_preparser */
	T0* a68; /* null_processor */
	T0* a69; /* master_class_checker */
	T0* a70; /* provider_checker */
	T0* a71; /* ancestor_builder */
	T0* a72; /* feature_flattener */
	T1 a73; /* flat_dbc_mode */
	T1 a74; /* suppliers_enabled */
	T0* a75; /* flat_implementation_checker */
	T0* a76; /* current_system */
	T1 a77; /* flat_mode */
	T0* a78; /* uuid */
	T0* a79; /* ecf_namespace */
	T0* a80; /* ecf_version */
	T0* a81; /* library_target */
	T0* a82; /* ast_factory */
	T1 a83; /* alias_transition_mode */
	T1 a84; /* unknown_builtin_reported */
	T1 a85; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a86; /* tuple_type */
	T0* a87; /* string_type */
	T1 a88; /* use_attribute_keyword */
	T1 a89; /* use_note_keyword */
	T1 a90; /* use_reference_keyword */
	T1 a91; /* use_attached_keyword */
	T1 a92; /* use_detachable_keyword */
	T1 a93; /* cluster_dependence_enabled */
	T1 a94; /* is_preparsed */
	T0* a95; /* clusters */
	T1 a96; /* is_read_only */
	T1 a97; /* preparse_shallow_mode */
	T1 a98; /* preparse_single_mode */
	T1 a99; /* preparse_multiple_mode */
	T0* a100; /* detachable_any_type */
	T0* a101; /* detachable_separate_any_type */
	T0* a102; /* separate_any_type */
	T0* a103; /* any_parent */
	T0* a104; /* any_parents */
	T0* a105; /* any_clients */
	T0* a106; /* tuple_like_current_type */
	T0* a107; /* unfolded_empty_tuple_actual_parameters */
	T0* a108; /* array_detachable_any_type */
	T0* a109; /* array_like_current_type */
	T0* a110; /* character_8_convert_feature */
	T0* a111; /* character_32_convert_feature */
	T0* a112; /* exception_type */
	T0* a113; /* detachable_exception_type */
	T0* a114; /* exception_manager_type */
	T0* a115; /* function_type */
	T0* a116; /* integer_8_convert_feature */
	T0* a117; /* integer_16_convert_feature */
	T0* a118; /* integer_32_convert_feature */
	T0* a119; /* integer_64_convert_feature */
	T0* a120; /* iterable_detachable_any_type */
	T0* a121; /* natural_8_convert_feature */
	T0* a122; /* natural_16_convert_feature */
	T0* a123; /* natural_32_convert_feature */
	T0* a124; /* natural_64_convert_feature */
	T0* a125; /* predicate_like_current_type */
	T0* a126; /* procedure_like_current_type */
	T0* a127; /* real_32_convert_feature */
	T0* a128; /* real_64_convert_feature */
	T0* a129; /* special_detachable_any_type */
	T0* a130; /* detachable_string_type */
	T0* a131; /* string_8_convert_feature */
	T0* a132; /* string_32_convert_feature */
	T0* a133; /* system_object_type */
	T0* a134; /* system_object_parents */
	T0* a135; /* system_string_type */
	T0* a136; /* type_any_type */
	T0* a137; /* type_type_any_type */
	T0* a138; /* type_detachable_any_type */
	T0* a139; /* type_detachable_like_current_type */
	T0* a140; /* detachable_type_exception_type */
	T0* a141; /* type_detachable_exception_type */
	T0* a142; /* detachable_type_detachable_any_type */
	T0* a143; /* type_like_current_type */
	T0* a144; /* typed_pointer_like_current_type */
	T0* a145; /* scm_read_mapping_builder */
	T0* a146; /* scm_write_mapping_builder */
	T6 a147; /* registered_class_count */
	T1 a148; /* scoop_mode */
	T0* a149; /* implicit_attachment_type_mark */
	T0* a150; /* internal_dotnet_assembly_consumer */
	T1 a151; /* providers_enabled */
	T1 a152; /* preparse_readonly_mode */
	T1 a153; /* preparse_override_mode */
	T1 a154; /* use_cluster_dependence_pathnames */
	T1 a155; /* is_dotnet */
	T6 a156; /* registered_inline_constant_count */
	T1 a157; /* target_type_attachment_mode */
	T1 a158; /* obsolete_routine_type_mode */
	T6 a159; /* copy_seed */
	T6 a160; /* iterable_new_cursor_seed */
	T6 a161; /* iteration_cursor_after_seed */
	T6 a162; /* iteration_cursor_forth_seed */
};

/* Struct for type ET_ECF_TARGET */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root */
	T0* a2; /* variables */
	T0* a3; /* settings */
	T0* a4; /* options */
	T0* a5; /* name */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
	T0* a8; /* dotnet_assemblies */
	T0* a9; /* file_rules */
	T0* a10; /* external_includes */
	T0* a11; /* external_libraries */
	T0* a12; /* external_objects */
	T0* a13; /* parent */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_VARIABLES */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type ET_LACE_PARSER */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* master_classes */
	T0* a3; /* root_type */
	T0* a4; /* none_type */
	T0* a5; /* any_type */
	T0* a6; /* stop_request */
	T0* a7; /* root_creation */
	T0* a8; /* eiffel_parser */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_type */
	T0* a11; /* character_8_type */
	T0* a12; /* character_32_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_8_type */
	T0* a18; /* natural_16_type */
	T0* a19; /* natural_32_type */
	T0* a20; /* natural_64_type */
	T0* a21; /* real_32_type */
	T0* a22; /* real_64_type */
	T0* a23; /* pointer_type */
	T0* a24; /* special_any_type */
	T0* a25; /* interface_checker */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* immutable_string_32_type */
	T0* a29; /* array_any_type */
	T0* a30; /* typed_pointer_any_type */
	T0* a31; /* ise_version */
	T0* a32; /* routine_type */
	T0* a33; /* detachable_tuple_type */
	T0* a34; /* universe */
	T0* a35; /* ise_exception_manager_type */
	T0* a36; /* detachable_none_type */
	T0* a37; /* implementation_checker */
	T1 a38; /* use_boehm_gc */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* character_type */
	T0* a43; /* wide_character_type */
	T0* a44; /* integer_type */
	T0* a45; /* natural_type */
	T0* a46; /* real_type */
	T0* a47; /* double_type */
	T6 a48; /* routine_call_seed */
	T6 a49; /* function_item_seed */
	T6 a50; /* is_equal_seed */
	T6 a51; /* dispose_seed */
	T6 a52; /* registered_feature_count */
	T1 a53; /* attachment_type_conformance_mode */
	T1 a54; /* trace_mode */
	T1 a55; /* exception_trace_mode */
	T1 a56; /* multithreaded_mode */
	T1 a57; /* console_application_mode */
	T0* a58; /* system_name */
	T0* a59; /* ast_factory */
	T1 a60; /* alias_transition_mode */
	T1 a61; /* unknown_builtin_reported */
	T1 a62; /* qualified_anchored_types_cycle_detection_enabled */
	T0* a63; /* null_processor */
	T0* a64; /* eiffel_preparser */
	T0* a65; /* master_class_checker */
	T0* a66; /* provider_checker */
	T0* a67; /* ancestor_builder */
	T0* a68; /* feature_flattener */
	T0* a69; /* flat_implementation_checker */
	T0* a70; /* current_system */
	T0* a71; /* tuple_type */
	T0* a72; /* string_type */
	T0* a73; /* name */
	T0* a74; /* clusters */
	T0* a75; /* dotnet_assemblies */
	T0* a76; /* ecma_version */
	T1 a77; /* preparse_enabled */
	T1 a78; /* flat_dbc_mode */
	T1 a79; /* suppliers_enabled */
	T0* a80; /* libraries */
	T1 a81; /* flat_mode */
	T1 a82; /* preparse_shallow_mode */
	T1 a83; /* preparse_single_mode */
	T1 a84; /* preparse_multiple_mode */
	T0* a85; /* detachable_any_type */
	T0* a86; /* detachable_separate_any_type */
	T0* a87; /* separate_any_type */
	T0* a88; /* any_parent */
	T0* a89; /* any_parents */
	T0* a90; /* any_clients */
	T0* a91; /* tuple_like_current_type */
	T0* a92; /* unfolded_empty_tuple_actual_parameters */
	T0* a93; /* array_detachable_any_type */
	T0* a94; /* array_like_current_type */
	T0* a95; /* character_8_convert_feature */
	T0* a96; /* character_32_convert_feature */
	T0* a97; /* exception_type */
	T0* a98; /* detachable_exception_type */
	T0* a99; /* exception_manager_type */
	T0* a100; /* function_type */
	T0* a101; /* integer_8_convert_feature */
	T0* a102; /* integer_16_convert_feature */
	T0* a103; /* integer_32_convert_feature */
	T0* a104; /* integer_64_convert_feature */
	T0* a105; /* iterable_detachable_any_type */
	T0* a106; /* natural_8_convert_feature */
	T0* a107; /* natural_16_convert_feature */
	T0* a108; /* natural_32_convert_feature */
	T0* a109; /* natural_64_convert_feature */
	T0* a110; /* predicate_like_current_type */
	T0* a111; /* procedure_like_current_type */
	T0* a112; /* real_32_convert_feature */
	T0* a113; /* real_64_convert_feature */
	T0* a114; /* special_detachable_any_type */
	T0* a115; /* detachable_string_type */
	T0* a116; /* string_8_convert_feature */
	T0* a117; /* string_32_convert_feature */
	T0* a118; /* system_object_type */
	T0* a119; /* system_object_parents */
	T0* a120; /* system_string_type */
	T0* a121; /* type_any_type */
	T0* a122; /* type_type_any_type */
	T0* a123; /* type_detachable_any_type */
	T0* a124; /* type_detachable_like_current_type */
	T0* a125; /* detachable_type_exception_type */
	T0* a126; /* type_detachable_exception_type */
	T0* a127; /* detachable_type_detachable_any_type */
	T0* a128; /* type_like_current_type */
	T0* a129; /* typed_pointer_like_current_type */
	T1 a130; /* is_read_only */
	T1 a131; /* use_attribute_keyword */
	T1 a132; /* use_note_keyword */
	T1 a133; /* use_reference_keyword */
	T1 a134; /* use_attached_keyword */
	T1 a135; /* use_detachable_keyword */
	T1 a136; /* cluster_dependence_enabled */
	T1 a137; /* is_preparsed */
	T0* a138; /* scm_read_mapping_builder */
	T0* a139; /* scm_write_mapping_builder */
	T6 a140; /* registered_class_count */
	T1 a141; /* scoop_mode */
	T0* a142; /* implicit_attachment_type_mark */
	T0* a143; /* internal_dotnet_assembly_consumer */
	T1 a144; /* providers_enabled */
	T1 a145; /* preparse_readonly_mode */
	T1 a146; /* preparse_override_mode */
	T1 a147; /* use_cluster_dependence_pathnames */
	T1 a148; /* is_dotnet */
	T6 a149; /* registered_inline_constant_count */
	T6 a150; /* copy_seed */
	T6 a151; /* iterable_new_cursor_seed */
	T6 a152; /* iteration_cursor_after_seed */
	T6 a153; /* iteration_cursor_forth_seed */
	T1 a154; /* obsolete_routine_type_mode */
	T1 a155; /* target_type_attachment_mode */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S72 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* dynamic_types */
	T0* a5; /* null_dynamic_type_set_builder */
	T1 a6; /* full_class_checking */
	T1 a7; /* catcall_warning_mode */
	T0* a8; /* new_instance_types */
	T0* a9; /* dynamic_type_set_builder */
	T0* a10; /* unknown_type */
	T0* a11; /* boolean_type */
	T0* a12; /* character_8_type */
	T0* a13; /* character_32_type */
	T0* a14; /* immutable_string_32_type */
	T0* a15; /* integer_8_type */
	T0* a16; /* integer_16_type */
	T0* a17; /* integer_32_type */
	T0* a18; /* integer_64_type */
	T0* a19; /* natural_8_type */
	T0* a20; /* natural_16_type */
	T0* a21; /* natural_32_type */
	T0* a22; /* natural_64_type */
	T0* a23; /* real_32_type */
	T0* a24; /* real_64_type */
	T0* a25; /* pointer_type */
	T0* a26; /* string_8_type */
	T0* a27; /* string_32_type */
	T0* a28; /* special_character_8_type */
	T0* a29; /* special_character_32_type */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* any_type */
	T0* a32; /* none_type */
	T0* a33; /* root_type */
	T0* a34; /* root_creation_procedure */
	T0* a35; /* special_count_feature */
	T0* a36; /* special_capacity_feature */
	T0* a37; /* array_area_feature */
	T0* a38; /* array_lower_feature */
	T0* a39; /* array_upper_feature */
	T0* a40; /* typed_pointer_to_pointer_feature */
	T0* a41; /* routine_closed_operands_feature */
	T0* a42; /* routine_rout_disp_feature */
	T0* a43; /* routine_set_rout_disp_final_feature */
	T0* a44; /* ise_exception_manager_init_exception_manager_feature */
	T0* a45; /* ise_exception_manager_set_exception_data_feature */
	T0* a46; /* ise_runtime_type_conforms_to_feature */
	T1 a47; /* in_dynamic_type */
	T0* a48; /* ise_runtime_new_type_instance_of_feature */
	T1 a49; /* in_create_meta_type */
	T1 a50; /* all_attributes_used */
	T0* a51; /* ise_runtime_reference_field_feature */
	T0* a52; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_C_GENERATOR */
struct S75 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_dynamic_system */
	T0* a5; /* dynamic_types */
	T1 a6; /* short_names */
	T1 a7; /* split_mode */
	T6 a8; /* split_threshold */
	T1 a9; /* use_boehm_gc */
	T0* a10; /* system_name */
	T0* a11; /* current_file */
	T0* a12; /* header_file */
	T0* a13; /* current_type */
	T0* a14; /* current_feature */
	T0* a15; /* extra_dynamic_type_sets */
	T0* a16; /* current_dynamic_type_sets */
	T0* a17; /* current_function_header_buffer */
	T0* a18; /* current_function_body_buffer */
	T0* a19; /* temp_variables */
	T0* a20; /* used_temp_variables */
	T0* a21; /* free_temp_variables */
	T0* a22; /* frozen_temp_variables */
	T0* a23; /* conforming_types */
	T0* a24; /* conforming_type_set */
	T0* a25; /* non_conforming_types */
	T0* a26; /* equality_type_set */
	T0* a27; /* equality_common_types */
	T0* a28; /* operand_stack */
	T0* a29; /* call_operands */
	T0* a30; /* attachment_dynamic_type_ids */
	T0* a31; /* target_dynamic_type_ids */
	T0* a32; /* target_dynamic_types */
	T0* a33; /* standalone_type_sets */
	T0* a34; /* deep_twin_types */
	T0* a35; /* deep_equal_types */
	T0* a36; /* deep_feature_target_type_sets */
	T0* a37; /* current_object_tests */
	T0* a38; /* current_object_equalities */
	T0* a39; /* current_equalities */
	T0* a40; /* current_agents */
	T0* a41; /* agent_open_operands */
	T0* a42; /* agent_closed_operands */
	T0* a43; /* agent_target */
	T0* a44; /* agent_arguments */
	T0* a45; /* agent_instruction */
	T0* a46; /* agent_expression */
	T0* a47; /* agent_closed_operands_type */
	T0* a48; /* wrapper_expression */
	T0* a49; /* agent_tuple_item_expressions */
	T0* a50; /* agent_manifest_tuple */
	T0* a51; /* formal_arguments */
	T0* a52; /* manifest_array_types */
	T0* a53; /* big_manifest_array_types */
	T0* a54; /* manifest_tuple_types */
	T0* a55; /* once_features */
	T0* a56; /* constant_features */
	T0* a57; /* inline_constants */
	T0* a58; /* dispose_procedures */
	T0* a59; /* dynamic_type_id_set_names */
	T0* a60; /* called_features */
	T0* a61; /* included_header_filenames */
	T0* a62; /* included_runtime_header_files */
	T0* a63; /* included_runtime_c_files */
	T0* a64; /* c_filenames */
	T1 a65; /* finalize_mode */
	T0* a66; /* locals_written_in_body */
	T0* a67; /* locals_written_in_rescue */
	T0* a68; /* locals_written */
	T0* a69; /* locals_read_in_body */
	T0* a70; /* locals_read_in_rescue */
	T0* a71; /* locals_read */
	T0* a72; /* external_c_regexp */
	T0* a73; /* external_c_macro_regexp */
	T0* a74; /* external_c_struct_regexp */
	T0* a75; /* external_c_inline_regexp */
	T0* a76; /* old_external_c_regexp */
	T0* a77; /* old_external_c_macro_regexp */
	T0* a78; /* old_external_c_struct_regexp */
	T0* a79; /* external_cpp_regexp */
	T0* a80; /* external_cpp_inline_regexp */
	T0* a81; /* external_dllwin_regexp */
	T0* a82; /* old_external_dllwin32_regexp */
	T1 a83; /* type_info_ancestors_used */
	T1 a84; /* type_info_attributes_used */
	T1 a85; /* type_info_attribute_name_used */
	T1 a86; /* type_info_attribute_type_id_used */
	T1 a87; /* type_info_attribute_offset_used */
	T1 a88; /* type_info_generator_used */
	T1 a89; /* type_info_name_used */
	T1 a90; /* type_info_generic_parameters_used */
	T1 a91; /* type_info_object_size_used */
	T0* a92; /* c_file */
	T6 a93; /* c_file_size */
	T0* a94; /* cpp_file */
	T6 a95; /* cpp_file_size */
	T6 a96; /* indentation */
	T0* a97; /* assignment_target */
	T1 a98; /* in_operand */
	T0* a99; /* call_target_type */
	T0* a100; /* current_agent */
	T1 a101; /* call_target_check_void */
	T1 a102; /* has_rescue */
	T1 a103; /* result_written */
	T1 a104; /* result_read */
	T1 a105; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* found_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_error */
	T1 a5; /* benchmark_shown */
	T1 a6; /* is_ise */
	T1 a7; /* is_ge */
	T1 a8; /* has_eiffel_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type UT_VERSION */
struct S79 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* alive_conforming_descendants_per_type */
	T0* a18; /* type_checker */
	T0* a19; /* current_class */
	T0* a20; /* current_type */
	T0* a21; /* current_feature */
	T0* a22; /* current_feature_impl */
	T0* a23; /* current_class_impl */
	T0* a24; /* enclosing_inline_agents */
	T0* a25; /* unused_overloaded_procedures_list */
	T0* a26; /* unused_overloaded_queries_list */
	T0* a27; /* unused_overloaded_features_list */
	T0* a28; /* unused_contexts */
	T0* a29; /* current_context */
	T0* a30; /* current_target_type */
	T0* a31; /* current_object_test_types */
	T0* a32; /* current_object_test_scope */
	T0* a33; /* object_test_scope_builder */
	T0* a34; /* current_across_cursor_types */
	T0* a35; /* current_across_cursor_scope */
	T0* a36; /* current_initialization_scope */
	T0* a37; /* current_attachment_scope */
	T0* a38; /* attachment_scope_builder */
	T0* a39; /* unused_attachment_scopes */
	T0* a40; /* default_creation_call_name */
	T0* a41; /* default_creation_call */
	T1 a42; /* in_precursor */
	T1 a43; /* in_rescue */
	T0* a44; /* current_inline_agent */
	T0* a45; /* supplier_handler */
	T1 a46; /* in_invariant */
	T1 a47; /* in_precondition */
	T1 a48; /* in_postcondition */
	T1 a49; /* in_check_instruction */
	T0* a50; /* precursor_procedures */
	T0* a51; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_2 */
	T1 a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T1 a2; /* is_parsed */
	T1 a3; /* has_syntax_error */
	T1 a4; /* ancestors_built */
	T1 a5; /* has_ancestors_error */
	T1 a6; /* features_flattened */
	T1 a7; /* has_flattening_error */
	T1 a8; /* interface_checked */
	T1 a9; /* has_interface_error */
	T1 a10; /* implementation_checked */
	T1 a11; /* has_implementation_error */
	T0* a12; /* name */
	T6 a13; /* id */
	T0* a14; /* ancestors */
	T0* a15; /* conforming_ancestors */
	T0* a16; /* queries */
	T0* a17; /* procedures */
	T0* a18; /* class_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* named_base_class */
	T6 a21; /* time_stamp */
	T8 a22; /* class_code */
	T1 a23; /* tuple_actual_parameters_unfolded_1 */
	T1 a24; /* tuple_actual_parameters_unfolded_2 */
	T0* a25; /* formal_parameters */
	T6 a26; /* index */
	T0* a27; /* creators */
	T0* a28; /* class_mark */
	T0* a29; /* suppliers */
	T0* a30; /* invariants */
	T0* a31; /* filename */
	T1 a32; /* redeclared_signatures_checked */
	T1 a33; /* is_ignored */
	T0* a34; /* parent_clauses */
	T1 a35; /* has_deferred_features */
	T1 a36; /* is_interface */
	T1 a37; /* is_marked */
	T0* a38; /* external_keyword */
	T0* a39; /* frozen_keyword */
	T0* a40; /* convert_features */
	T0* a41; /* feature_clauses */
	T0* a42; /* first_indexing */
	T0* a43; /* second_indexing */
	T6 a44; /* tuple_constraint_position */
	T0* a45; /* obsolete_message */
	T0* a46; /* leading_break */
	T0* a47; /* providers */
	T0* a48; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type VOID_TARGET */
struct S89 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S96 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S98 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [CHARACTER_8] */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type FILE_INFO */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type KL_STANDARD_FILES */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDOUT_FILE */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_STRING */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
	T0* a5; /* area */
	T6 a6; /* last_byte_index_input */
	T6 a7; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ARRAY [STRING_8] */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [STRING_8] */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DOCUMENT */
struct S153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type UT_MESSAGE */
struct S168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type ET_IDENTIFIER */
struct S181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_STATE */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_ECF_TARGETS */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type ET_ECF_LIBRARY */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* selected_target */
	T0* a2; /* library_target */
	T0* a3; /* current_system */
	T0* a4; /* filename */
	T0* a5; /* uuid */
	T0* a6; /* ecf_namespace */
	T0* a7; /* ecf_version */
	T0* a8; /* targets */
	T0* a9; /* name */
	T0* a10; /* library */
	T0* a11; /* libraries */
	T0* a12; /* clusters */
	T0* a13; /* dotnet_assemblies */
	T0* a14; /* master_classes */
	T0* a15; /* any_type */
	T0* a16; /* detachable_any_type */
	T0* a17; /* detachable_separate_any_type */
	T0* a18; /* separate_any_type */
	T0* a19; /* any_parent */
	T0* a20; /* any_parents */
	T0* a21; /* any_clients */
	T0* a22; /* tuple_type */
	T0* a23; /* detachable_tuple_type */
	T0* a24; /* tuple_like_current_type */
	T0* a25; /* unfolded_empty_tuple_actual_parameters */
	T0* a26; /* array_any_type */
	T0* a27; /* array_detachable_any_type */
	T0* a28; /* array_like_current_type */
	T0* a29; /* boolean_type */
	T0* a30; /* character_type */
	T0* a31; /* character_8_type */
	T0* a32; /* character_8_convert_feature */
	T0* a33; /* character_32_type */
	T0* a34; /* character_32_convert_feature */
	T0* a35; /* double_type */
	T0* a36; /* exception_type */
	T0* a37; /* detachable_exception_type */
	T0* a38; /* exception_manager_type */
	T0* a39; /* function_type */
	T0* a40; /* immutable_string_32_type */
	T0* a41; /* integer_type */
	T0* a42; /* integer_8_type */
	T0* a43; /* integer_8_convert_feature */
	T0* a44; /* integer_16_type */
	T0* a45; /* integer_16_convert_feature */
	T0* a46; /* integer_32_type */
	T0* a47; /* integer_32_convert_feature */
	T0* a48; /* integer_64_type */
	T0* a49; /* integer_64_convert_feature */
	T0* a50; /* ise_exception_manager_type */
	T0* a51; /* iterable_detachable_any_type */
	T0* a52; /* natural_type */
	T0* a53; /* natural_8_type */
	T0* a54; /* natural_8_convert_feature */
	T0* a55; /* natural_16_type */
	T0* a56; /* natural_16_convert_feature */
	T0* a57; /* natural_32_type */
	T0* a58; /* natural_32_convert_feature */
	T0* a59; /* natural_64_type */
	T0* a60; /* natural_64_convert_feature */
	T0* a61; /* none_type */
	T0* a62; /* detachable_none_type */
	T0* a63; /* pointer_type */
	T0* a64; /* predicate_like_current_type */
	T0* a65; /* procedure_like_current_type */
	T0* a66; /* real_type */
	T0* a67; /* real_32_type */
	T0* a68; /* real_32_convert_feature */
	T0* a69; /* real_64_type */
	T0* a70; /* real_64_convert_feature */
	T0* a71; /* routine_type */
	T0* a72; /* special_any_type */
	T0* a73; /* special_detachable_any_type */
	T0* a74; /* string_type */
	T0* a75; /* detachable_string_type */
	T0* a76; /* string_8_type */
	T0* a77; /* string_8_convert_feature */
	T0* a78; /* string_32_type */
	T0* a79; /* string_32_convert_feature */
	T0* a80; /* system_object_type */
	T0* a81; /* system_object_parents */
	T0* a82; /* system_string_type */
	T0* a83; /* type_any_type */
	T0* a84; /* type_type_any_type */
	T0* a85; /* type_detachable_any_type */
	T0* a86; /* type_detachable_like_current_type */
	T0* a87; /* detachable_type_exception_type */
	T0* a88; /* type_detachable_exception_type */
	T0* a89; /* detachable_type_detachable_any_type */
	T0* a90; /* type_like_current_type */
	T0* a91; /* typed_pointer_any_type */
	T0* a92; /* typed_pointer_like_current_type */
	T0* a93; /* wide_character_type */
	T1 a94; /* is_read_only */
	T1 a95; /* attachment_type_conformance_mode */
	T1 a96; /* target_type_attachment_mode */
	T0* a97; /* implicit_attachment_type_mark */
	T1 a98; /* obsolete_routine_type_mode */
	T1 a99; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable TUPLE */
struct S193 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_LIBRARY_PARSER */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_library */
	T0* a2; /* adapted_library */
	T0* a3; /* parsed_libraries */
	T0* a4; /* parsed_dotnet_assemblies */
	T0* a5; /* xml_parser */
	T0* a6; /* tree_pipe */
	T0* a7; /* error_handler */
	T0* a8; /* ast_factory */
	T0* a9; /* ise_version */
	T0* a10; /* library_parser */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* library */
	T0* a2; /* name_id */
	T0* a3; /* filename */
	T0* a4; /* universe */
	T0* a5; /* name */
	T1 a6; /* is_read_only */
	T0* a7; /* classname_prefix */
	T0* a8; /* class_renamings */
	T0* a9; /* condition */
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* detachable_separate_any_type */
	T0* a10; /* separate_any_type */
	T0* a11; /* any_parent */
	T0* a12; /* any_parents */
	T0* a13; /* any_clients */
	T0* a14; /* tuple_type */
	T0* a15; /* detachable_tuple_type */
	T0* a16; /* tuple_like_current_type */
	T0* a17; /* unfolded_empty_tuple_actual_parameters */
	T0* a18; /* array_any_type */
	T0* a19; /* array_detachable_any_type */
	T0* a20; /* array_like_current_type */
	T0* a21; /* boolean_type */
	T0* a22; /* character_type */
	T0* a23; /* character_8_type */
	T0* a24; /* character_8_convert_feature */
	T0* a25; /* character_32_type */
	T0* a26; /* character_32_convert_feature */
	T0* a27; /* double_type */
	T0* a28; /* exception_type */
	T0* a29; /* detachable_exception_type */
	T0* a30; /* exception_manager_type */
	T0* a31; /* function_type */
	T0* a32; /* immutable_string_32_type */
	T0* a33; /* integer_type */
	T0* a34; /* integer_8_type */
	T0* a35; /* integer_8_convert_feature */
	T0* a36; /* integer_16_type */
	T0* a37; /* integer_16_convert_feature */
	T0* a38; /* integer_32_type */
	T0* a39; /* integer_32_convert_feature */
	T0* a40; /* integer_64_type */
	T0* a41; /* integer_64_convert_feature */
	T0* a42; /* ise_exception_manager_type */
	T0* a43; /* iterable_detachable_any_type */
	T0* a44; /* natural_type */
	T0* a45; /* natural_8_type */
	T0* a46; /* natural_8_convert_feature */
	T0* a47; /* natural_16_type */
	T0* a48; /* natural_16_convert_feature */
	T0* a49; /* natural_32_type */
	T0* a50; /* natural_32_convert_feature */
	T0* a51; /* natural_64_type */
	T0* a52; /* natural_64_convert_feature */
	T0* a53; /* none_type */
	T0* a54; /* detachable_none_type */
	T0* a55; /* pointer_type */
	T0* a56; /* predicate_like_current_type */
	T0* a57; /* procedure_like_current_type */
	T0* a58; /* real_type */
	T0* a59; /* real_32_type */
	T0* a60; /* real_32_convert_feature */
	T0* a61; /* real_64_type */
	T0* a62; /* real_64_convert_feature */
	T0* a63; /* routine_type */
	T0* a64; /* special_any_type */
	T0* a65; /* special_detachable_any_type */
	T0* a66; /* string_type */
	T0* a67; /* detachable_string_type */
	T0* a68; /* string_8_type */
	T0* a69; /* string_8_convert_feature */
	T0* a70; /* string_32_type */
	T0* a71; /* string_32_convert_feature */
	T0* a72; /* system_object_type */
	T0* a73; /* system_object_parents */
	T0* a74; /* system_string_type */
	T0* a75; /* type_any_type */
	T0* a76; /* type_type_any_type */
	T0* a77; /* type_detachable_any_type */
	T0* a78; /* type_detachable_like_current_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* detachable_type_detachable_any_type */
	T0* a82; /* type_like_current_type */
	T0* a83; /* typed_pointer_any_type */
	T0* a84; /* typed_pointer_like_current_type */
	T0* a85; /* wide_character_type */
	T1 a86; /* is_read_only */
	T1 a87; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T1 a4; /* is_read_only */
	T0* a5; /* classname_prefix */
	T0* a6; /* class_renamings */
	T0* a7; /* condition */
	T0* a8; /* name */
	T0* a9; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* universe */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [detachable ANY] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ANY] */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* any_type */
	T0* a12; /* detachable_any_type */
	T0* a13; /* detachable_separate_any_type */
	T0* a14; /* separate_any_type */
	T0* a15; /* any_parent */
	T0* a16; /* any_parents */
	T0* a17; /* any_clients */
	T0* a18; /* tuple_type */
	T0* a19; /* detachable_tuple_type */
	T0* a20; /* tuple_like_current_type */
	T0* a21; /* unfolded_empty_tuple_actual_parameters */
	T0* a22; /* array_any_type */
	T0* a23; /* array_detachable_any_type */
	T0* a24; /* array_like_current_type */
	T0* a25; /* boolean_type */
	T0* a26; /* character_type */
	T0* a27; /* character_8_type */
	T0* a28; /* character_8_convert_feature */
	T0* a29; /* character_32_type */
	T0* a30; /* character_32_convert_feature */
	T0* a31; /* double_type */
	T0* a32; /* exception_type */
	T0* a33; /* detachable_exception_type */
	T0* a34; /* exception_manager_type */
	T0* a35; /* function_type */
	T0* a36; /* immutable_string_32_type */
	T0* a37; /* integer_type */
	T0* a38; /* integer_8_type */
	T0* a39; /* integer_8_convert_feature */
	T0* a40; /* integer_16_type */
	T0* a41; /* integer_16_convert_feature */
	T0* a42; /* integer_32_type */
	T0* a43; /* integer_32_convert_feature */
	T0* a44; /* integer_64_type */
	T0* a45; /* integer_64_convert_feature */
	T0* a46; /* ise_exception_manager_type */
	T0* a47; /* iterable_detachable_any_type */
	T0* a48; /* natural_type */
	T0* a49; /* natural_8_type */
	T0* a50; /* natural_8_convert_feature */
	T0* a51; /* natural_16_type */
	T0* a52; /* natural_16_convert_feature */
	T0* a53; /* natural_32_type */
	T0* a54; /* natural_32_convert_feature */
	T0* a55; /* natural_64_type */
	T0* a56; /* natural_64_convert_feature */
	T0* a57; /* none_type */
	T0* a58; /* detachable_none_type */
	T0* a59; /* pointer_type */
	T0* a60; /* predicate_like_current_type */
	T0* a61; /* procedure_like_current_type */
	T0* a62; /* real_type */
	T0* a63; /* real_32_type */
	T0* a64; /* real_32_convert_feature */
	T0* a65; /* real_64_type */
	T0* a66; /* real_64_convert_feature */
	T0* a67; /* routine_type */
	T0* a68; /* special_any_type */
	T0* a69; /* special_detachable_any_type */
	T0* a70; /* string_type */
	T0* a71; /* detachable_string_type */
	T0* a72; /* string_8_type */
	T0* a73; /* string_8_convert_feature */
	T0* a74; /* string_32_type */
	T0* a75; /* string_32_convert_feature */
	T0* a76; /* system_object_type */
	T0* a77; /* system_object_parents */
	T0* a78; /* system_string_type */
	T0* a79; /* type_any_type */
	T0* a80; /* type_type_any_type */
	T0* a81; /* type_detachable_any_type */
	T0* a82; /* type_detachable_like_current_type */
	T0* a83; /* detachable_type_exception_type */
	T0* a84; /* type_detachable_exception_type */
	T0* a85; /* detachable_type_detachable_any_type */
	T0* a86; /* type_like_current_type */
	T0* a87; /* typed_pointer_any_type */
	T0* a88; /* typed_pointer_like_current_type */
	T0* a89; /* wide_character_type */
	T1 a90; /* is_read_only */
	T1 a91; /* is_preparsed */
	T0* a92; /* class_renamings */
};

/* Struct for type SPECIAL [ET_LACE_SYSTEM] */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* any_type */
	T0* a19; /* detachable_any_type */
	T0* a20; /* detachable_separate_any_type */
	T0* a21; /* separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_like_current_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_like_current_type */
	T0* a32; /* boolean_type */
	T0* a33; /* character_type */
	T0* a34; /* character_8_type */
	T0* a35; /* character_8_convert_feature */
	T0* a36; /* character_32_type */
	T0* a37; /* character_32_convert_feature */
	T0* a38; /* double_type */
	T0* a39; /* exception_type */
	T0* a40; /* detachable_exception_type */
	T0* a41; /* exception_manager_type */
	T0* a42; /* function_type */
	T0* a43; /* immutable_string_32_type */
	T0* a44; /* integer_type */
	T0* a45; /* integer_8_type */
	T0* a46; /* integer_8_convert_feature */
	T0* a47; /* integer_16_type */
	T0* a48; /* integer_16_convert_feature */
	T0* a49; /* integer_32_type */
	T0* a50; /* integer_32_convert_feature */
	T0* a51; /* integer_64_type */
	T0* a52; /* integer_64_convert_feature */
	T0* a53; /* ise_exception_manager_type */
	T0* a54; /* iterable_detachable_any_type */
	T0* a55; /* natural_type */
	T0* a56; /* natural_8_type */
	T0* a57; /* natural_8_convert_feature */
	T0* a58; /* natural_16_type */
	T0* a59; /* natural_16_convert_feature */
	T0* a60; /* natural_32_type */
	T0* a61; /* natural_32_convert_feature */
	T0* a62; /* natural_64_type */
	T0* a63; /* natural_64_convert_feature */
	T0* a64; /* none_type */
	T0* a65; /* detachable_none_type */
	T0* a66; /* pointer_type */
	T0* a67; /* predicate_like_current_type */
	T0* a68; /* procedure_like_current_type */
	T0* a69; /* real_type */
	T0* a70; /* real_32_type */
	T0* a71; /* real_32_convert_feature */
	T0* a72; /* real_64_type */
	T0* a73; /* real_64_convert_feature */
	T0* a74; /* routine_type */
	T0* a75; /* special_any_type */
	T0* a76; /* special_detachable_any_type */
	T0* a77; /* string_type */
	T0* a78; /* detachable_string_type */
	T0* a79; /* string_8_type */
	T0* a80; /* string_8_convert_feature */
	T0* a81; /* string_32_type */
	T0* a82; /* string_32_convert_feature */
	T0* a83; /* system_object_type */
	T0* a84; /* system_object_parents */
	T0* a85; /* system_string_type */
	T0* a86; /* type_any_type */
	T0* a87; /* type_type_any_type */
	T0* a88; /* type_detachable_any_type */
	T0* a89; /* type_detachable_like_current_type */
	T0* a90; /* detachable_type_exception_type */
	T0* a91; /* type_detachable_exception_type */
	T0* a92; /* detachable_type_detachable_any_type */
	T0* a93; /* type_like_current_type */
	T0* a94; /* typed_pointer_any_type */
	T0* a95; /* typed_pointer_like_current_type */
	T0* a96; /* wide_character_type */
	T1 a97; /* is_read_only */
	T1 a98; /* is_preparsed */
	T0* a99; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_CLASS] */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_ancestors */
	T0* a11; /* conforming_descendants */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* query_calls */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_DATE_TIME */
struct S240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T1 a9; /* is_regular */
	T0* a10; /* first_precursor */
	T1 a11; /* is_creation */
	T0* a12; /* other_precursors */
	T1 a13; /* is_built */
	T1 a14; /* is_current_type_needed */
	T1 a15; /* is_static */
	T1 a16; /* is_address */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T8 a8; /* builtin_class_code */
	T8 a9; /* builtin_feature_code */
	T0* a10; /* arguments */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* other_seeds */
	T0* a15; /* extended_name */
	T0* a16; /* language */
	T0* a17; /* obsolete_message */
	T0* a18; /* alias_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* frozen_keyword */
	T1 a30; /* validity_checked */
	T1 a31; /* has_validity_error */
	T0* a32; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type detachable ARRAY [ET_TYPE] */
struct S262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CURRENT */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* count */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T0* a5; /* static_feature */
	T0* a6; /* dynamic_type_sets */
	T1 a7; /* is_regular */
	T1 a8; /* is_creation */
	T1 a9; /* is_static */
	T1 a10; /* is_address */
	T0* a11; /* result_type_set */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T1 a16; /* is_built */
	T0* a17; /* parent_type */
	T1 a18; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_set */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
struct S325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T1 a6; /* old_end_of_input */
	T14 a7; /* last_entry_pointer */
	T14 a8; /* directory_pointer */
	T0* a9; /* lastentry */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* locals */
	T0* a5; /* rescue_clause */
	T0* a6; /* implementation_feature */
	T0* a7; /* first_precursor */
	T0* a8; /* other_precursors */
	T0* a9; /* preconditions */
	T6 a10; /* hash_code */
	T0* a11; /* postconditions */
	T0* a12; /* assigner */
	T6 a13; /* version */
	T0* a14; /* other_seeds */
	T0* a15; /* extended_name */
	T0* a16; /* declared_type */
	T0* a17; /* obsolete_message */
	T0* a18; /* clients */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* frozen_keyword */
	T6 a26; /* id */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T0* a29; /* synonym */
};

/* Struct for type ET_COMPOUND */
struct S337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE] */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type STD_FILES */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* constant */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T6 a7; /* hash_code */
	T0* a8; /* assigner */
	T6 a9; /* version */
	T0* a10; /* other_seeds */
	T0* a11; /* declared_type */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* extended_name */
	T0* a20; /* frozen_keyword */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* unique_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* frozen_keyword */
	T0* a20; /* extended_name */
	T6 a21; /* id */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T0* a24; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T6 a6; /* hash_code */
	T0* a7; /* assigner */
	T6 a8; /* version */
	T0* a9; /* extended_name */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* frozen_keyword */
	T6 a18; /* id */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T0* a22; /* synonym */
};

/* Struct for type NATIVE_STRING */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_checker */
	T0* a2; /* current_class */
	T0* a3; /* current_type */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* unused_overloaded_procedures_list */
	T0* a9; /* unused_overloaded_queries_list */
	T0* a10; /* unused_overloaded_features_list */
	T0* a11; /* unused_contexts */
	T0* a12; /* current_context */
	T0* a13; /* current_target_type */
	T0* a14; /* current_object_test_types */
	T0* a15; /* current_object_test_scope */
	T0* a16; /* object_test_scope_builder */
	T0* a17; /* current_across_cursor_types */
	T0* a18; /* current_across_cursor_scope */
	T0* a19; /* current_initialization_scope */
	T0* a20; /* current_attachment_scope */
	T0* a21; /* attachment_scope_builder */
	T0* a22; /* unused_attachment_scopes */
	T0* a23; /* default_creation_call_name */
	T0* a24; /* default_creation_call */
	T1 a25; /* has_fatal_error */
	T1 a26; /* in_precondition */
	T0* a27; /* supplier_handler */
	T1 a28; /* in_invariant */
	T0* a29; /* precursor_queries */
	T0* a30; /* precursor_procedures */
	T1 a31; /* in_postcondition */
	T1 a32; /* in_precursor */
	T1 a33; /* in_rescue */
	T0* a34; /* current_inline_agent */
	T1 a35; /* in_check_instruction */
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* capacity */
	T6 a13; /* free_slot */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T6 a18; /* count */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* supplier_handler */
	T1 a7; /* has_fatal_error */
	T1 a8; /* class_interface_error_only */
	T1 a9; /* in_qualified_anchored_type */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* scope */
	T1 a4; /* is_negated */
};

/* Struct for type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_PRECONDITIONS */
struct S392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* else_keyword */
	T0* a5; /* storage */
	T0* a6; /* require_keyword */
};

/* Struct for type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
struct S393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PATH */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type ARGUMENTS_32 */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ST_WORD_WRAPPER */
struct S405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_AST_FACTORY */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_override_cluster */
	T0* a2; /* declared_console_application */
	T0* a3; /* declared_exception_trace */
	T0* a4; /* declared_trace */
	T0* a5; /* declared_garbage_collector */
	T0* a6; /* declared_c_compiler_options */
	T0* a7; /* declared_header */
	T0* a8; /* declared_link */
	T0* a9; /* declared_abstract */
	T0* a10; /* declared_recursive */
	T0* a11; /* declared_read_only */
	T6 a12; /* declared_fst_expansion_factor */
	T6 a13; /* declared_heap_size */
	T6 a14; /* declared_inlining_size */
	T6 a15; /* declared_msil_classes_per_module */
	T6 a16; /* declared_stack_size */
	T0* a17; /* declared_address_expression */
	T0* a18; /* declared_arguments */
	T0* a19; /* declared_array_optimization */
	T0* a20; /* declared_assembly */
	T0* a21; /* declared_assertion */
	T0* a22; /* declared_attached_by_default */
	T0* a23; /* declared_automatic_backup */
	T0* a24; /* declared_callback */
	T0* a25; /* declared_case_insensitive */
	T0* a26; /* declared_check_vape */
	T0* a27; /* declared_clean */
	T0* a28; /* declared_cls_compliant */
	T0* a29; /* declared_component */
	T0* a30; /* declared_create_keyword_extension */
	T0* a31; /* declared_culture */
	T0* a32; /* declared_dead_code_removal */
	T0* a33; /* declared_debug_option */
	T0* a34; /* declared_debug_tag */
	T0* a35; /* declared_debugger */
	T0* a36; /* declared_document */
	T0* a37; /* declared_dotnet_naming_convention */
	T0* a38; /* declared_dynamic_runtime */
	T0* a39; /* declared_ecf_library */
	T0* a40; /* declared_enforce_unique_class_names */
	T0* a41; /* declared_exclude */
	T0* a42; /* declared_export_option */
	T0* a43; /* declared_external_runtime */
	T0* a44; /* declared_finalize_option */
	T0* a45; /* declared_flat_fst_optimization */
	T0* a46; /* declared_force_32bits */
	T0* a47; /* declared_fst_optimization */
	T0* a48; /* declared_full_class_checking */
	T0* a49; /* declared_gc_info */
	T0* a50; /* declared_high_memory_compiler */
	T0* a51; /* declared_il_verifiable */
	T0* a52; /* declared_include */
	T0* a53; /* declared_inlining */
	T0* a54; /* declared_jumps_optimization */
	T0* a55; /* declared_layout */
	T0* a56; /* declared_layout_optimization */
	T0* a57; /* declared_leaves_optimization */
	T0* a58; /* declared_line_generation */
	T0* a59; /* declared_linker */
	T0* a60; /* declared_linux_fpu_double_precision */
	T0* a61; /* declared_manifest_string_trace */
	T0* a62; /* declared_map */
	T0* a63; /* declared_metadata_cache_path */
	T0* a64; /* declared_msil_assembly_compatibility */
	T0* a65; /* declared_msil_clr_version */
	T0* a66; /* declared_msil_culture */
	T0* a67; /* declared_msil_generation */
	T0* a68; /* declared_msil_generation_version */
	T0* a69; /* declared_msil_key_file_name */
	T0* a70; /* declared_msil_use_optimized_precompile */
	T0* a71; /* declared_multithreaded */
	T0* a72; /* declared_namespace */
	T0* a73; /* declared_no_default_lib */
	T0* a74; /* declared_old_verbatim_strings */
	T0* a75; /* declared_portable_code_generation */
	T0* a76; /* declared_precompiled */
	T0* a77; /* declared_prefix_option */
	T0* a78; /* declared_profile */
	T0* a79; /* declared_public_key_token */
	T0* a80; /* declared_reloads_optimization */
	T0* a81; /* declared_shared_library_definition */
	T0* a82; /* declared_split */
	T0* a83; /* declared_storable_filename */
	T0* a84; /* declared_strip_option */
	T0* a85; /* declared_syntax */
	T0* a86; /* declared_target */
	T0* a87; /* declared_use_cluster_name_as_namespace */
	T0* a88; /* declared_use_full_cluster_name_as_namespace */
	T0* a89; /* declared_verbose */
	T0* a90; /* declared_version */
	T0* a91; /* declared_visible_filename */
	T0* a92; /* declared_void_safety */
	T0* a93; /* declared_warning */
	T0* a94; /* declared_wedit */
};

/* Struct for type XM_ATTRIBUTE */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_CLUSTER */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* is_override */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
struct S420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* free_slot */
	T6 a7; /* last_position */
	T6 a8; /* count */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* equality_tester */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* capacity */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_UNIVERSE] */
struct S434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
struct S435 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
struct S436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* flat_mode */
	T1 a2; /* flat_dbc_mode */
	T1 a3; /* suppliers_enabled */
	T0* a4; /* current_class */
	T1 a5; /* short_mode */
	T0* a6; /* no_suppliers */
	T0* a7; /* feature_checker */
	T0* a8; /* precursor_procedures */
	T0* a9; /* precursor_queries */
	T0* a10; /* supplier_builder */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T6 a2; /* last_text_count */
	T6 a3; /* last_literal_start */
	T0* a4; /* filename */
	T0* a5; /* group */
	T0* a6; /* verbatim_marker */
	T0* a7; /* verbatim_open_white_characters */
	T0* a8; /* verbatim_close_white_characters */
	T0* a9; /* yy_pushed_start_conditions */
	T0* a10; /* input_buffer */
	T0* a11; /* yy_state_stack */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* yy_start */
	T6 a17; /* yy_end */
	T6 a18; /* line */
	T6 a19; /* column */
	T6 a20; /* position */
	T0* a21; /* yy_nxt */
	T0* a22; /* yy_chk */
	T0* a23; /* yy_base */
	T0* a24; /* yy_def */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_meta */
	T0* a27; /* yy_accept */
	T0* a28; /* yy_acclist */
	T0* a29; /* yy_content */
	T0* a30; /* yy_content_area */
	T0* a31; /* last_classname */
	T1 a32; /* class_keyword_found */
	T6 a33; /* last_token */
	T1 a34; /* yy_more_flag */
	T6 a35; /* yy_more_len */
	T6 a36; /* yy_state_count */
	T6 a37; /* yy_last_accepting_state */
	T6 a38; /* yy_last_accepting_cpos */
	T6 a39; /* yy_lp */
	T6 a40; /* yy_looking_for_trail_begin */
	T6 a41; /* yy_full_match */
	T6 a42; /* yy_full_state */
	T6 a43; /* yy_full_lp */
	T1 a44; /* yy_rejected */
	T6 a45; /* last_literal_end */
	T6 a46; /* pushed_start_condition_count */
	T6 a47; /* ms_column */
	T6 a48; /* ms_line */
	T6 a49; /* last_break_end */
	T6 a50; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* assertion_counters */
	T0* a13; /* queries */
	T0* a14; /* procedures */
	T0* a15; /* constraints */
	T0* a16; /* providers */
	T0* a17; /* current_class */
	T0* a18; /* group */
	T6 a19; /* last_text_count */
	T6 a20; /* last_literal_start */
	T0* a21; /* filename */
	T0* a22; /* verbatim_marker */
	T0* a23; /* verbatim_open_white_characters */
	T0* a24; /* verbatim_close_white_characters */
	T0* a25; /* yyss */
	T6 a26; /* time_stamp */
	T0* a27; /* input_buffer */
	T0* a28; /* yy_pushed_start_conditions */
	T0* a29; /* yyspecial_routines1 */
	T6 a30; /* yyvsc1 */
	T0* a31; /* yyvs1 */
	T0* a32; /* yyspecial_routines2 */
	T6 a33; /* yyvsc2 */
	T0* a34; /* yyvs2 */
	T0* a35; /* yyspecial_routines3 */
	T6 a36; /* yyvsc3 */
	T0* a37; /* yyvs3 */
	T0* a38; /* yyspecial_routines4 */
	T6 a39; /* yyvsc4 */
	T0* a40; /* yyvs4 */
	T0* a41; /* yyspecial_routines5 */
	T6 a42; /* yyvsc5 */
	T0* a43; /* yyvs5 */
	T0* a44; /* yyspecial_routines6 */
	T6 a45; /* yyvsc6 */
	T0* a46; /* yyvs6 */
	T0* a47; /* yyspecial_routines7 */
	T6 a48; /* yyvsc7 */
	T0* a49; /* yyvs7 */
	T0* a50; /* yyspecial_routines8 */
	T6 a51; /* yyvsc8 */
	T0* a52; /* yyvs8 */
	T0* a53; /* yyspecial_routines9 */
	T6 a54; /* yyvsc9 */
	T0* a55; /* yyvs9 */
	T0* a56; /* yyspecial_routines10 */
	T6 a57; /* yyvsc10 */
	T0* a58; /* yyvs10 */
	T0* a59; /* yyspecial_routines11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyvs11 */
	T0* a62; /* yyspecial_routines12 */
	T6 a63; /* yyvsc12 */
	T0* a64; /* yyvs12 */
	T0* a65; /* yyspecial_routines13 */
	T6 a66; /* yyvsc13 */
	T0* a67; /* yyvs13 */
	T0* a68; /* yyspecial_routines14 */
	T6 a69; /* yyvsc14 */
	T0* a70; /* yyvs14 */
	T0* a71; /* yyspecial_routines15 */
	T6 a72; /* yyvsc15 */
	T0* a73; /* yyvs15 */
	T0* a74; /* yyspecial_routines16 */
	T6 a75; /* yyvsc16 */
	T0* a76; /* yyvs16 */
	T0* a77; /* yyspecial_routines17 */
	T6 a78; /* yyvsc17 */
	T0* a79; /* yyvs17 */
	T0* a80; /* yyspecial_routines18 */
	T6 a81; /* yyvsc18 */
	T0* a82; /* yyvs18 */
	T0* a83; /* yyspecial_routines19 */
	T6 a84; /* yyvsc19 */
	T0* a85; /* yyvs19 */
	T0* a86; /* yyspecial_routines20 */
	T6 a87; /* yyvsc20 */
	T0* a88; /* yyvs20 */
	T0* a89; /* yyspecial_routines21 */
	T6 a90; /* yyvsc21 */
	T0* a91; /* yyvs21 */
	T0* a92; /* yyspecial_routines22 */
	T6 a93; /* yyvsc22 */
	T0* a94; /* yyvs22 */
	T0* a95; /* yyspecial_routines23 */
	T6 a96; /* yyvsc23 */
	T0* a97; /* yyvs23 */
	T0* a98; /* yyspecial_routines24 */
	T6 a99; /* yyvsc24 */
	T0* a100; /* yyvs24 */
	T0* a101; /* yyspecial_routines25 */
	T6 a102; /* yyvsc25 */
	T0* a103; /* yyvs25 */
	T0* a104; /* yyspecial_routines26 */
	T6 a105; /* yyvsc26 */
	T0* a106; /* yyvs26 */
	T0* a107; /* yyspecial_routines27 */
	T6 a108; /* yyvsc27 */
	T0* a109; /* yyvs27 */
	T0* a110; /* yyspecial_routines28 */
	T6 a111; /* yyvsc28 */
	T0* a112; /* yyvs28 */
	T0* a113; /* yyspecial_routines29 */
	T6 a114; /* yyvsc29 */
	T0* a115; /* yyvs29 */
	T0* a116; /* yyspecial_routines30 */
	T6 a117; /* yyvsc30 */
	T0* a118; /* yyvs30 */
	T0* a119; /* yyspecial_routines31 */
	T6 a120; /* yyvsc31 */
	T0* a121; /* yyvs31 */
	T0* a122; /* yyspecial_routines32 */
	T6 a123; /* yyvsc32 */
	T0* a124; /* yyvs32 */
	T0* a125; /* yyspecial_routines33 */
	T6 a126; /* yyvsc33 */
	T0* a127; /* yyvs33 */
	T0* a128; /* yyspecial_routines34 */
	T6 a129; /* yyvsc34 */
	T0* a130; /* yyvs34 */
	T0* a131; /* yyspecial_routines35 */
	T6 a132; /* yyvsc35 */
	T0* a133; /* yyvs35 */
	T0* a134; /* yyspecial_routines36 */
	T6 a135; /* yyvsc36 */
	T0* a136; /* yyvs36 */
	T0* a137; /* yyspecial_routines37 */
	T6 a138; /* yyvsc37 */
	T0* a139; /* yyvs37 */
	T0* a140; /* yyspecial_routines38 */
	T6 a141; /* yyvsc38 */
	T0* a142; /* yyvs38 */
	T0* a143; /* yyspecial_routines39 */
	T6 a144; /* yyvsc39 */
	T0* a145; /* yyvs39 */
	T0* a146; /* yyspecial_routines40 */
	T6 a147; /* yyvsc40 */
	T0* a148; /* yyvs40 */
	T0* a149; /* yyspecial_routines41 */
	T6 a150; /* yyvsc41 */
	T0* a151; /* yyvs41 */
	T0* a152; /* yyspecial_routines42 */
	T6 a153; /* yyvsc42 */
	T0* a154; /* yyvs42 */
	T0* a155; /* yyspecial_routines43 */
	T6 a156; /* yyvsc43 */
	T0* a157; /* yyvs43 */
	T0* a158; /* yyspecial_routines44 */
	T6 a159; /* yyvsc44 */
	T0* a160; /* yyvs44 */
	T0* a161; /* yyspecial_routines45 */
	T6 a162; /* yyvsc45 */
	T0* a163; /* yyvs45 */
	T0* a164; /* yyspecial_routines46 */
	T6 a165; /* yyvsc46 */
	T0* a166; /* yyvs46 */
	T0* a167; /* yyspecial_routines47 */
	T6 a168; /* yyvsc47 */
	T0* a169; /* yyvs47 */
	T0* a170; /* yyspecial_routines48 */
	T6 a171; /* yyvsc48 */
	T0* a172; /* yyvs48 */
	T0* a173; /* yyspecial_routines49 */
	T6 a174; /* yyvsc49 */
	T0* a175; /* yyvs49 */
	T0* a176; /* yyspecial_routines50 */
	T6 a177; /* yyvsc50 */
	T0* a178; /* yyvs50 */
	T0* a179; /* yyspecial_routines51 */
	T6 a180; /* yyvsc51 */
	T0* a181; /* yyvs51 */
	T0* a182; /* yyspecial_routines52 */
	T6 a183; /* yyvsc52 */
	T0* a184; /* yyvs52 */
	T0* a185; /* yyspecial_routines53 */
	T6 a186; /* yyvsc53 */
	T0* a187; /* yyvs53 */
	T0* a188; /* yyspecial_routines54 */
	T6 a189; /* yyvsc54 */
	T0* a190; /* yyvs54 */
	T0* a191; /* yyspecial_routines55 */
	T6 a192; /* yyvsc55 */
	T0* a193; /* yyvs55 */
	T0* a194; /* yyspecial_routines56 */
	T6 a195; /* yyvsc56 */
	T0* a196; /* yyvs56 */
	T0* a197; /* yyspecial_routines57 */
	T6 a198; /* yyvsc57 */
	T0* a199; /* yyvs57 */
	T0* a200; /* yyspecial_routines58 */
	T6 a201; /* yyvsc58 */
	T0* a202; /* yyvs58 */
	T0* a203; /* yyspecial_routines59 */
	T6 a204; /* yyvsc59 */
	T0* a205; /* yyvs59 */
	T0* a206; /* yyspecial_routines60 */
	T6 a207; /* yyvsc60 */
	T0* a208; /* yyvs60 */
	T0* a209; /* yyspecial_routines61 */
	T6 a210; /* yyvsc61 */
	T0* a211; /* yyvs61 */
	T0* a212; /* yyspecial_routines62 */
	T6 a213; /* yyvsc62 */
	T0* a214; /* yyvs62 */
	T0* a215; /* yyspecial_routines63 */
	T6 a216; /* yyvsc63 */
	T0* a217; /* yyvs63 */
	T0* a218; /* yyspecial_routines64 */
	T6 a219; /* yyvsc64 */
	T0* a220; /* yyvs64 */
	T0* a221; /* yyspecial_routines65 */
	T6 a222; /* yyvsc65 */
	T0* a223; /* yyvs65 */
	T0* a224; /* yyspecial_routines66 */
	T6 a225; /* yyvsc66 */
	T0* a226; /* yyvs66 */
	T0* a227; /* yyspecial_routines67 */
	T6 a228; /* yyvsc67 */
	T0* a229; /* yyvs67 */
	T0* a230; /* yyspecial_routines68 */
	T6 a231; /* yyvsc68 */
	T0* a232; /* yyvs68 */
	T0* a233; /* yyspecial_routines69 */
	T6 a234; /* yyvsc69 */
	T0* a235; /* yyvs69 */
	T0* a236; /* yyspecial_routines70 */
	T6 a237; /* yyvsc70 */
	T0* a238; /* yyvs70 */
	T0* a239; /* yyspecial_routines71 */
	T6 a240; /* yyvsc71 */
	T0* a241; /* yyvs71 */
	T0* a242; /* yyspecial_routines72 */
	T6 a243; /* yyvsc72 */
	T0* a244; /* yyvs72 */
	T0* a245; /* yyspecial_routines73 */
	T6 a246; /* yyvsc73 */
	T0* a247; /* yyvs73 */
	T0* a248; /* yyspecial_routines74 */
	T6 a249; /* yyvsc74 */
	T0* a250; /* yyvs74 */
	T0* a251; /* yyspecial_routines75 */
	T6 a252; /* yyvsc75 */
	T0* a253; /* yyvs75 */
	T0* a254; /* yyspecial_routines76 */
	T6 a255; /* yyvsc76 */
	T0* a256; /* yyvs76 */
	T0* a257; /* yyspecial_routines77 */
	T6 a258; /* yyvsc77 */
	T0* a259; /* yyvs77 */
	T0* a260; /* yyspecial_routines78 */
	T6 a261; /* yyvsc78 */
	T0* a262; /* yyvs78 */
	T0* a263; /* yyspecial_routines79 */
	T6 a264; /* yyvsc79 */
	T0* a265; /* yyvs79 */
	T0* a266; /* yyspecial_routines80 */
	T6 a267; /* yyvsc80 */
	T0* a268; /* yyvs80 */
	T0* a269; /* yyspecial_routines81 */
	T6 a270; /* yyvsc81 */
	T0* a271; /* yyvs81 */
	T0* a272; /* yyspecial_routines82 */
	T6 a273; /* yyvsc82 */
	T0* a274; /* yyvs82 */
	T0* a275; /* yyspecial_routines83 */
	T6 a276; /* yyvsc83 */
	T0* a277; /* yyvs83 */
	T0* a278; /* yyspecial_routines84 */
	T6 a279; /* yyvsc84 */
	T0* a280; /* yyvs84 */
	T0* a281; /* yyspecial_routines85 */
	T6 a282; /* yyvsc85 */
	T0* a283; /* yyvs85 */
	T0* a284; /* yyspecial_routines86 */
	T6 a285; /* yyvsc86 */
	T0* a286; /* yyvs86 */
	T0* a287; /* yyspecial_routines87 */
	T6 a288; /* yyvsc87 */
	T0* a289; /* yyvs87 */
	T0* a290; /* yyspecial_routines88 */
	T6 a291; /* yyvsc88 */
	T0* a292; /* yyvs88 */
	T0* a293; /* yyspecial_routines89 */
	T6 a294; /* yyvsc89 */
	T0* a295; /* yyvs89 */
	T0* a296; /* yyspecial_routines90 */
	T6 a297; /* yyvsc90 */
	T0* a298; /* yyvs90 */
	T0* a299; /* yyspecial_routines91 */
	T6 a300; /* yyvsc91 */
	T0* a301; /* yyvs91 */
	T0* a302; /* yyspecial_routines92 */
	T6 a303; /* yyvsc92 */
	T0* a304; /* yyvs92 */
	T0* a305; /* yyspecial_routines93 */
	T6 a306; /* yyvsc93 */
	T0* a307; /* yyvs93 */
	T0* a308; /* yyspecial_routines94 */
	T6 a309; /* yyvsc94 */
	T0* a310; /* yyvs94 */
	T0* a311; /* yyspecial_routines95 */
	T6 a312; /* yyvsc95 */
	T0* a313; /* yyvs95 */
	T0* a314; /* yyspecial_routines96 */
	T6 a315; /* yyvsc96 */
	T0* a316; /* yyvs96 */
	T0* a317; /* yyspecial_routines97 */
	T6 a318; /* yyvsc97 */
	T0* a319; /* yyvs97 */
	T0* a320; /* yyspecial_routines98 */
	T6 a321; /* yyvsc98 */
	T0* a322; /* yyvs98 */
	T0* a323; /* yyspecial_routines99 */
	T6 a324; /* yyvsc99 */
	T0* a325; /* yyvs99 */
	T0* a326; /* yyspecial_routines100 */
	T6 a327; /* yyvsc100 */
	T0* a328; /* yyvs100 */
	T0* a329; /* yyspecial_routines101 */
	T6 a330; /* yyvsc101 */
	T0* a331; /* yyvs101 */
	T0* a332; /* yyspecial_routines102 */
	T6 a333; /* yyvsc102 */
	T0* a334; /* yyvs102 */
	T0* a335; /* yyspecial_routines103 */
	T6 a336; /* yyvsc103 */
	T0* a337; /* yyvs103 */
	T0* a338; /* yyspecial_routines104 */
	T6 a339; /* yyvsc104 */
	T0* a340; /* yyvs104 */
	T0* a341; /* yyspecial_routines105 */
	T6 a342; /* yyvsc105 */
	T0* a343; /* yyvs105 */
	T0* a344; /* yyspecial_routines106 */
	T6 a345; /* yyvsc106 */
	T0* a346; /* yyvs106 */
	T0* a347; /* yyspecial_routines107 */
	T6 a348; /* yyvsc107 */
	T0* a349; /* yyvs107 */
	T0* a350; /* yyspecial_routines108 */
	T6 a351; /* yyvsc108 */
	T0* a352; /* yyvs108 */
	T0* a353; /* yyspecial_routines109 */
	T6 a354; /* yyvsc109 */
	T0* a355; /* yyvs109 */
	T0* a356; /* yyspecial_routines110 */
	T6 a357; /* yyvsc110 */
	T0* a358; /* yyvs110 */
	T0* a359; /* yyspecial_routines111 */
	T6 a360; /* yyvsc111 */
	T0* a361; /* yyvs111 */
	T0* a362; /* yyspecial_routines112 */
	T6 a363; /* yyvsc112 */
	T0* a364; /* yyvs112 */
	T0* a365; /* yyspecial_routines113 */
	T6 a366; /* yyvsc113 */
	T0* a367; /* yyvs113 */
	T0* a368; /* yyspecial_routines114 */
	T6 a369; /* yyvsc114 */
	T0* a370; /* yyvs114 */
	T0* a371; /* yyspecial_routines115 */
	T6 a372; /* yyvsc115 */
	T0* a373; /* yyvs115 */
	T0* a374; /* yyspecial_routines116 */
	T6 a375; /* yyvsc116 */
	T0* a376; /* yyvs116 */
	T0* a377; /* yyspecial_routines117 */
	T6 a378; /* yyvsc117 */
	T0* a379; /* yyvs117 */
	T0* a380; /* yyspecial_routines118 */
	T6 a381; /* yyvsc118 */
	T0* a382; /* yyvs118 */
	T0* a383; /* yyspecial_routines119 */
	T6 a384; /* yyvsc119 */
	T0* a385; /* yyvs119 */
	T0* a386; /* yyspecial_routines120 */
	T6 a387; /* yyvsc120 */
	T0* a388; /* yyvs120 */
	T0* a389; /* yytranslate */
	T0* a390; /* yyr1 */
	T0* a391; /* yytypes1 */
	T0* a392; /* yytypes2 */
	T0* a393; /* yydefact */
	T0* a394; /* yydefgoto */
	T0* a395; /* yypact */
	T0* a396; /* yypgoto */
	T0* a397; /* yytable */
	T0* a398; /* yycheck */
	T6 a399; /* yy_end */
	T6 a400; /* yy_start */
	T6 a401; /* yy_line */
	T6 a402; /* yy_column */
	T6 a403; /* yy_position */
	T6 a404; /* yy_parsing_status */
	T6 a405; /* yy_suspended_yystacksize */
	T6 a406; /* yy_suspended_yystate */
	T6 a407; /* yy_suspended_yyn */
	T6 a408; /* yy_suspended_yychar1 */
	T6 a409; /* yy_suspended_index */
	T6 a410; /* yy_suspended_yyss_top */
	T6 a411; /* yy_suspended_yy_goto */
	T6 a412; /* yyssp */
	T6 a413; /* error_count */
	T1 a414; /* yy_lookahead_needed */
	T6 a415; /* yyerrstatus */
	T6 a416; /* last_token */
	T0* a417; /* last_class */
	T0* a418; /* last_clients */
	T0* a419; /* last_export_clients */
	T0* a420; /* last_feature_clause */
	T6 a421; /* last_literal_end */
	T1 a422; /* yy_rejected */
	T6 a423; /* yy_state_count */
	T6 a424; /* yy_full_match */
	T6 a425; /* yy_lp */
	T6 a426; /* yy_looking_for_trail_begin */
	T6 a427; /* yy_full_lp */
	T6 a428; /* yy_full_state */
	T6 a429; /* pushed_start_condition_count */
	T6 a430; /* yy_start_state */
	T6 a431; /* line */
	T6 a432; /* column */
	T6 a433; /* position */
	T1 a434; /* yy_more_flag */
	T6 a435; /* yy_more_len */
	T6 a436; /* yy_last_accepting_state */
	T6 a437; /* yy_last_accepting_cpos */
	T0* a438; /* yy_state_stack */
	T0* a439; /* yy_content */
	T0* a440; /* yy_content_area */
	T6 a441; /* yyvsp1 */
	T6 a442; /* yyvsp2 */
	T6 a443; /* yyvsp3 */
	T6 a444; /* yyvsp4 */
	T6 a445; /* yyvsp5 */
	T6 a446; /* yyvsp6 */
	T6 a447; /* yyvsp7 */
	T6 a448; /* yyvsp8 */
	T6 a449; /* yyvsp9 */
	T6 a450; /* yyvsp10 */
	T6 a451; /* yyvsp11 */
	T6 a452; /* yyvsp12 */
	T6 a453; /* yyvsp13 */
	T6 a454; /* yyvsp14 */
	T6 a455; /* yyvsp15 */
	T6 a456; /* yyvsp16 */
	T6 a457; /* yyvsp17 */
	T6 a458; /* yyvsp18 */
	T6 a459; /* yyvsp19 */
	T6 a460; /* yyvsp20 */
	T6 a461; /* yyvsp21 */
	T6 a462; /* yyvsp22 */
	T6 a463; /* yyvsp23 */
	T6 a464; /* yyvsp24 */
	T6 a465; /* yyvsp25 */
	T6 a466; /* yyvsp26 */
	T6 a467; /* yyvsp27 */
	T6 a468; /* yyvsp28 */
	T6 a469; /* yyvsp29 */
	T6 a470; /* yyvsp30 */
	T6 a471; /* yyvsp31 */
	T6 a472; /* yyvsp32 */
	T6 a473; /* yyvsp33 */
	T6 a474; /* yyvsp34 */
	T6 a475; /* yyvsp35 */
	T6 a476; /* yyvsp36 */
	T6 a477; /* yyvsp37 */
	T6 a478; /* yyvsp38 */
	T6 a479; /* yyvsp39 */
	T6 a480; /* yyvsp40 */
	T6 a481; /* yyvsp41 */
	T6 a482; /* yyvsp42 */
	T6 a483; /* yyvsp43 */
	T6 a484; /* yyvsp44 */
	T6 a485; /* yyvsp45 */
	T6 a486; /* yyvsp46 */
	T6 a487; /* yyvsp47 */
	T6 a488; /* yyvsp48 */
	T6 a489; /* yyvsp49 */
	T6 a490; /* yyvsp50 */
	T6 a491; /* yyvsp51 */
	T6 a492; /* yyvsp52 */
	T6 a493; /* yyvsp53 */
	T6 a494; /* yyvsp54 */
	T6 a495; /* yyvsp55 */
	T6 a496; /* yyvsp56 */
	T6 a497; /* yyvsp57 */
	T6 a498; /* yyvsp58 */
	T6 a499; /* yyvsp59 */
	T6 a500; /* yyvsp60 */
	T6 a501; /* yyvsp61 */
	T6 a502; /* yyvsp62 */
	T6 a503; /* yyvsp63 */
	T6 a504; /* yyvsp64 */
	T6 a505; /* yyvsp65 */
	T6 a506; /* yyvsp66 */
	T6 a507; /* yyvsp67 */
	T6 a508; /* yyvsp68 */
	T6 a509; /* yyvsp69 */
	T6 a510; /* yyvsp70 */
	T6 a511; /* yyvsp71 */
	T6 a512; /* yyvsp72 */
	T6 a513; /* yyvsp73 */
	T6 a514; /* yyvsp74 */
	T6 a515; /* yyvsp75 */
	T6 a516; /* yyvsp76 */
	T6 a517; /* yyvsp77 */
	T6 a518; /* yyvsp78 */
	T6 a519; /* yyvsp79 */
	T6 a520; /* yyvsp80 */
	T6 a521; /* yyvsp81 */
	T6 a522; /* yyvsp82 */
	T6 a523; /* yyvsp83 */
	T6 a524; /* yyvsp84 */
	T6 a525; /* yyvsp85 */
	T6 a526; /* yyvsp86 */
	T6 a527; /* yyvsp87 */
	T6 a528; /* yyvsp88 */
	T6 a529; /* yyvsp89 */
	T6 a530; /* yyvsp90 */
	T6 a531; /* yyvsp91 */
	T6 a532; /* yyvsp92 */
	T6 a533; /* yyvsp93 */
	T6 a534; /* yyvsp94 */
	T6 a535; /* yyvsp95 */
	T6 a536; /* yyvsp96 */
	T6 a537; /* yyvsp97 */
	T6 a538; /* yyvsp98 */
	T6 a539; /* yyvsp99 */
	T6 a540; /* yyvsp100 */
	T6 a541; /* yyvsp101 */
	T6 a542; /* yyvsp102 */
	T6 a543; /* yyvsp103 */
	T6 a544; /* yyvsp104 */
	T6 a545; /* yyvsp105 */
	T6 a546; /* yyvsp106 */
	T6 a547; /* yyvsp107 */
	T6 a548; /* yyvsp108 */
	T6 a549; /* yyvsp109 */
	T6 a550; /* yyvsp110 */
	T6 a551; /* yyvsp111 */
	T6 a552; /* yyvsp112 */
	T6 a553; /* yyvsp113 */
	T6 a554; /* yyvsp114 */
	T6 a555; /* yyvsp115 */
	T6 a556; /* yyvsp116 */
	T6 a557; /* yyvsp117 */
	T6 a558; /* yyvsp118 */
	T6 a559; /* yyvsp119 */
	T6 a560; /* yyvsp120 */
	T0* a561; /* yy_ec */
	T0* a562; /* yy_accept */
	T0* a563; /* yy_chk */
	T0* a564; /* yy_base */
	T0* a565; /* yy_def */
	T0* a566; /* yy_meta */
	T0* a567; /* yy_nxt */
	T0* a568; /* yy_acclist */
	T0* a569; /* last_detachable_any_value */
	T0* a570; /* last_detachable_et_keyword_value */
	T0* a571; /* last_detachable_et_agent_keyword_value */
	T0* a572; /* last_detachable_et_precursor_keyword_value */
	T0* a573; /* last_detachable_et_symbol_value */
	T0* a574; /* last_detachable_et_position_value */
	T0* a575; /* last_detachable_et_boolean_constant_value */
	T0* a576; /* last_detachable_et_break_value */
	T0* a577; /* last_detachable_et_character_constant_value */
	T0* a578; /* last_detachable_et_current_value */
	T0* a579; /* last_detachable_et_free_operator_value */
	T0* a580; /* last_detachable_et_identifier_value */
	T0* a581; /* last_detachable_et_integer_constant_value */
	T0* a582; /* last_detachable_et_keyword_operator_value */
	T0* a583; /* last_detachable_et_manifest_string_value */
	T0* a584; /* last_detachable_et_real_constant_value */
	T0* a585; /* last_detachable_et_result_value */
	T0* a586; /* last_detachable_et_retry_instruction_value */
	T0* a587; /* last_detachable_et_symbol_operator_value */
	T0* a588; /* last_detachable_et_void_value */
	T0* a589; /* last_detachable_et_semicolon_symbol_value */
	T0* a590; /* last_detachable_et_bracket_symbol_value */
	T0* a591; /* last_detachable_et_question_mark_symbol_value */
	T0* a592; /* last_formal_arguments */
	T0* a593; /* last_local_variables */
	T0* a594; /* last_object_tests */
	T0* a595; /* last_across_components */
	T6 a596; /* last_break_end */
	T6 a597; /* last_comment_end */
	T6 a598; /* ms_column */
	T6 a599; /* ms_line */
	T6 a600; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T1 a19; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* any_type */
	T0* a8; /* detachable_any_type */
	T0* a9; /* detachable_separate_any_type */
	T0* a10; /* separate_any_type */
	T0* a11; /* any_parent */
	T0* a12; /* any_parents */
	T0* a13; /* any_clients */
	T0* a14; /* tuple_type */
	T0* a15; /* detachable_tuple_type */
	T0* a16; /* tuple_like_current_type */
	T0* a17; /* unfolded_empty_tuple_actual_parameters */
	T0* a18; /* array_any_type */
	T0* a19; /* array_detachable_any_type */
	T0* a20; /* array_like_current_type */
	T0* a21; /* boolean_type */
	T0* a22; /* character_type */
	T0* a23; /* character_8_type */
	T0* a24; /* character_8_convert_feature */
	T0* a25; /* character_32_type */
	T0* a26; /* character_32_convert_feature */
	T0* a27; /* double_type */
	T0* a28; /* exception_type */
	T0* a29; /* detachable_exception_type */
	T0* a30; /* exception_manager_type */
	T0* a31; /* function_type */
	T0* a32; /* immutable_string_32_type */
	T0* a33; /* integer_type */
	T0* a34; /* integer_8_type */
	T0* a35; /* integer_8_convert_feature */
	T0* a36; /* integer_16_type */
	T0* a37; /* integer_16_convert_feature */
	T0* a38; /* integer_32_type */
	T0* a39; /* integer_32_convert_feature */
	T0* a40; /* integer_64_type */
	T0* a41; /* integer_64_convert_feature */
	T0* a42; /* ise_exception_manager_type */
	T0* a43; /* iterable_detachable_any_type */
	T0* a44; /* natural_type */
	T0* a45; /* natural_8_type */
	T0* a46; /* natural_8_convert_feature */
	T0* a47; /* natural_16_type */
	T0* a48; /* natural_16_convert_feature */
	T0* a49; /* natural_32_type */
	T0* a50; /* natural_32_convert_feature */
	T0* a51; /* natural_64_type */
	T0* a52; /* natural_64_convert_feature */
	T0* a53; /* none_type */
	T0* a54; /* detachable_none_type */
	T0* a55; /* pointer_type */
	T0* a56; /* predicate_like_current_type */
	T0* a57; /* procedure_like_current_type */
	T0* a58; /* real_type */
	T0* a59; /* real_32_type */
	T0* a60; /* real_32_convert_feature */
	T0* a61; /* real_64_type */
	T0* a62; /* real_64_convert_feature */
	T0* a63; /* routine_type */
	T0* a64; /* special_any_type */
	T0* a65; /* special_detachable_any_type */
	T0* a66; /* string_type */
	T0* a67; /* detachable_string_type */
	T0* a68; /* string_8_type */
	T0* a69; /* string_8_convert_feature */
	T0* a70; /* string_32_type */
	T0* a71; /* string_32_convert_feature */
	T0* a72; /* system_object_type */
	T0* a73; /* system_object_parents */
	T0* a74; /* system_string_type */
	T0* a75; /* type_any_type */
	T0* a76; /* type_type_any_type */
	T0* a77; /* type_detachable_any_type */
	T0* a78; /* type_detachable_like_current_type */
	T0* a79; /* detachable_type_exception_type */
	T0* a80; /* type_detachable_exception_type */
	T0* a81; /* detachable_type_detachable_any_type */
	T0* a82; /* type_like_current_type */
	T0* a83; /* typed_pointer_any_type */
	T0* a84; /* typed_pointer_like_current_type */
	T0* a85; /* wide_character_type */
	T1 a86; /* is_read_only */
	T1 a87; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
struct S451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
struct S453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
struct S455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
struct S457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_like_current_type */
	T0* a22; /* boolean_type */
	T0* a23; /* character_type */
	T0* a24; /* character_8_type */
	T0* a25; /* character_8_convert_feature */
	T0* a26; /* character_32_type */
	T0* a27; /* character_32_convert_feature */
	T0* a28; /* double_type */
	T0* a29; /* exception_type */
	T0* a30; /* detachable_exception_type */
	T0* a31; /* exception_manager_type */
	T0* a32; /* function_type */
	T0* a33; /* immutable_string_32_type */
	T0* a34; /* integer_type */
	T0* a35; /* integer_8_type */
	T0* a36; /* integer_8_convert_feature */
	T0* a37; /* integer_16_type */
	T0* a38; /* integer_16_convert_feature */
	T0* a39; /* integer_32_type */
	T0* a40; /* integer_32_convert_feature */
	T0* a41; /* integer_64_type */
	T0* a42; /* integer_64_convert_feature */
	T0* a43; /* ise_exception_manager_type */
	T0* a44; /* iterable_detachable_any_type */
	T0* a45; /* natural_type */
	T0* a46; /* natural_8_type */
	T0* a47; /* natural_8_convert_feature */
	T0* a48; /* natural_16_type */
	T0* a49; /* natural_16_convert_feature */
	T0* a50; /* natural_32_type */
	T0* a51; /* natural_32_convert_feature */
	T0* a52; /* natural_64_type */
	T0* a53; /* natural_64_convert_feature */
	T0* a54; /* none_type */
	T0* a55; /* detachable_none_type */
	T0* a56; /* pointer_type */
	T0* a57; /* predicate_like_current_type */
	T0* a58; /* procedure_like_current_type */
	T0* a59; /* real_type */
	T0* a60; /* real_32_type */
	T0* a61; /* real_32_convert_feature */
	T0* a62; /* real_64_type */
	T0* a63; /* real_64_convert_feature */
	T0* a64; /* routine_type */
	T0* a65; /* special_any_type */
	T0* a66; /* special_detachable_any_type */
	T0* a67; /* string_type */
	T0* a68; /* detachable_string_type */
	T0* a69; /* string_8_type */
	T0* a70; /* string_8_convert_feature */
	T0* a71; /* string_32_type */
	T0* a72; /* string_32_convert_feature */
	T0* a73; /* system_object_type */
	T0* a74; /* system_object_parents */
	T0* a75; /* system_string_type */
	T0* a76; /* type_any_type */
	T0* a77; /* type_type_any_type */
	T0* a78; /* type_detachable_any_type */
	T0* a79; /* type_detachable_like_current_type */
	T0* a80; /* detachable_type_exception_type */
	T0* a81; /* type_detachable_exception_type */
	T0* a82; /* detachable_type_detachable_any_type */
	T0* a83; /* type_like_current_type */
	T0* a84; /* typed_pointer_any_type */
	T0* a85; /* typed_pointer_like_current_type */
	T0* a86; /* wide_character_type */
	T1 a87; /* is_read_only */
	T1 a88; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [ET_LIBRARY] */
struct S461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
struct S462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* clients_clause */
};

/* Struct for type ET_CLIENT_LIST */
struct S468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_MASTER_CLASS */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T1 a12; /* is_modified */
	T1 a13; /* is_marked */
	T0* a14; /* first_imported_class */
	T0* a15; /* first_local_ignored_class */
	T0* a16; /* first_local_override_class */
	T0* a17; /* first_local_non_override_class */
	T0* a18; /* first_local_hidden_class */
};

/* Struct for type DS_HASH_SET [ET_UNIVERSE] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
struct S473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS] */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S490 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type ET_CLIENT */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* rename_keyword */
};

/* Struct for type ET_EXPORT_LIST */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* export_keyword */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type ET_LIKE_CURRENT */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type ET_NONE_GROUP */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type XM_NAMESPACE */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* open_operand_type_sets */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* conforming_ancestors */
	T0* a18; /* conforming_descendants */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* result_type_set */
	T0* a12; /* open_operand_type_sets */
	T0* a13; /* alive_conforming_descendants */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T1 a16; /* has_reference_attributes */
	T1 a17; /* has_generic_expanded_attributes */
	T0* a18; /* conforming_ancestors */
	T0* a19; /* conforming_descendants */
	T1 a20; /* has_static */
	T0* a21; /* procedure_calls */
	T0* a22; /* equality_expressions */
	T0* a23; /* object_equality_expressions */
};

/* Struct for type ET_DO_PROCEDURE */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* extended_name */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_feature */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* rescue_clause */
	T0* a17; /* locals */
	T0* a18; /* object_tests */
	T0* a19; /* across_components */
	T0* a20; /* postconditions */
	T0* a21; /* obsolete_message */
	T0* a22; /* is_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type UT_CONFIG_PARSER */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYSTEM_ERROR */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* other_seeds */
	T0* a16; /* object_tests */
	T0* a17; /* across_components */
	T0* a18; /* postconditions */
	T0* a19; /* obsolete_message */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type CELL [INTEGER_32] */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type C_STRING */
struct S534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type KL_PATHNAME */
struct S536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type READABLE_STRING_32 */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_LINKABLE [STRING_8] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [BOOLEAN] */
struct S549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [INTEGER_32] */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
struct S565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S591 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S592 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S593 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S594 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S595 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable KL_EQUALITY_TESTER [INTEGER_32] */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ECF_LIBRARY] */
struct S610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
struct S613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_TARGET] */
struct S619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_MASTER_CLASS] */
struct S634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type C_DATE */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_OBJECT_TEST] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EQUALITY_EXPRESSION] */
struct S673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
struct S675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S729 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* declared_type */
	T0* a5; /* expression */
	T0* a6; /* as_keyword */
};

/* Struct for type SPECIAL [ET_NAMED_OBJECT_TEST] */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ACROSS_COMPONENT] */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_ATTACHMENT_SCOPE] */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTIONS] */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type ET_CLUSTERS */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
};

/* Struct for type UT_TRISTATE */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type KL_AGENT_ROUTINES [ANY] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE] */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type UT_COUNTER */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_AGENT_ROUTINES [ET_CLASS] */
struct S790 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_CLUSTER */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_override */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* ecf_subclusters */
	T0* a9; /* ecf_file_rules */
	T0* a10; /* condition */
	T1 a11; /* overridden_constraint_enabled */
	T1 a12; /* scm_mapping_constraint_enabled */
	T0* a13; /* subclusters */
	T1 a14; /* use_obsolete_syntax */
	T0* a15; /* scm_read_mapping */
	T0* a16; /* scm_write_mapping */
	T1 a17; /* is_implicit */
	T0* a18; /* parent */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a21; /* is_preparsed */
	T1 a22; /* is_abstract */
	T0* a23; /* file_rules */
	T0* a24; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* condition */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_includes */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_objects */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* condition */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_libraries */
};

/* Struct for type ET_ECF_SETTINGS */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_OPTIONS */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
};

/* Struct for type ET_ECF_CONDITIONS */
struct S810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
	T1 a2; /* is_ored */
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_MULTITHREADED_CONDITION */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T1 a3; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_CREATOR_LIST */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type EXCEPTIONS */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type XM_LINKED_LIST [XM_ELEMENT_NODE] */
struct S836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] TUPLE [ET_LACE_CLUSTER] */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIAS_NAME */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type CONSOLE */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_LIKE_N */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ARRAY [IMMUTABLE_STRING_32] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type SPECIAL [IMMUTABLE_STRING_32] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTER] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_HASH_SET [ET_NAMED_CLASS] */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type ET_POSTCONDITIONS */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type ET_INVARIANTS */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* invariant_keyword */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
};

/* Struct for type KL_STDIN_FILE */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* character_buffer */
	T0* a4; /* last_string */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD] */
struct S901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_SYMBOL] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSITION] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BREAK] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CURRENT] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [detachable ET_FREE_OPERATOR] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_REAL_CONSTANT] */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RESULT] */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type SPECIAL [detachable ET_VOID] */
struct S947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_AGENT_TARGET] */
struct S975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ALIAS_NAME] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ASSIGNER] */
struct S980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* target */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [detachable ET_CALL_AGENT] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE] */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CHOICE_ITEM] */
struct S998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CHOICE_LIST] */
struct S1001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S1002 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLASS] */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CLIENT_ITEM] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S1007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CLIENTS] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S1009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_COMPOUND] */
struct S1010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONDITIONAL] */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S1022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* convert_keyword */
};

/* Struct for type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [detachable ET_CREATOR] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_CREATOR_LIST] */
struct S1041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S1044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART] */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT] */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXPORT_LIST] */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S1062 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S1070 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME] */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S1084 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_LIST] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_ITEM] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S1102 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S1107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S1110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INSTRUCTION] */
struct S1113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_INVARIANTS] */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S1118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LIKE_TYPE] */
struct S1120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S1122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S1130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S1131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S1133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_OBSOLETE] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S1149 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT] */
struct S1150 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_ITEM] */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S1156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PARENT_LIST] */
struct S1157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_POSTCONDITIONS] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_PRECONDITIONS] */
struct S1161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_ITEM] */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1168 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_RENAME_LIST] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* feature_keyword */
	T0* a3; /* static_type */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1172 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* right_parenthesis */
};

/* Struct for type SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_ITEM] */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_TYPE_LIST] */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [detachable ET_VARIANT] */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S1186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART] */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_WRITABLE] */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T0* a4; /* literal */
	T3 a5; /* value */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T1 a6; /* has_overflow */
	T11 a7; /* value */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* sign */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T6 a3; /* compressed_position */
	T3 a4; /* value */
	T0* a5; /* type */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_DO_FUNCTION */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* extended_name */
	T0* a26; /* frozen_keyword */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* keys */
	T0* a32; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* assigner */
	T0* a11; /* declared_type */
	T0* a12; /* obsolete_message */
	T0* a13; /* clients */
	T0* a14; /* is_keyword */
	T0* a15; /* deferred_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* frozen_keyword */
	T0* a23; /* other_seeds */
	T0* a24; /* extended_name */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* compound */
	T0* a4; /* implementation_feature */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* preconditions */
	T6 a8; /* hash_code */
	T0* a9; /* arguments */
	T0* a10; /* postconditions */
	T0* a11; /* obsolete_message */
	T0* a12; /* locals */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* object_tests */
	T0* a21; /* across_components */
	T0* a22; /* frozen_keyword */
	T0* a23; /* extended_name */
	T0* a24; /* other_seeds */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* keys */
	T0* a30; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_class */
	T0* a3; /* implementation_feature */
	T0* a4; /* first_precursor */
	T0* a5; /* other_precursors */
	T0* a6; /* preconditions */
	T6 a7; /* hash_code */
	T8 a8; /* builtin_class_code */
	T8 a9; /* builtin_feature_code */
	T0* a10; /* arguments */
	T0* a11; /* postconditions */
	T0* a12; /* other_seeds */
	T0* a13; /* extended_name */
	T0* a14; /* language */
	T0* a15; /* obsolete_message */
	T0* a16; /* alias_clause */
	T0* a17; /* clients */
	T0* a18; /* is_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* frozen_keyword */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_PREFIX_NAME */
struct S1233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* name */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S1249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T1 a2; /* is_parent_prefixed */
	T0* a3; /* parent_name */
	T0* a4; /* precursor_keyword */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1259 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1260 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_brace */
	T0* a3; /* type */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* left_brace */
	T0* a4; /* attached_keyword */
	T0* a5; /* as_keyword */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1268 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1269 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* implicit_result */
	T0* a7; /* object_tests */
	T0* a8; /* across_components */
	T0* a9; /* actual_arguments */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1273 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* formal_arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T0* a7; /* actual_arguments */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* language */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* type */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type ET_FILE_POSITION */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* current_formal */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* free_parent_feature */
	T0* a6; /* parent_feature_list */
	T0* a7; /* free_inherited_feature */
	T0* a8; /* inherited_feature_list */
	T0* a9; /* free_redeclared_feature */
	T0* a10; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* anchored_type_sorter */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T6 a4; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1299 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* builtin_features */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_feature */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T1 a4; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DOTNET_ASSEMBLY] */
struct S1312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
struct S1314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* equality_tester */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_UNIVERSE] */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
struct S1325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_INTERNAL_UNIVERSE] */
struct S1326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [XM_POSITION] */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [STRING_8] */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type SPECIAL [ET_ECF_TARGET] */
struct S1360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1367 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATIVE_STRING] */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
struct S1374 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
struct S1375 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
struct S1376 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S1378 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
struct S1381 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [NATURAL_8] */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type STRING_8_SEARCHER */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [INTEGER_32] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_AGENT_ROUTINES [ET_UNIVERSE] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type KL_AGENT_HASH_FUNCTION [STRING_8] */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type [attached] TUPLE [STRING_8] */
struct S1402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1405 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S1420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
struct S1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_FEATURE_IDS */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
struct S1444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
struct S1448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
struct S1449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ADAPTED_UNIVERSE] */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_NAMED_CLASS] */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
struct S1470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
struct S1502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_CALL_NAME] */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
struct S1506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T1 a3; /* is_selected */
	T0* a4; /* replicated_features */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T0* a7; /* parent_feature */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1526 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1529 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
struct S1530 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S1541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
struct S1542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
struct S1560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
struct S1568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
struct S1569 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
struct S1571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
struct S1572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
struct S1573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] TUPLE [LX_WILDCARD] */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S1579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
struct S1581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S1582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1601 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ECF_CLUSTER] */
struct S1603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
struct S1604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
struct S1605 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
struct S1606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
struct S1607 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
struct S1608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
struct S1612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
struct S1613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
struct S1614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
struct S1615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_FILE_RULE] */
struct S1616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
struct S1618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
struct S1621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
struct S1623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
struct S1626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_ECF_CONDITION] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
struct S1629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [CHARACTER_8] */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S1633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type SPECIAL [LX_WILDCARD] */
struct S1635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
struct S1638 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
struct S1639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_NAME] */
struct S1649 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
struct S1651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
struct S1652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
struct S1656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
struct S1678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1685 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1690 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S1696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_CLIENT_LIST] */
struct S1712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_arguments */
	T0* a3; /* left_symbol */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type SPECIAL [ET_LIKE_FEATURE] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
struct S1731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
struct S1732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST [LX_RULE] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S1735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
struct S1738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_SYMBOL_CLASS] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type SPECIAL [LX_NFA] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
struct S1745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S1746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S1747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S1748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S1749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S1750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S1751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S1752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S1753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ARRAY [LX_RULE] */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type SPECIAL [LX_RULE] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA_STATE] */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [LX_DFA_STATE] */
struct S1758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type KL_ARRAY_ROUTINES [LX_RULE] */
struct S1760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_START_CONDITION */
struct S1761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type LX_TRANSITION_TABLE [LX_DFA_STATE] */
struct S1762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type DS_ARRAYED_LIST [LX_NFA] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S1770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
struct S1773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
struct S1774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S1776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S1781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type [attached] TUPLE [ET_ASSERTIONS] */
struct S1803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type [attached] TUPLE [ET_ECF_CLUSTER] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
struct S1815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULE] */
struct S1817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
struct S1820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S1825 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_RULE] */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
struct S1831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_ARRAY_ROUTINES [STRING_8] */
struct S1832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [LX_START_CONDITION] */
struct S1833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
struct S1835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type ARRAY [DS_BILINKABLE [INTEGER_32]] */
struct S1843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_BILINKABLE [INTEGER_32] */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_ACTION */
struct S1847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type DS_BUBBLE_SORTER [LX_NFA_STATE] */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type DS_BUBBLE_SORTER [LX_RULE] */
struct S1850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type SPECIAL [LX_NFA_STATE] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [LX_DFA_STATE] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_ARRAY [LX_RULE] */
struct S1860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ARRAY [detachable LX_DFA_STATE] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S1873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* convert_feature */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S1879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SHELL_SORTER [INTEGER_32] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_RULE] */
struct S1885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
struct S1888 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_ARRAY [STRING_8] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1902 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
struct S1903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
struct S1904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
struct S1905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T20 GE_default20;
extern T23 GE_default23;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T37 GE_default37;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T42 GE_default42;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T47 GE_default47;
extern T51 GE_default51;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T58 GE_default58;
extern T59 GE_default59;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T85 GE_default85;
extern T87 GE_default87;
extern T88 GE_default88;
extern T89 GE_default89;
extern T91 GE_default91;
extern T93 GE_default93;
extern T95 GE_default95;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T127 GE_default127;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T148 GE_default148;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T167 GE_default167;
extern T168 GE_default168;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T181 GE_default181;
extern T183 GE_default183;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T191 GE_default191;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T199 GE_default199;
extern T200 GE_default200;
extern T201 GE_default201;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T247 GE_default247;
extern T251 GE_default251;
extern T259 GE_default259;
extern T260 GE_default260;
extern T261 GE_default261;
extern T262 GE_default262;
extern T263 GE_default263;
extern T264 GE_default264;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T274 GE_default274;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T317 GE_default317;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T325 GE_default325;
extern T326 GE_default326;
extern T330 GE_default330;
extern T331 GE_default331;
extern T335 GE_default335;
extern T336 GE_default336;
extern T337 GE_default337;
extern T338 GE_default338;
extern T342 GE_default342;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T352 GE_default352;
extern T353 GE_default353;
extern T354 GE_default354;
extern T355 GE_default355;
extern T356 GE_default356;
extern T359 GE_default359;
extern T361 GE_default361;
extern T363 GE_default363;
extern T364 GE_default364;
extern T365 GE_default365;
extern T367 GE_default367;
extern T368 GE_default368;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T395 GE_default395;
extern T397 GE_default397;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T402 GE_default402;
extern T404 GE_default404;
extern T405 GE_default405;
extern T407 GE_default407;
extern T408 GE_default408;
extern T409 GE_default409;
extern T410 GE_default410;
extern T412 GE_default412;
extern T414 GE_default414;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T420 GE_default420;
extern T422 GE_default422;
extern T423 GE_default423;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T433 GE_default433;
extern T434 GE_default434;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T442 GE_default442;
extern T443 GE_default443;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T458 GE_default458;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T466 GE_default466;
extern T467 GE_default467;
extern T468 GE_default468;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T473 GE_default473;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T509 GE_default509;
extern T513 GE_default513;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T523 GE_default523;
extern T524 GE_default524;
extern T527 GE_default527;
extern T528 GE_default528;
extern T529 GE_default529;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T536 GE_default536;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T543 GE_default543;
extern T544 GE_default544;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T563 GE_default563;
extern T564 GE_default564;
extern T565 GE_default565;
extern T566 GE_default566;
extern T567 GE_default567;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T573 GE_default573;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T603 GE_default603;
extern T604 GE_default604;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T609 GE_default609;
extern T610 GE_default610;
extern T613 GE_default613;
extern T614 GE_default614;
extern T617 GE_default617;
extern T618 GE_default618;
extern T619 GE_default619;
extern T620 GE_default620;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T626 GE_default626;
extern T627 GE_default627;
extern T629 GE_default629;
extern T632 GE_default632;
extern T633 GE_default633;
extern T634 GE_default634;
extern T635 GE_default635;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T642 GE_default642;
extern T643 GE_default643;
extern T647 GE_default647;
extern T648 GE_default648;
extern T650 GE_default650;
extern T652 GE_default652;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T665 GE_default665;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T699 GE_default699;
extern T700 GE_default700;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T720 GE_default720;
extern T723 GE_default723;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T737 GE_default737;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T833 GE_default833;
extern T834 GE_default834;
extern T836 GE_default836;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T849 GE_default849;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T863 GE_default863;
extern T864 GE_default864;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T878 GE_default878;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T914 GE_default914;
extern T915 GE_default915;
extern T917 GE_default917;
extern T918 GE_default918;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T940 GE_default940;
extern T941 GE_default941;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T955 GE_default955;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T992 GE_default992;
extern T993 GE_default993;
extern T995 GE_default995;
extern T996 GE_default996;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1023 GE_default1023;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1131 GE_default1131;
extern T1132 GE_default1132;
extern T1133 GE_default1133;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1240 GE_default1240;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1314 GE_default1314;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1325 GE_default1325;
extern T1326 GE_default1326;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1371 GE_default1371;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1389 GE_default1389;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1401 GE_default1401;
extern T1402 GE_default1402;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1422 GE_default1422;
extern T1423 GE_default1423;
extern T1425 GE_default1425;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1470 GE_default1470;
extern T1472 GE_default1472;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1475 GE_default1475;
extern T1476 GE_default1476;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1482 GE_default1482;
extern T1483 GE_default1483;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1492 GE_default1492;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1496 GE_default1496;
extern T1497 GE_default1497;
extern T1499 GE_default1499;
extern T1500 GE_default1500;
extern T1501 GE_default1501;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1518 GE_default1518;
extern T1520 GE_default1520;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1530 GE_default1530;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1535 GE_default1535;
extern T1537 GE_default1537;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1541 GE_default1541;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1545 GE_default1545;
extern T1546 GE_default1546;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1554 GE_default1554;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1558 GE_default1558;
extern T1560 GE_default1560;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1568 GE_default1568;
extern T1569 GE_default1569;
extern T1570 GE_default1570;
extern T1571 GE_default1571;
extern T1572 GE_default1572;
extern T1573 GE_default1573;
extern T1574 GE_default1574;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1579 GE_default1579;
extern T1581 GE_default1581;
extern T1582 GE_default1582;
extern T1586 GE_default1586;
extern T1596 GE_default1596;
extern T1599 GE_default1599;
extern T1600 GE_default1600;
extern T1601 GE_default1601;
extern T1602 GE_default1602;
extern T1603 GE_default1603;
extern T1604 GE_default1604;
extern T1605 GE_default1605;
extern T1606 GE_default1606;
extern T1607 GE_default1607;
extern T1608 GE_default1608;
extern T1609 GE_default1609;
extern T1610 GE_default1610;
extern T1611 GE_default1611;
extern T1612 GE_default1612;
extern T1613 GE_default1613;
extern T1614 GE_default1614;
extern T1615 GE_default1615;
extern T1616 GE_default1616;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1635 GE_default1635;
extern T1638 GE_default1638;
extern T1639 GE_default1639;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1649 GE_default1649;
extern T1650 GE_default1650;
extern T1651 GE_default1651;
extern T1652 GE_default1652;
extern T1653 GE_default1653;
extern T1656 GE_default1656;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1666 GE_default1666;
extern T1667 GE_default1667;
extern T1668 GE_default1668;
extern T1669 GE_default1669;
extern T1672 GE_default1672;
extern T1673 GE_default1673;
extern T1674 GE_default1674;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1684 GE_default1684;
extern T1685 GE_default1685;
extern T1690 GE_default1690;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1696 GE_default1696;
extern T1700 GE_default1700;
extern T1701 GE_default1701;
extern T1705 GE_default1705;
extern T1708 GE_default1708;
extern T1712 GE_default1712;
extern T1718 GE_default1718;
extern T1721 GE_default1721;
extern T1724 GE_default1724;
extern T1727 GE_default1727;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1738 GE_default1738;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1747 GE_default1747;
extern T1748 GE_default1748;
extern T1749 GE_default1749;
extern T1750 GE_default1750;
extern T1751 GE_default1751;
extern T1752 GE_default1752;
extern T1753 GE_default1753;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1758 GE_default1758;
extern T1759 GE_default1759;
extern T1760 GE_default1760;
extern T1761 GE_default1761;
extern T1762 GE_default1762;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1767 GE_default1767;
extern T1769 GE_default1769;
extern T1770 GE_default1770;
extern T1773 GE_default1773;
extern T1774 GE_default1774;
extern T1775 GE_default1775;
extern T1776 GE_default1776;
extern T1778 GE_default1778;
extern T1781 GE_default1781;
extern T1796 GE_default1796;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1820 GE_default1820;
extern T1821 GE_default1821;
extern T1825 GE_default1825;
extern T1828 GE_default1828;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1832 GE_default1832;
extern T1833 GE_default1833;
extern T1834 GE_default1834;
extern T1835 GE_default1835;
extern T1838 GE_default1838;
extern T1840 GE_default1840;
extern T1842 GE_default1842;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1847 GE_default1847;
extern T1848 GE_default1848;
extern T1850 GE_default1850;
extern T1852 GE_default1852;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1860 GE_default1860;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1863 GE_default1863;
extern T1865 GE_default1865;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1874 GE_default1874;
extern T1879 GE_default1879;
extern T1882 GE_default1882;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1888 GE_default1888;
extern T1891 GE_default1891;
extern T1892 GE_default1892;
extern T1893 GE_default1893;
extern T1894 GE_default1894;
extern T1895 GE_default1895;
extern T1896 GE_default1896;
extern T1898 GE_default1898;
extern T1899 GE_default1899;
extern T1900 GE_default1900;
extern T1901 GE_default1901;
extern T1902 GE_default1902;
extern T1903 GE_default1903;
extern T1904 GE_default1904;
extern T1905 GE_default1905;
extern T1908 GE_default1908;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr32(T6 c);
/* Call to ANY.same_type */
extern T1 T21x27T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T34x4388(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.feature_flattener */
extern T0* T34x4512(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.error_handler */
extern T0* T34x4382(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ancestor_builder */
extern T0* T34x4511(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.interface_checker */
extern T0* T34x4513(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T34x4386(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T34x5972(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_ise */
extern T1 T34x4490(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_version */
extern T0* T34x4491(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T34x4379(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T34x5971(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T34x5979(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T34x5980(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T34x5978(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T34x6004(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T34x4394(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T34x4393(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T34x4392(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T34x4390(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T34x5984(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.unknown_builtin_reported */
extern T1 T34x4471(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T34x5977(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.eiffel_parser */
extern T0* T34x4507(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T34x4387(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T34x4391(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.qualified_anchored_types_cycle_detection_enabled */
extern T1 T34x4445(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T34x6009(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.registered_feature_count */
extern T6 T34x4407(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T34x5975(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_reference_keyword */
extern T1 T34x4441(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_note_keyword */
extern T1 T34x4440(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_detachable_keyword */
extern T1 T34x4439(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attribute_keyword */
extern T1 T34x4438(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ast_factory */
extern T0* T34x4383(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_attached_keyword */
extern T1 T34x4437(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.flat_implementation_checker */
extern T0* T34x4515(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.implementation_checker */
extern T0* T34x4514(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T34x4421(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_shallow_mode */
extern T1 T34x4447(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_readonly_mode */
extern T1 T34x4450(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_override_mode */
extern T1 T34x4451(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T34x6019(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T34x5976(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_cluster_dependence_pathnames */
extern T1 T34x4444(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.cluster_dependence_enabled */
extern T1 T34x4443(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.providers_enabled */
extern T1 T34x4442(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.preparse_multiple_mode */
extern T1 T34x4449(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T34x4509(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.scoop_mode */
extern T1 T34x4418(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T34x6025(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T34x4389(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T34x4416(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T34x4417(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T34x4419(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T34x4420(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.attachment_type_conformance_mode */
extern T1 T34x6094(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T34x4425(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T34x4426(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T34x4424(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T34x4422(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_requested */
extern T1 T34x4528(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T34x6161(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T34x5996(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T34x6005(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T34x6022(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T34x6011(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T34x6033(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T34x6012(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.immutable_string_32_type */
extern T0* T34x5990(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T34x6017(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T34x6016(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T34x5983(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T34x6010(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T34x6002(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T34x6001(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T34x6000(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T34x5999(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T34x5995(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T34x5994(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T34x5993(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T34x5992(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T34x5981(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T34x4381(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T34x6003(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T34x4380(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.stop_request */
extern T0* T34x4529(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T34x5944(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T34x4423(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T36x4710(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T36x4564T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T36x4705(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T36x4708(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T36x4711(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T48x10791(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T48x10786(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T48x10784(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T48x10788(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T48x10795(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T48x10785(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T48x10787(GE_context* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T48x10797(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T48x10794(GE_context* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T48x10792(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T48x10790(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T48x10789(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T48x10799(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T48x10796(GE_context* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T52x5880(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T59x11033T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T74x10494T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T74x10481T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T74x10447T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T74x14716(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T74x10445T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T74x7055T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T74x10465T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T74x10463T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T74x10497T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T74x10489T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T74x7050(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T74x10506(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T74x10454T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T74x14717(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T74x7058(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T74x10451T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T74x10444T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T74x10467T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T74x10461T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T74x10498T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T74x10496T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T74x10493T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T74x10491T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T74x10495T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T74x10508(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T74x10442T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T74x10456T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T74x10490T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T74x10488T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T74x10449T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T74x10479T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T74x7062(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T74x7067(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T74x10478T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T103x713T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T103x751(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T103x792T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T103x714T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_POSITION.column */
extern T6 T185x8703(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T185x8702(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T185x8704(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T185x8708(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T198x6161(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T238x14595T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T238x14622T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T238x14590(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T238x14808(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T238x14599(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T238x14587(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T238x14623T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T238x14600(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T238x14620T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T238x14621T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T238x14618(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T238x14614(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T238x14609(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T238x14588(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T238x14626T0T8T8(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T238x14601(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T238x14616(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T238x22(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T238x14586(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T238x14582(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T238x14639(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T238x14629(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T238x14628(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T238x14619(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T238x14813(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforming_ancestors */
extern T0* T238x14605(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_tuple */
extern T1 T238x14589(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T238x14591(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T244x14864(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T244x9788(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T244x9779(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T244x9780(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T244x14860(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T244x9781(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T244x9824(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T244x9786(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T244x9823(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T244x9785(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T244x9821(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T244x9784(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T244x9822(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T244x9787(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T244x7104T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T244x22(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T244x14863(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T244x9810(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T244x9790(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T245x22(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T245x8465T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T245x23041(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T245x8467T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T245x8464(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T245x23040(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T245x8424(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T245x8420(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T245x8423(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T245x23038(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T245x8458(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T245x8444(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T245x8445(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T245x23036T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T245x10055(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T245x8488T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T245x19264(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T245x19263(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T246x10053(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T246x8448(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T246x22(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T246x23039(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T246x23041(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T246x9872(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T246x8465T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T246x8424(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T246x8420(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T246x8423(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T246x23038(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T246x23040(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T246x8464(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T246x23036T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T246x19267(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T246x8450(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T246x8449(GE_context* ac, T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T246x10055(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T246x8454(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T246x8455(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T246x8456(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T246x8458(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T246x8457(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T246x8444(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T246x8445(GE_context* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T246x8488T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.postconditions */
extern T0* T246x19264(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T246x19263(GE_context* ac, T0* C);
/* Call to ET_TYPE.position */
extern T0* T249x14860(GE_context* ac, T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T249x10439T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T249x10479T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.last_leaf */
extern T0* T249x14864(GE_context* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T249x10506(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T249x10481T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_like_current */
extern T1 T249x10457(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T249x10450T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T249x10448T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T249x10459(GE_context* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T249x10494T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_type */
extern T1 T249x10478T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.is_named_type */
extern T1 T249x10458(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T249x10460T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T249x10466T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T249x10469(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T249x10476T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T249x10499T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T249x10470T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T249x10471T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T249x10468(GE_context* ac, T0* C);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T249x10447T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_actual */
extern T0* T249x10445T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T249x10486T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T249x10485T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.named_base_class */
extern T0* T249x10440T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T249x10465T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T249x10463T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T249x10497T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T249x10489T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T249x10482T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T249x10443T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T249x10454T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T249x10483T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T249x10451T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T249x10444T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T249x10484T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T249x10487T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T249x10477T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_reference */
extern T1 T249x10462T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T249x10449T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T249x10442T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T249x10461T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T249x10495T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T249x10467T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T249x10490T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T249x10488T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T249x10498T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T249x10496T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T249x10456T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T249x10493T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T249x10491T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_type */
extern T0* T249x10441T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T250x14716(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T250x14723(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T250x14714(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T250x14760(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T250x14727(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T250x14720T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T250x14725(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T250x14761(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T250x14746T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T250x14740(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T250x14739(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T250x14734T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T250x14732T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T250x14758T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T250x14748T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T250x14724T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T250x14754T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T250x14736T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T250x14742T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T250x14719T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T250x14730T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T250x14717(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T250x14759T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T250x14757T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T250x14749T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T250x14747T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T250x14752T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T250x14750T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T252x5958T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T252x5963T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T252x5965(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T252x6103(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T252x5984(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T252x6102(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T252x5983(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T252x6113(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T252x6010(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T252x6112(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T252x6009(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T252x6111(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T252x6002(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T252x6110(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T252x6001(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T252x6109(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T252x6000(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T252x6108(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T252x5999(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T252x6107(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T252x5995(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T252x6106(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T252x5994(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T252x6105(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T252x5993(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T252x6104(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T252x5992(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T252x6115(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T252x6017(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T252x6114(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T252x6016(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.attachment_type_conformance_mode */
extern T1 T252x6094(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T252x5981(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.target_type_attachment_mode */
extern T1 T252x6096(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T252x5959T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T252x6021(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T252x5989(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T252x6006(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T252x6007(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_tuple_type */
extern T0* T252x6022(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T252x6005(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T252x6034(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.array_any_type */
extern T0* T252x5978(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T252x6032(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T252x6023(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T252x5971(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T252x5991(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T252x5972(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T252x5997(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T252x5945T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T252x5939T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T252x6024(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T252x6097(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T252x5990(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T252x6020(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T252x6014(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T252x22(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T252x5973(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T252x5985(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T252x6008(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_type */
extern T0* T252x6015(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T252x6012(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T252x6027(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T252x6013(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T252x5988(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T252x6031(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T252x5986(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T252x6030(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T252x5987(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T252x6029(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T252x5960T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T252x5961T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T252x6095(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T252x5957(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T252x6019(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T252x5976(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T252x6018(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T252x5962T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T252x5952T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T252x5998(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T252x6035(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T252x5982(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T253x14881T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T253x14878(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T253x14877(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T255x14860(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T255x6802(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T255x6801(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T255x6800(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T255x6803(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T255x6798(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T255x6796(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T255x6795(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T255x6812(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T255x6811T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T255x6799(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T255x6797(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T256x14864(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T256x6779T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T256x6777T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T256x6775(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T256x6776T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T256x6781(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T256x6783(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T256x6787T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T256x6792T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T256x6784T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T256x6785T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T256x6782(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T256x6788T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T256x6789T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T256x6778T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T258x14813(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T258x14809(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T258x14810(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T258x22566T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T258x22569(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T258x22573(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T258x14808(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T258x22570(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T258x22567(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T258x14818(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T258x22571T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T284x14864(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T284x14860(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T284x9845T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T284x9838(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T284x9841(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T284x18188(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T284x9840(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_true */
extern T1 T284x9842(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T284x9839(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T288x10053(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T288x23038(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T288x23036T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.is_once */
extern T1 T288x8454(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T288x23041(GE_context* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T288x19264(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T288x8431(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T288x10054(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T288x8465T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.clients */
extern T0* T288x10057(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T288x23040(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T288x8421(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T288x8464(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T288x19267(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T288x10055(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T288x8429(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T288x8445(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T288x8420(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T288x8449(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T288x23042(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T288x8452(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T288x23039(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T288x8450(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T288x8448(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T288x8428(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T288x8444(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T288x8455(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T288x8456(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T288x8458(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T288x8457(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T288x8489T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T288x8490T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.preconditions */
extern T0* T288x19263(GE_context* ac, T0* C);
/* Call to ET_FEATURE.same_version */
extern T1 T288x8471T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T288x23035(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T288x8451(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T288x10059(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T288x10058(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T288x22(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T289x14864(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T289x22053(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T314x18246(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T314x18247(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T314x14860(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T314x18249(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T314x18250(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T315x14860(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T315x9781(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T315x9788(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T315x9780(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T315x9804(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T315x9798(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T315x9792(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T315x9820(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T315x9818(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T315x22(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T315x9814(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T315x9812(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T315x9811(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T315x9809(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T315x9808(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T315x9807(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T315x9806(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T315x9805(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T315x9803(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T315x9802(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T315x9801(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T315x9800(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T315x9799(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T315x9797(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T315x9796(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T315x9794(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T315x9793(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T315x9791(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T315x9816(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T315x9815(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T315x9819T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T315x9825(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T318x18167(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T318x18168(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T318x18177(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T318x14860(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T318x18173(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T318x18188(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T318x18170(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T318x18169(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T319x17695(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T319x18188(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T319x17694(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T319x17696(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T324x18181(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T324x18180(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T324x18183(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T324x18179(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T324x18188(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T332x14860(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T332x14892(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T332x14864(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T339x22067T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T339x22068(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T339x22065(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T341x22058(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T341x14860(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T344x18188(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T344x18187(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T345x18188(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T345x14860(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T345x18187(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T347x18187(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T347x18188(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T350x14860(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T350x6809(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T350x6810(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T358x22067T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T358x22068(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T358x22065(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T360x22566T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T360x22569(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.index_of */
extern T6 T360x22568T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPES.has_type */
extern T1 T360x22571T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T366x10515(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T366x18188(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T366x10513(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T366x14860(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T377x10059(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T377x19267(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T377x19264(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T377x19263(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T377x10064(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T377x10052(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T377x10063(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T377x10051(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T377x10054(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T377x19262(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T377x19261(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T377x19260(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T377x10057(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T377x10055(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T396x22061(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T398x6637T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T398x6643(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T398x6639T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T398x6627(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T398x6633(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T398x6632(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T398x6658(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T398x6620(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T398x6656(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T398x6625(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T398x6622(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T398x6624(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T398x6623(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T419x6639T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T419x6862(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T419x6856(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T419x6857(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T419x6858(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T419x6855(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T419x6642(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T419x6824(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T419x6626(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T419x6625(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T419x6640(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T419x6832(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T419x6628(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T419x6659(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T419x6632(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T419x6854(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T419x6838T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T419x6826(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T419x6837T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T419x6860(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T419x6859(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T447x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T450x6639T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T450x6161(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T450x22(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T450x7007(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T522x22050(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T522x22049(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T522x22052T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T522x14860(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T522x22051T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T566x14000(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T566x31198T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T566x14006(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T566x31209(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T566x13996(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T566x31207(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T645x14864(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T645x14879(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T645x14860(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T645x14873T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T645x14878(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T646x10506(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T646x10447T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T646x10481T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T646x10445T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T646x10486T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T646x10485T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T646x10483T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T646x10454T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T646x10484T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T646x10487T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T646x10477T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T646x10482T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T646x10471T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T646x10463T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T646x10461T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T646x10440T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T646x10495T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T646x10479T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T646x10467T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T646x10465T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T646x10489T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T646x10490T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T646x10488T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T646x10497T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T646x10498T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T646x10496T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T646x10493T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T646x10491T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T646x10439T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLOSURE.locals */
extern T0* T722x19262(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T722x19260(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T722x19261(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T722x19266(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T722x19265(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T724x18169(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T724x19261(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T724x18168(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T724x18167(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T724x19262(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T724x19260(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T767x6906(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION.is_enabled */
extern T1 T813x22187T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T826x18246(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T826x18245(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T826x19370(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T826x19373(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T826x18247(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T826x18188(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T826x18250(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T826x18249(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T835x20727(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T850x6158(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T850x6157(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T856x9819T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.alias_lower_name */
extern T0* T856x16634(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T856x16647T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T856x22(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T856x9801(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T856x9805(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T856x9811(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T856x9812(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T856x9790(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T856x16630(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T856x16629(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T856x9816(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T856x9815(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T856x9810(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T919x10549(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T919x18188(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T919x10548(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T927x10302(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T927x18188(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T927x10295(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T927x10291(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T927x10301(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T927x10305(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T927x10320(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T927x10292(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T927x10311(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T927x10310(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T927x10316(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T927x10315(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T927x10319(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T927x10318(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T927x10317(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T927x10314(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T927x10313(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_64 */
extern T11 T927x10300(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_32 */
extern T10 T927x10299(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_16 */
extern T9 T927x10298(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_natural_8 */
extern T8 T927x10297(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_64 */
extern T7 T927x10296(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_16 */
extern T5 T927x10294(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_8 */
extern T4 T927x10293(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T969x22070(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T979x22055(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T991x22078(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T991x22076(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T991x22077(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T994x14860(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T997x22080(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T1012x22059(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T1015x14887T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T1015x14885(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T1015x14886(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T1024x14889T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T1027x19951(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T1027x19950(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T1027x19949(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T1059x18232(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T1073x22049(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T1073x14860(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T1119x10506(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T1119x14860(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1119x10499T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T1119x9900(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T1119x10471T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T1136x25237(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1177x14859(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1226x14864(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1226x14891(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1230x23183(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1277x22063(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1277x14860(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1307x23043(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1307x23045(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1307x23032(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1307x23046(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1307x23033(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1307x23047(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1307x23044(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1307x23031(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1307x23034(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1414x20727(GE_context* ac, T0* C);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1420x10980T6(GE_context* ac, T0* C, T6 a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].count */
extern T6 T1420x10961(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1422x9910(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1422x9911(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1422x9846(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1422x10467T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1422x10465T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1422x14859(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1422x10438T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1424x6639T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1424x6644(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1424x6620(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1424x6642(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1424x6632(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1424x6659(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1424x6638T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1424x6656(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1430x14862(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1431x9814(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1431x9792(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1431x9791(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1431x9798(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1431x9804(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1431x9803(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1431x9788(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1431x14860(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1511x34064(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1511x34063(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1511x34062(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1511x34065(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1549x18236(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1549x10053(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1549x18234(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1549x23040(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1549x19267(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1549x8454(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1550x19267(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1550x23040(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1551x19262(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1551x18234(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1551x18236(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.operator_name */
extern T0* T1575x31808(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1575x22(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1575x9795(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T1688x18245(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T1688x18246(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T1688x18250(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T1688x18249(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T1688x18247(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1692x18169(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T1704x10432(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T1704x10506(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1716x14860(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1719x19256(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1719x19255(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1719x18188(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1791x19260(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1791x19261(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1794x19261(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1797x19373(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1797x18246(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1797x18245(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1797x18247(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T1798x18245(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1798x18246(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1799x18247(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1800x19369(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1800x19368(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1802x19369(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].target */
extern T0* T1839x38001(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1839x38004T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T29x2810T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T29x2806T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T29x2798T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T29x2812T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T29x2805T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_feature */
extern void T34x4406T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T34x4403T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T34x4402T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T34x4401T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T34x4398T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T34x4400T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T34x4399T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T34x4397T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T34x4396T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T34x4395T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.register_inline_constant */
extern void T34x4408T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_class */
extern void T34x4404T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.print_time */
extern void T34x4531T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T34x6146(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.activate_processors */
extern void T34x4517(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T34x6122T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.compile_all */
extern void T34x4500(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T34x6121T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_flat_dbc_mode */
extern void T34x4473T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_flat_mode */
extern void T34x4472T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_SYSTEM.set_ise_version */
extern void T34x4497T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_error_handler */
extern void T34x4414T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T36x4712(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T36x4702(GE_context* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T48x10810T0(GE_context* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T48x10811(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T84x19992T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T84x20006T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T84x5876(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T84x19990T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T84x20007T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T84x5875T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T165x20958T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T166x20915T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T166x20916T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T166x20921(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T166x20914(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T166x20920T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T166x20922T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T166x20919T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T166x20923T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T166x20917T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T166x20918T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T166x20913(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T198x6166T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T238x14630T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T238x14631T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T238x14815T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T238x14635T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T238x14634T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T238x14598T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T238x14625T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T238x14611T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T238x14596(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_attribute_position */
extern void T238x14624T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T238x14640T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T238x14613T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T238x14612T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T244x9778(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T244x9782T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T245x8416(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T245x8415(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T245x8414(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.set_across_components */
extern void T245x19269T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T245x19268T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T245x8482T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T245x10062(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T246x8416(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T246x8415(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T246x8414(GE_context* ac, T0* C);
/* Call to ET_QUERY.set_across_components */
extern void T246x19269T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T246x19268T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T246x8482T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_validity_checked */
extern void T246x10062(GE_context* ac, T0* C);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T248x8036T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T248x8034T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T248x8030T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T248x8094T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T248x8185T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T248x8169T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T248x8146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T248x8038T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T248x8005T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T248x8117T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T248x8000T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T248x7999T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T248x7998T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T248x8100T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T248x8087T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T248x8044T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T248x8016T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T248x7980T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T248x8165T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_cluster */
extern void T248x8191T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T248x8028T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T248x8078T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_n */
extern void T248x8112T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T248x8110T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T248x8004T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T248x8183T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T248x8027T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T248x8062T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T248x8037T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T248x8058T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T248x8125T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T248x8126T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T248x8184T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T248x8153T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T248x8176T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T248x8064T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T248x8021T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T248x8081T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T248x8067T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T248x8134T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T248x8050T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T248x8065T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T248x8131T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T248x8048T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T248x8132T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T248x8129T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T248x8128T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T248x8148T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T248x8123T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T248x8096T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T248x8060T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T248x8164T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T248x8042T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T248x8069T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T248x8145T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T248x8155T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T248x8154T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T248x8111T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T248x8066T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T248x8133T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T248x8045T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T248x8130T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T248x8047T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T248x8013T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T248x8012T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T248x8068T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T248x8175T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T248x8179T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T248x8159T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T248x8006T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T248x8127T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T248x8083T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T248x8178T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T248x8157T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T248x8167T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T248x8187T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T248x8014T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T248x8170T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T248x8168T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T248x8142T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T248x8119T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T248x8015T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T248x8010T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T248x7979T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T248x8188T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T248x8158T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T248x8124T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T248x8046T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T248x8049T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T248x8122T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T248x8163T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T248x8152T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T248x8041T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T248x8084T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T248x8020T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T249x10436(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T249x10435(GE_context* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T249x10507T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T249x10509T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T249x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T252x6135T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T252x6134T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T252x6129T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T252x6128T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T252x6118T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T252x6126T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T252x6127T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if_until */
extern void T252x6120T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T252x6117T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T252x6116T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T256x6774(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T256x6773(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T256x6793T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T256x6794T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T258x14815T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T258x14812(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T258x22565T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T258x22563T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.process */
extern void T284x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T284x22060(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T284x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T288x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_other_seeds */
extern void T288x8479T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T288x8478T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T288x8470T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T288x8475T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T288x8481T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T288x8480T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T288x8486(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T288x8485(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T288x8476T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T288x8477T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T288x8472T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T288x10061(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T288x10060(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T315x9782T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T318x18176T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T318x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T324x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T324x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T344x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T345x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T345x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T345x18186(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T347x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T347x18186(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T366x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T366x10521T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T366x10520T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T396x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T396x22060(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.process */
extern void T419x6895T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T419x6880T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T419x6879T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T419x6884T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T419x6874T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T419x6882T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T419x6881T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T447x5915T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T447x5923T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T450x7006T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T450x6140T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T450x7012T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T450x6149(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.parse_all */
extern void T450x6147(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T450x6145(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T522x22048(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T566x31194(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T566x31193T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T566x31199T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T566x31190(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T566x14014(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T566x31192T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_across_components */
extern void T724x19269T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T724x19268T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T724x18176T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T826x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T828x22565T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T828x22563T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T835x20750T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T856x9778(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T856x16645(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T856x16644(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T919x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T919x10553T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T919x10554T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T927x18189T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T927x10322T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T927x10323T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T927x10321T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T979x22054(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T991x22075(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T994x22075(GE_context* ac, T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T1112x14869T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T1112x18240(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1119x10436(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T1119x10435(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T1119x10507T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1414x20750T0(GE_context* ac, T0* C, T0* a1);
/* Call to DS_ARRAYED_LIST [ET_CLUSTER].remove */
extern void T1420x11000T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_OPERATOR.reset */
extern void T1431x9778(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1797x19375T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1802x22114T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable LX_TRANSITION [LX_NFA_STATE].record */
extern void T1839x38005T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new19(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new20(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new23(T1 initialize);
/* New instance of type HASH_TABLE [INTEGER_32, INTEGER_32] */
extern T0* GE_new24(T1 initialize);
/* New instance of type CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]] */
extern T0* GE_new25(T1 initialize);
/* New instance of type CELL [detachable EXCEPTION] */
extern T0* GE_new26(T1 initialize);
/* New instance of type CELL [NO_MORE_MEMORY] */
extern T0* GE_new27(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN] */
extern T0* GE_new28(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new30(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new31(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new32(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new33(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new34(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new35(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new37(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new38(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new39(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new40(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new42(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new47(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new51(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new53(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new54(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new55(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new56(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new58(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new59(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new64(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new65(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new66(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new68(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new72(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new75(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new76(T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new77(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new78(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new79(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new82(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new83(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new85(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new87(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new88(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new89(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new91(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new93(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new95(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new96(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new97(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new100(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new101(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new105(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new106(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new107(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new108(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new110(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new112(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new113(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new114(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new115(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new117(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new118(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new120(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new121(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new122(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new123(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new125(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new127(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new129(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new130(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new131(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new132(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new133(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new134(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new135(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new137(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new138(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new139(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new140(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new141(T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new142(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new143(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new144(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new145(T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new148(T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new151(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new152(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new153(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new154(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new155(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new157(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new158(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new159(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new160(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new161(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new162(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new163(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new164(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new167(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new168(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new170(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new171(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new172(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new173(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new174(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new175(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new177(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new178(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new179(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new181(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new183(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new186(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new187(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new189(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new191(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new192(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new193(T1 initialize);
/* New instance of type ET_ECF_LIBRARY_PARSER */
extern T0* GE_new194(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new196(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new197(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new199(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new200(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new201(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new202(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new203(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new204(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new205(T1 initialize);
/* New instance of type DS_HASH_SET [ET_IDENTIFIER] */
extern T0* GE_new206(T1 initialize);
/* New instance of type SPECIAL [detachable ANY] */
extern T0* GE_new209(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new210(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new211(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new212(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new213(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new214(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new215(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new216(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_SYSTEM] */
extern T0* GE_new217(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new218(T6 a1, T1 initialize);
/* New instance of type SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new219(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM] */
extern T0* GE_new220(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new221(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new222(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new223(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new224(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new225(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new226(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new227(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new228(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new229(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new230(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new231(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new232(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
extern T0* GE_new233(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLASS] */
extern T0* GE_new234(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]] */
extern T0* GE_new235(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new236(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new237(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new238(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new239(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new240(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new241(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new242(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new247(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new251(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new259(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new260(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new261(T1 initialize);
/* New instance of type detachable ARRAY [ET_TYPE] */
extern T0* GE_new262(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new263(T6 a1, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new264(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new265(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new266(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new268(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new269(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new270(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new271(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new272(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new273(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new274(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new275(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new276(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new277(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TYPE] */
extern T0* GE_new278(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new279(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_TEST] */
extern T0* GE_new280(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new281(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new282(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new283(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new285(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new290(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new291(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new292(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new293(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new294(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE] */
extern T0* GE_new295(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new296(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new297(T1 initialize);
/* New instance of type DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new298(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new299(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new300(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new301(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [ET_IDENTIFIER] */
extern T0* GE_new302(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new303(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new304(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new305(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new306(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new307(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new308(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new309(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new310(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new311(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new312(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new313(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new317(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new320(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new322(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new325(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new326(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new330(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new331(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new335(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new336(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new337(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new338(T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new342(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new349(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new350(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE] */
extern T0* GE_new351(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new352(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new353(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new354(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new355(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new356(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new359(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new361(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new363(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new364(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new365(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new367(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new368(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new370(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new371(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new372(T1 initialize);
/* New instance of type DS_CELL [INTEGER_32] */
extern T0* GE_new373(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new374(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new375(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new376(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new378(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new379(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new380(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new381(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new382(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new383(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new385(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new386(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new387(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new388(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new389(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new390(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new391(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new392(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new393(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new395(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new397(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new399(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new400(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new401(T1 initialize);
/* New instance of type PATH */
extern T0* GE_new402(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new404(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new405(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new407(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new408(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new409(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new410(T1 initialize);
/* New instance of type ET_XACE_OPTION_NAMES */
extern T0* GE_new412(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new414(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new415(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new416(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new417(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new418(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE] */
extern T0* GE_new420(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new422(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new423(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new425(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new426(T1 initialize);
/* New instance of type ET_XACE_BOOLEAN_EXPECTED_ERROR */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new428(T1 initialize);
/* New instance of type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
extern T0* GE_new429(T1 initialize);
/* New instance of type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
extern T0* GE_new430(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new431(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new433(T1 initialize);
/* New instance of type [attached] TUPLE [ET_UNIVERSE] */
extern T0* GE_new434(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new435(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new436(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new437(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new438(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new439(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new440(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new441(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new442(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new443(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new444(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new445(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new446(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new448(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new449(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new450(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new451(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new452(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new453(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new454(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new455(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new456(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new457(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new458(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new460(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY] */
extern T0* GE_new461(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]] */
extern T0* GE_new462(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new463(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new464(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new466(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new467(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new468(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new469(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new470(T1 initialize);
/* New instance of type DS_HASH_SET [ET_UNIVERSE] */
extern T0* GE_new471(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new472(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_CLASS]] */
extern T0* GE_new473(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS] */
extern T0* GE_new475(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER] */
extern T0* GE_new477(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]] */
extern T0* GE_new478(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new479(T1 initialize);
/* New instance of type DS_HASH_SET [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new480(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new481(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new482(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new483(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new484(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new485(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new486(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new487(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new488(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new489(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new490(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new491(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new492(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new493(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new494(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new495(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new496(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new499(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new500(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new501(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_UNIVERSE]] */
extern T0* GE_new502(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN]] */
extern T0* GE_new503(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], FUNCTION [[attached] TUPLE [ET_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new504(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]]] */
extern T0* GE_new505(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new506(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]]] */
extern T0* GE_new509(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new513(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new516(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new517(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new518(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new519(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new520(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new521(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new523(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new524(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new527(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new528(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new529(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new530(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new531(T1 initialize);
/* New instance of type CELL [INTEGER_32] */
extern T0* GE_new533(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new534(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new536(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new538(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new539(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new541(T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new543(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new544(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new545(T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new546(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new547(T1 initialize);
/* New instance of type detachable DS_LINKABLE [STRING_8] */
extern T0* GE_new548(T1 initialize);
/* New instance of type detachable DS_LINKABLE [BOOLEAN] */
extern T0* GE_new549(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new550(T1 initialize);
/* New instance of type detachable DS_LINKABLE [INTEGER_32] */
extern T0* GE_new551(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new552(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new553(T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new554(T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new555(T6 a1, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new556(T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new557(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new563(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new564(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new565(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new566(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new567(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new569(T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new570(T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new571(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new573(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new575(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new576(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new577(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new578(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new579(T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new580(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new581(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new582(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new583(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new584(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new585(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new586(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new587(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new588(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new589(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new590(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new591(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new592(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new593(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new594(T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new595(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new596(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new597(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new598(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new599(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new600(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new603(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new604(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new606(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new607(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [INTEGER_32] */
extern T0* GE_new608(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8] */
extern T0* GE_new609(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_LIBRARY] */
extern T0* GE_new610(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY] */
extern T0* GE_new613(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new614(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8] */
extern T0* GE_new617(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new618(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_TARGET] */
extern T0* GE_new619(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new620(T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new621(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new622(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new623(T1 initialize);
/* New instance of type HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32] */
extern T0* GE_new624(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new626(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new627(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new629(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME] */
extern T0* GE_new632(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MASTER_CLASS] */
extern T0* GE_new633(T1 initialize);
/* New instance of type SPECIAL [ET_MASTER_CLASS] */
extern T0* GE_new634(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new635(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new636(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new637(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new638(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new639(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new642(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new643(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new647(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new648(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new650(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new652(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new653(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new654(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new655(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new657(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new658(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new659(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new661(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new662(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new663(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new664(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new665(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_TEST] */
extern T0* GE_new667(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_TEST] */
extern T0* GE_new668(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST] */
extern T0* GE_new669(T1 initialize);
/* New instance of type SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new670(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new671(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new672(T1 initialize);
/* New instance of type SPECIAL [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new673(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new674(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION] */
extern T0* GE_new675(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new676(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new677(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new678(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new679(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new681(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new683(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new684(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new685(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new686(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new687(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE] */
extern T0* GE_new688(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new690(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new691(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new692(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new693(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new695(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT] */
extern T0* GE_new696(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new697(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new699(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new700(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new702(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new703(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new704(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new705(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new709(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new710(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new711(T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new713(T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new714(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new716(T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new717(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new720(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new723(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new725(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new726(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new727(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new728(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new729(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new730(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new731(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new732(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new733(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new734(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new735(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new736(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new737(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]] */
extern T0* GE_new738(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new739(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new740(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new741(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new742(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST] */
extern T0* GE_new743(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new746(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new747(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new748(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new749(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT] */
extern T0* GE_new750(T1 initialize);
/* New instance of type SPECIAL [ET_ACROSS_COMPONENT] */
extern T0* GE_new753(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT] */
extern T0* GE_new754(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ACROSS_COMPONENT] */
extern T0* GE_new755(T1 initialize);
/* New instance of type SPECIAL [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new757(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new758(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE] */
extern T0* GE_new759(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE] */
extern T0* GE_new760(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTIONS] */
extern T0* GE_new761(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTIONS] */
extern T0* GE_new763(T1 initialize);
/* New instance of type DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new764(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new765(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new767(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new768(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new769(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new770(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new771(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new772(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new773(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new774(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new775(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new776(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
extern T0* GE_new777(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new778(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new781(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new782(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ANY] */
extern T0* GE_new783(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new784(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ANY], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new785(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]] */
extern T0* GE_new786(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE] */
extern T0* GE_new787(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new789(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_CLASS] */
extern T0* GE_new790(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new791(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new792(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN]] */
extern T0* GE_new793(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]], FUNCTION [[attached] TUPLE [ET_MASTER_CLASS], BOOLEAN], detachable FUNCTION [[attached] TUPLE, BOOLEAN]] */
extern T0* GE_new794(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new795(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new796(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new797(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new798(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new799(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new800(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new801(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new802(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new803(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new804(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new805(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new806(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new808(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new809(T1 initialize);
/* New instance of type ET_ECF_CONDITIONS */
extern T0* GE_new810(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new811(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new812(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new814(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new815(T1 initialize);
/* New instance of type ET_ECF_MULTITHREADED_CONDITION */
extern T0* GE_new816(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new817(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new818(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new819(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new820(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new822(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new823(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new824(T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new825(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new829(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new830(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new831(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new833(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_DOCUMENT_NODE] */
extern T0* GE_new834(T1 initialize);
/* New instance of type XM_LINKED_LIST [XM_ELEMENT_NODE] */
extern T0* GE_new836(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new840(T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new841(T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new842(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new843(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new844(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new845(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new849(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new852(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new853(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new854(T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new855(T6 a1, T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new856(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new857(T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new858(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new859(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new863(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new864(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new866(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new867(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new868(T1 initialize);
/* New instance of type ARRAY [IMMUTABLE_STRING_32] */
extern T0* GE_new869(T1 initialize);
/* New instance of type SPECIAL [IMMUTABLE_STRING_32] */
extern T0* GE_new870(T6 a1, T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new871(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
extern T0* GE_new872(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTER] */
extern T0* GE_new873(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new874(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new875(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new876(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new878(T1 initialize);
/* New instance of type detachable DS_HASH_SET [ET_NAMED_CLASS] */
extern T0* GE_new880(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new881(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new882(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new883(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new885(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new886(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new887(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new889(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new890(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new891(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new892(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new893(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new894(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new895(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new896(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new897(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new898(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new899(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new900(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new901(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new902(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new903(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new904(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new905(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new906(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new907(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new908(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new909(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new910(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSITION] */
extern T0* GE_new911(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new912(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new914(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new915(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BREAK] */
extern T0* GE_new917(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new918(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new920(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new921(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new922(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new923(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new924(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new925(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new926(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new928(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new929(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new930(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new931(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new932(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new933(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new934(T1 initialize);
/* New instance of type SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new937(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RESULT] */
extern T0* GE_new938(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new939(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new940(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new941(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new942(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new943(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new944(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new945(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new946(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VOID] */
extern T0* GE_new947(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new948(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new949(T1 initialize);
/* New instance of type SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new950(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new951(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new952(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new953(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new954(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new955(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new956(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new957(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new958(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new959(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new960(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new961(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new962(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new963(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new964(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new965(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new966(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new967(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new968(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new970(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new971(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new972(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new973(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new974(T1 initialize);
/* New instance of type SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new975(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new976(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new977(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new978(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new980(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new981(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new982(T1 initialize);
/* New instance of type SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new983(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new984(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new985(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new986(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new987(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new988(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new989(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new990(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new992(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new993(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new995(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new996(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new998(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new999(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new1000(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new1001(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new1002(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLASS] */
extern T0* GE_new1003(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1004(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new1005(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new1006(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new1007(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new1010(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new1011(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new1013(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1016(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1017(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new1018(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1019(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1020(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new1021(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1022(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1023(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1025(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1026(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new1028(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1029(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1031(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1032(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new1033(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1034(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1035(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new1036(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new1037(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new1038(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new1039(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new1040(T1 initialize);
/* New instance of type SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new1041(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1042(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new1043(T1 initialize);
/* New instance of type SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1044(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new1045(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new1046(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new1047(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1048(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new1049(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new1050(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new1051(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new1053(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new1054(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new1055(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1056(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1057(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new1060(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new1062(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new1063(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1064(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new1065(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1066(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1067(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new1068(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new1069(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new1070(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new1071(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1072(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1074(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new1076(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1077(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1079(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1080(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1081(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1082(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new1083(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new1084(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1085(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1087(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1088(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1089(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1090(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new1091(T1 initialize);
/* New instance of type SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new1092(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new1095(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1096(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new1098(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new1099(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new1101(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1102(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1104(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1105(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new1107(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new1109(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1110(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new1111(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new1113(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new1115(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1116(T1 initialize);
/* New instance of type SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1117(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new1118(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new1120(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1121(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new1122(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new1123(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1126(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1127(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1128(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new1130(T1 initialize);
/* New instance of type SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new1131(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new1133(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new1134(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1137(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new1139(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1140(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1141(T1 initialize);
/* New instance of type SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new1142(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new1143(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new1145(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new1147(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1148(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT] */
extern T0* GE_new1150(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1151(T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new1152(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new1153(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new1155(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new1156(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new1157(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1158(T1 initialize);
/* New instance of type SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new1159(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new1161(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1162(T1 initialize);
/* New instance of type SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1164(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1165(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1167(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1168(T1 initialize);
/* New instance of type SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1169(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1171(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1172(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1173(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1174(T1 initialize);
/* New instance of type SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1175(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1176(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1178(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1179(T1 initialize);
/* New instance of type SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1181(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1182(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1183(T1 initialize);
/* New instance of type SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1184(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1185(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1186(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1187(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1188(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1189(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1190(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1191(T1 initialize);
/* New instance of type SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1192(T6 a1, T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1195(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1196(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1197(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1198(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1199(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new1200(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1201(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1202(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1203(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1204(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1205(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1206(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1208(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1209(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1210(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1211(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1215(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1216(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1217(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1219(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1220(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1222(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1224(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1225(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1228(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1229(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1231(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new1233(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new1235(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1236(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1237(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1240(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1242(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1243(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1244(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1245(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new1246(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1247(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1248(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new1249(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1250(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1251(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1252(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1253(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1255(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1256(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1257(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1258(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1259(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1260(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1261(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1262(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1263(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1264(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1265(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1266(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1267(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1268(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1269(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1270(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1271(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1272(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1273(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1274(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1275(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1276(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1278(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1279(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1280(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1281(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1282(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1283(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1284(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1285(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1287(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1288(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1290(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1291(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1292(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1293(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1294(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1295(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1296(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1297(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1298(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1299(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1300(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1301(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1302(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new1303(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1304(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1305(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1306(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1308(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1309(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1310(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1311(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1312(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1314(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1316(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_MASTER_CLASS] */
extern T0* GE_new1318(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_UNIVERSE] */
extern T0* GE_new1319(T1 initialize);
/* New instance of type SPECIAL [ET_UNIVERSE] */
extern T0* GE_new1320(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1322(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1323(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1325(T1 initialize);
/* New instance of type SPECIAL [ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1326(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1327(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1328(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1329(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1330(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_NAMED_CLASS] */
extern T0* GE_new1331(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1332(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1333(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1334(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1336(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1337(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1339(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1340(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1341(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1342(T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1343(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1344(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1345(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1346(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1347(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1348(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1351(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1352(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1353(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1354(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1355(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1356(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1357(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1358(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [STRING_8] */
extern T0* GE_new1359(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_TARGET] */
extern T0* GE_new1360(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_TARGET] */
extern T0* GE_new1361(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET] */
extern T0* GE_new1362(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1363(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1364(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1365(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1366(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1367(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1368(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1369(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1370(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1371(T1 initialize);
/* New instance of type SPECIAL [NATIVE_STRING] */
extern T0* GE_new1372(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new1373(T1 initialize);
/* New instance of type SPECIAL [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1374(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1375(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1376(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1378(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new1379(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT] */
extern T0* GE_new1381(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [NATURAL_8] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME] */
extern T0* GE_new1385(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1386(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1389(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE] */
extern T0* GE_new1393(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1394(T1 initialize);
/* New instance of type KL_AGENT_ROUTINES [ET_UNIVERSE] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]] */
extern T0* GE_new1396(T1 initialize);
/* New instance of type [attached] TUPLE [DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE]] */
extern T0* GE_new1397(T1 initialize);
/* New instance of type [attached] TUPLE [KL_AGENT_ROUTINES [ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]]] */
extern T0* GE_new1398(T1 initialize);
/* New instance of type KL_AGENT_HASH_FUNCTION [STRING_8] */
extern T0* GE_new1401(T1 initialize);
/* New instance of type [attached] TUPLE [STRING_8] */
extern T0* GE_new1402(T1 initialize);
/* New instance of type [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32] */
extern T0* GE_new1403(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new1404(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1405(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE] */
extern T0* GE_new1408(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1409(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1410(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1411(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1417(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1418(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1419(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new1420(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1421(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1422(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1423(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PARSER, DS_ARRAYED_LIST [STRING_8]] */
extern T0* GE_new1425(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1432(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1433(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1436(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1437(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1438(T6 a1, T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1439(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1440(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CLUSTER] */
extern T0* GE_new1441(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1442(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1443(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1444(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_FILE_RULE] */
extern T0* GE_new1445(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1446(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1448(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ECF_CONDITION] */
extern T0* GE_new1449(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_DOCUMENT_NODE] */
extern T0* GE_new1450(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1455(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1456(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1457(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1458(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1459(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1460(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_WILDCARD, STRING_8] */
extern T0* GE_new1461(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1463(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1464(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1465(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
extern T0* GE_new1466(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
extern T0* GE_new1467(T1 initialize);
/* New instance of type SPECIAL [ET_NAMED_CLASS] */
extern T0* GE_new1468(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NAMED_CLASS] */
extern T0* GE_new1470(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1472(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1473(T1 initialize);
/* New instance of type SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1474(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1475(T1 initialize);
/* New instance of type SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1476(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1477(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1478(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1479(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1480(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1481(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1482(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1483(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new1486(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new1487(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1488(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1489(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1492(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1495(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1496(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1497(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1499(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1500(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1501(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1502(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1503(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CALL_NAME] */
extern T0* GE_new1505(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1507(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1508(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1509(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1512(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1514(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1515(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1516(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1518(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1520(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE] */
extern T0* GE_new1521(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1523(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1524(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32] */
extern T0* GE_new1525(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1529(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS] */
extern T0* GE_new1530(T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1532(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1533(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1534(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1535(T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1537(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1538(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1539(T1 initialize);
/* New instance of type attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1540(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new1541(T1 initialize);
/* New instance of type [attached] TUPLE [DS_ARRAYED_LIST [ET_CLASS]] */
extern T0* GE_new1542(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [ET_CLASS]]] */
extern T0* GE_new1543(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1544(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1545(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1546(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1547(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1548(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1554(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1555(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1556(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1558(T1 initialize);
/* New instance of type detachable DS_LINKABLE [XM_ELEMENT_NODE] */
extern T0* GE_new1560(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1563(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1568(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1569(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new1570(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1571(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1572(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1573(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1574(T1 initialize);
/* New instance of type detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1576(T1 initialize);
/* New instance of type [attached] TUPLE [LX_WILDCARD] */
extern T0* GE_new1577(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]] */
extern T0* GE_new1578(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new1579(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [STRING_8]] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new1582(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1586(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE] */
extern T0* GE_new1596(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1599(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1600(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1601(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1602(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CLUSTER] */
extern T0* GE_new1603(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER] */
extern T0* GE_new1604(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER] */
extern T0* GE_new1605(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1606(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1607(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1608(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1609(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1610(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1611(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1612(T1 initialize);
/* New instance of type SPECIAL [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1613(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1614(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE] */
extern T0* GE_new1615(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_FILE_RULE] */
extern T0* GE_new1616(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE] */
extern T0* GE_new1617(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1618(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1619(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1621(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1622(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1623(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1624(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1625(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1626(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ECF_CONDITION] */
extern T0* GE_new1627(T1 initialize);
/* New instance of type SPECIAL [ET_ECF_CONDITION] */
extern T0* GE_new1628(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION] */
extern T0* GE_new1629(T1 initialize);
/* New instance of type detachable DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1630(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new1631(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new1632(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new1633(T1 initialize);
/* New instance of type SPECIAL [LX_WILDCARD] */
extern T0* GE_new1635(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_WILDCARD] */
extern T0* GE_new1638(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8] */
extern T0* GE_new1639(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1640(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1641(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1642(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME] */
extern T0* GE_new1643(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1644(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CALL_NAME] */
extern T0* GE_new1649(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1650(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_NAME] */
extern T0* GE_new1651(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CALL_NAME] */
extern T0* GE_new1652(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME] */
extern T0* GE_new1653(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME] */
extern T0* GE_new1656(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1657(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1658(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1660(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1661(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1662(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1663(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1664(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1665(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1666(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1667(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1668(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1669(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1672(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1673(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1674(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1675(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1676(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8] */
extern T0* GE_new1678(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1679(T1 initialize);
/* New instance of type DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1680(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]] */
extern T0* GE_new1681(T6 a1, T1 initialize);
/* New instance of type detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1682(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1683(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1684(T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new1685(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1690(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new1693(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1694(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1695(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1696(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1700(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1701(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1705(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1708(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1712(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1718(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1721(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1724(T1 initialize);
/* New instance of type [attached] TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8] */
extern T0* GE_new1727(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_FEATURE] */
extern T0* GE_new1730(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE] */
extern T0* GE_new1731(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE] */
extern T0* GE_new1732(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_RULE] */
extern T0* GE_new1733(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new1734(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new1735(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new1736(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1737(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS] */
extern T0* GE_new1738(T1 initialize);
/* New instance of type SPECIAL [LX_SYMBOL_CLASS] */
extern T0* GE_new1739(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA] */
extern T0* GE_new1740(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new1741(T1 initialize);
/* New instance of type SPECIAL [LX_NFA] */
extern T0* GE_new1742(T6 a1, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new1743(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new1744(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8] */
extern T0* GE_new1745(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new1746(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new1747(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new1748(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new1749(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new1750(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new1751(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new1752(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new1753(T1 initialize);
/* New instance of type ARRAY [LX_RULE] */
extern T0* GE_new1754(T1 initialize);
/* New instance of type SPECIAL [LX_RULE] */
extern T0* GE_new1755(T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new1756(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA_STATE] */
extern T0* GE_new1757(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_DFA_STATE] */
extern T0* GE_new1758(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new1759(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [LX_RULE] */
extern T0* GE_new1760(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new1761(T1 initialize);
/* New instance of type LX_TRANSITION_TABLE [LX_DFA_STATE] */
extern T0* GE_new1762(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [LX_NFA] */
extern T0* GE_new1763(T1 initialize);
/* New instance of type DS_HASH_TABLE [LX_NFA, INTEGER_32] */
extern T0* GE_new1764(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new1765(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1767(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE] */
extern T0* GE_new1769(T1 initialize);
/* New instance of type SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new1770(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]] */
extern T0* GE_new1773(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME] */
extern T0* GE_new1774(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new1775(T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1776(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1778(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new1781(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1796(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ASSERTIONS] */
extern T0* GE_new1803(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]] */
extern T0* GE_new1804(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1806(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1807(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_CLUSTER] */
extern T0* GE_new1814(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]] */
extern T0* GE_new1815(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1816(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULE] */
extern T0* GE_new1817(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new1819(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]] */
extern T0* GE_new1820(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new1821(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new1825(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_RULE] */
extern T0* GE_new1830(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_RULE] */
extern T0* GE_new1831(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [STRING_8] */
extern T0* GE_new1832(T1 initialize);
/* New instance of type SPECIAL [LX_START_CONDITION] */
extern T0* GE_new1833(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_START_CONDITION] */
extern T0* GE_new1834(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION] */
extern T0* GE_new1835(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1838(T1 initialize);
/* New instance of type LX_EPSILON_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1840(T1 initialize);
/* New instance of type LX_SYMBOL_TRANSITION [LX_NFA_STATE] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type ARRAY [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1843(T1 initialize);
/* New instance of type DS_BILINKABLE [INTEGER_32] */
extern T0* GE_new1844(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKABLE [INTEGER_32]] */
extern T0* GE_new1845(T6 a1, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new1847(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_NFA_STATE] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type DS_BUBBLE_SORTER [LX_RULE] */
extern T0* GE_new1850(T1 initialize);
/* New instance of type SPECIAL [LX_NFA_STATE] */
extern T0* GE_new1852(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_NFA_STATE] */
extern T0* GE_new1854(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type SPECIAL [LX_DFA_STATE] */
extern T0* GE_new1857(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [LX_DFA_STATE] */
extern T0* GE_new1858(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE] */
extern T0* GE_new1859(T1 initialize);
/* New instance of type KL_ARRAY [LX_RULE] */
extern T0* GE_new1860(T1 initialize);
/* New instance of type ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new1861(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new1862(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [LX_NFA] */
extern T0* GE_new1863(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32] */
extern T0* GE_new1865(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1870(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1871(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1872(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1873(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1874(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new1879(T1 initialize);
/* New instance of type detachable DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new1882(T1 initialize);
/* New instance of type DS_SHELL_SORTER [INTEGER_32] */
extern T0* GE_new1884(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_RULE] */
extern T0* GE_new1885(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [LX_NFA_STATE] */
extern T0* GE_new1888(T1 initialize);
/* New instance of type SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1891(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1892(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1893(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1894(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1895(T1 initialize);
/* New instance of type KL_ARRAY [STRING_8] */
extern T0* GE_new1896(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1898(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1899(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1900(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1901(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1902(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1903(T1 initialize);
/* New instance of type [attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1904(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new1905(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new1908(T1 initialize);
/* GEC.execute */
extern T0* T23c40(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T23f46(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T33f9(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T33f11(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T132f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T132f9(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T132f7(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T863f21(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T863f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDERR_FILE.console */
extern unsigned char ge266os20441;
extern T0* ge266ov20441;
extern T0* T132f2(GE_context* ac, T0* C);
/* STD_FILES.error */
extern unsigned char ge1508os179;
extern T0* ge1508ov179;
extern T0* T359f4(GE_context* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T863c23(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T863f25(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T863f12(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T863f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c50(GE_context* ac);
/* STRING_8.make */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c45(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c12(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f14(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f16(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f14(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c15(GE_context* ac, T6 a1);
/* CONSOLE.default_pointer */
extern T14 T863f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T863f28(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T130f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T534f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T534f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T129f15(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f13(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f5(GE_context* ac, T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T534f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T534c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T129c16(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T129f13(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T532f14(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* CELL [INTEGER_32].put */
extern void T533f2(GE_context* ac, T0* C, T6 a1);
/* CELL [INTEGER_32].put */
extern T0* T533c2(GE_context* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f4(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T532f10(GE_context* ac, T532* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1433f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1433f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1433f19ot1(T0* a1, T0** a2);
extern T1 T1433f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f17(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1433f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1433f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1436f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f11(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern unsigned char ge1549os31112;
extern T0* ge1549ov31112;
extern T0* T1433f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1436c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f12(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f22(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f15(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f17(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f9(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(GE_context* ac, T4* C);
/* SPECIAL [NATURAL_64].extend */
extern void T1602f5(GE_context* ac, T0* C, T11 a1);
/* SPECIAL [NATURAL_64].make_empty */
extern T0* T1602c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f41(GE_context* ac, T0* C, T2 a1);
/* STRING_8.area_lower */
extern T6 T17f17(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f26(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f12(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f27(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f10(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge1446os330;
extern T0* ge1446ov330;
extern T0* T2f13(GE_context* ac, T2* C);
/* SPECIAL [NATURAL_8].fill_with */
extern void T539f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* SPECIAL [NATURAL_8].extend */
extern void T539f7(GE_context* ac, T0* C, T8 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern void T539f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [NATURAL_8].make_empty */
extern T0* T539c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1433f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern unsigned char ge1519os31088;
extern T0* ge1519ov31088;
extern T0* T532f11(GE_context* ac, T532* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1433f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1433f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1433c17(GE_context* ac);
/* STRING_8.make_from_string */
extern T0* T17c66(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f18(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f19(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T532f9(GE_context* ac, T532* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1433f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f12(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T532f6(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f30(GE_context* ac, T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T130f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T130f9(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T534f4(GE_context* ac, T0* C);
/* C_STRING.make */
extern T0* T534c9(GE_context* ac, T0* a1);
/* C_STRING.make_empty */
extern void T534f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T534c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T532f13(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T129f14(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f10(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f9(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T532f7(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.resize */
extern void T129f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T833f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T118f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T20f17(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T118f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T20f12(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T20f16(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern void T26f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable EXCEPTION].put */
extern T0* T26c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern unsigned char ge1733os2762;
extern T0* ge1733ov2762;
extern T0* T20f5(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T20f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T20f11(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T118f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T20f13(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].has */
extern T1 T24f34(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].same_keys */
extern T1 T24f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].hash_code_of */
extern T6 T24f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern unsigned char ge1733os2758;
extern T0* ge1733ov2758;
extern T0* T20f1(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].make */
extern T0* T24c35(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_filled */
extern T0* T124c9(GE_context* ac, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T124f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].extend */
extern void T124f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_filled */
extern T0* T125c6(GE_context* ac, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].fill_with */
extern void T125f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].extend */
extern void T125f11(GE_context* ac, T0* C, T1 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern void T125f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].make_empty */
extern T0* T125c8(GE_context* ac, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern void T124f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].make_empty */
extern T0* T124c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T123f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T123f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T123c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T118f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T118c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T833c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T129f4(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f8(GE_context* ac, T14* C, T14 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f13(GE_context* ac, T6* C, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T129c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f2(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f6(GE_context* ac, T14* C, T6 a1, T6 a2);
/* PLATFORM.is_windows */
extern T1 T537s1(GE_context* ac);
/* CONSOLE.buffered_file_info */
extern unsigned char ge1456os4979;
extern T0* ge1456ov4979;
extern T0* T863f10(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T130c19(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T130f21(GE_context* ac, T0* C, T8 a1, T6 a2);
/* SPECIAL [NATURAL_8].make_filled */
extern T0* T539c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T130f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.io */
extern unsigned char ge1436os44;
extern T0* ge1436ov44;
extern T0* T132f4(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T359f8(GE_context* ac, T0* C);
/* STD_FILES.output */
extern unsigned char ge1508os178;
extern T0* ge1508ov178;
extern T0* T359f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T863c19(GE_context* ac, T0* a1);
/* STD_FILES.default_create */
extern T0* T359c6(GE_context* ac);
/* KL_STRING_ROUTINES.as_string */
extern T0* T35f6(GE_context* ac, T0* C, T0* a1);
extern T1 T35f6ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.string */
extern T0* T844f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T844f38(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T843f3(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge317os20575;
extern T0* ge317ov20575;
extern T0* T844f31(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T843c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T231f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge217os8519;
extern T0* ge217ov8519;
extern T0* T844f44(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T231c5(GE_context* ac);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge298os22509;
extern T6 ge298ov22509;
extern T6 T230f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge305os4715;
extern T0* ge305ov4715;
extern T0* T844f37(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T230c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T844f35(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T843f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T843f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f47(GE_context* ac, T0* C, T2 a1);
/* STRING_8.reset_hash_codes */
extern void T17f49(GE_context* ac, T0* C);
/* STRING_8.resize */
extern void T17f48(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f6(GE_context* ac, T0* C);
/* STRING_8.capacity */
extern T6 T17f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T844f33(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T844f49(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T844f82(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T844f91(GE_context* ac, T0* C);
/* STRING_8.string */
extern T0* T17f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T844f21(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T844f43(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T135f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge212os4714;
extern T0* ge212ov4714;
extern T0* T35f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T135c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge219os2864;
extern T0* ge219ov2864;
extern T0* T132f1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T35c19(GE_context* ac);
/* UT_ERROR_HANDLER.message */
extern T0* T33f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T87c8(GE_context* ac, T0* a1);
/* ARRAY [STRING_8].put */
extern void T142f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make_filled */
extern T0* T142c11(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [STRING_8].make_filled_area */
extern void T142f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].make_filled */
extern T0* T143c7(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [STRING_8].fill_with */
extern void T143f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].extend */
extern void T143f10(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [STRING_8].make_empty */
extern void T143f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].make_empty */
extern T0* T143c8(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T23f45(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T76f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge304os2859;
extern T0* ge304ov2859;
extern T0* T76f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T85c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T76f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T76f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T370f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T370c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T370f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T370f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T370f5(GE_context* ac, T0* C);
/* NATIVE_STRING.upper_cell */
extern unsigned char ge1553os18285;
extern T0* ge1553ov18285;
extern T0* T370f7(GE_context* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T370f11(GE_context* ac, T0* C, T6 a1);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge1696os13635;
extern T0* ge1696ov13635;
extern T0* T76f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c14(GE_context* ac);
/* STRING_32.make */
extern void T18f15(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c15(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T76f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T370f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T532f2(GE_context* ac, T532* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T532f18(GE_context* ac, T532* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T532f23(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T532f24(GE_context* ac, T532* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f7(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f64(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f28(GE_context* ac, T6* C);
/* NATURAL_16.to_integer_32 */
extern T6 T9f11(GE_context* ac, T9* C);
/* STRING_8.fill_blank */
extern void T17f78(GE_context* ac, T0* C);
/* STRING_8.fill_character */
extern void T17f69(GE_context* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f16(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f16p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.reset_hash_codes */
extern void T18f22(GE_context* ac, T0* C);
/* STRING_32.set_count */
extern void T18f21(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f20(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f23(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f19(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f6(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f11(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f7(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f5(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f17(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f9(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f25(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f5(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T129f6(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1407f2(GE_context* ac, T1407* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1407f3(GE_context* ac, T1407* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f24(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T532f1(GE_context* ac, T532* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T532f17(GE_context* ac, T532* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T532f22(GE_context* ac, T532* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f13(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f4(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T129f5(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_16].memory_copy */
extern void T1406f2(GE_context* ac, T1406* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_16].c_memcpy */
extern void T1406f3(GE_context* ac, T1406* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T370c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T129c12(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T370f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f13(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T370f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T76f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T844f20(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T76c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T76f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T122f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T122f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T35f8(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T35f8ot1(T0* a1, T0** a2);
extern T1 T35f8ot2(T0* a1, T0** a2);
/* STRING_8.append_string */
extern void T17f51(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f56(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T844f36(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T35f10(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T35f10ot1(T0* a1, T0** a2);
extern T1 T35f10ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T844f30(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T844f73(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T844c73(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T844f80(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T844f97(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T844f52(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T844f52p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T844f73p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T843f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T843f22ot1(T0* a1, T0** a2);
extern T1 T843f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T843f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f18(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T844f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T844f34(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge330os20620;
extern T0* ge330ov20620;
extern T0* T843f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T134c9(GE_context* ac);
/* UC_STRING.make */
extern void T134f10(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T134f13(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T134f14(GE_context* ac, T0* C);
/* UC_STRING.set_count */
extern void T134f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T134f8(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T134f8p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T134f10p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T134f11(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T843f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T843f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T844f68(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T844f86(GE_context* ac, T0* C, T0* a1);
extern T1 T844f86ot1(T0* a1, T0** a2);
extern T1 T844f86ot2(T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge320os20565;
extern T0* ge320ov20565;
extern T0* T844f57(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T844f70(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T844f90(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T844f90ot1(T0* a1, T0** a2);
extern T1 T844f90ot2(T0* a1, T0** a2);
extern T1 T844f90ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T844f101(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T844f89(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T844f102(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T844f88(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T844f87(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T844f103(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T844f41(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T844f14(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T844f78(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T844f78p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T844f86p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T844f58(GE_context* ac, T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1454s1(GE_context* ac, T1 a1);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T844f18(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f62(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T844f81(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T844f100(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T844f93(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T844f92(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f33(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T844f42(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f61(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f21(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T844f55(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T844f69(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T844f13(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T844f40(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f11(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T35f9(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T122f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T122f13(GE_context* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T402f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_32_string_to_utf_8_string_8 */
extern T0* T532f3(GE_context* ac, T532* C, T0* a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_string_8 */
extern void T532f19(GE_context* ac, T532* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f76(GE_context* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.code */
extern T10 T19f6(GE_context* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* PATH.name */
extern T0* T402f4(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T532f5(GE_context* ac, T532* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T532f21(GE_context* ac, T532* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T19c12(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f8(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T532f4(GE_context* ac, T532* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T532f20(GE_context* ac, T532* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T201f2(GE_context* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T402c17(GE_context* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T402f20(GE_context* ac, T0* C);
/* PATH.normalize */
extern void T402f19(GE_context* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f55(GE_context* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T402f13(GE_context* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f65(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f70(GE_context* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T402f12(GE_context* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T402f15(GE_context* ac, T0* C, T6 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f23(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f24(GE_context* ac, T2* C);
/* STRING_8.keep_head */
extern void T17f59(GE_context* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T402f8(GE_context* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring */
extern T0* T534f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T534f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f12(GE_context* ac, T8* C);
/* PATH.unit_size */
extern T6 T402f5(GE_context* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T402f7(GE_context* ac, T0* C, T14 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T402f14(GE_context* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T402c16(GE_context* ac, T0* a1);
/* PATH.internal_append_into */
extern void T402f18(GE_context* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T532f16(GE_context* ac, T532* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T532f15(GE_context* ac, T532* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T201f4(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge253os2944;
extern T0* ge253ov2944;
extern T0* T122f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T201c8(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T122f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T121f26(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T121f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T121f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T121f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T121f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T121f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T121f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T121f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T121f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge262os2860;
extern T0* ge262ov2860;
extern T0* T23f36(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern unsigned char ge262os2863;
extern T0* ge262ov2863;
extern T0* T23f39(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T122c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge296os2911;
extern T1 ge296ov2911;
extern T1 T85f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T85f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge296os2915;
extern T0* ge296ov2915;
extern T0* T85f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f38(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T85f3(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f7(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T201f6(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T201f3(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge262os2861;
extern T0* ge262ov2861;
extern T0* T23f38(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T121c34(GE_context* ac);
/* UC_UTF8_STRING.plus */
extern T0* T844f12(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f10(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f57(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f57p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f60(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f16(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge296os2910;
extern T1 ge296ov2910;
extern T1 T85f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T23f35(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T23f34(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T45f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T148f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T148f6(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T133f8(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T133f7(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T133f10(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T133f11(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T863f22(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T863f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern unsigned char ge268os20433;
extern T0* ge268ov20433;
extern T0* T133f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T133f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f18(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T133f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T133f1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T75f474(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T55f71(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T55f80(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T55f79(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T55f78(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].keep_head */
extern void T143f11(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].set_count */
extern void T143f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T55f77(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T55f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T55f76(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T171f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_after */
extern void T171f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T75f478(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T75f480(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T37f186(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T37f191(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_error */
extern void T37f196(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T37f191p1(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T37f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T78f187(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T78f191(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T78f195(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T78f191p1(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T78f19(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T75f128(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T307c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T75f479(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T304f35(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T304f44(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T304f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T304f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T304f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T304f26(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T304f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T304f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T304f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T304f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T304f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T304f48(GE_context* ac, T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T122f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T30f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T30f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T130f13(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T130f14(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T30f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T30f73(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T130f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T130f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T30f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T30f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T30f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T30f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T30f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T30f74(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern unsigned char ge253os2941;
extern T0* ge253ov2941;
extern T0* T122f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T121f8(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T121f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.file_system */
extern T0* T75f109(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T75f426(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T75f425(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T55f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T55f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T55f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T55f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T55f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T55f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T844f10(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T844f10p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f22(GE_context* ac, T0* C);
/* KL_AGENT_HASH_FUNCTION [STRING_8].hash_code */
extern T6 T1401f2(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T55f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T55f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T55f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T171f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T55f88(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T55f84(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T171f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T55f83(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_before */
extern void T171f20(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T306f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T55f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T55f46(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T35f21(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T35f21ot1(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T35f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T35f5ot1(T0* a1, T0** a2);
extern T1 T35f5ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T844f16(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T306f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1189os16425;
extern T0* ge1189ov16425;
extern T0* T75f125(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T306c3(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T171f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T55f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T171f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T171f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T55f87(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T55f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].off */
extern T1 T171f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T55f30(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T304f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T304f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T304f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T304f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T304f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T304f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T304f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T304c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T304f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T304f47(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T304f52(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T304f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T304f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T75f122(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T171f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T55f82(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T171f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T55f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T171f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T55f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T171f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T171f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T55f81(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T55f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T171c12(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T55f43(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T75f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T335f34(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T335f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T335f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T335f40(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T35f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T35f14(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T844f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f8(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T35f15(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T844f25(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T844f25ot1(T0* a1, T0** a2);
extern T1 T844f25ot2(T0* a1, T0** a2);
/* STRING_8.substring_index */
extern T6 T17f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1386f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1386f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1386f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern unsigned char ge1556os798;
extern T0* ge1556ov798;
extern T0* T17f40(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1386c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T55f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T55f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [STRING_8].force */
extern void T170f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T55f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T55f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T55f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T55f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area_with_default */
extern T0* T172f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].aliased_resized_area_with_default */
extern T0* T124f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T124f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge218os12775;
extern T0* ge218ov12775;
extern T0* T55f28(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T172c6(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T55f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].aliased_resized_area */
extern T0* T170f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].aliased_resized_area */
extern T0* T143f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T55f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T55f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T55f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T55f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T55f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T122f10(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T121f10(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T844f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f18(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T844f46(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f31(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T335f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T335f15(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T130f15(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T534f5(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T534f6(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T534c14(GE_context* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T130f18(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern unsigned char ge1451os24681;
extern T0* ge1451ov24681;
extern T0* T335f24(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T335f38(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T335f22(GE_context* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T75f576(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T335f26(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T335f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T335f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T335f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T335f20(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T335f19(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T335f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T335f28(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T335f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T335f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T335f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T335c30(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T335f35(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T335f39(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T335f41(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T335f23(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T303f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T303f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T303f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T303f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T303f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T55f51(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge221os10752;
extern T0* ge221ov10752;
extern T0* T75f269(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T145c2(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T55f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T55c50(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T55f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T55f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_internal_cursor */
extern void T55f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T55f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T55f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T55f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T170f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T170c3(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T55f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T55f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T67f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T67f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge289os2906;
extern T0* ge289ov2906;
extern T0* T67f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T67f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T303f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T303f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T303f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T303f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T303f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T303f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T303f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T303f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T303f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1754os23553;
extern T6 ge1754ov23553;
extern T6 T303f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge298os22511;
extern T6 ge298ov22511;
extern T6 T230f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T303f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T303f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T709f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T303f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T709f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T303f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T303f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1760os23720;
extern T0* ge1760ov23720;
extern T0* T303f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T710c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T710f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T710f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T710f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T710c4(GE_context* ac);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make_filled */
extern T0* T597f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge218os12773;
extern T0* ge218ov12773;
extern T0* T710f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T597c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1760os23712;
extern T0* ge1760ov23712;
extern T0* T303f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T710f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T303f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T303f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T303f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T303f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T303f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T303f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T303f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T709f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T303f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T303f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T709f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T303f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T711f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T711f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T303f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T844f76(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T844f96(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T303f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T303f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge302os2857;
extern T0* ge302ov2857;
extern T0* T75f121(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T67c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T35f7(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T35f7ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T844f77(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T844f94(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T844f77p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f73(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T75f120(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T303f305(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T137f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T75f266(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T303f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T303f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T303f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T303f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T303f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T303f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T303f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T303f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T303f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T303f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T303f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T303f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T303f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T303f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T303f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T709f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T303f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T709f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T303f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1760os23721;
extern T0* ge1760ov23721;
extern T0* T303f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1754os23554;
extern T6 ge1754ov23554;
extern T6 T303f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T709f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T709f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T709f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T709f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T303f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T303f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1760os23714;
extern T0* ge1760ov23714;
extern T0* T303f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T303f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T303f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T303f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T303f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T303f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T303f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T303f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T303f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T303f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T709f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T709f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T709f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T303f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T303f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T709f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T709f26(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area_with_default */
extern T0* T597f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* SPECIAL [BOOLEAN].aliased_resized_area_with_default */
extern T0* T125f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* SPECIAL [BOOLEAN].aliased_resized_area */
extern T0* T125f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T709f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T710f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T710f7(GE_context* ac, T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T713f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1760os23723;
extern T0* ge1760ov23723;
extern T0* T303f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1760os23708;
extern T0* ge1760ov23708;
extern T0* T303f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1760os23718;
extern T0* ge1760ov23718;
extern T0* T303f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1760os23717;
extern T0* ge1760ov23717;
extern T0* T303f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1760os23716;
extern T0* ge1760ov23716;
extern T0* T303f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1760os23715;
extern T0* ge1760ov23715;
extern T0* T303f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1760os23719;
extern T0* ge1760ov23719;
extern T0* T303f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1760os23713;
extern T0* ge1760ov23713;
extern T0* T303f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1760os23709;
extern T0* ge1760ov23709;
extern T0* T303f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1760os23710;
extern T0* ge1760ov23710;
extern T0* T303f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1760os23711;
extern T0* ge1760ov23711;
extern T0* T303f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T303f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T142f5(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T142f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1760os23722;
extern T0* ge1760ov23722;
extern T0* T303f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T303f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T710f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1754os23552;
extern T0* ge1754ov23552;
extern T0* T303f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T303f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T303f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T303f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T709f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T709f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T303f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T303f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T709f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T303f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T303f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T303c302(GE_context* ac);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make_filled */
extern T0* T172f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T303f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T303f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T303f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T303f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T303f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T303f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T303f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T303f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T303f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T303f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T303f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T303f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T303f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1760os23707;
extern T0* ge1760ov23707;
extern T0* T303f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T711c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T711f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T711f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T711f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T711f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T303f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T303f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T35f20(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T844f72(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern unsigned char ge1754os23551;
extern T0* ge1754ov23551;
extern T0* T303f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T709c13(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T55f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T55f89(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T55f89p1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T55f94(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T124f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T124f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].force */
extern void T124f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].move_data */
extern void T124f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T124f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T124f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T55f93(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T55f92(GE_context* ac, T0* C);
/* SPECIAL [STRING_8].resized_area */
extern T0* T143f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T143f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].force */
extern void T143f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].move_data */
extern void T143f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T143f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T143f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T55f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T55f48(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T75f119(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T523f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T523f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T523f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T523f196(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T210f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ANY].fill_with */
extern void T209f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ANY].extend */
extern void T209f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T210f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T209f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T523f195(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].force */
extern void T597f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [BOOLEAN].aliased_resized_area */
extern T0* T597f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T523f136(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T523f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1334c8(GE_context* ac, T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f46(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1332f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].force */
extern void T1533f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [YY_BUFFER].fill_with */
extern void T1532f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [YY_BUFFER].extend */
extern void T1532f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T889f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T523f162(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1332f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T523f207(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T55f95(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T55f96(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_keep_head */
extern void T55f100(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_keep_head */
extern void T55f99(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T55f98(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T55f97(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T523f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T523f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T523f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T523f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T523f206(GE_context* ac, T0* C, T0* a1);
extern T1 T523f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1333c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T523f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T523f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T523f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T523f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T204f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T205f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T523f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T523f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T852f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T523f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T523f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T523f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T523f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T523f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T523f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T523f128(GE_context* ac, T0* C);
extern T1 T523f128ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1332f10(GE_context* ac, T0* C);
/* SPECIAL [YY_BUFFER].keep_head */
extern void T1532f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].set_count */
extern void T1532f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T889f10(GE_context* ac, T0* C);
/* SPECIAL [INTEGER_32].keep_head */
extern void T124f14(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [INTEGER_32].set_count */
extern void T124f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T889f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1332f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1332f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T523f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T523f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T852f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T204f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T852f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T852f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T204f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T852f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f79(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T204f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T852f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge1739os14233;
extern T6 ge1739ov14233;
extern T6 T204f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T205f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T204f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T205f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T523f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T523f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T523f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T168c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T852f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].force */
extern void T172f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_SPECIAL_ROUTINES [INTEGER_32].aliased_resized_area */
extern T0* T172f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T523f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T523f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T523f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T523f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T523f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T523f215(GE_context* ac, T0* C);
/* SPECIAL [BOOLEAN].keep_head */
extern void T125f12(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [BOOLEAN].set_count */
extern void T125f13(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].keep_head */
extern void T209f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].set_count */
extern void T209f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T523f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T523f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T523f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T204f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T205f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T523f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T204c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T204f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T204c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T204f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T204f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T204f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T204f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T852c9(GE_context* ac, T6 a1);
/* STRING_8.make_filled */
extern T0* T17c63(GE_context* ac, T2 a1, T6 a2);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T75f255(GE_context* ac, T0* C);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T75f428(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T523f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T523c178(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T889c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T172f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1332c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1533f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [YY_BUFFER].make_empty */
extern T0* T1532c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1533c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T523f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T523f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T523f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern unsigned char ge180os30859;
extern T0* ge180ov30859;
extern T0* T523f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T523f173(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T172f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern unsigned char ge180os30858;
extern T0* ge180ov30858;
extern T0* T523f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge180os30857;
extern T0* ge180ov30857;
extern T0* T523f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern unsigned char ge180os30856;
extern T0* ge180ov30856;
extern T0* T523f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge180os30855;
extern T0* ge180ov30855;
extern T0* T523f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern unsigned char ge180os30854;
extern T0* ge180ov30854;
extern T0* T523f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge180os30853;
extern T0* ge180ov30853;
extern T0* T523f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge180os30852;
extern T0* ge180ov30852;
extern T0* T523f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern unsigned char ge180os30851;
extern T0* ge180ov30851;
extern T0* T523f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge180os30848;
extern T0* ge180ov30848;
extern T0* T523f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T523f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T523f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T518f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T517f16(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern unsigned char ge213os8594;
extern T0* ge213ov8594;
extern T0* T523f177(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T518c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T523f216(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_filled */
extern T0* T517c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].make_filled_area */
extern void T517f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T523f186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T597f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T210f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ANY].make_empty */
extern T0* T209c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T210c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T523f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T523f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T523f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T523f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T523f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge181os30914;
extern T0* ge181ov30914;
extern T0* T523f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T523f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge181os30913;
extern T0* ge181ov30913;
extern T0* T523f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge181os30910;
extern T0* ge181ov30910;
extern T0* T523f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T523f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T523f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T523f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern unsigned char ge181os30909;
extern T0* ge181ov30909;
extern T0* T523f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern unsigned char ge181os30908;
extern T0* ge181ov30908;
extern T0* T523f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge181os30905;
extern T0* ge181ov30905;
extern T0* T523f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T523f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T523f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge181os30902;
extern T0* ge181ov30902;
extern T0* T523f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T523f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T523f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern unsigned char ge1744os14029;
extern T0* ge1744ov14029;
extern T0* T523f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T205c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T205f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T852f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T205f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T122f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T121f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put_new */
extern void T55f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T35f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T35f22(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T844f75(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T844f95(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T122f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T121f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T75f477(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge1042os16077;
extern T0* ge1042ov16077;
extern T0* T75f443(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T247c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T247f31ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T72f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T72f97(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T237f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T80f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T37f179(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T37f189(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge265os2909;
extern T0* ge265ov2909;
extern T0* T131f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T132c5(GE_context* ac);
/* ET_ERROR_HANDLER.std */
extern unsigned char ge263os2858;
extern T0* ge263ov2858;
extern T0* T37f20(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T131c4(GE_context* ac);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T37f195(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T528c13(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T78f180(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T78f189(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T78f20(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T78f194(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T80f80(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T80f59(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T80f99(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T80f114(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T308f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T233f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T72f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T237f22(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T80f110(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T80f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T72f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T237f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T80f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T72f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T72f64(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T81c106(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T251f27(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].force */
extern void T650f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T647f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T647f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge888os19989;
extern T0* ge888ov19989;
extern T0* T251f12(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T650c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T251c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T251f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T650f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T647c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge824os3677;
extern T0* ge824ov3677;
extern T0* T82f240(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T350c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T350f75(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern unsigned char ge817os2899;
extern T0* ge817ov2899;
extern T0* T350f3(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T82c1502(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge824os3672;
extern T0* ge824ov3672;
extern T0* T82f239(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T648c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T648f103(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T648f71(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T251f10(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1554f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T181f76(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T264f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T268f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].force */
extern void T653f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].fill_with */
extern void T652f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].extend */
extern void T652f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge1028os15174;
extern T0* ge1028ov15174;
extern T0* T268f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T653c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1554f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T264f4(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T309f22(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T268f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T247f24(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T261f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1554f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T264f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T261f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T268c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T653f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T652c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T237f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T80f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T531c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T531f20(GE_context* ac, T0* C, T0* a1);
extern T1 T531f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T272f22(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].force */
extern void T638f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].fill_with */
extern void T637f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].extend */
extern void T637f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern unsigned char ge1025os15174;
extern T0* ge1025ov15174;
extern T0* T272f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T638c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T272f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T272f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T272f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T272f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T638f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T637f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T272f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T272f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T272f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T272f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T272f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T272c17(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T638f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].make_empty */
extern T0* T637c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T237f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T375f37(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T375f30(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T375f35(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T375f43(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T375f47(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T375f28(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T375f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T375f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T375f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map_default */
extern T0* T375c40(GE_context* ac);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern void T375f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T375f48(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T375f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T375f57(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T375f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T864c8(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T375f56(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T375f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T375f31(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T375f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T375f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T375f52(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].default_capacity */
extern T6 T375f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T80f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T237f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T237f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T237f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T375f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T375f46(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T375f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T864f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T864f11(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T375f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T864f9(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T375f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T375f26(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].key_for_iteration */
extern T0* T375f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_key */
extern T0* T375f25(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T375f20(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T375f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T864f4(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T375f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T375f45(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T375f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T864f7(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [ET_DYNAMIC_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T375f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T309f35(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T247f33(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T310f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T237f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T80f88(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T80f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T72f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T72f82(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T72f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T72f91(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T72f90(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T72f89(GE_context* ac, T0* C, T0* a1);
extern T1 T72f89ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T520f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T519f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_predicate_class */
extern T1 T83f68(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern unsigned char ge815os19905;
extern T0* ge815ov19905;
extern T0* T83f122(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T401c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T72f88(GE_context* ac, T0* C, T0* a1);
extern T1 T72f88ot1(T0* a1, T0** a2);
/* ET_CLASS.is_function_class */
extern T1 T83f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T72f87(GE_context* ac, T0* C, T0* a1);
extern T1 T72f87ot1(T0* a1, T0** a2);
/* ET_CLASS.is_procedure_class */
extern T1 T83f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T72f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T83f102(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T72f85(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T83f101(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T72f84(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T83f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T72f81(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern unsigned char ge824os3642;
extern T0* ge824ov3642;
extern T0* T82f19(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T349f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T349f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T349c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T72f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T72f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T72f83(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T83f221(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T233f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T233f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T233f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T233f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.make */
extern T0* T238c48(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T273f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T273c13(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T278c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T278f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T278f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T664c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T278f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T278f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T278f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T278f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T278f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T278f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern unsigned char ge1020os14644;
extern T0* ge1020ov14644;
extern T0* T238f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T308c13(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T703f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T700c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge988os15174;
extern T0* ge988ov15174;
extern T0* T308f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T703c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T83f132(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T72f59(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T520c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T520f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T520f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge1013os14548;
extern T0* ge1013ov14548;
extern T0* T72f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T268c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T72f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T72f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T519c52(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T519f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T519f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T72f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T83f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T72f55(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T305c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T305f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T305f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T72f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T322c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T322f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T322f30(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T83f64(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T83f131(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T247f21(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge987os14713;
extern T0* ge987ov14713;
extern T0* T247f17(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T521c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern unsigned char ge824os4307;
extern T0* ge824ov4307;
extern T0* T82f140(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T468c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T1004f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T1005c5(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern unsigned char ge513os19989;
extern T0* ge513ov19989;
extern T0* T468f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T1004c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge824os3703;
extern T0* ge824ov3703;
extern T0* T82f82(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T400c37(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T400f40(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T400f41(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T400f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T521f38(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T181c106(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T181f116(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T181c116(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T181f117(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T181f10(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f22(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f25(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T75f510(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T75f509(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T122f33(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T30f76(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T30f79(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T30f81(GE_context* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T121f36(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T75f508(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T122f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T30f75(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T30f78(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T30f80(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T30f72(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T30f82(GE_context* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T30f35(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T122f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T122f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T536f8(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T536f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T536f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge271os20059;
extern T0* ge271ov20059;
extern T0* T122f15(GE_context* ac, T0* C);
/* KL_PATHNAME.set_canonical */
extern void T536f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T536f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T536f28(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].force */
extern void T142f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].capacity */
extern T6 T142f9(GE_context* ac, T0* C);
/* ARRAY [STRING_8].set_area */
extern void T142f16(GE_context* ac, T0* C, T0* a1);
/* ARRAY [STRING_8].make_empty_area */
extern void T142f15(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].additional_space */
extern T6 T142f8(GE_context* ac, T0* C);
/* ARRAY [STRING_8].empty_area */
extern T1 T142f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T122f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T536f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T536f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T536c20(GE_context* ac);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T121f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T121f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge274os20059;
extern T0* ge274ov20059;
extern T0* T121f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T121f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T536f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T536f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T536f25(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T30f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T30f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T30f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T30f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T30f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T30f50(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T30f56(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T30f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T30f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T30f55(GE_context* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T130f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T30f54(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T30f40(GE_context* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T130f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T844f8(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f9(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern unsigned char ge252os4756;
extern T0* ge252ov4756;
extern T0* T30f39(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T30f28(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T121f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].wipe_out */
extern void T298f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T298f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T298f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T298f41(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TYPE].keep_head */
extern void T637f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].set_count */
extern void T637f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T298f40(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T700f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T700f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].unset_found_item */
extern void T298f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T298f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T702f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_after */
extern void T702f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].wipe_out */
extern void T297f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_wipe_out */
extern void T297f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T297f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T297f47(GE_context* ac, T0* C);
/* SPECIAL [ET_INLINE_CONSTANT].keep_head */
extern void T697f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].set_count */
extern void T697f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T297f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].unset_found_item */
extern void T297f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T297f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_next_cursor */
extern void T696f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_after */
extern void T696f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T296f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T296f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T296f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T296f48(GE_context* ac, T0* C);
/* SPECIAL [ET_FEATURE].keep_head */
extern void T691f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].set_count */
extern void T691f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T296f47(GE_context* ac, T0* C);
/* SPECIAL [ET_CONSTANT].keep_head */
extern void T693f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].set_count */
extern void T693f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T296f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T296f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T692f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_after */
extern void T692f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T295f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T295f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T295f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T295f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T295f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T295f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T295f39(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T688f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_after */
extern void T688f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T300f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T300f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T300f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T300f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T300f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T300f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T300f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T705f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_after */
extern void T705f9(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T77f43(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T77f61(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T77f60(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T77f59(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T77f58(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T77f44(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T77f57(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T371f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_after */
extern void T371f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T300f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T300f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T300f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T705f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T300f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T300f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T300f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T300f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T300f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T300f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T300f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T300f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T300f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T300f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].after */
extern T1 T705f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T300f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T300f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T300f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].off */
extern T1 T705f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T300f32(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T77f42(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T77f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T77f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T371f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T77f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T77f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T75f507(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T77f31(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T77f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T77f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T77f36(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T77f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T371f7(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].start */
extern void T77f41(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T77f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T77f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].off */
extern T1 T371f5(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T77f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T75f506(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T75f505(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T75f552(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T268f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T653f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].keep_head */
extern void T652f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].set_count */
extern void T652f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T75f575(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T275f13(GE_context* ac, T0* C);
/* SPECIAL [ET_EXPRESSION].keep_head */
extern void T657f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].set_count */
extern void T657f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T275f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T659f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_after */
extern void T659f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T75f610(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T75f580(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T75f588(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T75f587(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T75f570(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T75f631(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T75f625(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T75f569(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T271f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T271f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T655f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_after */
extern void T655f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last_new */
extern void T55f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T271f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T271f18(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T342f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T342f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T342f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T517f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].capacity */
extern T6 T517f7(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].set_area */
extern void T517f15(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].make_empty_area */
extern void T517f14(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T517f6(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T517f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T271f24(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T271f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T524f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].detachable_less_than */
extern T1 T524f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].attached_less_than */
extern T1 T524f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T517f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T517f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern unsigned char ge1042os16020;
extern T0* ge1042ov16020;
extern T0* T75f222(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T342c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T524c4(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T271f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T271f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T271f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T75f247(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T275f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T75f624(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T75f571(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T75f135(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T271f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T271f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T271f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T270f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].force */
extern void T212f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].fill_with */
extern void T211f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].extend */
extern void T211f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T270f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].aliased_resized_area */
extern T0* T212f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].aliased_resized_area */
extern T0* T211f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T270f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T270f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T181f113(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T270f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T233f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T75f429(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T75f623(GE_context* ac, T0* C, T0* a1);
extern T1 T75f623ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T75f550(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T75f572(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T75f546(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge824os3696;
extern T0* ge824ov3696;
extern T0* T82f20(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T285c31(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T285f33(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T285f34(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T285f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T75f263(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].remove */
extern void T206f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_position */
extern void T206f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_put */
extern void T206f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T206f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_keep_head */
extern void T206f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_keep_head */
extern void T206f71(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].keep_head */
extern void T211f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].set_count */
extern void T211f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T206f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T206f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T206f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_forth */
extern void T206f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T627f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T627f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_after */
extern void T627f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T206f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T206f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T206f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T206f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T206f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T206f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T206f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T301f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T181f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T35f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f21(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T768f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge333os31591;
extern T0* ge333ov31591;
extern T0* T768f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge333os31590;
extern T0* ge333ov31590;
extern T0* T768f5(GE_context* ac, T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make_filled */
extern T0* T1437c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [ARRAY [INTEGER_32]].fill_with */
extern void T1437f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ARRAY [INTEGER_32]].extend */
extern void T1437f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [ARRAY [INTEGER_32]].make_empty */
extern void T1437f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge333os31577;
extern T0* ge333ov31577;
extern T0* T768f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T231f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T768f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge333os31589;
extern T0* ge333ov31589;
extern T0* T768f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge333os31588;
extern T0* ge333ov31588;
extern T0* T768f22(GE_context* ac, T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_filled */
extern T0* T1438c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].fill_with */
extern void T1438f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].extend */
extern void T1438f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make_empty */
extern void T1438f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge333os31587;
extern T0* ge333ov31587;
extern T0* T768f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge333os31586;
extern T0* ge333ov31586;
extern T0* T768f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern unsigned char ge333os31585;
extern T0* ge333ov31585;
extern T0* T768f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern unsigned char ge333os31584;
extern T0* ge333ov31584;
extern T0* T768f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge333os31583;
extern T0* ge333ov31583;
extern T0* T768f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge333os31582;
extern T0* ge333ov31582;
extern T0* T768f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge333os31581;
extern T0* ge333ov31581;
extern T0* T768f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge333os31580;
extern T0* ge333ov31580;
extern T0* T768f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge333os31579;
extern T0* ge333ov31579;
extern T0* T768f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge333os31578;
extern T0* ge333ov31578;
extern T0* T768f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge333os31576;
extern T0* ge333ov31576;
extern T0* T768f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge333os31575;
extern T0* ge333ov31575;
extern T0* T768f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge333os31574;
extern T0* ge333ov31574;
extern T0* T768f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge333os31573;
extern T0* ge333ov31573;
extern T0* T768f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge333os31572;
extern T0* ge333ov31572;
extern T0* T768f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge333os31571;
extern T0* ge333ov31571;
extern T0* T768f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge314os8520;
extern T0* ge314ov8520;
extern T0* T35f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T768c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T181f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T206f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T75f638(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T75f643(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_IDENTIFIER].has */
extern T1 T206f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T206f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T206f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T206f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T206f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T206f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T206f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T206f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T206f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T206f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T75f637(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T75f642(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T75f636(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T181f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T75f635(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T75f595(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T274f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].force */
extern void T658f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].fill_with */
extern void T657f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].extend */
extern void T657f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T274f11(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].aliased_resized_area */
extern T0* T658f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].aliased_resized_area */
extern T0* T657f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T274f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T274f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T75f622(GE_context* ac, T0* C, T6 a1);
extern T1 T75f622ot1(T0* a1, T0** a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T274f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T75f551(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T75f268(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T274f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T275f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T275f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T75f621(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T330f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T330f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T75f235(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T277f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T277f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T268f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T268f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T268f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T653f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T652f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T268f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T268f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T330c26(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge824os3694;
extern T0* ge824ov3694;
extern T0* T82f247(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T400c42(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T330f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T331c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T75f574(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_routine_name */
extern void T75f567(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T75f567ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T83f125(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T181f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T844f26(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T844f84(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T768f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge335os31616;
extern T0* ge335ov31616;
extern T0* T768f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge335os31615;
extern T0* ge335ov31615;
extern T0* T768f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge335os31601;
extern T0* ge335ov31601;
extern T0* T768f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge335os31614;
extern T0* ge335ov31614;
extern T0* T768f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge335os31613;
extern T0* ge335ov31613;
extern T0* T768f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge335os31612;
extern T0* ge335ov31612;
extern T0* T768f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge335os31611;
extern T0* ge335ov31611;
extern T0* T768f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern unsigned char ge335os31610;
extern T0* ge335ov31610;
extern T0* T768f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern unsigned char ge335os31609;
extern T0* ge335ov31609;
extern T0* T768f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge335os31608;
extern T0* ge335ov31608;
extern T0* T768f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge335os31607;
extern T0* ge335ov31607;
extern T0* T768f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge335os31606;
extern T0* ge335ov31606;
extern T0* T768f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge335os31605;
extern T0* ge335ov31605;
extern T0* T768f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge335os31604;
extern T0* ge335ov31604;
extern T0* T768f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge335os31603;
extern T0* ge335ov31603;
extern T0* T768f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern unsigned char ge335os31602;
extern T0* ge335ov31602;
extern T0* T768f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge335os31600;
extern T0* ge335ov31600;
extern T0* T768f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge335os31599;
extern T0* ge335ov31599;
extern T0* T768f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge335os31598;
extern T0* ge335ov31598;
extern T0* T768f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge335os31597;
extern T0* ge335ov31597;
extern T0* T768f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge335os31596;
extern T0* ge335ov31596;
extern T0* T768f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge335os31595;
extern T0* ge335ov31595;
extern T0* T768f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T844f54(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f30(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f68(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f72(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T75f568(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T356f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge177os16429;
extern T0* ge177ov16429;
extern T0* T75f252(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T356c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T75f545(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge1042os16040;
extern T0* ge1042ov16040;
extern T0* T75f145(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T75f541(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T75f513(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T75f543(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T75f542(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T75f504(GE_context* ac, T0* C);
extern T1 T75f504ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T72f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T77f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].search_position */
extern void T77f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T77f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T77f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T77f26(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T77f20(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [INTEGER_32].area */
extern T0* T1387f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T1386f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [INTEGER_32].extend */
extern void T1387f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [INTEGER_32].additional_space */
extern T6 T1387f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].capacity */
extern T6 T1387f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].count */
extern T6 T1387f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [INTEGER_32].make */
extern T0* T1387c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T1386f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_deferred */
extern T1 T83f99(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T83f110(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T400f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T75f573(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge824os3479;
extern T0* ge824ov3479;
extern T0* T82f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T233f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T233f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T639f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T639f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].sort */
extern void T233f14(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T325f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].sort_with_comparator */
extern void T325f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].subsort_with_comparator */
extern void T325f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].swap */
extern void T233f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T326f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T233f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].append_last */
extern void T233f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extend_last */
extern void T233f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].forth */
extern void T664f14(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T278f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T278f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T664f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T664f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T278f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_after */
extern void T664f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T278f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].item */
extern T0* T664f6(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T278f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T278f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].after */
extern T1 T664f8(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].start */
extern void T664f13(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T278f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T278f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].off */
extern T1 T664f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T278f20(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_DYNAMIC_TYPE].make */
extern T0* T325c2(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_comparator */
extern unsigned char ge1029os16428;
extern T0* ge1029ov16428;
extern T0* T75f153(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.make */
extern T0* T326c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T233c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T233f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T233f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T639c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found_item */
extern T0* T298f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T298f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found */
extern T1 T298f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search */
extern void T298f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search_position */
extern void T298f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].hash_position */
extern T6 T298f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T298f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T298f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_item */
extern T6 T298f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T75f503(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T55f73(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T844f11(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T844f39(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f28(GE_context* ac, T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T55f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T55f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T55f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T55f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T55f72(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T75f502(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].forth */
extern void T297f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_forth */
extern void T297f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T297f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_position */
extern void T696f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T297f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_item */
extern T6 T297f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T297f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_item */
extern T0* T297f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_item */
extern T0* T297f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1268f11(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T75f565(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T297f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_key */
extern T0* T297f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_item */
extern T0* T297f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T297f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_after */
extern T1 T297f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].after */
extern T1 T696f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].start */
extern void T297f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_start */
extern void T297f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].cursor_off */
extern T1 T297f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].off */
extern T1 T696f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].is_empty */
extern T1 T297f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T296f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T296f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T296f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T692f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T296f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T296f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T296f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T296f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T296f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T75f564(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T75f566(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T295f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T295f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T295f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T295f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T295f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T295f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T295f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T295f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T296f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T296f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T296f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T296f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T296f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].after */
extern T1 T692f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T296f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T296f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T296f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].off */
extern T1 T692f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T296f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T75f501(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T75f500(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T279f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T279f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T279f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T279f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T279f50(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T662f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T662f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T279f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T279f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T665f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_after */
extern void T665f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T279f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T279f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T279f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T665f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T279f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T279f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T75f563(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T75f600(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T75f547(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T276f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T276f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T276f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T276f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T276f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T276f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T276f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T661f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_after */
extern void T661f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T75f620(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T75f619(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T75f619ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] PROCEDURE [[attached] TUPLE].set_rout_disp_final */
extern void T351f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T75f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T75f614(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T75f627(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T276f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T276f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T276f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T276f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T276f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T276f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T276f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T75f596(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T75f582(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T276f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T276f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T276f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T276f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T276f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T276f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T276f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T276f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T276f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T276f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T276f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T276f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T276f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T75f594(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T279f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T279f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T279f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T279f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T279f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T665f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T279f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T279f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T279f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].off */
extern T1 T665f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T279f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T75f562(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac3(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac4(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac7(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac9(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac10(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac11(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T75f562ac12(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T75f562ot1(T0* a1, T0** a2);
extern T1 T75f562ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T75f561(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T75f585(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T75f617(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T75f553(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T75f618(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T75f633(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T273f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last_new */
extern void T279f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T279f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T279f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T663f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T662f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T662f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T279f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T279f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T279f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T279f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T279f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T279f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T279f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T279f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T279f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T663f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T662f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T279f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T279f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T279f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T279f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T277f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern unsigned char ge1012os15174;
extern T0* ge1012ov15174;
extern T0* T277f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T663c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T277f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T277f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T277f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T273c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T273f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T272f20(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].keep_head */
extern void T638f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T279f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T279f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T279f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T279f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T278f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T278f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T278f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T278f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T278f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T278f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T278f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T278f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T278f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T278f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T278f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T278f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T278f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T278f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T278f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T278f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T75f228(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T75f549(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T75f590(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T308f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T75f560(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge824os3733;
extern T0* ge824ov3733;
extern T0* T82f21(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T312c30(GE_context* ac);
/* ET_RESULT.make_token */
extern void T312f32(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T312f33(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T312f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T75f548(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T75f589(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T75f544(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T294f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T294f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T294f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T294f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T294f48(GE_context* ac, T0* C);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T686f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T686f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T294f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T294f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T685f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T685f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T294f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T294f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T294f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T685f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T294f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T294f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T75f499(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T294f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T294f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T294f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T294f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T294f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T685f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T294f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T294f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T294f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T685f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T294f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T75f498(GE_context* ac, T0* C, T0* a1);
extern T1 T75f498ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T278f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T278f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T278f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T278f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T278f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T278f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T278f38(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T75f497(GE_context* ac, T0* C, T0* a1);
extern T1 T75f497ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T278f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T278f22(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T278f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T278f37(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T75f496(GE_context* ac, T0* C);
extern T1 T75f496ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T75f554(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T75f554ot1(T0* a1, T0** a2);
extern T1 T75f554ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T293f31(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].keep_head */
extern void T681f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].keep_head */
extern void T679f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].set_count */
extern void T679f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge607os19989;
extern T0* ge607ov19989;
extern T0* T293f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T681c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T75f601(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T75f599(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T75f630(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T75f641(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T275f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T75f640(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T75f660(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T75f731(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T75f644(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T75f661(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T75f659(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T75f730(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T75f658(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T75f729(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T75f613(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T75f657(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T75f728(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T75f727(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T75f929(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f929ot1(T0* a1, T0** a2);
extern T1 T75f929ot2(T0* a1, T0** a2);
extern T1 T75f929ot3(T0* a1, T0** a2);
extern T1 T75f929ot4(T0* a1, T0** a2);
extern T1 T75f929ot5(T0* a1, T0** a2);
extern T1 T75f929ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T75f933(GE_context* ac, T0* C);
extern T1 T75f933ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T75f935(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T313c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T290f26(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T75f424(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T292f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T290c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T290f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T181f115(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T292f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T292f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T683f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T682f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T682f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T292f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T683f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T682f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T75f932(GE_context* ac, T0* C);
extern T1 T75f932ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T75f934(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T273f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T519f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T75f930(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T309f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T247f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T75f656(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T75f726(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T75f655(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T75f725(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T75f928(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T75f654(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T75f724(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T75f723(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T75f722(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T75f721(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T75f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T75f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T75f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T75f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T75f716(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T75f715(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T75f714(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T75f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T75f712(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T75f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T75f710(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T75f709(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T75f708(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T75f707(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T75f706(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T75f705(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T75f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T75f703(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T75f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T75f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T75f700(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T75f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T75f698(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T75f697(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T75f696(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T75f695(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T75f694(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T75f693(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T75f692(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T75f691(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T75f653(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T75f690(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T75f652(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T75f689(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T75f651(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T75f688(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T75f650(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T75f687(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T75f649(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T75f686(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T75f648(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T75f685(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T75f647(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T75f684(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f684ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T75f927(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T75f683(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T309f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T247f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T75f629(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f629ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T75f598(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T75f598ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T75f598ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T75f628(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T75f628ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T75f639(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f639ot1(T0* a1, T0** a2);
extern T1 T75f639ot2(T0* a1, T0** a2);
extern T1 T75f639ot3(T0* a1, T0** a2);
extern T1 T75f639ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T75f646(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T75f645(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T75f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T75f926(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T75f925(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T75f924(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T75f923(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T75f922(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T75f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T75f920(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T75f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T75f681(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T75f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T75f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f917ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T75f680(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T75f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T75f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f915ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T75f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T75f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T75f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T75f679(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T75f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T75f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T75f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T75f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T75f678(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T75f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T75f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T75f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T75f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T75f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T75f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T75f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T75f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T75f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T75f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T75f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T75f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T75f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T75f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T75f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T75f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T75f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T75f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T75f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T75f677(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T75f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T75f676(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T75f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T75f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T75f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T75f267(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T83f86(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T75f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T75f675(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T75f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T75f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T75f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T75f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T75f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T75f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T75f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T75f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T75f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T75f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T75f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T75f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T75f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T75f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T75f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T75f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T75f674(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T75f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T75f606(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T75f673(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T75f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T75f931(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T75f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T75f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T75f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T75f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T75f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T75f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T75f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T75f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T75f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T75f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T75f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T75f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T75f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T75f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T75f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T75f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T75f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T75f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T75f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T75f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T75f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T75f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T75f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T75f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T75f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T75f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T75f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T75f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T75f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T75f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T75f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T75f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T75f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T75f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T75f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T75f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T75f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T75f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T75f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T75f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T75f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T75f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T75f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T75f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T75f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T75f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T75f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T75f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T75f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T75f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T75f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T75f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T75f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T75f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T75f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T75f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T75f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T75f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T75f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T75f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T75f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T75f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T75f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T75f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T75f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T75f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T75f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T75f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T75f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T75f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T75f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T75f672(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T75f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T75f671(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T75f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T75f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T75f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T75f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T75f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T75f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T75f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T75f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T75f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T75f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T75f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T75f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T75f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T75f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T75f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T75f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T75f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T75f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T75f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T75f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T75f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T75f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T75f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T75f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T75f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T75f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T75f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T75f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T75f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T75f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T75f670(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T75f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T75f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T75f669(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T75f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T75f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T75f668(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T75f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T75f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T75f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T75f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T75f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T75f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T75f667(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T75f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T75f666(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T75f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T75f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T75f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T75f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T75f665(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T75f748(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T75f664(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T75f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T75f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T75f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T75f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T75f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T75f742(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T75f741(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T75f663(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T75f740(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T75f739(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T75f738(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T75f662(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T75f737(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T75f737ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T75f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T75f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T75f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T75f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T75f732(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T296f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T296f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].force */
extern void T690f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FEATURE].fill_with */
extern void T691f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].extend */
extern void T691f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T296f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T296f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T296f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T296f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T296f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T296f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T296f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T296f64(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].aliased_resized_area */
extern T0* T690f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].aliased_resized_area */
extern T0* T691f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T296f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].aliased_resized_area */
extern T0* T695f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].aliased_resized_area */
extern T0* T693f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T296f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T296f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T296f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T296f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].force */
extern void T695f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CONSTANT].fill_with */
extern void T693f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].extend */
extern void T693f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T296f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T75f597(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T75f597ot1(T0* a1, T0** a2);
extern T1 T75f597ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T273f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T277f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T317f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T313f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T317f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T75f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T309f25(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T247f19(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T293f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T293f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T75f593(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T75f593ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T75f592(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T75f592ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last_new */
extern void T276f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T276f25(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T275f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T293f29(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].force */
extern void T681f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].fill_with */
extern void T679f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].extend */
extern void T679f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T293f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T681f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T679f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T293f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T75f591(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T317f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T83f128(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T266f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T313f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T83f127(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T265f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T75f221(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T270f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T181f114(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T275f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T275f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T275f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T313f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T75f143(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T75f143ot1(T0* a1);
extern T1 T75f143ot2(T0* a1);
extern T1 T75f143ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T313f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T75f495(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].wipe_out */
extern void T282f11(GE_context* ac, T0* C);
/* SPECIAL [ET_EQUALITY_EXPRESSION].keep_head */
extern void T673f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].set_count */
extern void T673f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T282f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T675f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].set_after */
extern void T675f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T75f559(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T648f75(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T350f68(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T75f616(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].force_last */
extern void T282f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].force */
extern void T674f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].fill_with */
extern void T673f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_EQUALITY_EXPRESSION].extend */
extern void T673f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].resize */
extern void T282f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T674f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T673f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T282f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].extendible */
extern T1 T282f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T75f632(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T75f615(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].item */
extern T0* T282f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T281f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T670f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T670f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T281f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T672f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T672f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T75f558(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T648f74(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T350f67(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T75f612(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T281f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T671f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T670f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T670f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T281f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T671f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T670f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T281f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T281f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T75f611(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T281f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].wipe_out */
extern void T280f11(GE_context* ac, T0* C);
/* SPECIAL [ET_OBJECT_TEST].keep_head */
extern void T667f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].set_count */
extern void T667f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].move_all_cursors_after */
extern void T280f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_next_cursor */
extern void T669f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].set_after */
extern void T669f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T75f557(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T272f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T75f609(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].item */
extern T0* T280f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T283f11(GE_context* ac, T0* C);
/* SPECIAL [ET_AGENT].keep_head */
extern void T676f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].set_count */
extern void T676f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T283f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T678f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_after */
extern void T678f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T75f556(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T75f556ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T75f608(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T75f607(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T75f605(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T286f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T286f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T286f14(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T286f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T286f13(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T75f604(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T75f603(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T260c102(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge824os3741;
extern T0* ge824ov3741;
extern T0* T82f83(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T260f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern unsigned char ge824os3639;
extern T0* ge824ov3639;
extern T0* T82f29(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T181f110(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T181f107(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T283f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T309f20(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T247f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T299f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T299f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T704f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_after */
extern void T704f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T299f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T299f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T299f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T703f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T700f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T700f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T299f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T703f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T700f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T299f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T299f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T309f34(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T247f32(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T75f494(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T75f555(GE_context* ac, T0* C, T0* a1);
extern T1 T75f555ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T75f602(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T75f602ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].force_last_new */
extern void T298f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_put */
extern void T298f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_put */
extern void T298f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_put */
extern void T298f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_put */
extern void T298f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].resize */
extern void T298f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_resize */
extern void T298f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T298f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T298f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T298f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_resize */
extern void T298f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T298f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T298f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T337f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T75f493(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T317f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T75f492(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T75f491(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T75f490(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T75f489(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T75f488(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T75f540(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T75f586(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T75f586ot1(T0* a1, T0** a2);
extern T1 T75f586ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T75f626(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T75f487(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T304f36(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T304f45(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T304f45p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T75f486(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T75f539(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T75f583(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T75f581(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T75f538(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T75f538ot1(T0* a1, T0** a2);
extern T1 T75f538ot2(T0* a1, T0** a2);
extern T1 T75f538ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T75f584(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T359f7(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.standard_default */
extern T0* T359f2(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern T0* T75f259(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_struct_name */
extern void T75f577(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T311f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T311f15(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T717f4(GE_context* ac, T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T717f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make_filled */
extern T0* T717c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* ARRAY [BOOLEAN].make_filled_area */
extern void T717f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T233f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].replace */
extern void T716f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].item */
extern T0* T716f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T716f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].twin */
extern T0* T716f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].copy */
extern void T716f15(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1374f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1374f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1374f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].extend */
extern void T1374f11(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].move_data */
extern void T1374f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1374f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].fill_with */
extern void T1374f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1374f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].make_empty */
extern T0* T1374c6(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T716f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1376c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].set_internal_cursor */
extern void T716f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T716f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T716f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1376f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [INTEGER_32]].set_after */
extern void T1376f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T271f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T271f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T271f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T271f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T655c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].set_internal_cursor */
extern void T271f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T271f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T311f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T75f537(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T75f536(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T75f535(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T75f579(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T75f578(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T311f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T311f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [INTEGER_32].put_right */
extern void T551f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [INTEGER_32].make */
extern T0* T551c3(GE_context* ac, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T311f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T311f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T374f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T374f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T374f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T374f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T374f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T374f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T374f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T374f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T374f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T75f534(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T75f533(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T75f532(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T75f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T75f530(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T75f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T75f528(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T75f527(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T75f526(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T75f525(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T75f524(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T75f523(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T75f522(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T75f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T75f520(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T311f13(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T311f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].put_last */
extern void T716f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].force */
extern void T1375f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put_new */
extern void T374f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T374f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T374f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T374f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T374f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T374f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].resize */
extern void T716f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1375f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].aliased_resized_area */
extern T0* T1374f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T374f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T374f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T374f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T374f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T374f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T374f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T374f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T311f7(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T311f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T374f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T311c12(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T311f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern T0* T311c16(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T716c11(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].make */
extern T0* T1375f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1375c3(GE_context* ac);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T271c15(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T374c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T374f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T374f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T374f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T374f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T720c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T374f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T374f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T374f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T374f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T75f519(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge824os3240;
extern T0* ge824ov3240;
extern T0* T82f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T75f518(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge824os3269;
extern T0* ge824ov3269;
extern T0* T82f27(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T75f517(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge824os3259;
extern T0* ge824ov3259;
extern T0* T82f26(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T75f516(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge824os3247;
extern T0* ge824ov3247;
extern T0* T82f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T75f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge824os3282;
extern T0* ge824ov3282;
extern T0* T82f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T75f514(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge824os3235;
extern T0* ge824ov3235;
extern T0* T82f23(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T75f485(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T75f484(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T300f49(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T300f60(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T300f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T300f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T300f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T300f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T300f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T300f64(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T300f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T300f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T300f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T300f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T300f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T300f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T300f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T300f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T300f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T300f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T300f34(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T75f186(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T75f108(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T75f483(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T309f37(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T247f37(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T75f512(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_relation */
extern void T311f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force */
extern void T278f65(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T75f482(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T75f481(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T75f473(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T75f472(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T23f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T75f471(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T23f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T75f470(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T23f32(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T44f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T137f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T137f19(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T75c469(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T75f476(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T75f475(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].set_equality_tester */
extern void T206f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern unsigned char ge880os16427;
extern T0* ge880ov16427;
extern T0* T75f271(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T301c2(GE_context* ac);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T206c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].set_internal_cursor */
extern void T206f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T206f36(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T627c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T206f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T206f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T206f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T206f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T212f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].make_empty */
extern T0* T211c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T212c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T300f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T300c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T300f51(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T300f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_internal_cursor */
extern void T300f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T300f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T705c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T300f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T300f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T300f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T300f72(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T59c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T77f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern void T77f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T77c39(GE_context* ac, T6 a1);
/* DS_HASH_SET [STRING_8].set_internal_cursor */
extern void T77f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T77f23(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T371c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T77f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T77f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T77f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T77f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T77f50(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T299c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T299f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T299f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T704c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_map */
extern T0* T298c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T298f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T298f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T298f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T298f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T702c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_slots */
extern void T298f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_clashes */
extern void T298f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_key_storage */
extern void T298f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_item_storage */
extern void T298f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_map */
extern T0* T297c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T297f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_sparse_container */
extern void T297f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].set_internal_cursor */
extern void T297f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_cursor */
extern T0* T297f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make */
extern T0* T696c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_slots */
extern void T297f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_modulus */
extern T6 T297f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_clashes */
extern void T297f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_key_storage */
extern void T297f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T699f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make_empty */
extern T0* T697c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T699c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].make_item_storage */
extern void T297f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T296c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T296f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T296f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].set_internal_cursor */
extern void T296f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T296f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T692c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T296f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T296f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T296f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T690f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].make_empty */
extern T0* T691c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T690c3(GE_context* ac);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T296f66(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T695f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].make_empty */
extern T0* T693c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T695c3(GE_context* ac);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T295c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_FEATURE].set_internal_cursor */
extern void T295f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T295f19(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T688c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T295f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T295f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T295f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T295f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T295f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T294c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T294f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T294f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T685c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T294f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T294f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T294f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T294f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T294f39(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T687f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T686c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T687c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T293c27(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T293f27p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T681f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].make_empty */
extern T0* T679c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T293f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T292c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T292f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T292f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T684c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T683f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T682c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T683c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T291c27(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T287c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T287f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T286f12(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T286c12(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T286f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge824os3678;
extern T0* ge824ov3678;
extern T0* T82f244(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T350c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge824os3673;
extern T0* ge824ov3673;
extern T0* T82f243(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T350c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T286f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T283c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].set_internal_cursor */
extern void T283f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T283f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T678c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T677f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT].make_empty */
extern T0* T676c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T677c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].make */
extern T0* T282c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T282f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T282f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EQUALITY_EXPRESSION].make */
extern T0* T675c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].make */
extern T0* T674f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T673c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EQUALITY_EXPRESSION].default_create */
extern T0* T674c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T281c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T281f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T281f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T672c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T671f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T670c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T671c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].make */
extern T0* T280c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].set_internal_cursor */
extern void T280f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_cursor */
extern T0* T280f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_OBJECT_TEST].make */
extern T0* T669c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].make */
extern T0* T668f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_OBJECT_TEST].make_empty */
extern T0* T667c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].default_create */
extern T0* T668c3(GE_context* ac);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T279c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T279f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T279f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T279f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T279f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T665c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T279f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T279f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T279f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T279f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T663f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T662c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T277c8(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T276c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T276f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T276f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].set_internal_cursor */
extern void T276f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T276f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T661c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T276f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T276f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T276f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T276f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T275c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].set_internal_cursor */
extern void T275f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T275f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T659c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T658f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].make_empty */
extern T0* T657c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T658c3(GE_context* ac);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T274c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T270c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].set_internal_cursor */
extern void T270f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T270f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T654c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T269c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge264os5852;
extern T0* ge264ov5852;
extern T0* T75f270(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T267c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T83f60(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern unsigned char ge824os4308;
extern T0* ge824ov4308;
extern T0* T82f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T83f218(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T83f217(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T83f216(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T83f215(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T83f214(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T83f213(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T83f212(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T83f211(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T83f210(GE_context* ac, T0* C);
/* ET_CLASS.set_parsed */
extern void T83f209(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T83f208(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern unsigned char ge824os4312;
extern T0* ge824ov4312;
extern T0* T82f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T397c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T83c207(GE_context* ac);
/* ET_CLASS.make */
extern void T83f219(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T83c219(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T401f1(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found_item */
extern T8 T764f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_item */
extern T8 T764f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].found */
extern T1 T764f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search */
extern void T764f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].search_position */
extern void T764f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].hash_position */
extern T6 T764f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T464f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T181f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_item */
extern T0* T764f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_item */
extern T6 T764f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_item */
extern T6 T764f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern unsigned char ge803os19938;
extern T0* ge803ov19938;
extern T0* T401f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern unsigned char ge824os3256;
extern T0* ge824ov3256;
extern T0* T82f134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern unsigned char ge824os3255;
extern T0* ge824ov3255;
extern T0* T82f133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern unsigned char ge824os3239;
extern T0* ge824ov3239;
extern T0* T82f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge824os3277;
extern T0* ge824ov3277;
extern T0* T82f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge824os3231;
extern T0* ge824ov3231;
extern T0* T82f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge824os3233;
extern T0* ge824ov3233;
extern T0* T82f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge824os3281;
extern T0* ge824ov3281;
extern T0* T82f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge824os3280;
extern T0* ge824ov3280;
extern T0* T82f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge824os3273;
extern T0* ge824ov3273;
extern T0* T82f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge824os3272;
extern T0* ge824ov3272;
extern T0* T82f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge824os3268;
extern T0* ge824ov3268;
extern T0* T82f124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge824os3267;
extern T0* ge824ov3267;
extern T0* T82f123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge824os3244;
extern T0* ge824ov3244;
extern T0* T82f122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge824os3279;
extern T0* ge824ov3279;
extern T0* T82f121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge824os3266;
extern T0* ge824ov3266;
extern T0* T82f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge824os3271;
extern T0* ge824ov3271;
extern T0* T82f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge824os3270;
extern T0* ge824ov3270;
extern T0* T82f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge824os3263;
extern T0* ge824ov3263;
extern T0* T82f117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge824os3262;
extern T0* ge824ov3262;
extern T0* T82f116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge824os3261;
extern T0* ge824ov3261;
extern T0* T82f115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge824os3260;
extern T0* ge824ov3260;
extern T0* T82f114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge824os3251;
extern T0* ge824ov3251;
extern T0* T82f113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge824os3250;
extern T0* ge824ov3250;
extern T0* T82f112(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge824os3249;
extern T0* ge824ov3249;
extern T0* T82f111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge824os3248;
extern T0* ge824ov3248;
extern T0* T82f110(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge824os3237;
extern T0* ge824ov3237;
extern T0* T82f109(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge824os3236;
extern T0* ge824ov3236;
extern T0* T82f108(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].force_last */
extern void T764f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_put */
extern void T764f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].force */
extern void T635f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].fill_with */
extern void T636f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].extend */
extern void T636f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_put */
extern void T764f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_put */
extern void T764f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].resize */
extern void T764f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].clashes_resize */
extern void T764f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].special_integer_ */
extern T0* T764f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].key_storage_resize */
extern void T764f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].aliased_resized_area */
extern T0* T635f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].aliased_resized_area */
extern T0* T636f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_resize */
extern void T764f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].aliased_resized_area */
extern T0* T1384f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATURAL_8].aliased_resized_area */
extern T0* T539f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].slots_resize */
extern void T764f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_modulus */
extern T6 T764f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_capacity */
extern T6 T764f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].item_storage_put */
extern void T764f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [NATURAL_8].force */
extern void T1384f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].unset_found_item */
extern void T764f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge824os3234;
extern T0* ge824ov3234;
extern T0* T82f107(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T401f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_key_equality_tester */
extern void T764f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern unsigned char ge876os6168;
extern T0* ge876ov6168;
extern T0* T401f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T464c2(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_map */
extern T0* T764c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_with_equality_testers */
extern void T764f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_sparse_container */
extern void T764f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].set_internal_cursor */
extern void T764f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].new_cursor */
extern T0* T764f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [NATURAL_8, ET_CLASS_NAME].make */
extern T0* T1385c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_slots */
extern void T764f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_clashes */
extern void T764f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_key_storage */
extern void T764f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T635f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].make_empty */
extern T0* T636c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T635c3(GE_context* ac);
/* DS_HASH_TABLE [NATURAL_8, ET_CLASS_NAME].make_item_storage */
extern void T764f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].make */
extern T0* T1384f2(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [NATURAL_8].default_create */
extern T0* T1384c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge824os3692;
extern T0* ge824ov3692;
extern T0* T82f81(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T400c36(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge824os4306;
extern T0* ge824ov4306;
extern T0* T82f80(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T266c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T859f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].make_empty */
extern T0* T858c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge700os19989;
extern T0* ge700ov19989;
extern T0* T266f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T859c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge824os4305;
extern T0* ge824ov4305;
extern T0* T82f79(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T265c8(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T857f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].make_empty */
extern T0* T855c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge702os19989;
extern T0* ge702ov19989;
extern T0* T265f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T857c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge824os4302;
extern T0* ge824ov4302;
extern T0* T82f78(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T399c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T868f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].make_empty */
extern T0* T867c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge891os15174;
extern T0* ge891ov15174;
extern T0* T399f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T868c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge824os3283;
extern T0* ge824ov3283;
extern T0* T82f77(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T83f82(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T23f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T72f73(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T72f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T72f80(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T237f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T80f91(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T80f95(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T80f100(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T80f102(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f102ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T317f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T313f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T80f106(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T37f187(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T37f193(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T133f9(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T37f192(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T78f197(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T78f196(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T78f192(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T80f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T317f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T313f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T80f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge1022os18486;
extern T0* ge1022ov18486;
extern T0* T80f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T80f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T268f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].wipe_out */
extern void T374f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T374f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T374f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T374f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T374f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T374f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T720f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].set_after */
extern void T720f7(GE_context* ac, T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T373f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T309f40(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T247f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T80f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T389f10(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].wipe_out */
extern void T174f50(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_wipe_out */
extern void T174f59(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].clashes_wipe_out */
extern void T174f58(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_wipe_out */
extern void T174f57(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].item_storage_wipe_out */
extern void T174f56(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T174f45(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors_after */
extern void T174f55(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_next_cursor */
extern void T607f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_after */
extern void T607f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T388f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].wipe_out */
extern void T755f11(GE_context* ac, T0* C);
/* SPECIAL [ET_ACROSS_COMPONENT].keep_head */
extern void T753f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].set_count */
extern void T753f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T755f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1381f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].set_after */
extern void T1381f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].wipe_out */
extern void T387f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T387f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T387f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T387f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T387f50(GE_context* ac, T0* C);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T739f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].set_count */
extern void T739f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].unset_found_item */
extern void T387f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T387f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_next_cursor */
extern void T750f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_after */
extern void T750f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].forth */
extern void T387f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_forth */
extern void T387f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T387f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_position */
extern void T750f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T387f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_item */
extern T6 T387f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T387f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_item */
extern T0* T387f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T387f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T387f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_after */
extern T1 T387f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].after */
extern T1 T750f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].start */
extern void T387f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_start */
extern void T387f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].cursor_off */
extern T1 T387f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].off */
extern T1 T750f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].is_empty */
extern T1 T387f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T385f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].wipe_out */
extern void T749f11(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_OBJECT_TEST].keep_head */
extern void T747f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].set_count */
extern void T747f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T749f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1380f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].set_after */
extern void T1380f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].wipe_out */
extern void T384f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T384f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T384f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T384f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T384f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T384f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T384f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T743f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_after */
extern void T743f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].forth */
extern void T384f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T384f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T384f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_position */
extern void T743f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T384f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T384f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T80f96(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T383f51(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T383f53(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].keep_head */
extern void T742f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].keep_head */
extern void T263f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].set_count */
extern void T263f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge917os15174;
extern T0* ge917ov15174;
extern T0* T383f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T742c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T80f58(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T382f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].force */
extern void T740f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T739f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].extend */
extern void T739f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T382f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T740f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T739f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T382f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T382f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T384f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T384f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T384f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T384f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T384f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].after */
extern T1 T743f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].start */
extern void T384f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_start */
extern void T384f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T384f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].off */
extern T1 T743f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T384f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T80f101(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T80f105(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].force_last */
extern void T391f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].force */
extern void T758f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].fill_with */
extern void T757f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ATTACHMENT_SCOPE].extend */
extern void T757f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].resize */
extern void T391f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T758f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T757f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T391f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].extendible */
extern T1 T391f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].forth */
extern void T393f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_forth */
extern void T393f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].add_traversing_cursor */
extern void T393f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_next_cursor */
extern void T760f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_position */
extern void T760f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].remove_traversing_cursor */
extern void T393f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].set_after */
extern void T760f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_item */
extern T6 T393f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T389f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].forth */
extern void T174f54(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_forth */
extern void T174f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].add_traversing_cursor */
extern void T174f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].set_position */
extern void T607f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_traversing_cursor */
extern void T174f70(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T174f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove */
extern void T174f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].remove_position */
extern void T174f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_put */
extern void T174f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T174f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].key_storage_keep_head */
extern void T174f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_keep_head */
extern void T174f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T174f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T174f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].move_cursors_forth */
extern void T174f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].internal_set_key_equality_tester */
extern void T174f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T174f30(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T174f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T174f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T174f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T174f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T174f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T174f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_for_iteration */
extern T6 T174f27(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_item */
extern T6 T174f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].after */
extern T1 T174f26(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_after */
extern T1 T174f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].after */
extern T1 T607f7(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].start */
extern void T174f52(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_start */
extern void T174f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].cursor_off */
extern T1 T174f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].off */
extern T1 T607f8(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].is_empty */
extern T1 T174f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_last */
extern T1 T393f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_is_last */
extern T1 T393f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].is_empty */
extern T1 T393f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_for_iteration */
extern T0* T393f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_item */
extern T0* T393f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_item */
extern T0* T393f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].start */
extern void T393f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_start */
extern void T393f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].cursor_off */
extern T1 T393f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].off */
extern T1 T760f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T389f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].append_last */
extern void T174f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].extend_last */
extern void T174f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [INTEGER_32].forth */
extern void T607f13(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].put_last */
extern void T174f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].compress */
extern void T174f77(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].move_all_cursors */
extern void T174f78(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET_CURSOR [INTEGER_32].item */
extern T6 T607f4(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].start */
extern void T607f12(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T174f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T607c9(GE_context* ac, T0* a1);
/* DS_HASH_SET [INTEGER_32].resize */
extern void T174f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_resize */
extern void T174f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T174f37(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].key_storage_resize */
extern void T174f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_resize */
extern void T174f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_resize */
extern void T174f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T174f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].new_capacity */
extern T6 T174f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].extendible */
extern T1 T174f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T80f52(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].remove_last */
extern void T391f13(GE_context* ac, T0* C);
/* SPECIAL [ET_ATTACHMENT_SCOPE].keep_head */
extern void T757f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].set_count */
extern void T757f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T391f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T759f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].set_after */
extern void T759f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].last */
extern T0* T391f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T389c9(GE_context* ac);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T174c38(GE_context* ac, T6 a1);
/* DS_HASH_SET [INTEGER_32].set_internal_cursor */
extern void T174f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T174f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T174f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T174f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T174f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T391f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T80f104(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T390f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.assertion */
extern T0* T885f10(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T885f7(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.assertion */
extern T0* T392f7(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T392f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].first */
extern T0* T393f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].force_last */
extern void T393f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_put */
extern void T393f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_put */
extern void T393f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_put */
extern void T393f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_item */
extern T6 T393f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].hash_position */
extern T6 T393f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].resize */
extern void T393f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_resize */
extern void T393f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].special_integer_ */
extern T0* T393f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_resize */
extern void T393f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_resize */
extern void T393f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].aliased_resized_area */
extern T0* T763f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTIONS].aliased_resized_area */
extern T0* T761f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_item */
extern T0* T393f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_resize */
extern void T393f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_modulus */
extern T6 T393f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_capacity */
extern T6 T393f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_put */
extern void T393f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].force */
extern void T763f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].fill_with */
extern void T761f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTIONS].extend */
extern void T761f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].search_position */
extern void T393f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].unset_found_item */
extern void T393f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T80f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T395f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_map */
extern T0* T393c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_with_equality_testers */
extern void T393f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_sparse_container */
extern void T393f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].set_internal_cursor */
extern void T393f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].new_cursor */
extern T0* T393f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ASSERTIONS, ET_FEATURE].make */
extern T0* T760c7(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_slots */
extern void T393f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_clashes */
extern void T393f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_key_storage */
extern void T393f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].make_item_storage */
extern void T393f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].make */
extern T0* T763f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].make_empty */
extern T0* T761c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTIONS].default_create */
extern T0* T763c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T372f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T392f21(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T392f20(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T372f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T372f36(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T385f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].keep_first */
extern void T749f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T372f43(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T386f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T37f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T37f190(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge265os2908;
extern T0* ge265ov2908;
extern T0* T131f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T133c5(GE_context* ac);
/* ET_ERROR_HANDLER.report_info */
extern void T37f194(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T529c743(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T529f742(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T529f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T529f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge1032os31008;
extern T0* ge1032ov31008;
extern T0* T529f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T179c13(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T529f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T37f23(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T78f198(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T78f190(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T78f193(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T78f24(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T383f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T372f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T372f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T883f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T883f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].force_last */
extern void T880f42(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_put */
extern void T880f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_put */
extern void T880f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_item */
extern T6 T880f18(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].hash_position */
extern T6 T880f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T470f36(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].resize */
extern void T880f62(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_resize */
extern void T880f72(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].special_integer_ */
extern T0* T880f33(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_resize */
extern void T880f71(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_resize */
extern void T880f70(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1470f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1468f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_item */
extern T0* T880f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_item */
extern T0* T880f35(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_item */
extern T6 T880f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_resize */
extern void T880f69(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_modulus */
extern T6 T880f23(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_capacity */
extern T6 T880f19(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_put */
extern void T880f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].force */
extern void T1470f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].fill_with */
extern void T1468f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_CLASS].extend */
extern void T1468f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].search_position */
extern void T880f56(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_equality_tester */
extern T0* T880f31(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].unset_found_item */
extern void T880f47(GE_context* ac, T0* C);
/* ET_CLASS.is_none */
extern T1 T83f130(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T470f19(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T83f95(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T385f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T372f51(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T382f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T382f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T741f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_after */
extern void T741f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T382f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T383c50(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T383f52(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T742f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_TYPE].make_empty */
extern T0* T263c5(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T382f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T372f40(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T372f45(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T83f107(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T372f38(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T372f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T80f81(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T80f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T247f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T309f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T247f38(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T309f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T247f35(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T237f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T80f87(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T237f14(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T80f86(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T237f18(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T80f90(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T237f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T80f89(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T309f36(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T247f34(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T83f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T831f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T1038f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T1038f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T1007f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T492f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T468f4(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T1038f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T37f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T37f188(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T527c32(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T37f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T78f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T78f188(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T78f12(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T83f58(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T265f5(GE_context* ac, T0* C, T0* a1);
extern T1 T265f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T83f57(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T266f5(GE_context* ac, T0* C, T0* a1);
extern T1 T266f5ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T37f177(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T527c31(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T37f111(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T78f178(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T78f112(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T37f176(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T527c30(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T37f24(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T78f177(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T78f25(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T83f53(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T37f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T527c29(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T37f22(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T78f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T78f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge824os3359;
extern T0* ge824ov3359;
extern T0* T82f4(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T37f174(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T527c28(GE_context* ac);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T37f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T78f175(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T78f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T72f78(GE_context* ac, T0* C);
extern T1 T72f78ot1(T0* a1, T0** a2);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern unsigned char ge824os3573;
extern T0* ge824ov3573;
extern T0* T82f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern unsigned char ge824os3426;
extern T0* ge824ov3426;
extern T0* T82f17(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T37f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T529c741(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable ARRAY [ET_TYPE].item */
extern T0* T262f4(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T37f18(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T78f186(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T78f18(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T37f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T529c740(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T37f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T78f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T78f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern unsigned char ge824os3603;
extern T0* ge824ov3603;
extern T0* T82f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern unsigned char ge824os3563;
extern T0* ge824ov3563;
extern T0* T82f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern unsigned char ge824os3347;
extern T0* ge824ov3347;
extern T0* T82f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge824os3615;
extern T0* ge824ov3615;
extern T0* T82f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge824os3524;
extern T0* ge824ov3524;
extern T0* T82f10(GE_context* ac, T0* C);
/* UT_VERSION.is_less */
extern T1 T79f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T79f14(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T79f13(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T79f12(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T79f11(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T79f10(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T79f9(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T79f8(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T79f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge191os2875;
extern T0* ge191ov2875;
extern T0* T72f61(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T79c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge824os3629;
extern T0* ge824ov3629;
extern T0* T82f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge824os3484;
extern T0* ge824ov3484;
extern T0* T82f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge824os3306;
extern T0* ge824ov3306;
extern T0* T82f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern unsigned char ge824os3331;
extern T0* ge824ov3331;
extern T0* T82f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T37f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T529c739(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T37f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T78f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T78f16(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T37f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T529c738(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T37f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T78f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T78f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T37f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T529c737(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T37f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T78f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T78f14(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge824os3354;
extern T0* ge824ov3354;
extern T0* T82f5(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T37f180(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T527c33(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T37f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T78f181(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T78f13(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T241f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T241f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T240f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME.set_year_month_day */
extern void T240f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T241f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T643f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T643f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T643f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T643f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T643f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T643f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T643f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T643f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T643f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T643f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T643f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T643f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T643f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f14(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T643f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T643f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T643f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T643f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T643f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T643f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T643f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T643f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T643c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T240c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1401os22589;
extern T0* ge1401ov22589;
extern T0* T239f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T241c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T239c2(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T72f66(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T72f77(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T72f75(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T72f75ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T235f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T72f79(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T266f7(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T265f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T72f72(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T80c85(GE_context* ac, T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T373c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge1022os18634;
extern T0* ge1022ov18634;
extern T0* T80f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern unsigned char ge946os19047;
extern T0* ge946ov19047;
extern T0* T80f66(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T530c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T530f71p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge824os3698;
extern T0* ge824ov3698;
extern T0* T82f675(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T400c45(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T530f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge1022os18633;
extern T0* ge1022ov18633;
extern T0* T80f65(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T372c62(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].make */
extern T0* T391c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T391f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T391f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ATTACHMENT_SCOPE].make */
extern T0* T759c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].make */
extern T0* T758f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T757c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ATTACHMENT_SCOPE].default_create */
extern T0* T758c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T390c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T388c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].make */
extern T0* T755c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T755f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_cursor */
extern T0* T755f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ACROSS_COMPONENT].make */
extern T0* T1381c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].make */
extern T0* T754f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACROSS_COMPONENT].make_empty */
extern T0* T753c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].default_create */
extern T0* T754c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_map */
extern T0* T387c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T387f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_sparse_container */
extern void T387f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T387f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_cursor */
extern T0* T387f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make */
extern T0* T750c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_slots */
extern void T387f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_modulus */
extern T6 T387f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_clashes */
extern void T387f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_key_storage */
extern void T387f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].make_item_storage */
extern void T387f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T740f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T739c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T740c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T386c8(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T386f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T385c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].make */
extern T0* T749c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T749f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T749f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NAMED_OBJECT_TEST].make */
extern T0* T1380c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].make */
extern T0* T748f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T747c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].default_create */
extern T0* T748c3(GE_context* ac);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_map */
extern T0* T384c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T384f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T384f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T384f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T384f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make */
extern T0* T743c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_slots */
extern void T384f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T384f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_clashes */
extern void T384f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T384f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T384f55(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T382c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T382f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T382f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T741c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T381c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].set_internal_cursor */
extern void T381f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_cursor */
extern T0* T381f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T738c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].make */
extern T0* T735f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].make_empty */
extern T0* T737c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].default_create */
extern T0* T735c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T380c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].set_internal_cursor */
extern void T380f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T380f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T734c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T731f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_empty */
extern T0* T733c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T731c3(GE_context* ac);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T379c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].set_internal_cursor */
extern void T379f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T379f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T730c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T727f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_empty */
extern T0* T729c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T727c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T378c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].set_internal_cursor */
extern void T378f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T378f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T726c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T723f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make_empty */
extern T0* T725c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T723c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T372f39(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T376c17(GE_context* ac);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge970os19244;
extern T0* ge970ov19244;
extern T0* T376f14(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T376f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T376f17p1(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T80f92(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T80f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T72f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force */
extern void T77f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T77f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T77f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].resize */
extern void T77f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T77f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T77f34(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T77f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T77f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T77f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T77f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T77f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8.starts_with */
extern T1 T17f14(GE_context* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f13(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f53(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f52(GE_context* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f7(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f54(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T30f63(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T30f68(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [CHARACTER_8].put_right */
extern void T127f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [CHARACTER_8].make */
extern T0* T127c3(GE_context* ac, T2 a1);
/* DS_HASH_SET [STRING_8].make_equal */
extern T0* T77c37(GE_context* ac, T6 a1);
/* AP_STRING_OPTION.parameter */
extern T0* T47f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T72f70(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T23f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T72f69(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T23f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T72f68(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T23f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T72c67(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T72f67ac1(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T237c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T72f74(GE_context* ac, T0* C);
/* GEC.is_verbose */
extern T1 T23f27(GE_context* ac, T0* C);
/* GEC.ise_latest */
extern unsigned char ge191os2896;
extern T0* ge191ov2896;
extern T0* T23f26(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T79c16(GE_context* ac);
/* ET_ERROR_HANDLER.set_ise */
extern void T37f173(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T78f174(GE_context* ac, T0* C);
/* GEC.null_error_handler */
extern unsigned char ge1037os2898;
extern T0* ge1037ov2898;
extern T0* T23f25(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T78c173(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T78f21(GE_context* ac, T0* C);
/* GEC.is_silent */
extern T1 T23f24(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T23f44(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T69f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T69f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T69f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T69f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T69f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T69f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T69f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge1085os13779;
extern T0* ge1085ov13779;
extern T0* T69f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T69f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T181f111(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T137f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T137f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T137f18(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T137f17(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge1085os13776;
extern T0* ge1085ov13776;
extern T0* T69f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T69f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T229f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T229f125(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T229f119(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T229f124(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T229f118(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T229f123(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern unsigned char ge824os4313;
extern T0* ge824ov4313;
extern T0* T82f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T34c161(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T34f169(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T34f228(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T34f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T470f51(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T470f52(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T83f228(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T83f61(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge824os3303;
extern T0* ge824ov3303;
extern T0* T82f170(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge824os3287;
extern T0* ge824ov3287;
extern T0* T82f151(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T34f227(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T34f226(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge824os3274;
extern T0* ge824ov3274;
extern T0* T82f162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge824os3275;
extern T0* ge824ov3275;
extern T0* T82f150(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T34f225(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge824os3300;
extern T0* ge824ov3300;
extern T0* T82f169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge824os3301;
extern T0* ge824ov3301;
extern T0* T82f149(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T34f224(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T34f223(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge824os3294;
extern T0* ge824ov3294;
extern T0* T82f168(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge824os3297;
extern T0* ge824ov3297;
extern T0* T82f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T34f222(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T34f221(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge824os3289;
extern T0* ge824ov3289;
extern T0* T82f167(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge824os3292;
extern T0* ge824ov3292;
extern T0* T82f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T34f220(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T34f219(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge824os3288;
extern T0* ge824ov3288;
extern T0* T82f166(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge824os3302;
extern T0* ge824ov3302;
extern T0* T82f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T34f218(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T34f217(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge824os3285;
extern T0* ge824ov3285;
extern T0* T82f165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge824os3286;
extern T0* ge824ov3286;
extern T0* T82f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T34f216(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_kernel_types */
extern void T34f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T34f215(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T81c107(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.set_in_system */
extern void T470f49(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T34f214(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge824os3632;
extern T0* ge824ov3632;
extern T0* T82f155(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T499c69(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge824os3718;
extern T0* ge824ov3718;
extern T0* T82f674(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T400c44(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T499f4(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T34f213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern unsigned char ge824os3634;
extern T0* ge824ov3634;
extern T0* T82f164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern unsigned char ge824os3699;
extern T0* ge824ov3699;
extern T0* T82f152(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T400c38(GE_context* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T34f212(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge824os3278;
extern T0* ge824ov3278;
extern T0* T82f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T34f211(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T467f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T1154f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T1155f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T1155f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge549os19989;
extern T0* ge549ov19989;
extern T0* T467f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T1154c3(GE_context* ac);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T467c11(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T467f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T1154f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T1155c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge824os3714;
extern T0* ge824ov3714;
extern T0* T82f671(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T400c43(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T467f9(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T466c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T466f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T466f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T34f210(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T34f209(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T469c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1316c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1316f8p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1176f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1178c5(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge927os19989;
extern T0* ge927ov19989;
extern T0* T1316f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1176c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge824os3676;
extern T0* ge824ov3676;
extern T0* T82f688(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T350c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge824os3671;
extern T0* ge824ov3671;
extern T0* T82f687(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T350c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1316f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge824os3276;
extern T0* ge824ov3276;
extern T0* T82f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T34f208(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T34f207(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T34f206(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T34f205(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T34f204(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T34f203(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T34f202(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T34f201(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T34f200(GE_context* ac, T0* C);
/* ET_SYSTEM.set_none_type */
extern void T34f199(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T470f50(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T470f56(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T470f58(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T470f60(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T470f60ac3(GE_context* ac, T0* a1);
extern T1 T470f60ot1(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T476f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.mark_overridden */
extern void T470f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T470f59(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_last */
extern void T1318f16(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].force */
extern void T633f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].fill_with */
extern void T634f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_MASTER_CLASS].extend */
extern void T634f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].resize */
extern void T1318f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T633f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MASTER_CLASS].aliased_resized_area */
extern T0* T634f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_capacity */
extern T6 T1318f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].extendible */
extern T1 T1318f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].make */
extern T0* T1318c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].set_internal_cursor */
extern void T1318f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].new_cursor */
extern T0* T1318f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].make */
extern T0* T1530c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].make */
extern T0* T633f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].make_empty */
extern T0* T634c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MASTER_CLASS].default_create */
extern T0* T633c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern unsigned char ge824os4320;
extern T0* ge824ov4320;
extern T0* T82f673(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_override */
extern T1 T470f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T83f97(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].do_all */
extern void T1318f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].item */
extern T0* T1318f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T470f61(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T470f62(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_first */
extern void T1318f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove */
extern void T1318f20(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].keep_head */
extern void T634f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_MASTER_CLASS].set_count */
extern void T634f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_left */
extern void T1318f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_left */
extern void T1318f26(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_position */
extern void T1530f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].remove_last */
extern void T1318f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_last_cursors_after */
extern void T1318f31(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_next_cursor */
extern void T1530f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_MASTER_CLASS].set_after */
extern void T1530f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].first */
extern T0* T1318f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].is_empty */
extern T1 T1318f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].delete */
extern void T1318f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_all_cursors_after */
extern void T1318f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_first */
extern void T1317f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put */
extern void T1317f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_right */
extern void T1317f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1529f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_right */
extern void T1317f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T1002f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].fill_with */
extern void T1003f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLASS].extend */
extern void T1003f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1317f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1317f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T1002f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T1003f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1317f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1317f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1317c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].set_internal_cursor */
extern void T1317f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1317f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1529c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T1002f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T1003c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T1002c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern unsigned char ge824os4319;
extern T0* ge824ov4319;
extern T0* T82f672(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T470f20(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T470f55(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T83f96(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T470f54(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T501c29(GE_context* ac, T0* a1);
/* ET_AST_FACTORY.new_class */
extern T0* T407f1(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge824os3264;
extern T0* ge824ov3264;
extern T0* T82f160(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T34f198(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T34f197(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T34f196(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T34f195(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T34f194(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T34f193(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T34f192(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern unsigned char ge824os3253;
extern T0* ge824ov3253;
extern T0* T82f159(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T34f191(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T34f190(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T34f189(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T34f188(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T34f187(GE_context* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T34f186(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern unsigned char ge824os3246;
extern T0* ge824ov3246;
extern T0* T82f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T34f185(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T34f184(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern unsigned char ge824os3242;
extern T0* ge824ov3242;
extern T0* T82f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T34f183(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern unsigned char ge824os3241;
extern T0* ge824ov3241;
extern T0* T82f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T34f182(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T34f181(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T34f180(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T34f179(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T34f178(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T34f177(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T34f176(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T500c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_any_type */
extern void T34f175(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T468f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T1004f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T1005f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T1005f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T492c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T468c10(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern unsigned char ge824os3736;
extern T0* ge824ov3736;
extern T0* T82f154(GE_context* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T400c39(GE_context* ac);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern unsigned char ge824os3638;
extern T0* ge824ov3638;
extern T0* T82f153(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T493c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.make_adapted */
extern void T34f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern unsigned char ge743os6167;
extern T1 ge743ov6167;
extern T1 T34f150(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T34f166(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern unsigned char ge824os4300;
extern T0* ge824ov4300;
extern T0* T82f144(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern unsigned char ge824os4310;
extern T0* ge824ov4310;
extern T0* T82f143(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T251c29(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T251f29p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern unsigned char ge824os4318;
extern T0* ge824ov4318;
extern T0* T82f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern unsigned char ge824os4311;
extern T0* ge824ov4311;
extern T0* T82f141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern unsigned char ge824os4304;
extern T0* ge824ov4304;
extern T0* T82f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern unsigned char ge824os4303;
extern T0* ge824ov4303;
extern T0* T82f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern unsigned char ge824os4309;
extern T0* ge824ov4309;
extern T0* T82f137(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T34f165(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T433c1(GE_context* ac);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T137f22(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T137c22(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].set_internal_cursor */
extern void T137f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T137f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T463c9(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_preparse_shallow_mode */
extern void T34f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_default_keyword_usage */
extern void T34f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_use_detachable_keyword */
extern void T34f174(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attached_keyword */
extern void T34f173(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_reference_keyword */
extern void T34f172(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_note_keyword */
extern void T34f171(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.set_use_attribute_keyword */
extern void T34f170(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM.initialize */
extern void T34f162(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T196c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T623c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T623f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T623f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1371c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1370f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1369c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1370c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T767c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T1420c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].set_internal_cursor */
extern void T1420f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T1420f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1601c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1600f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLUSTER].make_empty */
extern T0* T1599c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1600c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T189c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T620c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T620f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T620f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1365c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1364f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1363c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1364c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T34f162p1(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T232f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T34f149(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_map */
extern T0* T232c38(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T232f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T232f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].set_internal_cursor */
extern void T232f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T232f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].make */
extern T0* T632c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T232f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_slots */
extern void T232f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T232f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_clashes */
extern void T232f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T232f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T232f43(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern unsigned char ge824os4317;
extern T0* ge824ov4317;
extern T0* T82f136(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T407c355(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern unsigned char ge824os4316;
extern T0* ge824ov4316;
extern T0* T82f135(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T37c172(GE_context* ac);
/* ET_SYSTEM.tokens */
extern T0* T34f144(GE_context* ac, T0* C);
/* ET_LACE_PARSER.tokens */
extern T0* T69f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T202f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T229c116(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T229f121(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T229f126(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T229f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T229f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T229f186(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T229f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T229f101(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].force_last_new */
extern void T232f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T232f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T232f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_put */
extern void T232f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_put */
extern void T232f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T232f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T232f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].resize */
extern void T232f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T232f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T232f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T232f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T232f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T232f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T232f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].slots_resize */
extern void T232f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T232f25(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.make */
extern T0* T470c48(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found_item */
extern T0* T232f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T232f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].found */
extern T1 T232f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search */
extern void T232f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].search_position */
extern void T232f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T229f185(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T229f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T229f183(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T229f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T229f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T229f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T229f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T229f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T229f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T229f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T229f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T229f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T229f106(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T229f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T229f173(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T229f172(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T229f171(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T229f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T229f169(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T229f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T229f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T229f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T229f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T229f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T229f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T229f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T229f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T229f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T229f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T229f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T229f157(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T470f53(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].force_first */
extern void T1318f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put */
extern void T1318f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_cursors_right */
extern void T1318f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].move_right */
extern void T1318f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].put_last */
extern void T1318f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T229f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T229f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T229f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T229f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T229f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T229f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T229f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T229f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T229f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T229f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T229f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T229f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_immutable_string_32_type */
extern void T229f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T229f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T229f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T229f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T229f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T229f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T229f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T229f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T229f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T229f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T229f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T229f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T229f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern unsigned char ge723os6167;
extern T1 ge723ov6167;
extern T1 T229f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T229f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T229f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T229f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T449c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].make */
extern T0* T1314c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1314f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1314f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1528c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].make */
extern T0* T1311f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1312c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1311c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].force */
extern void T228f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T227f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T227f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T228f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T227f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T229f117(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T229f122(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T216f110(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T216f112(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T69f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T202f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T216c109(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T216f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T216f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T216f118(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T216f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T216f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T216f94(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T216f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T216f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T216f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T216f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T216f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T216f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T216f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T216f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T216f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T216f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T216f161(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T216f160(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T216f99(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T216f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T216f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T216f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T216f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T216f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T216f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T216f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T216f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T216f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T216f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T216f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T216f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T216f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T216f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T216f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T216f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T216f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T216f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T216f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T216f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T216f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T216f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T216f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T216f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T216f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T216f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T216f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T216f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T216f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T216f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T216f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T216f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T216f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T216f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T216f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T216f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T216f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T216f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T216f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T216f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T216f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T216f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T216f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T216f93(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T216f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T216f114(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T216f101(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T196f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T623f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1370f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1369f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1369f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T623f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1370f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1369f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T623f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T623f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T69f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T202f6(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T196c10(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T623f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T226f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T219f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T219f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T226f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T219f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T215f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T215c6(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T225f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T224f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T224f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T225f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T224f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T214f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T213f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T214f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T214f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T69f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T203f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T203f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T203f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T203f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T203f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T203f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T203f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T203f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T203f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T203f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T203f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T203f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T203f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T203f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T203f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T203f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T203f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T203f44(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T302f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T181f27(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T181f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T203f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T202f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T214c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T214f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T213f6(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T223f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T222f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T69f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T69f276(GE_context* ac, T0* C, T0* a1);
extern T1 T69f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T70f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T70f8(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T70f5(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T231f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LACE_PARSER.integer_ */
extern T0* T69f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T214f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T213c7(GE_context* ac);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T629c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].set_internal_cursor */
extern void T629f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T629f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1373c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T223f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].make_empty */
extern T0* T222c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T223c3(GE_context* ac);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T203f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T203f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T203f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T203f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T214f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T214f55(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].force */
extern void T223f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].fill_with */
extern void T222f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].extend */
extern void T222f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T214f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T213f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T629f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T629f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T629f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T629f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T69f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T202f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T213c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T629f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T221f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T218f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T218f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T221f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T218f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T69f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern unsigned char ge1085os13781;
extern T0* ge1085ov13781;
extern T0* T69f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge1085os13777;
extern T0* ge1085ov13777;
extern T0* T69f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge1085os13778;
extern T0* ge1085ov13778;
extern T0* T69f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern unsigned char ge1085os13775;
extern T0* ge1085ov13775;
extern T0* T69f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern unsigned char ge1085os13782;
extern T0* ge1085ov13782;
extern T0* T69f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern unsigned char ge1085os13783;
extern T0* ge1085ov13783;
extern T0* T69f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern unsigned char ge1085os13774;
extern T0* ge1085ov13774;
extern T0* T69f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge1085os13780;
extern T0* ge1085ov13780;
extern T0* T69f233(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T220f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T217f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T69f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ast_factory */
extern void T71f204(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T202f3(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T202f10(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T202f9(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T71c184(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T71f212(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T71f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T71f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T71f285(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T71f284(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T71f283(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T71f282(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T71f281(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T71f280(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T71f279(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T71f278(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T71f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T71f276(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T71f275(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T71f274(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T71f211(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T71f273(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T71f272(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T71f271(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T71f270(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T71f269(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T71f268(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T71f267(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T71f266(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T71f265(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T71f264(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T71f263(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T71f262(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T71f261(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T71f260(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T71f259(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T71f258(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T71f257(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T71f256(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T71f255(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T71f254(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T71f253(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T71f252(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T71f251(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T71f250(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T71f249(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T71f248(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T71f247(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T71f246(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T71f245(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_immutable_string_32_type */
extern void T71f244(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T71f243(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T71f242(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T71f241(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T71f240(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T71f239(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T71f238(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T71f237(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T71f236(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T71f235(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T71f234(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T71f233(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T71f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T71f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T71f209(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T71f208(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_preparse_shallow_mode */
extern void T71f207(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_default_keyword_usage */
extern void T71f206(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_use_detachable_keyword */
extern void T71f217(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attached_keyword */
extern void T71f216(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_reference_keyword */
extern void T71f215(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_note_keyword */
extern void T71f214(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attribute_keyword */
extern void T71f213(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.initialize */
extern void T71f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T71f205p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T71f162(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.tokens */
extern T0* T71f174(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].force */
extern void T220f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].fill_with */
extern void T217f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_SYSTEM].extend */
extern void T217f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T71f193(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T71f192(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T71f191(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T71f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T69f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T71f189(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T71f188(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T71f187(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T71f186(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T71f185(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T206f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T206f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T206f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T206f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T214f60(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T206f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T206f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T206f23(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T206f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].after */
extern T1 T627f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T206f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T206f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T206f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].off */
extern T1 T627f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T206f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T69f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T69f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T69f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T69f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T69f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T69f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T69f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T69f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T69f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T69f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f24(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T765f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T765f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T765f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T765f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge1566os2010;
extern T0* ge1566ov2010;
extern T0* T765f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f26(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T765f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge1557os800;
extern T0* ge1557ov800;
extern T0* T17f34(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T765f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T765f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T765f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T765f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T765c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T69f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T69f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T69f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T69f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T69f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T69f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T69f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T69f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T69f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T69f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T69f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T69f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T132f8(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_PARSER.std */
extern T0* T69f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T69f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T69f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T69f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T69f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T69f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T69f285(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T219f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T219f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].keep_head */
extern void T217f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].set_count */
extern void T217f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T227f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T227f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T224f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T224f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T218f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T218f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].keep_head */
extern void T222f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].set_count */
extern void T222f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T69f260(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T137f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T137f33(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T463f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_after */
extern void T463f10(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T206f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T206f55(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T206f54(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T206f53(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T206f52(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T206f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T69f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T69f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T69f143(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T203f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T203f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T203f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T203f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T203f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T203f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T626f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_after */
extern void T626f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T69f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T69c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T69f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T69f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T69f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge1084os13691;
extern T0* ge1084ov13691;
extern T0* T69f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T69f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T69f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T69f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T69f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T69f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge1084os13688;
extern T0* ge1084ov13688;
extern T0* T69f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T69f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T69f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge1084os13687;
extern T0* ge1084ov13687;
extern T0* T69f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge1084os13686;
extern T0* ge1084ov13686;
extern T0* T69f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge1084os13685;
extern T0* ge1084ov13685;
extern T0* T69f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge1084os13684;
extern T0* ge1084ov13684;
extern T0* T69f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge1084os13683;
extern T0* ge1084ov13683;
extern T0* T69f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge1084os13682;
extern T0* ge1084ov13682;
extern T0* T69f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge1084os13681;
extern T0* ge1084ov13681;
extern T0* T69f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge1084os13678;
extern T0* ge1084ov13678;
extern T0* T69f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T69f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T69f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T69f268(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T226f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T219c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T226c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].make */
extern T0* T220f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_SYSTEM].make_empty */
extern T0* T217c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_SYSTEM].default_create */
extern T0* T220c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T228f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T227c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T228c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T225f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T224c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T225c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T221f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T218c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T221c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T69f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T69f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T69f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge1086os14178;
extern T0* ge1086ov14178;
extern T0* T69f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T69f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge1086os14177;
extern T0* ge1086ov14177;
extern T0* T69f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge1086os14174;
extern T0* ge1086ov14174;
extern T0* T69f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T69f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T69f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T69f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge1086os14173;
extern T0* ge1086ov14173;
extern T0* T69f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge1086os14172;
extern T0* ge1086ov14172;
extern T0* T69f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge1086os14169;
extern T0* ge1086ov14169;
extern T0* T69f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T69f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T69f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge1086os14166;
extern T0* ge1086ov14166;
extern T0* T69f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T69f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T69f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T69f135(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T203c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T203f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T203f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].set_internal_cursor */
extern void T203f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T203f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T626c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T203f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T203f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T203f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T203f55(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T302c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T202c11(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T70c6(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T70f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T23f43(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T844f60(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T844f59(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f42(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T68f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T64f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T63f99(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].wipe_out */
extern void T178f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_wipe_out */
extern void T178f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_wipe_out */
extern void T178f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_wipe_out */
extern void T178f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_wipe_out */
extern void T178f42(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T614f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T614f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].unset_found_item */
extern void T178f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].move_all_cursors_after */
extern void T178f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_next_cursor */
extern void T617f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_after */
extern void T617f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].wipe_out */
extern void T177f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_wipe_out */
extern void T177f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_wipe_out */
extern void T177f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T177f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T177f48(GE_context* ac, T0* C);
/* SPECIAL [ET_ECF_LIBRARY].keep_head */
extern void T610f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].set_count */
extern void T610f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].unset_found_item */
extern void T177f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].move_all_cursors_after */
extern void T177f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_next_cursor */
extern void T609f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_after */
extern void T609f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T63f99p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T164f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T164f120(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T569f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T164f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T164f122(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T570f7(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T570f4(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T570f3(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T569f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].put_right */
extern void T1345f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1345f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_POSITION].make */
extern T0* T1345c4(GE_context* ac, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T569c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_POSITION].set_internal_cursor */
extern void T569f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T569f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1346c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T570f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1347f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1347c3(GE_context* ac, T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T570c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T64f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T64f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f14p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T64f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T200f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T200f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern unsigned char ge299os2856;
extern T0* ge299ov2856;
extern T0* T200f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T31c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T31f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T19f9(GE_context* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T404f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [IMMUTABLE_STRING_32].item */
extern T0* T869f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern unsigned char ge1438os5847;
extern T0* ge1438ov5847;
extern T0* T404f3(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].put */
extern void T869f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [IMMUTABLE_STRING_32].compare_objects */
extern void T869f7(GE_context* ac, T0* C);
/* ARRAY [IMMUTABLE_STRING_32].make_filled */
extern T0* T869c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [IMMUTABLE_STRING_32].make_filled_area */
extern void T869f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].make_filled */
extern T0* T870c6(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [IMMUTABLE_STRING_32].fill_with */
extern void T870f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [IMMUTABLE_STRING_32].extend */
extern void T870f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern void T870f4(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [IMMUTABLE_STRING_32].make_empty */
extern T0* T870c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T19c16(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T19f17(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern unsigned char ge1437os5828;
extern T0* ge1437ov5828;
extern T0* T31f3(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T404c5(GE_context* ac);
/* ARRAY [STRING_8].valid_index */
extern T1 T142f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T844f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T844f48(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T844f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T844f47(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T765f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f36(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T200f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_syntax */
extern T0* T200c190(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T200f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T200f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T200f274(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T200f274ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].item */
extern T0* T849f9(GE_context* ac, T0* C, T6 a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T157f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T179c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T179f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T64f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T200c189(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T63f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T155f2(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T840f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T841f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T841f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T840f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T841f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T840f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T840f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T841f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T840f13(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T841f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].off */
extern T1 T840f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T840f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T840f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T841f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T841f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T840c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T155f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T175f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T65c191(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T65f208(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T65f236(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T65f301(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T65f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T65f300(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T65f299(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T65f298(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T65f297(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T65f296(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T65f295(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T65f294(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T65f293(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T65f292(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T65f291(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T65f290(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T65f289(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T65f235(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T65f288(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T65f287(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T65f286(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T65f285(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T65f284(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T65f283(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T65f282(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T65f281(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T65f280(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T65f279(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T65f278(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T65f277(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T65f276(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T65f275(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T65f274(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T65f273(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T65f272(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T65f271(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T65f270(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T65f269(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T65f268(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T65f267(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T65f266(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T65f265(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T65f264(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T65f263(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T65f262(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T65f261(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T65f260(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T65f259(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T65f258(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T65f257(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T65f256(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T65f255(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T65f254(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T65f253(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T65f252(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T65f251(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T65f250(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T65f249(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T65f248(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T65f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T65f173(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T65f233(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T65f232(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_preparse_shallow_mode */
extern void T65f231(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_default_keyword_usage */
extern void T65f215(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_use_detachable_keyword */
extern void T65f213(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attached_keyword */
extern void T65f212(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_reference_keyword */
extern void T65f211(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_note_keyword */
extern void T65f210(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_use_attribute_keyword */
extern void T65f209(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.initialize */
extern void T65f230(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T65f230p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T65f181(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.tokens */
extern T0* T65f171(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make */
extern void T65f191p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T63f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system_config */
extern T0* T63f101ac1(GE_context* ac);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T192f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T195f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_read_only */
extern void T188f210(GE_context* ac, T0* C, T1 a1);
/* ET_LIBRARY.set_read_only */
extern void T460f182(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T63f104(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T63f104ot1(T0* a1, T0** a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].force_last_new */
extern void T178f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_put */
extern void T178f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_put */
extern void T178f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].force */
extern void T618f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T614f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T614f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_put */
extern void T178f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_put */
extern void T178f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_item */
extern T6 T178f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].hash_position */
extern T6 T178f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].resize */
extern void T178f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_resize */
extern void T178f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].special_integer_ */
extern T0* T178f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_resize */
extern void T178f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_resize */
extern void T178f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T618f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T614f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].key_storage_item */
extern T0* T178f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].clashes_item */
extern T6 T178f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].slots_resize */
extern void T178f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_modulus */
extern T6 T178f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_capacity */
extern T6 T178f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T175f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T197c104(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T197f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T197f110(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T197f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T197f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T197f90(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T197f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T197f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T197f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T197f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T197f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T197f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T197f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T197f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T197f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T197f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T197f153(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T197f152(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T197f97(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T197f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T197f151(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T197f150(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T197f149(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T197f148(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T197f147(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T197f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T197f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T197f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T197f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T197f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T197f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T197f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T197f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T197f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T197f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T197f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T197f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T197f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T197f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T197f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T197f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T197f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T197f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T197f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T197f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T197f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T197f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T197f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T197f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T197f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T197f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T197f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T197f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T197f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T197f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T197f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T197f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T197f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T197f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T197f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T197f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T197f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T197f89(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T197f107(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T197f106(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T197f88(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T199f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found_item */
extern T0* T178f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].item_storage_item */
extern T0* T178f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].found */
extern T1 T178f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search */
extern void T178f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].search_position */
extern void T178f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T844f17(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T844f83(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f26(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f67(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f71(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T63f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T122f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T122f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T121f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T121f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T122f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T63f20(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T196f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T623f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T196f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T66f36(GE_context* ac, T0* C, T0* a1);
extern T1 T66f36ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T65f321(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T65f320(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T188f192(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.ecf_1_15_0 */
extern unsigned char ge189os13510;
extern T0* ge189ov13510;
extern T0* T66f17(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern unsigned char ge824os3645;
extern T0* ge824ov3645;
extern T0* T82f70(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T349f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T65f319(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T188f191(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T66f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T65f318(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_target_type_attachment_mode */
extern void T188f190(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T65f317(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_attachment_type_conformance_mode */
extern void T188f189(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_OPTIONS.value */
extern T0* T809f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_settings */
extern void T66f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_unknown_builtin_reported */
extern void T65f326(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T65f325(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T65f324(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T66f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T65f323(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SETTINGS.value */
extern T0* T808f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_root */
extern void T66f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T811f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T65f328(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T65f327(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T812f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T65f329(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T189f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T620f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T620f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].forth */
extern void T177f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_forth */
extern void T177f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].add_traversing_cursor */
extern void T177f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].set_position */
extern void T609f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].remove_traversing_cursor */
extern void T177f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_item */
extern T6 T177f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_for_iteration */
extern T0* T177f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_item */
extern T0* T177f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_item */
extern T0* T177f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T177f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_after */
extern T1 T177f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].after */
extern T1 T609f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].start */
extern void T177f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_start */
extern void T177f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].cursor_off */
extern T1 T177f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].off */
extern T1 T609f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].is_empty */
extern T1 T177f21(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T63f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.select_target */
extern void T188f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.fill_universe */
extern void T66f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T66f37ot1(T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T806f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T806f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1574f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T805f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T805f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T805f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T805f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T805f5(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T844f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T805f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1448f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1448f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T804f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T804f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1572f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T803f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T803f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T803f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T803f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T803f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T803f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1447f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1447f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T802f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T802f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1569f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T801f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T801f4(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T801f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T801f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T801f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T801f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1446f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1446f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T65f322(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T199f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T798f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1443f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T798f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T189f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].force_last */
extern void T620f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].force */
extern void T1364f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].fill_with */
extern void T1363f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_LIBRARY].extend */
extern void T1363f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].resize */
extern void T620f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1364f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1363f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T620f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].extendible */
extern T1 T620f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T195f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T797f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1442f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T797f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T795f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T795f71ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1815f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T796f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T800f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T800f7ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T800f7ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1820f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T799f8(GE_context* ac, T0* C, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T1818f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULES.put_last */
extern void T800f5(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].force_last */
extern void T1445f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].force */
extern void T1615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].fill_with */
extern void T1616f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_FILE_RULE].extend */
extern void T1616f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].resize */
extern void T1445f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1615f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1616f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_capacity */
extern T6 T1445f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].extendible */
extern T1 T1445f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].do_if */
extern void T1445f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].item */
extern T0* T1445f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T66f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T800c6(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].make */
extern T0* T1445c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1445f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].new_cursor */
extern T0* T1445f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_FILE_RULE].make */
extern T0* T1617c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].make */
extern T0* T1615f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_FILE_RULE].make_empty */
extern T0* T1616c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_FILE_RULE].default_create */
extern T0* T1615c3(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T795f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T795f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T795f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.put_last */
extern void T796f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].force_last */
extern void T1441f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].force */
extern void T1604f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].fill_with */
extern void T1603f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CLUSTER].extend */
extern void T1603f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].resize */
extern void T1441f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1604f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1603f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_capacity */
extern T6 T1441f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].extendible */
extern T1 T1441f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T795f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T796f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T796c8(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].make */
extern T0* T1441c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].set_internal_cursor */
extern void T1441f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].new_cursor */
extern T0* T1441f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].make */
extern T0* T1605c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].make */
extern T0* T1604f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].make_empty */
extern T0* T1603c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CLUSTER].default_create */
extern T0* T1604c3(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T767f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].force_last */
extern void T1420f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].force */
extern void T1600f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLUSTER].fill_with */
extern void T1599f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLUSTER].extend */
extern void T1599f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].resize */
extern void T1420f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].aliased_resized_area */
extern T0* T1600f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLUSTER].aliased_resized_area */
extern T0* T1599f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_capacity */
extern T6 T1420f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].extendible */
extern T1 T1420f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T795f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T796f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T796f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T64f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T200c192(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T195f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_adapted_library */
extern void T194f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T194f101(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.parse_file */
extern void T194f101p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.element_name */
extern T0* T194f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.build_system_config */
extern void T194f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_library */
extern T0* T194f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].force_last_new */
extern void T177f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_put */
extern void T177f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_put */
extern void T177f68(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].force */
extern void T613f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].fill_with */
extern void T610f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_LIBRARY].extend */
extern void T610f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_put */
extern void T177f67(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_put */
extern void T177f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_item */
extern T6 T177f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].hash_position */
extern T6 T177f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].resize */
extern void T177f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].clashes_resize */
extern void T177f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].special_integer_ */
extern T0* T177f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_resize */
extern void T177f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].item_storage_resize */
extern void T177f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T613f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T610f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].key_storage_item */
extern T0* T177f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].slots_resize */
extern void T177f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_modulus */
extern T6 T177f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_capacity */
extern T6 T177f32(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY_PARSER.fill_system_config */
extern void T194f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T194f103ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.set_library_target */
extern void T188f125(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T187f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T187f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].item */
extern T0* T619f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eabq_error */
extern void T64f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabq */
extern T0* T200c197(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabp_error */
extern void T64f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabp */
extern T0* T200c196(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_targets */
extern void T188f124(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaby_error */
extern void T64f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaby */
extern T0* T200c195(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].forth */
extern void T420f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_forth */
extern void T836f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].add_traversing_cursor */
extern void T836f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_next_cursor */
extern void T420f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T836f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set */
extern void T420f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_TARGETS.put_last */
extern void T187f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].force_last */
extern void T619f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].force */
extern void T1361f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].fill_with */
extern void T1360f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_TARGET].extend */
extern void T1360f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].resize */
extern void T619f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1361f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_TARGET].aliased_resized_area */
extern T0* T1360f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_capacity */
extern T6 T619f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].extendible */
extern T1 T619f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T175f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T187c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].put_last */
extern void T619f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].make */
extern T0* T619c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].set_internal_cursor */
extern void T619f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_TARGET].new_cursor */
extern T0* T619f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_TARGET].make */
extern T0* T1362c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].make */
extern T0* T1361f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_TARGET].make_empty */
extern T0* T1360c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_TARGET].default_create */
extern T0* T1361c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_target */
extern T0* T194f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f27ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_external_objects */
extern void T66f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T66f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T66f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T66f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T66f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T66f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T66f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_option */
extern void T194f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T809f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T809f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.add_setting */
extern void T194f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T808f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T808f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_esve_error */
extern void T64f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esve */
extern T0* T200c273(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esvm_error */
extern void T64f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esvm */
extern T0* T200c272(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esne_error */
extern void T64f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esne */
extern T0* T200c271(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_esnm_error */
extern void T64f92(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_esnm */
extern T0* T200c270(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.add_variable */
extern void T194f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T68f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T68f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabu_error */
extern void T64f91(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabu */
extern T0* T200c269(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabt_error */
extern void T64f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabt */
extern T0* T200c268(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabs_error */
extern void T64f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabs */
extern T0* T200c267(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabr_error */
extern void T64f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabr */
extern T0* T200c266(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T66f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_root */
extern T0* T194f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T811f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacc_error */
extern void T64f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacc */
extern T0* T200c236(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T175f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T811c3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY_PARSER.attribute_value */
extern T0* T194f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacb_error */
extern void T64f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacb */
extern T0* T200c235(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaca_error */
extern void T64f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaca */
extern T0* T200c234(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T175f20(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T812c1(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabz_error */
extern void T64f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabz */
extern T0* T200c233(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.is_false */
extern T1 T194f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.is_true */
extern T1 T194f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T804f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1447f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].force */
extern void T1621f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1622f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1622f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1447f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1621f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1622f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1447f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1447f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T175f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T804c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1447f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1447c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1447f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1447f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1623c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1621f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1622c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1621c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_object */
extern T0* T194f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f44ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_condition */
extern void T803f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.put_last */
extern void T810f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].force_last */
extern void T1449f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].force */
extern void T1627f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].fill_with */
extern void T1628f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_CONDITION].extend */
extern void T1628f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].resize */
extern void T1449f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1627f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_CONDITION].aliased_resized_area */
extern T0* T1628f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_capacity */
extern T6 T1449f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].extendible */
extern T1 T1449f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_conditions */
extern T0* T175f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONDITIONS.make_ored */
extern T0* T810c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].put_last */
extern void T1449f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].make */
extern T0* T1449c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].set_internal_cursor */
extern void T1449f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].new_cursor */
extern T0* T1449f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CONDITION].make */
extern T0* T1629c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].make */
extern T0* T1627f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CONDITION].make_empty */
extern T0* T1628c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_CONDITION].default_create */
extern T0* T1627c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_condition */
extern T0* T194f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f56ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY_PARSER.new_version_condition */
extern T0* T194f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T64f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T200c265(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T822c5(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T64f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T200c264(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T64f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T200c263(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T64f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T200c262(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T64f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T200c261(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor */
extern T0* T79c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T79c18(GE_context* ac, T6 a1);
/* ET_ECF_LIBRARY_PARSER.new_custom_condition */
extern T0* T194f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaar_error */
extern void T64f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaar */
extern T0* T200c260(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaas_error */
extern void T64f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaas */
extern T0* T200c259(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T175f29(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T820c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T820c6(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaq_error */
extern void T64f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaq */
extern T0* T200c258(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaap_error */
extern void T64f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaap */
extern T0* T200c257(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaao_error */
extern void T64f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaao */
extern T0* T200c256(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaan_error */
extern void T64f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaan */
extern T0* T200c255(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dynamic_runtime_condition */
extern T0* T194f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaaw_error */
extern void T64f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaw */
extern T0* T200c254(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T175f28(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T819c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaav_error */
extern void T64f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaav */
extern T0* T200c253(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_dotnet_condition */
extern T0* T194f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaau_error */
extern void T64f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaau */
extern T0* T200c252(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T175f27(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T818c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaat_error */
extern void T64f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaat */
extern T0* T200c251(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_concurrency_condition */
extern T0* T194f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eade_error */
extern void T64f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eade */
extern T0* T200c250(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadd_error */
extern void T64f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadd */
extern T0* T200c249(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T175f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T817c6(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T817c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eadc_error */
extern void T64f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadc */
extern T0* T200c248(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadb_error */
extern void T64f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadb */
extern T0* T200c247(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_multithreaded_condition */
extern T0* T194f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaay_error */
extern void T64f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaay */
extern T0* T200c246(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_multithreaded_condition */
extern T0* T175f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_MULTITHREADED_CONDITION.make */
extern T0* T816c3(GE_context* ac, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eaax_error */
extern void T64f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaax */
extern T0* T200c245(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_build_condition */
extern T0* T194f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaag_error */
extern void T64f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaag */
extern T0* T200c244(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaah_error */
extern void T64f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaah */
extern T0* T200c243(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T175f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T815c6(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T815c5(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaaf_error */
extern void T64f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaf */
extern T0* T200c242(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaae_error */
extern void T64f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaae */
extern T0* T200c241(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY_PARSER.new_platform_condition */
extern T0* T194f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabb_error */
extern void T64f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabb */
extern T0* T200c240(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabc_error */
extern void T64f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabc */
extern T0* T200c239(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T175f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T814c7(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T814c6(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eaba_error */
extern void T64f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaba */
extern T0* T200c238(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaz_error */
extern void T64f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaaz */
extern T0* T200c237(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_condition */
extern T0* T175f22(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.make_anded_empty */
extern T0* T810c7(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T175f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T803c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacn_error */
extern void T64f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacn */
extern T0* T200c232(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacm_error */
extern void T64f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacm */
extern T0* T200c231(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T806f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1448f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1624f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1625f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1625f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1448f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1624f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1625f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1448f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1448f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T175f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T806c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1448f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1448c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1448f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1448f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1626c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1624f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1625c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1624c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_library */
extern T0* T194f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f42ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_condition */
extern void T805f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T175f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T805c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacl_error */
extern void T64f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacl */
extern T0* T200c230(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eack_error */
extern void T64f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eack */
extern T0* T200c229(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T802f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1446f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1618f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1619f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1619f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1446f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1618f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1619f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1446f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1446f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T175f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T802c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1446f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1446c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1446f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1446f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1620c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1618f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1619c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1618c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_external_include */
extern T0* T194f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f40ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_condition */
extern void T801f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T175f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T801c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacj_error */
extern void T64f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacj */
extern T0* T200c228(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaci_error */
extern void T64f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaci */
extern T0* T200c227(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T175f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T800c4(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].put_last */
extern void T1445f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_file_rule */
extern T0* T194f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f38ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_condition */
extern void T799f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T175f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T799c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T799f6(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T371f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1444f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1612f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1613f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1613f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T303f300(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T371f8(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T799f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T371f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1444c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1444f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1444f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1614c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1612f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1613c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1612c2(GE_context* ac);
/* DS_HASH_SET [STRING_8].force_last */
extern void T77f68(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.text */
extern T0* T154f20(GE_context* ac, T0* C);
extern T1 T154f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T154f21(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T798f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1443f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1610f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1609f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1609f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1443f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1610f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1609f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1443f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1443f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T175f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T798c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1443f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1443c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1443f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1443f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1611c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1610f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1609c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1610c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_dotnet_assembly */
extern T0* T194f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f36ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_condition */
extern void T199f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T199f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacs_error */
extern void T64f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacs */
extern T0* T200c221(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.case_insensitive_string_equality_tester */
extern unsigned char ge221os10753;
extern T0* ge221ov10753;
extern T0* T194f11(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T183c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eacr_error */
extern void T64f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacr */
extern T0* T200c220(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacq_error */
extern void T64f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacq */
extern T0* T200c219(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacp_error */
extern void T64f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacp */
extern T0* T200c218(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaco_error */
extern void T64f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaco */
extern T0* T200c217(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T199f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacw_error */
extern void T64f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacw */
extern T0* T200c226(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T199f15(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T175f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T199c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T199f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T199f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern unsigned char ge824os4315;
extern T0* ge824ov4315;
extern T0* T82f262(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T450c104(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T450f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T450f110(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T450f164(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T450f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T450f90(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T450f163(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T450f162(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T450f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T450f160(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T450f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T450f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T450f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T450f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T450f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T450f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T450f153(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T450f152(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T450f97(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T450f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T450f151(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T450f150(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T450f149(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T450f148(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T450f147(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T450f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T450f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T450f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T450f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T450f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T450f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T450f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T450f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T450f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T450f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T450f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T450f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T450f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T450f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T450f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T450f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T450f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T450f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T450f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T450f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T450f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T450f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T450f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T450f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T450f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T450f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T450f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T450f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T450f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T450f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T450f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T450f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T450f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T450f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T450f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T450f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T450f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T450f89(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T450f107(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T450f106(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T450f88(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T199f10(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eada_error */
extern void T64f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eada */
extern T0* T200c225(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacz_error */
extern void T64f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacz */
extern T0* T200c224(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacy_error */
extern void T64f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacy */
extern T0* T200c223(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacx_error */
extern void T64f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacx */
extern T0* T200c222(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T797f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1442f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].force */
extern void T1607f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1606f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1606f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1442f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1607f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1606f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1442f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1442f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T175f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T797c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1442f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1442c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1442f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1442f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1608c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1607f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1606c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1607c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.new_adapted_library */
extern T0* T194f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f34ot1(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_condition */
extern void T195f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T195f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T195f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacv_error */
extern void T64f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacv */
extern T0* T200c216(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T195f17(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T175f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T195c14(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T195f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T195f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern unsigned char ge824os4314;
extern T0* ge824ov4314;
extern T0* T82f224(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T460c105(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T460f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T460f111(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T460f165(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T460f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T460f164(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T460f163(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T460f162(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T460f161(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T460f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T460f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T460f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T460f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T460f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T460f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T460f154(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T460f153(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T460f99(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T460f110(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T460f152(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T460f151(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T460f150(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T460f149(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T460f148(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T460f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T460f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T460f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T460f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T460f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T460f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T460f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T460f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T460f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T460f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T460f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T460f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T460f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T460f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T460f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T460f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T460f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T460f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T460f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T460f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T460f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T460f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T460f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T460f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T460f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T460f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T460f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T460f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T460f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T460f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T460f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T460f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T460f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T460f114(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T460f113(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T460f112(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T460f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T460f90(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T460f108(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T460f107(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T460f107p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T460f89(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T195f11(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eaad_error */
extern void T64f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaad */
extern T0* T200c215(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaac_error */
extern void T64f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaac */
extern T0* T200c214(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaab_error */
extern void T64f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaab */
extern T0* T200c213(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaa_error */
extern void T64f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaa */
extern T0* T200c212(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.new_override */
extern T0* T194f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T194f32ot1(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_condition */
extern void T795f63(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_file_rules */
extern void T795f62(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_ecf_subclusters */
extern void T795f61(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eacu_error */
extern void T64f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eacu */
extern T0* T200c211(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_read_only */
extern void T795f60(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_each_error */
extern void T64f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_each */
extern T0* T200c210(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_recursive */
extern void T795f59(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_override */
extern void T795f58(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T175f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.make */
extern T0* T795c57(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T795f65(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T79f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern unsigned char ge189os13508;
extern T0* ge189ov13508;
extern T0* T795f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T795f64(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T796f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ERROR_HANDLER.report_eacg_error */
extern void T64f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacg */
extern T0* T200c209(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eace_error */
extern void T64f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eace */
extern T0* T200c208(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacf_error */
extern void T64f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacf */
extern T0* T200c207(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eacd_error */
extern void T64f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eacd */
extern T0* T200c206(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T175f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T796c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].put_last */
extern void T1441f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.new_cluster */
extern T0* T194f30(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T194f30ot1(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eact_error */
extern void T64f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eact */
extern T0* T200c205(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaam_error */
extern void T64f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eaam */
extern T0* T200c204(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eaal_error */
extern void T64f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaal */
extern T0* T200c203(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaaj_error */
extern void T64f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaaj */
extern T0* T200c202(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaak_error */
extern void T64f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaak */
extern T0* T200c201(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eaai_error */
extern void T64f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaai */
extern T0* T200c200(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T175f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.make */
extern T0* T66c27(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.make */
extern T0* T809c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T809f7ac1(GE_context* ac, T0* a1);
/* [attached] FUNCTION [[attached] TUPLE [STRING_8], INTEGER_32].set_rout_disp_final */
extern void T1403f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T35f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_hash_function */
extern void T55f101(GE_context* ac, T0* C, T0* a1);
/* KL_AGENT_HASH_FUNCTION [STRING_8].make */
extern T0* T1401c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T809f4(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T809f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.make */
extern T0* T808c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T808f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T808f4(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T808f3(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T68f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T66f20(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T68c8(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T68f8ac1(GE_context* ac, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T68f6(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T68f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T68f4(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabe_error */
extern void T64f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabe */
extern T0* T200c199(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabd_error */
extern void T64f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabd */
extern T0* T200c198(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].item */
extern T0* T420f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].start */
extern void T420f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_start */
extern void T836f14(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_off */
extern T1 T836f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].off */
extern T1 T420f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T154f9(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].new_cursor */
extern T0* T836f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].make */
extern T0* T420c10(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T188f123(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.ecf_version */
extern T0* T194f25(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T303f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T188f122(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T188f121(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabn_error */
extern void T64f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabn */
extern T0* T200c277(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.attribute_name */
extern T0* T194f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabm_error */
extern void T64f97(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabm */
extern T0* T200c276(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found_item */
extern T0* T177f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].found */
extern T1 T177f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search */
extern void T177f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].search_position */
extern void T177f64(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabo_error */
extern void T64f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabo */
extern T0* T200c275(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T175f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T188c119(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T188f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T188f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T188f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T188f187(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T188f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T188f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T188f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T188f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T188f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T188f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T188f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T188f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T188f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T188f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T188f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T188f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T188f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T188f110(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T188f132(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T188f174(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T188f173(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T188f172(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T188f171(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T188f170(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T188f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T188f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T188f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T188f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T188f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T188f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T188f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T188f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T188f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T188f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T188f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T188f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T188f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T188f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T188f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T188f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T188f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T188f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T188f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T188f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T188f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T188f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T188f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T188f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T188f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T188f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T188f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T188f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T188f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T188f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T188f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T188f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T188f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T188f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T188f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T188f134(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T188f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T188f101(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T188f130(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T188f129(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T188f129p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T188f100(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_config */
extern void T188f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.attribute_by_name */
extern T0* T154f5(GE_context* ac, T0* C, T0* a1);
extern T1 T154f5ot1(T0* a1, T0** a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].go_after */
extern void T420f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_go_after */
extern void T836f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_after */
extern void T420f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T154f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T154f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern unsigned char ge319os2865;
extern T0* ge319ov2865;
extern T0* T154f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T58c3(GE_context* ac);
/* ET_ECF_LIBRARY_PARSER.string_ */
extern T0* T194f16(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.windows_file_system */
extern T0* T194f15(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.file_system */
extern T0* T194f14(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.unix_file_system */
extern T0* T194f21(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.operating_system */
extern T0* T194f20(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T64f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T200c191(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T189f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T189f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.select_target */
extern void T65f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.update_state */
extern void T66f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T186f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T186f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T186f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T186f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.make */
extern T0* T186c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.target */
extern T0* T187f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGETS.count */
extern T6 T187f3(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.is_empty */
extern T1 T187f4(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T63f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T63f105(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T63f105ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_library_target */
extern void T65f207(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T63f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_targets */
extern void T65f206(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T63f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f27ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.add_option */
extern void T63f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T63f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T63f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T63f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T63f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T63f54(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T63f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T63f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f45ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T63f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f57ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T63f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T63f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T63f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T63f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T63f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T63f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T63f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T63f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T63f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f43ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T63f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f41ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T63f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f39ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T63f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f37ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T63f14(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T63f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f35ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_override */
extern T0* T63f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f33ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T63f31(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
extern T1 T63f31ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T65f205(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T63f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T65f204(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T65f203(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabl_error */
extern void T64f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabl */
extern T0* T200c194(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabk_error */
extern void T64f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabk */
extern T0* T200c193(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T63f19(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T157f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T164f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T164f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T164f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T164f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T164f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T164f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T164f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T164f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T164f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T575f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T583f5(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T582f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T584f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T583f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T164f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T583c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T164f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force_new */
extern void T571f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T571f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T571f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].force */
extern void T1352f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1348f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].extend */
extern void T1348f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T571f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T571f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T571f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T571f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T571f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T571f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T571f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T571f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T571f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T571f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1352f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1348f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T571f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T571f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T571f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T571f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T571f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T571f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T571f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T606c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T606f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T573c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T606f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T606f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T606f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T606f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T606f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T606f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T606f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T606f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T606f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T606f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T606f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T606f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T606f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1319os21976;
extern T0* ge1319ov21976;
extern T0* T606f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T606f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T606f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T606f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T606f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T606f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T606f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T606f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T606f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1319os21975;
extern T0* ge1319ov21975;
extern T0* T606f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1319os21972;
extern T0* ge1319ov21972;
extern T0* T606f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T606f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T606f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1319os21966;
extern T0* ge1319ov21966;
extern T0* T606f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T606f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T606f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T606f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T606f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T606f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1319os21960;
extern T0* ge1319ov21960;
extern T0* T606f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T606f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T606f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T606f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T606f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T606f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1319os21932;
extern T0* ge1319ov21932;
extern T0* T606f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T606f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T606f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T606f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T606f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T606f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T606f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T606f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T606f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T606f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T606f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T606f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T606f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T606f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T606f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T606f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T606f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T606f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T606f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T606f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T606f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T606f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T606f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T606f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T606f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T606f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T606f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T606f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1319os21904;
extern T0* ge1319ov21904;
extern T0* T606f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T606f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T606f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T606f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T606f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T606f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T606f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T606f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T606f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T606f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T606f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T606f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T606f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T606f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T606f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T606f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T606f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T606f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T606f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T606f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T606f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T606f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T606f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T606f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T606f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T606f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T606f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T606f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T606f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T606f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1344c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T606f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T164f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T603c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T603f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T603f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T603f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T603f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T603f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T603f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T603f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T603f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T603f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T603f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T603f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T603f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T603f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T603f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T603f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T603f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T603f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T603f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T603f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T603f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T603f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T603f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T603f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T603f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T603f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T603f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T603f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T603f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T603f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T603f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T603f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T603f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T603f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T603f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T603f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T603f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T603f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T603f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T603f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T603f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T603f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T603f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T603f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T603f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T603f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T603f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T603f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T603f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T603f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T603f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T603f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T603f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T603f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T603f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T603f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T603f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T603f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T603f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T603f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T603f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T603f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T603f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T603f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T603f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T603f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T603f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T603f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T603f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T603f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T603f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T603f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T603f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T603f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T603f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T603f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T603f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T603f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T603f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T603f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T603f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T603f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T603f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T603f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T603f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T603f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T603f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T603f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T603f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T603f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T603f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T603f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T603f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T603f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T603f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T164f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T575f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T164f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T164f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T603c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T592f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T592f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T592f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T592f23(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T594f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].aliased_resized_area */
extern T0* T596f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T595f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].put_right */
extern void T1359f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].attach_left */
extern void T1359f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [STRING_8].make */
extern T0* T1359c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T164f169(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T595f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T164f184(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T595c10(GE_context* ac);
/* DS_BILINKED_LIST [STRING_8].set_internal_cursor */
extern void T595f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T595f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1358c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].force */
extern void T594f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].fill_with */
extern void T596f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].extend */
extern void T596f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T592f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T592f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1228os20854;
extern T0* ge1228ov20854;
extern T0* T592f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T144c17(GE_context* ac);
/* DS_LINKED_LIST [STRING_8].set_internal_cursor */
extern void T144f22(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T144f11(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T173c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T592f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T592f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T592f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T592f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T592f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T592f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T592f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T164f168(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T591f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T593f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T592c12(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T591f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T593f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T593f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T592f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T592f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T592f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T592f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T592f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T592f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T588f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T590f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T590f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T588f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T590f4(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T589f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1357f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1357f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1357c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T164f166(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T589c7(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T589f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T589f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1356c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T164f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1356f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T589f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T589f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1356f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T589f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1356f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T164f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T575f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1356f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1356f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T589f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T589f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1356f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T586f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T586c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T586f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T586f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T586f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T586f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T586f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T586f20(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1355c6(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1355f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1355f5(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1539c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T586c9(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1355f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1540f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1540f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1540c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T586c8(GE_context* ac);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1355f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T164f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T586c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T164f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T586f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T586f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T586c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T586f18(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].force */
extern void T585f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T587f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].extend */
extern void T587f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T585f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T587f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T586c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T586f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T164f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T575f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T164f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T580f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T580f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T580f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T577f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T577f17(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T595f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1353f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T580f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T580f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T580f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T580f17(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T580f25(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].force */
extern void T579f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T581f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].extend */
extern void T581f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T579f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T581f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T580f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T580f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T580f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T580f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T580f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T580f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T580f28(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T580f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T580f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T580f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T580f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T580f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T580f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T164f154(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T580c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1353c2(GE_context* ac);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T580f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T580f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T580f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1354c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T580f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T580f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T580f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T580f40(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T576f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T578c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T576c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T164f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T164f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T577f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1358f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T595f15(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T595f16(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1358f12(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T595f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1358f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1358f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1358f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T595f14(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T595f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].off */
extern T1 T1358f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T577f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T577f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T595f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T577f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T577f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T577f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T577c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T577f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T577f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T164f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T577f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T577f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T164f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T604c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T604f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T604f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T604f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T604f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T604f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T604f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T604f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T604f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T604f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T604f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T604f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T604f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T604f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T604f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T604f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T604f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T604f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T604f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T604f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T604f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T604f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T604f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T604f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T604f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T604f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T604f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T604f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T604f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T604f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T604f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T604f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T604f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T604f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T604f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T604f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T604f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T604f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T604f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T604f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T604f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T604f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T604f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T604f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T604f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T604f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T604f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T604f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T604f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T604f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T604f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T604f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T604f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T604f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T604f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T604f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T604f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T604f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T604f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T604f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T604f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T604f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T604f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T604f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T604f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T604f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T604f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T604f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T604f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T604f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T604f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T604f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T604f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T604f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T604f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T604f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T604f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T604f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T604f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T604f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T604f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T604f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T604f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T604f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T604f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T604f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T604f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T604f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T604f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T604f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T604f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T604f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T604f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T604f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T604f50(GE_context* ac, T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T570f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1317os21395;
extern T0* ge1317ov21395;
extern T0* T164f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T573f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T164f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T573f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T573f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].force */
extern void T582f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].fill_with */
extern void T584f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].extend */
extern void T584f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T164f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T575f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T164f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T575f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T599f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T599f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T599f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].force */
extern void T598f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].fill_with */
extern void T600f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].extend */
extern void T600f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T598f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T600f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T599c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T599f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T164f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T164f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T164f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T164f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T575f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T164f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T164f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T575f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T164f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T164f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T164f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T164f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f74(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T573f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T845f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T845f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T231f2(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T164f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T845c29(GE_context* ac, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1455c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T573f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T571f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T571f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T164f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T164f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T164f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T164f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T164f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T164f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T164f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T164f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T164f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T164f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T164f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T164f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T844c67(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T844f85(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T843f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T843f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T843f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T843f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T164f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T164f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T164f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T164f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T164f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1317os21462;
extern T0* ge1317ov21462;
extern T0* T164f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1317os21463;
extern T0* ge1317ov21463;
extern T0* T164f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T164f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T844c71(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].force */
extern void T576f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].fill_with */
extern void T578f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].extend */
extern void T578f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T576f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T578f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T164f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T577f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T577f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T164f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T577c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T164f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T164f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T164f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T164f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T164f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T164f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T164f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T603f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T606f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T603f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T898c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T843f32(GE_context* ac, T0* C, T0* a1);
extern T1 T843f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T843f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T843f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T603f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T603f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T606f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T606f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T606f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T603f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T603f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T606f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T606f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T164f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T164f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T164f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T164f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T164f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T164f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T164f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T164f264(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].keep_head */
extern void T600f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].set_count */
extern void T600f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].keep_head */
extern void T596f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].set_count */
extern void T596f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T593f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T593f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T590f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T590f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T587f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].set_count */
extern void T587f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].keep_head */
extern void T584f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].set_count */
extern void T584f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T581f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].set_count */
extern void T581f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].keep_head */
extern void T578f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].set_count */
extern void T578f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T164f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T164f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T164f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T164f212(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T571f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T571f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T571f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T571f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T571f44(GE_context* ac, T0* C);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1348f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1348f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T571f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1351f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_after */
extern void T1351f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T164f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T566c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T566f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T566f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T566f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T566f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T566f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T566f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T566f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T566f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T566f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T566f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T566f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T566f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T566f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T566f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T566f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T566f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T566f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T566f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T566f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T566f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T566f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T566f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T566f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T566f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T566f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T566f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T566f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T566f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T566f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T566f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T566f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T566f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T566f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T566f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T566f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T566f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T566f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T566f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T566f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T566f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T566f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T566f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T566f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T566f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T566f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T566f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T566f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T566f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T566f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T566f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T566f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T566f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T566f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T566f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T566f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T566f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T566f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T566f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T566f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T566f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T566f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T566f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T566f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T566f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T566f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T566f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T566f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T566f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T566f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T566f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T566f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T566f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T566f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T566f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T566f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T566f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T566f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T566f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T566f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T566f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T566f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T566f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T566f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T566f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T566f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T566f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T566f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T566f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T566f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T566f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T566f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T566f70(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T122f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T122f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T121f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T121f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T63f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T63f12(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T63f22(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_finalize_mode */
extern void T63f98(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T63c97(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.create_library_parser */
extern void T63f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.set_parsed_dotnet_assemblies */
extern void T194f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.set_parsed_libraries */
extern void T194f97(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern T0* T194c96(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T194f96p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.create_library_parser */
extern void T194f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.string_equality_tester */
extern T0* T194f13(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY_PARSER.make_with_factory */
extern void T194f96p0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY_PARSER.ise_latest */
extern T0* T194f12(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T159f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T155c4(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T841c7(GE_context* ac);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].set_internal_cursor */
extern void T841f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T164f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T157c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T157f9(GE_context* ac, T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T554f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T159c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T159f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T159f12(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T557c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1340c2(GE_context* ac);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T557f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].set_internal_cursor */
extern void T557f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T557f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1341c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T557f37(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T557f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T557f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T557f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T557f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T557f33(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1342f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].make_empty */
extern T0* T1343c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1342c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T153c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T153f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T153f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T834f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].force_last */
extern void T834f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put_right */
extern void T1450f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].make */
extern T0* T1450c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].before_addition */
extern void T834f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T153f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T154f28(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].remove */
extern void T420f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_at_cursor */
extern void T836f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors */
extern void T836f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].set_current_cell */
extern void T420f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put */
extern void T1560f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].put_right */
extern void T1560f4(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_last_cell */
extern void T836f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].forget_right */
extern void T1560f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_last */
extern void T836f22(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_last_cursors_after */
extern void T836f27(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].wipe_out */
extern void T836f25(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].move_all_cursors_after */
extern void T836f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_last */
extern T1 T420f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_last */
extern T1 T836f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].remove_first */
extern void T836f21(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_first_cell */
extern void T836f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_ELEMENT_NODE].is_first */
extern T1 T420f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].cursor_is_first */
extern T1 T836f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T153f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].forth */
extern void T1408f13(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_forth */
extern void T834f17(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T834f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_next_cursor */
extern void T1408f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T834f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set */
extern void T1408f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].remove */
extern void T1408f12(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_at_cursor */
extern void T834f16(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors */
extern void T834f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_current_cell */
extern void T1408f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].put */
extern void T1450f6(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_last_cell */
extern void T834f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_DOCUMENT_NODE].forget_right */
extern void T1450f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_last */
extern void T834f20(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T834f26(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].set_after */
extern void T1408f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].wipe_out */
extern void T834f24(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T834f27(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_last */
extern T1 T1408f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T834f10(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].remove_first */
extern void T834f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_first_cell */
extern void T834f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].is_first */
extern T1 T1408f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T834f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].item */
extern T0* T1408f8(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].start */
extern void T1408f11(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_start */
extern void T834f15(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_off */
extern T1 T834f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].off */
extern T1 T1408f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T153f7(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].new_cursor */
extern T0* T834f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].make */
extern T0* T1408c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T153f6(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].last */
extern T0* T834f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T153f5(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].is_empty */
extern T1 T834f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T154c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].make */
extern T0* T836c11(GE_context* ac);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].set_internal_cursor */
extern void T836f12(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].make */
extern T0* T834c11(GE_context* ac);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].set_internal_cursor */
extern void T834f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1271os20736;
extern T0* ge1271ov20736;
extern T0* T153f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T516c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T516f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T516c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T159f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T556c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T157f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T158c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T158f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T158f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T158f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T157f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T553c26(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T553f37(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T553f38(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T553f42(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T553f20(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1339c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1337c10(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1537c8(GE_context* ac);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_internal_cursor */
extern void T1537f11(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1537f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1538c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T553f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T164f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T164c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T164f91(GE_context* ac, T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T571f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T571c36(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T571f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T571f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T571f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_internal_cursor */
extern void T571f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T571f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1351c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T571f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T571f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T571f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T571f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1352f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1348c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1352c3(GE_context* ac);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T571f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T164f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T164f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1313os21337;
extern T0* ge1313ov21337;
extern T0* T164f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T164f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T164f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T164f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T164f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T164f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T164f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T164f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1313os21332;
extern T0* ge1313ov21332;
extern T0* T164f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T164f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T164f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T164f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T164f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1313os21331;
extern T0* ge1313ov21331;
extern T0* T164f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1313os21327;
extern T0* ge1313ov21327;
extern T0* T164f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T164f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T164f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T164f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1313os21326;
extern T0* ge1313ov21326;
extern T0* T164f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1313os21322;
extern T0* ge1313ov21322;
extern T0* T164f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T164f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T164f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T164f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1313os21321;
extern T0* ge1313ov21321;
extern T0* T164f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1313os21317;
extern T0* ge1313ov21317;
extern T0* T164f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T164f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T164f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T164f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1313os21314;
extern T0* ge1313ov21314;
extern T0* T164f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T164f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T164f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1313os21311;
extern T0* ge1313ov21311;
extern T0* T164f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T164f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T164f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T164f214(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T598f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].make_empty */
extern T0* T600c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T598c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T594f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make_empty */
extern T0* T596c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T594c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T591f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T593c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T591c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T588f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T590c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T588c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T585f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T587c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T585c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T582f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T584c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T582c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T579f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T581c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T579c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T164f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T164f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T575c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T164f104(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_key_equality_tester */
extern void T178f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T63f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_map */
extern T0* T178c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_with_equality_testers */
extern void T178f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_sparse_container */
extern void T178f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].set_internal_cursor */
extern void T178f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].new_cursor */
extern T0* T178f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make */
extern T0* T617c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_slots */
extern void T178f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_clashes */
extern void T178f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_key_storage */
extern void T178f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_DOTNET_ASSEMBLY, STRING_8].make_item_storage */
extern void T178f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T618f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T614c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T618c3(GE_context* ac);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_key_equality_tester */
extern void T177f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_map */
extern T0* T177c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_with_equality_testers */
extern void T177f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_sparse_container */
extern void T177f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].set_internal_cursor */
extern void T177f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].new_cursor */
extern T0* T177f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_ECF_LIBRARY, STRING_8].make */
extern T0* T609c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_slots */
extern void T177f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_clashes */
extern void T177f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_key_storage */
extern void T177f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ECF_LIBRARY, STRING_8].make_item_storage */
extern void T177f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].make */
extern T0* T613f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_LIBRARY].make_empty */
extern T0* T610c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ECF_LIBRARY].default_create */
extern T0* T613c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f100p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T63f17(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T175c31(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T64c8(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T64f6(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T67f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T201f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T201f7(GE_context* ac, T0* C, T14 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].force */
extern void T624f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [NATIVE_STRING].force */
extern void T1372f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [NATIVE_STRING].extend */
extern void T1372f7(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].position */
extern T6 T624f22(GE_context* ac, T0* C);
/* SPECIAL [IMMUTABLE_STRING_32].force */
extern void T870f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].force */
extern void T125f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].deleted_position */
extern T6 T624f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].add_space */
extern void T624f37(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].accommodate */
extern void T624f38(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_indexes_map */
extern void T624f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_deleted_marks */
extern void T624f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_keys */
extern void T624f40(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_content */
extern void T624f39(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].put */
extern void T624f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].set_conflict */
extern void T624f45(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].found */
extern T1 T624f31(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].occupied */
extern T1 T624f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T624f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].compare_objects */
extern void T624f44(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].make */
extern T0* T624c34(GE_context* ac, T6 a1);
/* SPECIAL [NATIVE_STRING].make_empty */
extern T0* T1372c4(GE_context* ac, T6 a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].soon_full */
extern T1 T624f20(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].not_found */
extern T1 T624f19(GE_context* ac, T0* C);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].internal_search */
extern void T624f36(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].same_keys */
extern T1 T624f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T19f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* HASH_TABLE [NATIVE_STRING, IMMUTABLE_STRING_32].hash_code_of */
extern T6 T624f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T19f7(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T19f10(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T19c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T844f19(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f35(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T19f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T19f13(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T19f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern unsigned char ge1696os13652;
extern T0* ge1696ov13652;
extern T0* T201f5(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T23f21(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T23f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T54f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T53f262(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T54f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T54f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T54f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T160f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T54f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T771c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T567f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T567f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T154f7(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern unsigned char ge1271os20735;
extern T0* ge1271ov20735;
extern T0* T154f11(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T567c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T160f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f35ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T54f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T773c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T160f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f38ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T160f42(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f42ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1181os11229;
extern T0* ge1181ov11229;
extern T0* T160f29(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1181os11204;
extern T0* ge1181ov11204;
extern T0* T160f27(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1181os11227;
extern T0* ge1181ov11227;
extern T0* T160f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1181os11230;
extern T0* ge1181ov11230;
extern T0* T160f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1181os11213;
extern T0* ge1181ov11213;
extern T0* T160f13(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1181os11226;
extern T0* ge1181ov11226;
extern T0* T160f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T54f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T54f18(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T54f19(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T431c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1181os11217;
extern T0* ge1181ov11217;
extern T0* T160f11(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T160f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f37ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1181os11225;
extern T0* ge1181ov11225;
extern T0* T160f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1181os11224;
extern T0* ge1181ov11224;
extern T0* T160f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1181os11223;
extern T0* ge1181ov11223;
extern T0* T160f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1181os11222;
extern T0* ge1181ov11222;
extern T0* T160f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1181os11221;
extern T0* ge1181ov11221;
extern T0* T160f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1181os11220;
extern T0* ge1181ov11220;
extern T0* T160f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1181os11219;
extern T0* ge1181ov11219;
extern T0* T160f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1181os11209;
extern T0* ge1181ov11209;
extern T0* T160f16(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T54f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T777c9(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1181os11208;
extern T0* ge1181ov11208;
extern T0* T777f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T423f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T423f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T423f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T423f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T423f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T423f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1153os11426;
extern T0* ge1153ov11426;
extern T0* T412f2(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T423f40(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T423f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T423f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T423f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T423f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T423f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T423f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T412f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T423c37(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T423f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T423f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_internal_cursor */
extern void T423f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T423f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T878c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T423f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T423f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T423f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T423f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T423f49(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge1140os11461;
extern T0* ge1140ov11461;
extern T0* T160f15(GE_context* ac, T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T412c228(GE_context* ac);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1181os11216;
extern T0* ge1181ov11216;
extern T0* T160f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T160f36(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f36ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T160f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T54f25(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T776c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1181os11231;
extern T0* ge1181ov11231;
extern T0* T160f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1181os11212;
extern T0* ge1181ov11212;
extern T0* T160f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T160f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f39ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T160f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f43ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T160f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f44ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T54f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T775c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T160f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T54f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T428c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1181os11207;
extern T0* ge1181ov11207;
extern T0* T160f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1181os11215;
extern T0* ge1181ov11215;
extern T0* T160f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T160f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1181os11205;
extern T0* ge1181ov11205;
extern T0* T160f28(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T54f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T774c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T154f8(GE_context* ac, T0* C, T0* a1);
extern T1 T154f8ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T154f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T154f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T516f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T516f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1181os11203;
extern T0* ge1181ov11203;
extern T0* T160f12(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T54f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T772c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T154f6(GE_context* ac, T0* C, T0* a1);
extern T1 T154f6ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T160f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1181os11202;
extern T0* ge1181ov11202;
extern T0* T160f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T160f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].wipe_out */
extern void T162f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_wipe_out */
extern void T162f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_wipe_out */
extern void T162f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_wipe_out */
extern void T162f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_wipe_out */
extern void T162f41(GE_context* ac, T0* C);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T564f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].set_count */
extern void T564f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].unset_found_item */
extern void T162f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].move_all_cursors_after */
extern void T162f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_next_cursor */
extern void T563f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_after */
extern void T563f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T62f189(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T62f220(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T62f219(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T53f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T62f206(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.options */
extern T0* T53f19(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.garbage_collector */
extern T0* T409f107(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_garbage_collector */
extern unsigned char ge1152os12402;
extern T0* ge1152ov12402;
extern T0* T409f131(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.options */
extern T0* T409f118(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T62f205(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T409f106(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T782f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T409f127(GE_context* ac, T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T782f2(GE_context* ac, T0* C);
/* UT_TRISTATE.is_false */
extern T1 T782f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T62f204(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T409f105(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T409f124(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T62f203(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T409f104(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T409f121(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T53f18(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T844f74(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T62f202(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T417f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T418f10(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T415f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T414f70(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T463f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T137f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T463f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T137f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T137f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T408f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T144f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].put_right */
extern void T548f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [STRING_8].make */
extern T0* T548c3(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T463f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T137f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T463f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T463f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T137f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T463f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].before */
extern T1 T463f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.link */
extern T0* T409f110(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1152os12416;
extern T0* ge1152ov12416;
extern T0* T409f95(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T137f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T409f117(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T409f138(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T408f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T409f109(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1152os12405;
extern T0* ge1152ov12405;
extern T0* T409f137(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T409f135(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T408f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T409f108(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1152os12382;
extern T0* ge1152ov12382;
extern T0* T409f134(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T409f132(GE_context* ac, T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T408c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T62f201(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T417f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T415f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T415f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T872f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].force */
extern void T1466f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].fill_with */
extern void T1465f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].extend */
extern void T1465f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T872f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1466f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1465f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T872f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T872f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T414f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T415f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T414f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T415f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T415c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T872c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].set_internal_cursor */
extern void T872f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T872f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1467c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1466f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].make_empty */
extern T0* T1465c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1466c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T53f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f265ot1(T0* a1, T0** a2);
extern T1 T53f265ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_mounted_libraries */
extern void T62f211(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_options */
extern void T62f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T62f209(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T62f241(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_system_name */
extern void T62f208(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_clusters */
extern void T62f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T422f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T417f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T416f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T416f8(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T416f9(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T416f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T417f7(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T418f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T415f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T414f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T414f69(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T415f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T415f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.override_cluster */
extern T0* T409f103(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_override_cluster */
extern unsigned char ge1152os12434;
extern T0* ge1152ov12434;
extern T0* T409f120(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_override_cluster_declared */
extern T1 T409f102(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T53f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f267ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T414f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T871f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1464f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1464c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T871c6(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T871f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T871f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1463c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T53f150(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f150ot1(T0* a1, T0** a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T409f173(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T770f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T425f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T770f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1440f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1440c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T770c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T770f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T770f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1439c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T53f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T152f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T769c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern unsigned char ge1181os11228;
extern T0* ge1181ov11228;
extern T0* T53f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T53f257(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T152f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T425c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T53f149(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T409f184(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T53f148(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T409f195(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T53f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T53f146(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T152f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T409c143(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T53f32(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T53f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T53f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T53f266ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T53f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_optimize */
extern T0* T53f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T53f142(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T53f139(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T53f137(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T53f135(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern unsigned char ge1181os11218;
extern T0* ge1181ov11218;
extern T0* T53f133(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T53f132(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T409f237(GE_context* ac, T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T782f8(GE_context* ac, T0* C);
/* UT_TRISTATE.set_true */
extern void T782f6(GE_context* ac, T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T782c7(GE_context* ac);
/* UT_TRISTATE.set_undefined */
extern void T782f9(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T409f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1152os12267;
extern T0* ge1152ov12267;
extern T0* T409f100(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T77f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T77f70(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].key_storage_keep_head */
extern void T77f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_keep_head */
extern void T77f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T77f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T77f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.set_void_safety */
extern void T409f235(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_void_safety */
extern unsigned char ge1152os12266;
extern T0* ge1152ov12266;
extern T0* T409f98(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T409f234(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T409f233(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T409f232(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T409f231(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T409f230(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T409f229(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T409f228(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1152os12264;
extern T0* ge1152ov12264;
extern T0* T409f96(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_syntax */
extern void T409f227(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_syntax */
extern unsigned char ge1152os12263;
extern T0* ge1152ov12263;
extern T0* T409f139(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T409f226(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T409f225(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T409f224(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T409f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T409f222(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T409f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T409f220(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T409f219(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T409f218(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T409f217(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T409f216(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T409f215(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T409f214(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T409f213(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T409f212(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T409f211(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T409f210(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T409f209(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T409f208(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T409f207(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T409f206(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T409f205(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T409f204(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T409f203(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T409f202(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T409f201(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T409f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T409f199(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T409f198(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T409f197(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T409f196(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1152os12262;
extern T0* ge1152ov12262;
extern T0* T409f136(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T409f194(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T409f193(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T409f192(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T409f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1152os12261;
extern T0* ge1152ov12261;
extern T0* T409f133(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T409f190(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T409f189(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T409f188(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1152os12260;
extern T0* ge1152ov12260;
extern T0* T409f130(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T409f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T409f186(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T409f185(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T409f183(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T409f182(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T409f181(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1152os12259;
extern T0* ge1152ov12259;
extern T0* T409f128(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T409f180(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T409f179(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T54f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T430c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T409f178(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T409f177(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T409f176(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T409f175(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T409f174(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T409f172(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T409f171(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T409f170(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T409f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T409f168(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T409f167(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T409f166(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T409f165(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T409f164(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T409f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T409f162(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1152os12258;
extern T0* ge1152ov12258;
extern T0* T409f125(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T409f161(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T409f160(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T409f159(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T409f158(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T409f157(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T409f156(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T409f155(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T409f154(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T409f153(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T409f152(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1152os12257;
extern T0* ge1152ov12257;
extern T0* T409f122(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T409f151(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_attached_by_default */
extern void T409f150(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T54f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T429c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T429f4(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T409f149(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1152os12256;
extern T0* ge1152ov12256;
extern T0* T409f119(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T409f148(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T409f147(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T409f146(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T409f145(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T54f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T427c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T53f131(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T409f144(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T53f130(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T423f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T423f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T423f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T423f38(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.option_codes */
extern T0* T53f34(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T53f156(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T53f33(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T53f30(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T417f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T418f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].force */
extern void T875f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T874f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].extend */
extern void T874f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T418f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T875f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T874f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T418f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T418f8(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T54f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T426c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T416f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T416f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T417f2(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T417f3(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T152f2(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T417c5(GE_context* ac);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T418c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T418f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T418f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T876c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T875f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T874c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T875c3(GE_context* ac);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T53f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T416f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern unsigned char ge1181os11214;
extern T0* ge1181ov11214;
extern T0* T53f153(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T152f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T416c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T54f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T167f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T167f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f254ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG.set_libraries */
extern void T422f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.set_clusters */
extern void T422f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T167f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f256ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T167f139(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f139ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T167f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T167f249(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T167f246(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T167f142(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T167f138(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T167f137(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T167f136(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T167f135(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T167f21(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T167f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T167f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T167f255ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T167f134(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_optimize */
extern T0* T167f133(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T167f131(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T167f128(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T167f126(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T167f124(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T167f122(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T167f121(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T167f120(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T167f119(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.option_codes */
extern T0* T167f23(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T167f144(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T167f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T167f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T167f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T167f146(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T167f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T422f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T167f16(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_options */
extern void T422f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T167f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T167f15ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T414f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T414f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T415f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T414f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T414f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T414f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T409f116(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T409f115(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_recursive */
extern void T414f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.recursive */
extern T1 T409f114(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T409f113(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T414f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T409f112(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T409f111(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T167f143(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f143ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T167f248(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T167f248ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T414f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T414f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern unsigned char ge1181os11211;
extern T0* ge1181ov11211;
extern T0* T167f141(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T54f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T778c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern unsigned char ge1181os11210;
extern T0* ge1181ov11210;
extern T0* T167f140(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T152f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T414c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T414f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T415f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T167f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T167f12(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_name */
extern void T422f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T167f145(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T53f157(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T844f65(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].force_new */
extern void T162f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_put */
extern void T162f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_put */
extern void T162f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].force */
extern void T565f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T564f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].extend */
extern void T564f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_put */
extern void T162f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_put */
extern void T162f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_item */
extern T6 T162f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].hash_position */
extern T6 T162f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_item */
extern T6 T162f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].resize */
extern void T162f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_resize */
extern void T162f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].special_integer_ */
extern T0* T162f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_resize */
extern void T162f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_resize */
extern void T162f60(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T565f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T564f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_item */
extern T0* T162f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_resize */
extern void T162f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_modulus */
extern T6 T162f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_capacity */
extern T6 T162f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T152f5(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T422c7(GE_context* ac);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found_item */
extern T0* T162f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_item */
extern T0* T162f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found */
extern T1 T162f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search */
extern void T162f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search_position */
extern void T162f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T53f28(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T152f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T415c8(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T872f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T53f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f27ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T53f154(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f154ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T53f259(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f259ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T53f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T53f151(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T53f25(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T53f24(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T53f23(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T53f22(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_error_handler */
extern T0* T53f17(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ast_factory */
extern void T62f200(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_ast_factory */
extern T0* T53f16(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T62c188(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T62f218(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T62f295(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T62f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T62f294(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T62f293(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T62f292(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T62f291(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T62f290(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T62f289(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T62f288(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T62f287(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T62f286(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T62f285(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T62f284(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T62f283(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T62f217(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T62f282(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T62f281(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T62f280(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T62f279(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T62f278(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T62f277(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T62f276(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T62f275(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T62f274(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T62f273(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T62f272(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T62f271(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T62f270(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T62f269(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T62f268(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T62f267(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T62f266(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T62f265(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T62f264(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T62f263(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T62f262(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T62f261(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T62f260(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T62f259(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T62f258(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T62f257(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T62f256(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T62f255(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T62f254(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_immutable_string_32_type */
extern void T62f253(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T62f252(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T62f251(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T62f250(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T62f249(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T62f248(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T62f247(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T62f246(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T62f245(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T62f244(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T62f243(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T62f242(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T62f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T62f164(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T62f215(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_preparse_shallow_mode */
extern void T62f214(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_default_keyword_usage */
extern void T62f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_use_detachable_keyword */
extern void T62f225(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attached_keyword */
extern void T62f224(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_reference_keyword */
extern void T62f223(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_note_keyword */
extern void T62f222(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attribute_keyword */
extern void T62f221(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.initialize */
extern void T62f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T62f212p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T62f167(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.tokens */
extern T0* T62f161(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T53f15(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T154f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T53f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T161f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T161f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T161f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T54f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1389c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T161f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T161f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T161f9(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T161f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1181os11233;
extern T0* ge1181ov11233;
extern T0* T161f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1181os11232;
extern T0* ge1181ov11232;
extern T0* T161f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T161f12(GE_context* ac, T0* C, T0* a1);
extern T1 T161f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T410f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T160f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T160f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T160f33ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1181os11206;
extern T0* ge1181ov11206;
extern T0* T160f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T53f155(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T53f21(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T53c261(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T53f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T53f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T167f251(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T167c250(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T167f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T163f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T163f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T163c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T160c30(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T161c10(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_key_equality_tester */
extern void T162f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_map */
extern T0* T162c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_with_equality_testers */
extern void T162f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_sparse_container */
extern void T162f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_internal_cursor */
extern void T162f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T162f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T563c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_slots */
extern void T162f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_clashes */
extern void T162f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_key_storage */
extern void T162f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_item_storage */
extern void T162f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T565f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T564c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T565c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T152c9(GE_context* ac);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T173f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T144f24(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T144f25(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T173f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T144f26(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T173f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T844f23(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T844f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f29(GE_context* ac, T0* C, T2 a1, T6 a2);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T173f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T173f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T144f23(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T144f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].off */
extern T1 T173f7(GE_context* ac, T0* C);
/* ST_SPLITTER.split */
extern T0* T56f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T56f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T56f5(GE_context* ac, T0* C);
/* ST_SPLITTER.make */
extern T0* T56c9(GE_context* ac);
/* ST_SPLITTER.set_separators */
extern void T56f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T174f39(GE_context* ac, T0* C, T6 a1);
/* GEC.string_equality_tester */
extern T0* T23f20(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T54c8(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T54f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T35f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T35f1ot1(T0* a1, T0** a2);
extern T1 T35f1ot2(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T35f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T844f51(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T844f32(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T844f32ot1(T0* a1, T0** a2);
extern T1 T844f32ot2(T0* a1, T0** a2);
/* GEC.string_ */
extern T0* T23f18(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f6(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T30f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T30f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T30f61(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T30f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T30f66(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T30f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T30f66p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T30f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T30f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T130f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T130f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T30f59(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T30c59(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T30f59p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T30f64(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T30f69(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T23f41(GE_context* ac, T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T41c21(GE_context* ac, T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T46f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T151f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T151f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T137f11(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T33f8(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T51f10(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T39f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T139f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T139f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T545f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T139f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T545f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T139f23(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T39f26(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T405f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T405f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T405f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T405f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T405f10(GE_context* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern unsigned char ge16os10739;
extern T0* ge16ov10739;
extern T0* T39f30(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T405f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T405c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T122f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T39f23(GE_context* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T39f27(GE_context* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T39f33(GE_context* ac, T0* C);
/* AP_PARSER.windows_file_system */
extern T0* T39f32(GE_context* ac, T0* C);
/* AP_PARSER.operating_system */
extern T0* T39f31(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T40f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T40f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T40f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T141f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T40f21(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T141f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T40f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T40f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T40f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T40f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T40f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T40f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T40f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].off */
extern T1 T141f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T139f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T139f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T139f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T139f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T545f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T139f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T139f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T545f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T139f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T545f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T545f6(GE_context* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T39f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T138f20(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T138f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T541f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T138f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T541f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T138f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T138f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T138f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T138f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T138f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].after */
extern T1 T541f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T138f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T138f23(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_after */
extern void T541f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T138f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T541f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].before */
extern T1 T541f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T23f47(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T33f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T88c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T39f44(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T39f46(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T39f50(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge301os2855;
extern T0* ge301ov2855;
extern T0* T39f20(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T38c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T140f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T140f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T39f49(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T41c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T140f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T140f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T41c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T39f48(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T39f52(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T41c25(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T137f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T137f13(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unknown_option_error */
extern T0* T41c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f3(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T39f51(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T41c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T39f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T137f25(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T137f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T137f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T137f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T137f24(GE_context* ac, T0* C);
/* AP_PARSER.reset_parser */
extern void T39f47(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T39f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T138f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T138c17(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].set_internal_cursor */
extern void T138f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T138f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T541c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T544f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_OPTION].make_empty */
extern T0* T543c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T544c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T140f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T137f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T137f30(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T137f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T137f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T137f34(GE_context* ac, T0* C, T0* a1);
/* KL_ARGUMENTS.argument_count */
extern T6 T31f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T139f15(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T547f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T546f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T546f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T139f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T547f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T546f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T139f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T139f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T40c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T40f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T40f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T40f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T141c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T40f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T40f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T42c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T42f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T42f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T42f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.set_parameter_description */
extern void T47f25(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T47f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T47c23(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T47f27(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T47f26(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T47f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T46f25(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T46c23(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T46f27(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T45f28(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T45f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T45c26(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T45f30(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T44f28(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T44f32(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T144f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T144f10(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T144f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T144f9(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T144f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T144f12(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T144f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T144f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T44f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T44c25(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T44f30(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T144f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T44f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p0(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T138f18(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].force */
extern void T544f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [AP_OPTION].fill_with */
extern void T543f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].extend */
extern void T543f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T138f22(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].aliased_resized_area */
extern T0* T544f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].aliased_resized_area */
extern T0* T543f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T138f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T138f13(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T42f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T42c17(GE_context* ac, T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T39f43(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T39f42(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T39c41(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T51f21(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T51c20(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T51f24(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T51f23(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T51f22(GE_context* ac, T0* C);
/* AP_PARSER.make_empty */
extern void T39f45(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T140c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T140f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T139c14(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T139f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T139f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T545c8(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T547f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T546c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T547c3(GE_context* ac);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T33c7(GE_context* ac);
/* UT_ERROR_HANDLER.std */
extern T0* T33f4(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T32f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T32f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T32f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T32f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern unsigned char ge1193os2897;
extern T0* ge1193ov2897;
extern T0* T23f23(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T32c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T31f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T23f17(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T38f2(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T23f19(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T20f15(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T20f7(GE_context* ac, T0* C);
extern T1 T20f7ot1(T0* a1, T0** a2);
extern T1 T20f7ot2(T0* a1, T0** a2);
extern T1 T20f7ot3(T0* a1, T0** a2);
extern T1 T20f7ot4(T0* a1, T0** a2);
extern T1 T20f7ot5(T0* a1, T0** a2);
extern T1 T20f7ot6(T0* a1, T0** a2);
extern T1 T20f7ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T100f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T100f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T100f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T99f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T98f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T97f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T96f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T91f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T91f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T20f10(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T120c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T93c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T100c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T119c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T117c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T99c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T98c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T115c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T114c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T113c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T112c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T101f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T101f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T101c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T97c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T110c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T108c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T91c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T107c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T96c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T106c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T105c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T95f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T95f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern unsigned char ge1733os2763;
extern T0* ge1733ov2763;
extern T0* T20f6(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].put */
extern T0* T27c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T95c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T89c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T20f9(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern unsigned char ge1733os2761;
extern T0* ge1733ov2761;
extern T0* T20f4(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T20f14(GE_context* ac, T0* C);
/* CELL [NO_MORE_MEMORY].do_nothing */
extern void T27f3(GE_context* ac, T0* C);
/* CELL [detachable EXCEPTION].do_nothing */
extern void T26f3(GE_context* ac, T0* C);
/* CELL [detachable TUPLE [INTEGER_32, INTEGER_32, INTEGER_32, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, STRING_8, INTEGER_32, BOOLEAN]].do_nothing */
extern void T25f3(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern unsigned char ge1733os2760;
extern T0* ge1733ov2760;
extern T0* T20f3(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].force */
extern void T24f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].position */
extern T6 T24f22(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].deleted_position */
extern T6 T24f21(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].add_space */
extern void T24f39(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].accommodate */
extern void T24f40(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_indexes_map */
extern void T24f44(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_deleted_marks */
extern void T24f43(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_keys */
extern void T24f42(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_content */
extern void T24f41(GE_context* ac, T0* C, T0* a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].put */
extern void T24f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* HASH_TABLE [INTEGER_32, INTEGER_32].set_conflict */
extern void T24f47(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].found */
extern T1 T24f31(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].occupied */
extern T1 T24f29(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].empty_duplicate */
extern T0* T24f28(GE_context* ac, T0* C, T6 a1);
/* HASH_TABLE [INTEGER_32, INTEGER_32].compare_objects */
extern void T24f46(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].soon_full */
extern T1 T24f20(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].not_found */
extern T1 T24f19(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].internal_search */
extern void T24f38(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern unsigned char ge1733os2759;
extern T0* ge1733ov2759;
extern T0* T20f2(GE_context* ac, T0* C);
/* HASH_TABLE [INTEGER_32, INTEGER_32].do_nothing */
extern void T24f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T335f31(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T304f28(GE_context* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T129f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T30f60(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T30f65(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T30f70(GE_context* ac, T0* C, T14 a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].record */
extern void T1842f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1759f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1759f12p1(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].forget_left */
extern void T1844f8(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].forget_right */
extern void T1844f7(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_right */
extern void T1844f6(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_left */
extern void T1844f11(GE_context* ac, T0* C, T0* a1);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].item */
extern T0* T1843f4(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].record */
extern void T1840f4(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].record */
extern void T1838f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1759f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T1736f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T1759f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T1759f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1759f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1776f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1423f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1256f33(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1255f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1253f16(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T1171f36(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T982f29(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T825f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.set_arguments */
extern void T331f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T291f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T290f31(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T287f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1423f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1776c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T291f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T825c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T290f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T287f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1263f34(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1262f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T943f73(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T930f55(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T924f53(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove */
extern void T1441f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].keep_head */
extern void T1603f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ECF_CLUSTER].set_count */
extern void T1603f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_left */
extern void T1441f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_cursors_left */
extern void T1441f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_position */
extern void T1605f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].remove_last */
extern void T1441f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1441f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_next_cursor */
extern void T1605f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ECF_CLUSTER].set_after */
extern void T1605f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove */
extern void T872f15(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].keep_head */
extern void T1465f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].set_count */
extern void T1465f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_left */
extern void T872f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_cursors_left */
extern void T872f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_position */
extern void T1467f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove_last */
extern void T872f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_last_cursors_after */
extern void T872f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_next_cursor */
extern void T1467f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_after */
extern void T1467f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T629f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T629f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T629f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T1373f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T629f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T629f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T1373f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_after */
extern void T1373f7(GE_context* ac, T0* C);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1411f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T410f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1423f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1423f8p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1423f9(GE_context* ac, T0* C);
extern T1 T1423f9ot1(T0* a1, T0** a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1718f13(GE_context* ac, T0* C);
extern T1 T1718f13ot1(T0* a1, T0** a2);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T286f17(GE_context* ac, T0* C);
extern T1 T286f17ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1255f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1255f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1255f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1255f13(GE_context* ac, T0* C);
extern T1 T1255f13ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1253f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1253f14(GE_context* ac, T0* C);
extern T1 T1253f14ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1251f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T331f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T331f7(GE_context* ac, T0* C);
extern T1 T331f7ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1251f6(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1250f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1248f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1248f9(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1183f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T1130f11(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T337f13(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1247f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T1246f7(GE_context* ac, T0* C);
extern T1 T1246f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1245f17(GE_context* ac, T0* C);
extern T1 T1245f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge749os9868;
extern T0* ge749ov9868;
extern T0* T1245f6(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T1109f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1189f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1186f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T1000f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T1109f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T1091f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T1049f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T1046f6(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T1046f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T1091f7(GE_context* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T1043f7(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T988f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T988f15p1(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T960f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T960f26(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T940f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T287f15p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T287f17(GE_context* ac, T0* C);
extern T1 T287f17ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1423f7(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1255f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1253f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T1251f13(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T1250f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1248f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1247f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T1246f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1245f16(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T1109f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T1091f11(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T1043f6(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T988f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T960f24(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T940f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T287f11(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.reset */
extern void T1252f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1204f67(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1203f67(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1202f67(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1201f67(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T1200f67(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1204f72(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1203f72(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1202f72(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1201f72(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T1200f72(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1204f68(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1203f68(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1202f68(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1201f68(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T1200f68(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1211f44(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1210f44(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1197f45(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1211f40(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1210f40(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1197f41(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1237f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1237f12(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T1235f105(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T1235f40(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T1234f73(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T1233f91(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T856f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T856f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T830f73(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T830f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1237f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T1235f104(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T1234f72(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T1234f32(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T1233f90(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T1233f26(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T856f85(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T830f72(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1237f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T856f87(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1410f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1409f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T154f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1871f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1871f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T237f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T80f506(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T80f154(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T237f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T237f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1870f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1870f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T317f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T317f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T237f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T80f502(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f502ot1(T0* a1, T0** a2);
extern T1 T80f502ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T80f505(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T317f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T317f15ot1(T0* a1, T0** a2);
extern T1 T317f15ot2(T0* a1, T0** a2);
extern T1 T317f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1405f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1405f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T309f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T247f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T309f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T247f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T313f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T313f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T237f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T80f501(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f501ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T80f504(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T313f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T313f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T313f16p1ot1(T0* a1, T0** a2);
extern T1 T313f16p1ot2(T0* a1, T0** a2);
extern T1 T313f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1871f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1870f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T317f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T313f15(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1274f36(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1273f38(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1272f37(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1271f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1270f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1269f38(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1274f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1273f39(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1272f38(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1271f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1270f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1269f39(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T606f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T606f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T204f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T606f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T606f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T604f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T604f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T604f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T604f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T603f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T603f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T603f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T603f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T566f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T566f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T566f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T566f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T606f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T606f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T606f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T606f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1344f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T35f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1344f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1344f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1344f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1344f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1344f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T768f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1344f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1344f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T606f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T606f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T606f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T606f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T606f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T606f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1321os31213;
extern T0* ge1321ov31213;
extern T0* T606f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T606f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T606f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T606f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T606f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T606f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T606f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T606f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T606f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T606f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T606f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T606f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T604f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T604f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T604f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T604f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T604f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T604f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T604f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T604f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T604f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T604f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T604f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T604f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T604f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T604f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T604f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T604f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T604f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T604f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T604f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T604f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T604f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T603f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T603f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T603f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T603f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T603f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T603f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T603f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T603f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T603f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T603f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T603f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T603f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T603f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T603f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T603f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T603f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T603f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T603f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T603f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T603f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T603f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T566f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T566f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T566f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T566f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T566f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T566f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T566f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T566f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T566f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T566f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T566f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T566f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T566f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T566f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T566f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T566f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T566f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T566f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T566f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T566f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T566f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T606f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T604f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T603f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T566f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T606f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T845f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T604f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T603f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T566f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T606f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T604f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T603f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T566f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T606f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T604f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T603f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T566f202(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1236f8(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T450f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T229f188(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T216f174(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T197f167(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.parse_all */
extern void T450f169(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.parse_all */
extern void T229f190(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.parse_all */
extern void T216f176(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.parse_all */
extern void T197f169(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T450f168(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T450f182(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T470f87(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T470f31(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_MASTER_CLASS].has */
extern T1 T1318f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T470f29(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T450f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge824os3258;
extern T0* ge824ov3258;
extern T0* T82f676(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T229f189(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T229f203(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T229f202(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T216f175(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T216f189(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T216f188(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T197f168(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T197f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T197f181(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T450f166(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T781f6(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T37f239(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T37f266(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1683c14(GE_context* ac, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T37f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T78f240(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T78f267(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T78f41(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T781f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T229f204(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T781f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T216f190(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T197f166(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T450f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T450f170ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T453f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T449f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].item */
extern T0* T1314f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].force_last */
extern void T471f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_put */
extern void T471f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].clashes_put */
extern void T471f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_UNIVERSE].slots_item */
extern T6 T471f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].hash_position */
extern T6 T471f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].resize */
extern void T471f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_resize */
extern void T471f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].special_integer_ */
extern T0* T471f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_resize */
extern void T471f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_resize */
extern void T471f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].aliased_resized_area */
extern T0* T1322f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_UNIVERSE].aliased_resized_area */
extern T0* T1320f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].key_storage_item */
extern T0* T471f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_item */
extern T0* T471f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].clashes_item */
extern T6 T471f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].slots_resize */
extern void T471f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_modulus */
extern T6 T471f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].new_capacity */
extern T6 T471f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].item_storage_put */
extern void T471f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].force */
extern void T1322f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].fill_with */
extern void T1320f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_UNIVERSE].extend */
extern void T1320f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].search_position */
extern void T471f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].key_equality_tester */
extern T0* T471f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].unset_found_item */
extern void T471f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].has */
extern T1 T471f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T229f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T229f191ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T216f177(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T216f177ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T197f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T197f170ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T450f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T450f171ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].force_last */
extern void T448f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_put */
extern void T448f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_put */
extern void T448f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T448f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T448f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].resize */
extern void T448f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T448f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T448f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T448f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T448f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1311f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1312f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T448f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T448f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T448f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].slots_resize */
extern void T448f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T448f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T448f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T448f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_ASSEMBLY].force */
extern void T1311f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].fill_with */
extern void T1312f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_ASSEMBLY].extend */
extern void T1312f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].search_position */
extern void T448f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T448f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T448f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].has */
extern T1 T448f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T229f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T229f192ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T216f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T216f178ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T197f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T197f171ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T460f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T196f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T188f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T71f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T65f315(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T62f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T460f184(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T767f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T796f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].item */
extern T0* T1420f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T188f209(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T71f312(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T213f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T213f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T65f316(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T62f320(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T415f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T415f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T795f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T414f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T214f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T795f68(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T414f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T214f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T795f74(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T414f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T214f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T795f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T795f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T795f79(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T795f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.string_ */
extern T0* T795f40(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T414f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T414f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T414f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T414f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T414f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T414f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T214f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T214f44(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T214f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T214f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T214f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T214f39(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T795f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T796f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T414f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T415f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T214f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T213f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T795f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T796f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T414f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T415f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T214f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T213f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T795f69(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.process */
extern void T414f73(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T214f67(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T1278f7(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1278f8(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1301f105(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1199f39(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1198f43(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T829f39(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1199f43(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T1198f47(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T829f42(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1276f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T954f75(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1276f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1301f104(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T954f76(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1301f102(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1586f6(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1275f9(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1586f7(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1301f99(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1275f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1301f103(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1874f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1873f25(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1872f20(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1807f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1721f17(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1586f8(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1276f12(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1275f11(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T954f77(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T825f11(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1274f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1273f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1272f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1271f41(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1270f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1269f42(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T985f36(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1796f42(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1263f35(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1262f35(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T943f74(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T930f56(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T924f54(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T648f106(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1232f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1231f79(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1229f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1228f80(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T1227f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T530f73(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T521f74(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T368f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T367f77(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T365f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T336f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T259f84(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1232f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1231f80(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1229f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1228f81(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T1227f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T530f74(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T521f75(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T368f76(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T367f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T365f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T336f79(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T259f85(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1232f80(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1231f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1229f75(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1228f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T1227f76(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T530f77(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T521f78(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T368f72(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T367f74(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T365f74(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T336f75(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T259f81(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1232f109(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1231f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1229f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1228f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T1227f107(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T530f102(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T521f105(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T368f95(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T367f99(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T365f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T336f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T259f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1232f110(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1231f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1229f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1228f110(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T1227f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T530f103(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T521f106(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T368f96(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T367f100(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T365f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T336f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T259f112(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1232f107(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1231f105(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1229f102(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1228f107(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T1227f105(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T530f100(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T521f103(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T368f93(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T367f97(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T365f96(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T336f103(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T259f109(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1232f108(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1231f106(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1229f103(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1228f108(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T1227f106(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T530f101(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T521f104(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T368f94(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T367f98(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T365f97(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T336f104(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T259f110(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1232f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1231f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1229f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1228f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T1227f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T530f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T521f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T368f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T367f93(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T365f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T336f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T259f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1232f106(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1231f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1229f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1228f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T1227f104(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T530f99(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T521f102(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T368f90(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T367f94(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T365f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T336f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T259f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1232f102(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1231f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1229f97(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1228f102(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T1227f100(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T530f95(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T521f98(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T368f91(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T367f95(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T365f94(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T336f101(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T259f107(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1232f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1231f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1229f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1228f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T1227f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T530f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T521f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T368f82(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T367f84(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T365f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T336f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T259f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1232f101(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1231f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1229f96(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1228f101(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T1227f99(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T530f94(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T521f97(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T368f87(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T367f91(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T365f90(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T336f97(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T259f103(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1232f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1231f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1229f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1228f104(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T1227f102(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T530f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T521f100(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T368f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T367f92(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T365f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T336f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T259f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1232f82(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1231f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1229f77(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1228f79(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T1227f78(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T530f72(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T521f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T368f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T367f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T365f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T336f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T259f83(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1274f39(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1273f41(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1272f40(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1271f40(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1270f42(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1269f41(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1268f25(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1267f30(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1266f22(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1265f27(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1264f23(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1261f25(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1260f22(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1259f22(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1258f22(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1257f22(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1256f26(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1211f39(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1210f39(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1209f35(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1208f35(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1206f37(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1205f37(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1204f66(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1203f66(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1202f66(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1201f66(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T1200f66(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1199f38(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1198f42(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1197f40(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1174f29(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1171f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T1147f23(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T1133f28(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T985f31(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T982f26(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T957f34(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T946f31(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T829f38(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T746f27(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T330f27(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T321f22(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T320f24(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T319f25(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T312f34(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T293f30(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T291f29(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T290f27(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T285f35(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T181f109(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1874f24(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1873f24(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1872f19(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1721f19(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1274f47(GE_context* ac, T0* C);
extern T1 T1274f47ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T885f23(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T885f20(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T885f23p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T392f23(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T392f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T392f23p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T261f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1554f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T264f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T972f13(GE_context* ac, T0* C);
extern T1 T972f13ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1273f51(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T338f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1555f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1555f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1555f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T1122f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T1122f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T1122f5(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1555f4(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T1122f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1273f51p1(GE_context* ac, T0* C);
extern T1 T1273f51p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1272f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1272f49p1(GE_context* ac, T0* C);
extern T1 T1272f49p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1271f48(GE_context* ac, T0* C);
extern T1 T1271f48ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1270f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1270f52p1(GE_context* ac, T0* C);
extern T1 T1270f52p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1269f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1269f50p1(GE_context* ac, T0* C);
extern T1 T1269f50p1ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1268f28(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1267f32(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1266f24(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1265f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1264f24(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T1261f26(GE_context* ac, T0* C);
extern T1 T1261f26ot1(T0* a1, T0** a2);
extern T1 T1261f26ot2(T0* a1, T0** a2);
extern T1 T1261f26ot3(T0* a1, T0** a2);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1260f24(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1259f24(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1258f24(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1257f24(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1256f29(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1256f30(GE_context* ac, T0* C);
extern T1 T1256f30ot1(T0* a1, T0** a2);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1211f43(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1210f43(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1209f39(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1208f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1206f43(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1205f43(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1204f73(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1203f73(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1202f73(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1201f73(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T1200f73(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1199f42(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1198f46(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1197f44(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1174f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1171f33(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1171f10(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1171f33p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T1171f34(GE_context* ac, T0* C);
extern T1 T1171f34ot1(T0* a1, T0** a2);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T1147f25(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T1133f31(GE_context* ac, T0* C);
extern T1 T1133f31ot1(T0* a1, T0** a2);
/* ET_CALL_AGENT.reset */
extern void T985f34(GE_context* ac, T0* C);
extern T1 T985f34ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T982f27(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T982f28(GE_context* ac, T0* C);
extern T1 T982f28ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T648f105(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T957f43(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T957f44(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T946f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T829f41(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T746f30(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T330f30(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T330f16(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T321f23(GE_context* ac, T0* C);
extern T1 T321f23ot1(T0* a1, T0** a2);
extern T1 T321f23ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T320f25(GE_context* ac, T0* C);
extern T1 T320f25ot1(T0* a1, T0** a2);
extern T1 T320f25ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T319f27(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T312f36(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T293f34(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T291f30(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T291f30p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T291f33(GE_context* ac, T0* C);
extern T1 T291f33ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f32(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f32p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T290f32p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T290f33(GE_context* ac, T0* C);
extern T1 T290f33ot1(T0* a1, T0** a2);
/* ET_CURRENT.reset */
extern void T285f37(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1874f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T1873f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1872f18(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1721f18(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1274f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1273f40(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1272f39(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1271f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1270f41(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1269f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1268f24(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T1267f29(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1266f21(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1265f26(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1264f22(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T1261f24(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1260f21(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T1259f21(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T1258f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1257f21(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1256f25(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1211f38(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1210f38(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1209f34(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1208f34(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1206f36(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1205f36(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1204f65(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1203f65(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1202f65(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1201f65(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T1200f65(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1199f37(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1198f41(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1197f39(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1174f28(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1171f29(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T1147f22(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T1133f27(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T985f30(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T982f25(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T957f33(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T946f30(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T829f37(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T746f26(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T330f28(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T321f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T320f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T319f24(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T312f31(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T293f32(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T291f28(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T290f28(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T285f32(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T181f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1405f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1405f17ot1(T0* a1, T0** a2);
extern T1 T1405f17ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1405f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1405f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T531f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1336f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T531f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T531f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T520f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T519f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T322f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T305f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T273f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T238f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1405f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T531f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T520f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T519f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T322f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T305f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T273f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T238f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1405f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T531f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T520f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T519f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T322f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T305f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T273f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T238f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1405f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T531f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1336f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].force */
extern void T1535f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].fill_with */
extern void T1534f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].extend */
extern void T1534f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge1017os15174;
extern T0* ge1017ov15174;
extern T0* T1336f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1535c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1336f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1535f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1534f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1336f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1336f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1336f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1336f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1336f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1336c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1535f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].make_empty */
extern T0* T1534c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T273f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1696f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1695f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T642f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T500f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T251f28(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1696f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1695f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T642f29(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T500f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T251f30(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1696f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1695f22(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T642f30(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T500f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T251f32(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1696f26(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1695f23(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T642f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T500f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T251f33(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T460f173(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].forth */
extern void T632f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T232f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T232f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T632f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_position */
extern void T632f15(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T232f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].set_after */
extern void T632f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T470f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].item */
extern T0* T632f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T232f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].after */
extern T1 T632f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].start */
extern void T632f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_start */
extern void T232f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T232f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].off */
extern T1 T632f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T232f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T450f172(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T450f172p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T229f194(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T229f194p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T216f180p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T197f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T197f172p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T188f199(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T71f304(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T65f308(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T62f312(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T34f236(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T460f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].go_after */
extern void T632f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_go_after */
extern void T232f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T450f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T229f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T216f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T197f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T188f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T71f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T65f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T62f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T34f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.classes_do_if_until */
extern void T460f176(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T450f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if_until */
extern void T229f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T216f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if_until */
extern void T197f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.classes_do_if_until */
extern void T188f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.classes_do_if_until */
extern void T71f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.classes_do_if_until */
extern void T65f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.classes_do_if_until */
extern void T62f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.classes_do_if_until */
extern void T34f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIBRARY.master_classes_do_until */
extern void T460f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T450f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T229f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T216f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T197f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T188f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T71f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T65f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T62f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T34f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T460f177(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_all */
extern void T232f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T450f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T229f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T216f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T197f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T188f203(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T71f295(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T65f245(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T62f304(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T34f234(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_if */
extern void T460f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T450f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T450f174p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T229f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T229f196p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T216f182p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T197f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T197f174p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T188f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T71f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T65f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T62f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T34f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T460f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].do_if */
extern void T232f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T450f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T229f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T216f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T197f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T188f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T71f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T65f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T62f317(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T34f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T460f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T450f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T229f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T216f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T197f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T188f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T71f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T65f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T62f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T34f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T188f211(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T196f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T189f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T71f301(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T65f340(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T62f322(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T34f231(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T460f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T196f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T189f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T450f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T449f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T229f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T216f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T197f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T188f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T71f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T65f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T62f332(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T34f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1422f71(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1244f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1243f78(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1242f79(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1216f85(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T1083f82(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.process */
extern void T866f70(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T499f73(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T260f106(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T83f220(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T81f110(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1422f72(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1244f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1243f76(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1242f77(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1216f82(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1083f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.append_unaliased_to_string */
extern void T866f69(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T499f70(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T260f104(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T83f222(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T81f108(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1422f68(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1422f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1244f72(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1243f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1242f78(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1216f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1216f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T1083f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T1083f9(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T866f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T499f71(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T260f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T83f229(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T81f109(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1422f69(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1244f73(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1243f79(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1242f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T181f118(GE_context* ac, T0* C, T1 a1);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1242f21(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1216f84(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1216f81(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T1021f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T1083f81(GE_context* ac, T0* C);
/* ET_LIKE_N.reset */
extern void T866f71(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T499f74(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T260f107(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T83f270(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T81f111(GE_context* ac, T0* C);
extern T1 T81f111ot1(T0* a1, T0** a2);
extern T1 T81f111ot2(T0* a1, T0** a2);
extern T1 T81f111ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1422f70(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1244f74(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1243f80(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1242f81(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1216f86(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1083f83(GE_context* ac, T0* C);
/* ET_LIKE_N.reset_qualified_anchored_types */
extern void T866f72(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T499f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T260f108(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T83f271(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T81f112(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1330f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1329f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1328f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1327f5(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1306f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1305f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1304f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1299f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1298f14(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1297f18(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1296f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1295f8(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1294f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1283f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1282f14(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T446f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T446f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T1303f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T1303f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T1303f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T1303f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_keep_head */
extern void T1303f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_keep_head */
extern void T1303f46(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].keep_head */
extern void T1003f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLASS].set_count */
extern void T1003f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T1303f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T1303f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T1303f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T1303f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1526f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1526f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_after */
extern void T1526f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T1303f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T1303f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T1303f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T1303f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T1303f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T1303f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T1303f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T1303f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].last */
extern T0* T1303f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T1303f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T446f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1304f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T1152f4(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T446f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T446f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T78f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T529c746(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T78f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T37f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T37f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T78f201(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T529c745(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T37f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T78f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T529c744(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T78f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T37f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T37f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T1021f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T1021f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T446f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T1083f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T1083f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T642f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1216f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T1083f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T642f10(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.is_dotnet */
extern T1 T83f72(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T83f84(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T446f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1284f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1284f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1284f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1284f56(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T1071f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T1071f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1284f55(GE_context* ac, T0* C);
/* SPECIAL [ET_FLATTENED_FEATURE].keep_head */
extern void T1489f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].set_count */
extern void T1489f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1284f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1284f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1488f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_after */
extern void T1488f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1284f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1284f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1284f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1488f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1284f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1284f21(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T446f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1297f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1522f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1523f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1523f12(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1522f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1523f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1522f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1297f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1297f14ot1(T0* a1);
extern T1 T1297f14ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T261f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1297f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern unsigned char ge824os3689;
extern T0* ge824ov3689;
extern T0* T82f785(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T400c57(GE_context* ac);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1297f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T78f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T529c787(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T81f93(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T78f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T37f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T37f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T78f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T529c786(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1308f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T37f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1297f7(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.current_system */
extern T0* T1297f9(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1297f15(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T383f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T383f54(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].force */
extern void T742f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_TYPE].fill_with */
extern void T263f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].extend */
extern void T263f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T383f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].aliased_resized_area */
extern T0* T742f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].aliased_resized_area */
extern T0* T263f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T383f18(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T383f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1522f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1522f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1523f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1523f6(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1522f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1523f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1522c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1308f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1308f16(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1297f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T78f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T529c785(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T78f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T37f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T37f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T78f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T529c784(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T37f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T78f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T529c783(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T37f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1297f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1297f12ot1(T0* a1);
extern T1 T1297f12ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T78f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T529c782(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T78f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T37f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T37f58(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T78f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T529c781(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T37f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T78f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T529c780(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T37f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1284f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1284f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1284f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1284f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1284f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1488f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1284f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1284f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1284f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].off */
extern T1 T1488f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1284f36(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T446f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T446f28(GE_context* ac, T0* C, T0* a1);
extern T1 T446f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1309f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1309f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1284f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1284f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1284f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1284f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1284f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1285f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1284f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1284f27(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1292f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].wipe_out */
extern void T1507f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_wipe_out */
extern void T1507f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1507f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1507f45(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T977f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T977f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1507f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].unset_found_item */
extern void T1507f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1507f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_next_cursor */
extern void T1656f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].set_after */
extern void T1656f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1292f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1508f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1508f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1508f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1508f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1508f54(GE_context* ac, T0* C);
/* SPECIAL [ET_REPLICABLE_FEATURE].keep_head */
extern void T1658f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].set_count */
extern void T1658f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1508f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1508f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1657f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_after */
extern void T1657f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1508f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1508f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1508f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1657f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1508f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1508f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1292f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T78f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T529c779(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1665f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1665f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1514f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1665f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1514f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1665f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1514f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1665f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1514f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1665f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1514f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_after */
extern void T1665f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1514f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1665f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].before */
extern T1 T1665f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1514f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1665c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T529f134(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1514f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T78f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T37f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T37f56(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1309f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1308f14(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1509f15(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1309f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1523f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1882f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1882c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1523c7(GE_context* ac);
/* detachable DS_LINKED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1523f9(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1509f33(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1308f21(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1309f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1509f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1309f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1432f13(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize_with_default */
extern void T518f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].conservative_resize_with_default */
extern void T517f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1432f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1432f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1432c9(GE_context* ac, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1509f34(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1309f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1509f21(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T78f257(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T529c778(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T37f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1292f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1292f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1292f29(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1513f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1513f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1513f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1661f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1513f20(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1661f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1514f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].force */
extern void T1663f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].fill_with */
extern void T1664f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_FEATURE].extend */
extern void T1664f7(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1309f28(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1509f26(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1513f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1513f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1513f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1513f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1513f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1513f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1513f11(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].off */
extern T1 T1661f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1514c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].set_internal_cursor */
extern void T1514f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1663f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make_empty */
extern T0* T1664c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1663c2(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1508f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1508f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1508f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1508f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1508f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1508f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1508f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1508f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1657f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1508f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1508f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1508f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].off */
extern T1 T1657f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1508f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1432f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1292f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1508f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1508f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1508f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].force */
extern void T1660f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].fill_with */
extern void T1658f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].extend */
extern void T1658f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1508f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1508f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1508f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1508f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1508f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1508f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1508f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1508f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1508f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1660f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1658f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1508f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1508f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1508f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1508f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1512c6(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1513c12(GE_context* ac);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1513f14(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1513f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1661c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1512f7(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1513f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1662f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1662c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1508f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1508f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1508f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1508f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1292f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T78f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T529c771(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T78f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T37f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T37f49(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T78f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T529c770(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T78f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T37f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T37f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].wipe_out */
extern void T1506f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_wipe_out */
extern void T1506f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_wipe_out */
extern void T1506f61(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_wipe_out */
extern void T1506f60(GE_context* ac, T0* C);
/* SPECIAL [ET_CALL_NAME].keep_head */
extern void T1649f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].set_count */
extern void T1649f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_wipe_out */
extern void T1506f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].unset_found_item */
extern void T1506f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].move_all_cursors_after */
extern void T1506f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_next_cursor */
extern void T1653f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_after */
extern void T1653f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].forth */
extern void T1506f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_forth */
extern void T1506f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].add_traversing_cursor */
extern void T1506f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].set_position */
extern void T1653f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].remove_traversing_cursor */
extern void T1506f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_item */
extern T6 T1506f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T78f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T529c769(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T78f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T37f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T37f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_for_iteration */
extern T0* T1506f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_key */
extern T0* T1506f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_item */
extern T0* T1506f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_for_iteration */
extern T1 T1506f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_item */
extern T1 T1506f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_item */
extern T1 T1506f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1506f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_after */
extern T1 T1506f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].after */
extern T1 T1653f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].start */
extern void T1506f47(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_start */
extern void T1506f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].cursor_off */
extern T1 T1506f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].off */
extern T1 T1653f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].is_empty */
extern T1 T1506f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].wipe_out */
extern void T1505f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_wipe_out */
extern void T1505f60(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].clashes_wipe_out */
extern void T1505f59(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_wipe_out */
extern void T1505f58(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_wipe_out */
extern void T1505f57(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].unset_found_item */
extern void T1505f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].move_all_cursors_after */
extern void T1505f56(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_next_cursor */
extern void T1652f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_after */
extern void T1652f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].forth */
extern void T1505f42(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_forth */
extern void T1505f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].add_traversing_cursor */
extern void T1505f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].set_position */
extern void T1652f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_traversing_cursor */
extern void T1505f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_item */
extern T6 T1505f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T78f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T529c768(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T78f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T37f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T37f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_for_iteration */
extern T0* T1505f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_item */
extern T0* T1505f29(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_item */
extern T0* T1505f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].after */
extern T1 T1505f30(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_after */
extern T1 T1505f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].after */
extern T1 T1652f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].start */
extern void T1505f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].cursor_start */
extern void T1505f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].cursor_off */
extern T1 T1505f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].off */
extern T1 T1652f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].wipe_out */
extern void T1502f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_wipe_out */
extern void T1502f59(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_wipe_out */
extern void T1502f58(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_wipe_out */
extern void T1502f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_wipe_out */
extern void T1502f56(GE_context* ac, T0* C);
/* SPECIAL [ET_RENAME].keep_head */
extern void T1644f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].set_count */
extern void T1644f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].unset_found_item */
extern void T1502f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_all_cursors_after */
extern void T1502f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_next_cursor */
extern void T1643f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_after */
extern void T1643f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].forth */
extern void T1502f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_forth */
extern void T1502f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].add_traversing_cursor */
extern void T1502f74(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].set_position */
extern void T1643f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_traversing_cursor */
extern void T1502f73(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_item */
extern T6 T1502f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T78f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T529c767(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T78f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T37f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T37f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_for_iteration */
extern T0* T1502f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_item */
extern T0* T1502f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_item */
extern T0* T1502f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1502f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_after */
extern T1 T1502f21(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].after */
extern T1 T1643f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].start */
extern void T1502f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_start */
extern void T1502f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].cursor_off */
extern T1 T1502f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].off */
extern T1 T1643f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].force_last_new */
extern void T1507f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_put */
extern void T1507f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T976f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T977f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T977f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_put */
extern void T1507f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T1070f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T1071f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T1071f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_put */
extern void T1507f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_put */
extern void T1507f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_item */
extern T6 T1507f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].hash_position */
extern T6 T1507f27(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].resize */
extern void T1507f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_resize */
extern void T1507f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].special_integer_ */
extern T0* T1507f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_resize */
extern void T1507f56(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T976f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T977f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_resize */
extern void T1507f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1070f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T1071f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].key_storage_item */
extern T0* T1507f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].clashes_item */
extern T6 T1507f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].slots_resize */
extern void T1507f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_modulus */
extern T6 T1507f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_capacity */
extern T6 T1507f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].has */
extern T1 T1507f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search_position */
extern void T1507f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1288f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last_new */
extern void T1284f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1284f83(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1284f82(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].force */
extern void T1492f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].fill_with */
extern void T1489f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].extend */
extern void T1489f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1284f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1284f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1284f81(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_keep_head */
extern void T1284f89(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_keep_head */
extern void T1284f88(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1284f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1292f23(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1309f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1309c29(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1308f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1308f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.reset */
extern void T1309f30(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1309f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1432f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1432f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1432f12(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T518f1(GE_context* ac, T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T517f9(GE_context* ac, T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T517f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [INTEGER_32].twin */
extern T0* T124f7(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1309f22(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1309f21(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1308f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1509f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1509f20(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1509f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1284f70(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1292f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1509f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1509c27(GE_context* ac, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.reset */
extern void T1509f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found_item */
extern T0* T1507f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].item_storage_item */
extern T0* T1507f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].found */
extern T1 T1507f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].search */
extern void T1507f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1308f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1308f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].replace_found_item */
extern void T1506f46(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_put */
extern void T1506f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_item */
extern T1 T1506f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1308f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found_key */
extern T0* T1506f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].found */
extern T1 T1506f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search */
extern void T1506f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].search_position */
extern void T1506f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].hash_position */
extern T6 T1506f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1503f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_item */
extern T6 T1506f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].remove_found_item */
extern void T1505f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].remove_position */
extern void T1505f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_put */
extern void T1505f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_put */
extern void T1505f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].force */
extern void T1651f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].fill_with */
extern void T1649f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_NAME].extend */
extern void T1649f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_keep_head */
extern void T1505f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_keep_head */
extern void T1505f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_put */
extern void T1505f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].slots_put */
extern void T1505f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CALL_NAME].move_cursors_forth */
extern void T1505f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].search_position */
extern void T1505f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1505f68(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_equality_tester */
extern T0* T1505f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].slots_item */
extern T6 T1505f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].hash_position */
extern T6 T1505f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_item */
extern T0* T1505f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].found_item */
extern T0* T1505f21(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].found */
extern T1 T1505f17(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].search */
extern void T1505f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1308f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_found_item */
extern void T1502f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].remove_position */
extern void T1502f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_put */
extern void T1502f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_put */
extern void T1502f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_RENAME].force */
extern void T1650f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_RENAME].fill_with */
extern void T1644f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].extend */
extern void T1644f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_keep_head */
extern void T1502f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_keep_head */
extern void T1502f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_put */
extern void T1502f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_put */
extern void T1502f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].move_cursors_forth */
extern void T1502f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search_position */
extern void T1502f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1502f69(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_item */
extern T6 T1502f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].hash_position */
extern T6 T1502f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_item */
extern T0* T1502f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found_item */
extern T0* T1502f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].found */
extern T1 T1502f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].search */
extern void T1502f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1292f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1308f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.make */
extern T0* T1308c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.reset */
extern void T1308f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1284f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1284f80(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1284f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1284f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1284f78(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1492f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1489f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1284f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1284f33(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1292f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T78f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T529c777(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T78f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T37f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T37f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].put_new */
extern void T1506f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_put */
extern void T1506f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_put */
extern void T1506f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_put */
extern void T1506f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T496f4(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T496f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].resize */
extern void T1506f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].clashes_resize */
extern void T1506f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].special_integer_ */
extern T0* T1506f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].key_storage_resize */
extern void T1506f67(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].aliased_resized_area */
extern T0* T1651f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_NAME].aliased_resized_area */
extern T0* T1649f3(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].item_storage_resize */
extern void T1506f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].slots_resize */
extern void T1506f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_modulus */
extern T6 T1506f24(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1292f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T78f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T529c776(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T78f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T37f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T37f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1292f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T78f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T529c775(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T78f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T37f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T37f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].is_empty */
extern T1 T1505f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1292f31(GE_context* ac, T0* C, T0* a1);
extern T1 T1292f31ot1(T0* a1, T0** a2);
extern T1 T1292f31ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T78f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T529c774(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T78f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T37f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T37f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].put_new */
extern void T1505f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T1068f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T1068f6(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].resize */
extern void T1505f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].clashes_resize */
extern void T1505f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].special_integer_ */
extern T0* T1505f35(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CALL_NAME].key_storage_resize */
extern void T1505f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].item_storage_resize */
extern void T1505f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].slots_resize */
extern void T1505f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].new_modulus */
extern T6 T1505f36(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T78f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T529c773(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T78f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T37f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T37f51(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T495f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].is_empty */
extern T1 T1502f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1292f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T78f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T529c772(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T78f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T37f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T37f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].put_new */
extern void T1502f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T494f4(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1221f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T494f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].resize */
extern void T1502f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].clashes_resize */
extern void T1502f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].special_integer_ */
extern T0* T1502f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].key_storage_resize */
extern void T1502f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].item_storage_resize */
extern void T1502f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].aliased_resized_area */
extern T0* T1650f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].aliased_resized_area */
extern T0* T1644f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].slots_resize */
extern void T1502f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_modulus */
extern T6 T1502f39(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1292f26(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T78f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T529c766(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T78f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T37f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T37f44(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1293f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1518f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1518f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1518f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1518f43(GE_context* ac, T0* C);
/* SPECIAL [ET_DOTNET_FEATURE].keep_head */
extern void T1666f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].set_count */
extern void T1666f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1518f42(GE_context* ac, T0* C);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].keep_head */
extern void T1669f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].set_count */
extern void T1669f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1518f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1518f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1672f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_after */
extern void T1672f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1516f33(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1516f47(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1516f46(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1516f45(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1516f44(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1516f41(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1516f43(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1667f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_after */
extern void T1667f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1293f22(GE_context* ac, T0* C, T0* a1);
extern T1 T1293f22ot1(T0* a1, T0** a2);
extern T1 T1293f22ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1293f16(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1221c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge824os3687;
extern T0* ge824ov3687;
extern T0* T82f694(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T400c60(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1221f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1284f37(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1293f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1293f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1293f12(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T83f71(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1293f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1293f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1293f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1293f24(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1520f15(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1520f17(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1520f18(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1674f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1520f19(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1674f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1520f7(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1520f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1520f6(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1520f8(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1520f14(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1520f16(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1520f10(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].off */
extern T1 T1674f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1518f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1518f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1518f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1518f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1518f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1518f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1515f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1518f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1518f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1518f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1293f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1293f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1516f24(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1516f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1516f26(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1516f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1516f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1516f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1516f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1516f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1516f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1516f20(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T467f10(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1293f20(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1293f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1516f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1516f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1516f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1516f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1516f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].force */
extern void T1668f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].fill_with */
extern void T1666f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].extend */
extern void T1666f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last_new */
extern void T1518f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1518f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1518f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].force */
extern void T1673f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].fill_with */
extern void T1669f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].extend */
extern void T1669f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1518f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1518f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1518f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1518f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1518f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1518f55(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1668f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1666f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1518f54(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1673f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1669f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1518f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1518f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1518f21(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1520c11(GE_context* ac);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1520f13(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1520f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1674c7(GE_context* ac, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1520f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1675f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1675c3(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last_new */
extern void T1284f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1284f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1516f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1516f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1516f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1516f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1516f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1516f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1516f28(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T446f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T446f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1306f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T446f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1305f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1305f10(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T78f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T37f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.parent */
extern T0* T467f6(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T466f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T467f8(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T83f90(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T83f109(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T83f118(GE_context* ac, T0* C);
/* ET_CLASS.parents_count */
extern T6 T83f89(GE_context* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T83f108(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T1152f3(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.current_system */
extern T0* T446f13(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T446f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern T0* T446c15(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1306c5(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1306f5p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1306f3(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1297c10(GE_context* ac);
/* ET_SIGNATURE_CHECKER.make */
extern void T1297f10p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1293c18(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1518f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1518c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1518f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1518f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1518f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1518f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1672c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1518f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1518f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1518f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1668f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make_empty */
extern T0* T1666c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1668c3(GE_context* ac);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1518f57(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1673f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_empty */
extern T0* T1669c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1673c3(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1516f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1515c2(GE_context* ac);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1516c31(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1516f42(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1516f25(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1667c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1516f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1516f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1516f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1516f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1293f18p1(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1293f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1292c24(GE_context* ac);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1508c42(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1508f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1508f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1508f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1508f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1657c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1508f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1508f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1508f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1508f71(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1660f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1658c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1660c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1507f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern unsigned char ge872os29183;
extern T0* ge872ov29183;
extern T0* T1292f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1288c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_map */
extern T0* T1507c35(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1507f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_sparse_container */
extern void T1507f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].set_internal_cursor */
extern void T1507f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].new_cursor */
extern T0* T1507f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [ET_FEATURE_NAME, ET_ALIAS_NAME].make */
extern T0* T1656c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_slots */
extern void T1507f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_clashes */
extern void T1507f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_key_storage */
extern void T1507f59(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T976f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T977c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T976c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE_NAME, ET_ALIAS_NAME].make_item_storage */
extern void T1507f58(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T1070f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T1071c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T1070c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_key_equality_tester */
extern void T1506f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_map */
extern T0* T1506c43(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_with_equality_testers */
extern void T1506f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_sparse_container */
extern void T1506f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].set_internal_cursor */
extern void T1506f77(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].new_cursor */
extern T0* T1506f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_CALL_NAME].make */
extern T0* T1653c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_slots */
extern void T1506f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_clashes */
extern void T1506f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_key_storage */
extern void T1506f74(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].make */
extern T0* T1651f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CALL_NAME].make_empty */
extern T0* T1649c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_NAME].default_create */
extern T0* T1651c3(GE_context* ac);
/* DS_HASH_TABLE [BOOLEAN, ET_CALL_NAME].make_item_storage */
extern void T1506f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_equality_tester */
extern void T1505f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make */
extern T0* T1505c37(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].set_internal_cursor */
extern void T1505f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].new_cursor */
extern T0* T1505f20(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CALL_NAME].make */
extern T0* T1652c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CALL_NAME].make_slots */
extern void T1505f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_clashes */
extern void T1505f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_key_storage */
extern void T1505f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CALL_NAME].make_item_storage */
extern void T1505f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_key_equality_tester */
extern void T1502f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern unsigned char ge873os33846;
extern T0* ge873ov33846;
extern T0* T1292f16(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1503c2(GE_context* ac);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_map */
extern T0* T1502c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_with_equality_testers */
extern void T1502f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_sparse_container */
extern void T1502f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].set_internal_cursor */
extern void T1502f79(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].new_cursor */
extern T0* T1502f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_CALL_NAME].make */
extern T0* T1643c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_slots */
extern void T1502f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_clashes */
extern void T1502f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_key_storage */
extern void T1502f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_CALL_NAME].make_item_storage */
extern void T1502f75(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1650f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_RENAME].make_empty */
extern T0* T1644c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1650c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1292f24p1(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1292f18(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1284f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern unsigned char ge879os19423;
extern T0* ge879ov19423;
extern T0* T446f10(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1285c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1284c44(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1284f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1284f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_internal_cursor */
extern void T1284f67(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1284f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1488c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1284f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1284f65(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1284f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1284f63(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1492f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make_empty */
extern T0* T1489c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1492c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1305c8(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1305f8p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1305f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1304f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1304c7(GE_context* ac);
/* ET_PARENT_CHECKER3.make */
extern void T1304f7p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1304f4(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T1303c32(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_CLASS].set_internal_cursor */
extern void T1303f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T1303f29(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1526c6(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T1303f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T1303f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T1303f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T1303f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T1303f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T446f15p1(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T446f11(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T446f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T445f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T445f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T445f34(GE_context* ac, T0* C);
extern T1 T445f34ot1(T0* a1, T0** a2);
extern T1 T445f34ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T445f45(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern unsigned char ge824os3392;
extern T0* ge824ov3392;
extern T0* T82f736(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern unsigned char ge824os3304;
extern T0* ge824ov3304;
extern T0* T82f735(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T83f157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern unsigned char ge824os3507;
extern T0* ge824ov3507;
extern T0* T82f734(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T83f156(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern unsigned char ge824os3365;
extern T0* ge824ov3365;
extern T0* T82f733(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T83f155(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge824os3330;
extern T0* ge824ov3330;
extern T0* T82f732(GE_context* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T83f154(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T78f336(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T529c850(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T78f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T37f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T37f98(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge824os3452;
extern T0* ge824ov3452;
extern T0* T82f731(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge824os3353;
extern T0* ge824ov3353;
extern T0* T82f730(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T445f21(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T445f44(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T1033f4(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1225f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1224f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T1033f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T445f43(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T78f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T529c849(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T78f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T37f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T37f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T78f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T529c848(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T37f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T78f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T529c847(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T78f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T37f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T37f96(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T78f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T529c846(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T37f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T78f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T529c845(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T37f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T1038f8(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T1038f11(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T831f5(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T78f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T529c844(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T1038f12(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T1038f15(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T1007f12(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T492f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T1007f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T1007f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T1038f14(GE_context* ac, T0* C);
extern T1 T1038f14ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T78f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T37f329(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T37f95(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T831f3(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T831f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T445f42(GE_context* ac, T0* C);
extern T1 T445f42ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T78f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T529c843(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T78f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T37f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T37f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T78f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T529c842(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T78f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T37f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T37f93(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T78f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T529c841(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T78f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T37f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T37f92(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T78f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T529c840(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T78f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T37f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T37f91(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T78f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T529c839(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T37f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T78f321(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T529f763(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T529c835(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T78f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T37f320(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T37f88(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T78f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T529c834(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T78f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T37f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T37f87(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T78f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T529c833(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1309f27(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T37f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1284f74(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1284f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T83f269(GE_context* ac, T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1287f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1287f57(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1287f56(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1287f55(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1287f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1287f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1287f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1494f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_after */
extern void T1494f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T445f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last_new */
extern void T1287f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1287f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1287f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1287f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1287f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1287f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1287f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1287f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1287f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1287f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1287f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1287f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1287f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1287f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1287f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1287f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1287f23(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T78f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T529c832(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T529f235(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T78f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T37f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T37f86(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T78f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T529c831(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T37f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T78f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T529c830(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T78f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T37f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T37f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T78f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T529c829(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T78f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T37f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T37f84(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T78f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T529c828(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1308f13(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T37f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T78f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T529c827(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T37f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T78f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T529c826(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T37f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T78f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T529c825(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T37f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T78f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T529c824(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T37f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T78f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T529c823(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T37f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T78f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T529c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T37f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T78f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T529c821(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T37f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1287f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1287f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1287f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1287f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1287f47(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T83f268(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T445f40(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1296f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].wipe_out */
extern void T1521f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T716f19(GE_context* ac, T0* C);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].keep_head */
extern void T1374f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable DS_LINKABLE [INTEGER_32]].set_count */
extern void T1374f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].wipe_out */
extern void T1676f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_wipe_out */
extern void T1676f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1676f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1676f42(GE_context* ac, T0* C);
/* SPECIAL [ET_LIKE_FEATURE].keep_head */
extern void T1730f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].set_count */
extern void T1730f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1676f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].unset_found_item */
extern void T1676f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1676f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_next_cursor */
extern void T1769f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].set_after */
extern void T1769f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].wipe_out */
extern void T1596f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1596f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_next_cursor */
extern void T1732f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_after */
extern void T1732f10(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].reset */
extern void T1521f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T78f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T529c885(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].forth */
extern void T1732f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_forth */
extern void T1596f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].set_position */
extern void T1732f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1596f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1596f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].go_after */
extern void T1732f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_go_after */
extern void T1596f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].off */
extern T1 T1732f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].before */
extern T1 T1732f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T83f161(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].item */
extern T0* T1732f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_item */
extern T0* T1596f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].after */
extern T1 T1732f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].start */
extern void T1732f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].cursor_start */
extern void T1596f16(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].new_cursor */
extern T0* T1596f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_FEATURE].make */
extern T0* T1732c9(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T78f73(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T37f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T37f72(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1296f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1296f7(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1296f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].is_empty */
extern T1 T1596f6(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].sort */
extern void T1521f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].put_last */
extern void T1596f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].force */
extern void T1731f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].fill_with */
extern void T1730f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_FEATURE].extend */
extern void T1730f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].item */
extern T0* T1596f8(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].make */
extern T0* T1596c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].set_internal_cursor */
extern void T1596f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].make */
extern T0* T1731f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIKE_FEATURE].make_empty */
extern T0* T1730c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].default_create */
extern T0* T1731c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T78f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T529c820(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T78f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T37f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T37f83(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T78f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T529c819(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T37f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T78f304(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T529c818(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T37f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T78f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T529c817(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T37f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T78f302(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T529c816(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T37f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T78f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T529c815(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T37f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T78f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T529c814(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T37f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T78f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T529c813(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T78f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T37f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T37f82(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T78f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T529c812(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T78f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T37f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T37f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T445f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1295f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T445f38(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1297f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T445f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T78f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T529c838(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T78f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T37f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T37f90(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1284f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T78f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T529c837(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T78f32(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T37f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T37f31(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1294f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T728f16(GE_context* ac, T0* C);
/* SPECIAL [ET_PROCEDURE].keep_head */
extern void T858f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].set_count */
extern void T858f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T728f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1378f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_after */
extern void T1378f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T83f242(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T266f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T266f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].force */
extern void T859f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].fill_with */
extern void T858f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].extend */
extern void T858f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T728f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1563f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1563f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T728f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T728f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1708f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge947os29182;
extern T0* ge947ov29182;
extern T0* T445f26(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1563c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1708c2(GE_context* ac);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T732f16(GE_context* ac, T0* C);
/* SPECIAL [ET_QUERY].keep_head */
extern void T855f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_QUERY].set_count */
extern void T855f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T732f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T1379f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_after */
extern void T1379f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T83f241(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T265f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T265f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].force */
extern void T857f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_QUERY].fill_with */
extern void T855f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].extend */
extern void T855f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T732f7(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1562f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1562f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T732f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T732f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1705f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge947os29181;
extern T0* ge947ov29181;
extern T0* T445f25(GE_context* ac, T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1562c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1705c2(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1284f73(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1284f85(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_before */
extern void T1488f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T732f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T732f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].aliased_resized_area */
extern T0* T857f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].aliased_resized_area */
extern T0* T855f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T732f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T732f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T728f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T728f24(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].aliased_resized_area */
extern T0* T859f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].aliased_resized_area */
extern T0* T858f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T728f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T728f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T445f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T445f48(GE_context* ac, T0* C, T0* a1);
extern T1 T445f48ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T78f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T529c857(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T78f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T37f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T37f101(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T78f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T529c856(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T78f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T37f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T37f100(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T78f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T529c855(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T37f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T78f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T529c854(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T37f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T445f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1309f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1509f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1309f35(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1509f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1432f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1432f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1432f11(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1308f20(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1236c7(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].wipe_out */
extern void T1302f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1302f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1302f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1302f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1302f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].unset_found_item */
extern void T1302f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1302f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_next_cursor */
extern void T1525f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_after */
extern void T1525f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].forth */
extern void T1302f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_forth */
extern void T1302f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1302f76(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].set_position */
extern void T1525f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1302f75(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_item */
extern T6 T1302f30(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T395f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge674os19989;
extern T0* ge674ov19989;
extern T0* T395f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1302f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_item */
extern T0* T1302f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1302f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].after */
extern T1 T1302f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_after */
extern T1 T1302f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].after */
extern T1 T1525f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].start */
extern void T1302f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_start */
extern void T1302f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].cursor_off */
extern T1 T1302f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].off */
extern T1 T1525f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].is_empty */
extern T1 T1302f34(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T395c5(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove */
extern void T1302f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].remove_position */
extern void T1302f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_put */
extern void T1302f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_put */
extern void T1302f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_keep_head */
extern void T1302f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_keep_head */
extern void T1302f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_put */
extern void T1302f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_put */
extern void T1302f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].move_cursors_forth */
extern void T1302f72(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].internal_set_key_equality_tester */
extern void T1302f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_item */
extern T6 T1302f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].hash_position */
extern T6 T1302f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1302f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].search_position */
extern void T1302f53(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T1007f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T468f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1308f19(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1308f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T78f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T529c853(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T37f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1308f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].force_last */
extern void T1302f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].resize */
extern void T1302f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].clashes_resize */
extern void T1302f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1302f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].key_storage_resize */
extern void T1302f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].item_storage_resize */
extern void T1302f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].slots_resize */
extern void T1302f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_modulus */
extern T6 T1302f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_capacity */
extern T6 T1302f25(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T445f53(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T78f354(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T529c868(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T529f282(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T78f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T37f353(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T37f104(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1308f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T445f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T78f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T529c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T78f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T37f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T37f110(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T78f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T529c878(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T37f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T445f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T78f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T529c877(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T78f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T37f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T37f109(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T78f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T529c876(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T37f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T78f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T529c875(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T78f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T37f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T37f108(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T445f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T78f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T529c874(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T78f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T37f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T37f107(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T78f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T529c873(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T37f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T78f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T529c872(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T37f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T78f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T529c871(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T37f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T78f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T529c870(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T37f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T78f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T529c869(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T78f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T37f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T37f106(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1309f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T445f27(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T445f27ac1(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_CLASS]].set_rout_disp_final */
extern void T473f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1290f16(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT_LIST].keep_head */
extern void T1496f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].set_count */
extern void T1496f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1290f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1497f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_after */
extern void T1497f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1291f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1291f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1291f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1291f64(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1291f63(GE_context* ac, T0* C);
/* SPECIAL [ET_CLIENT].keep_head */
extern void T1501f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].set_count */
extern void T1501f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1291f48(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1291f62(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1499f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_after */
extern void T1499f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1291f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1291f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1291f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1499f12(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1291f71(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_before */
extern void T1499f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1291f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T1007f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T1007f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1291f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1291f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1291f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1291f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1291f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].before */
extern T1 T1499f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1291f51(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1291f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1291f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].off */
extern T1 T1499f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1291f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].for_all */
extern T1 T1724f6(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1828f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1724f12(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].forth */
extern void T1499f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1291f75(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1828f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1724f11(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].go_after */
extern void T1499f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1291f74(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].item */
extern T0* T1828f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1724f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].key */
extern T0* T1499f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1291f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1291f35(GE_context* ac, T0* C, T6 a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1828f3(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].after */
extern T1 T1499f8(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1828f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1724f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].start */
extern void T1499f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1291f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1724f4(GE_context* ac, T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1828c5(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1291f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1499c10(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].keys */
extern T0* T1291f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1724c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1724f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1724f5(GE_context* ac, T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make_with_table_cursor */
extern T0* T1828c9(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].is_empty */
extern T1 T1290f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1291f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1291f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1291f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1291f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1291f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1291f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1291f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1291f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1291f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1291f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1291f68(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].aliased_resized_area */
extern T0* T1500f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].aliased_resized_area */
extern T0* T1501f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1291f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1291f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1291f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1291f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].force */
extern void T1500f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT].fill_with */
extern void T1501f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].extend */
extern void T1501f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1291f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T1007f9(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T492f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T1007f11(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T468f6(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T468f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove */
extern void T1290f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_left */
extern void T1290f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_cursors_left */
extern void T1290f19(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_position */
extern void T1497f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove_last */
extern void T1290f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_last_cursors_after */
extern void T1290f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T1007f8(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T468f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1290f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1290f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1290f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].force */
extern void T1495f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].fill_with */
extern void T1496f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].extend */
extern void T1496f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1290f17(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1495f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1496f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1290f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1290f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T1068f9(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1222f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T1068f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1222f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T1068f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T445f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T445f52(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1301f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T78f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T529c852(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T885f13(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T885f15(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T885f14(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T78f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T37f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T37f99(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T885f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T78f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T529c851(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T392f13(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T392f15(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T392f14(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T37f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T392f8(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T445f51(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T78f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T529c867(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T37f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T78f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T529c866(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T78f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T37f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T37f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T78f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T529c865(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T37f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T78f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T529f765(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T529c864(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T37f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T78f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T529c863(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T37f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T78f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T529c862(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T37f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T78f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T529c861(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T78f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T37f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T37f103(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T78f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T529c860(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T78f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T37f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T37f102(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T78f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T529c859(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T37f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T78f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T529c858(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T37f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1509f17(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T445f49(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1300f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T78f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T529c836(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T78f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T37f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T37f89(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T445f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1284f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1284f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1488f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1284f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1284f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T445f35(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T445f33(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1298f9(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T445f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1299f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1299f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T1083f6(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T445f23(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T445f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.make */
extern T0* T445c28(GE_context* ac);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_map */
extern T0* T1302c39(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1302f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_sparse_container */
extern void T1302f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].set_internal_cursor */
extern void T1302f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].new_cursor */
extern T0* T1302f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FEATURE, INTEGER_32].make */
extern T0* T1525c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_slots */
extern void T1302f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_clashes */
extern void T1302f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_key_storage */
extern void T1302f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FEATURE, INTEGER_32].make_item_storage */
extern void T1302f42(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1301c9(GE_context* ac);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge963os29511;
extern T0* ge963ov29511;
extern T0* T1301f5(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1301f6(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1301f9p1(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1301f4(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1300c12(GE_context* ac);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1300f12p1(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1300f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_map */
extern T0* T1524c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_with_equality_testers */
extern void T1524f34(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_sparse_container */
extern void T1524f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].set_internal_cursor */
extern void T1524f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_cursor */
extern T0* T1524f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make */
extern T0* T1678c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].unset_found_item */
extern void T1524f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_slots */
extern void T1524f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_modulus */
extern T6 T1524f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_clashes */
extern void T1524f38(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_key_storage */
extern void T1524f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].make_item_storage */
extern void T1524f36(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make */
extern T0* T1679f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].make_empty */
extern T0* T1681c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].default_create */
extern T0* T1679c3(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1299c8(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1299f8p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1299f4(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1298c8(GE_context* ac);
/* ET_PARENT_CHECKER2.make */
extern void T1298f8p1(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1298f4(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1296c8(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make_default */
extern T0* T1521c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].make */
extern void T1521f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_map */
extern T0* T1676c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1676f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_sparse_container */
extern void T1676f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].set_internal_cursor */
extern void T1676f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_cursor */
extern T0* T1676f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_FEATURE].make */
extern T0* T1769c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_slots */
extern void T1676f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].new_modulus */
extern T6 T1676f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_clashes */
extern void T1676f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_key_storage */
extern void T1676f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].make_item_storage */
extern void T1676f55(GE_context* ac, T0* C, T6 a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1296f8p1(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1296f6(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1295c6(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1295f6p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1295f3(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1294c7(GE_context* ac);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1294f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1291c41(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1291f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1291f43(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].set_internal_cursor */
extern void T1291f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1291f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1291f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1291f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1291f44(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1500f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].make_empty */
extern T0* T1501c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1500c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1290c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].set_internal_cursor */
extern void T1290f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1290f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1497c5(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1495f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make_empty */
extern T0* T1496c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1495c3(GE_context* ac);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1287f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T445f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1287c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1287f36(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1287f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_internal_cursor */
extern void T1287f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1287f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1494c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1287f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1287f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1287f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1287f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T728c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].set_internal_cursor */
extern void T728f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T728f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T1378c9(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T732c15(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].set_internal_cursor */
extern void T732f22(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T732f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T1379c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T445f24(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T445f28p1(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T445f22(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T444f13(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T444f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T78f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T529c753(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1529f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1529f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1317f36(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1317f37(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1529f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1317f38(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1529f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1317f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1529f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1317f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_after */
extern void T1529f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1529f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].before */
extern T1 T1529f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T78f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T37f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T37f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1317f9(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T444f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1280f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1482f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1482f46(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1482f45(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1482f44(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1482f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1482f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1482f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1640f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_after */
extern void T1640f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1317f24(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1317f31(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1280f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1317f8(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T444f19(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1282f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T444f18(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1283f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1283f15(GE_context* ac, T0* C);
extern T1 T1283f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T78f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T529c764(GE_context* ac, T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1642f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1642f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1487f18(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1642f14(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1487f19(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1642f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1487f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1642f4(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1487f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1642f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1487f17(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_after */
extern void T1642f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1487f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1642f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].before */
extern T1 T1642f8(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1487f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1642c9(GE_context* ac, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1487f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T78f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T37f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T37f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1486f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1641f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1641f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1641f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1641f41(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T1084f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T1084f9(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1641f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1641f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1641f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1767f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_after */
extern void T1767f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1487f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1487f15(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1486f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1216f79(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1083f77(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1487f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T78f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T529c762(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T37f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern unsigned char ge191os2879;
extern T0* ge191ov2879;
extern T0* T1283f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_system */
extern T0* T1283f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1486f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1487f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T1082f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T1084f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T1084f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1487c11(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1487f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T1082f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T1084c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T1082c3(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1486f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1283f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T78f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T529c761(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T78f43(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T37f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T37f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T78f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T529c760(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T78f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T37f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T37f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1283f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1283f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1283f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T444f17(GE_context* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T83f248(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T83f247(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1281f43(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1281f54(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1281f53(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1281f52(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1281f51(GE_context* ac, T0* C);
/* SPECIAL [ET_BASE_TYPE].keep_head */
extern void T867f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].set_count */
extern void T867f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1281f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1281f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1483f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_after */
extern void T1483f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1281f42(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1281f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1281f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1483f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1281f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1281f39(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T399f8(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].force */
extern void T868f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].fill_with */
extern void T867f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].extend */
extern void T867f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_for_iteration */
extern T0* T1281f22(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1281f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1281f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1281f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1281f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1483f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].start */
extern void T1281f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1281f47(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1281f25(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].off */
extern T1 T1483f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1281f24(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T444f22(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_BASE_TYPE_LIST.item */
extern T0* T399f5(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1281f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1281f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1281f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1281f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1281f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1281f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1281f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1281f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1281f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1281f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1281f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1281f65(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].aliased_resized_area */
extern T0* T868f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].aliased_resized_area */
extern T0* T867f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1281f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1281f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1281f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1281f35(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T78f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T529c759(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T78f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T37f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T37f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1281f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1281f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1281f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1281f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T78f238(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T529c758(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T78f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T37f237(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T37f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T78f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T529c757(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T78f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T37f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T37f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T78f236(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T529c756(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T78f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T37f235(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T37f36(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T78f235(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T529c755(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T78f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T37f234(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T37f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T78f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T529c754(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T37f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T467f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1317f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1280f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T444f16(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T444f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T444f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1280f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1280f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1280f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1280f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1482f33(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1482f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1482f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1482f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1482f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1482f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1482f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1482f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1482f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1280f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1280f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put_new */
extern void T1482f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1482f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1482f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1482f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1482f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1482f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1482f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1482f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1482f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1482f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1482f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1482f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1280f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1280f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1482f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T444f10(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T444f14(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T444c12(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1283c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1486c10(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1486f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1641c33(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1641f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1641f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1641f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1641f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1767c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1641f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1641f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1641f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1641f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1641f53(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1283f11p1(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1283f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1282c8(GE_context* ac);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1282f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1281c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1281f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1281f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].set_internal_cursor */
extern void T1281f72(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1281f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1483c8(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1281f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1281f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1281f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1281f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1280c11(GE_context* ac);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1280f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1482c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1482f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1482f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].set_internal_cursor */
extern void T1482f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1482f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1640c6(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1482f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1482f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1482f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1482f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T444f12p1(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T444f8(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T444f9(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T443f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T443f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T443f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].forth */
extern void T1331f12(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_forth */
extern void T880f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].add_traversing_cursor */
extern void T880f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_next_cursor */
extern void T1331f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_position */
extern void T1331f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].remove_traversing_cursor */
extern void T880f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].set_after */
extern void T1331f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T78f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T78f227(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1545c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].forth */
extern void T1639f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_forth */
extern void T1461f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].add_traversing_cursor */
extern void T1461f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_next_cursor */
extern void T1639f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_position */
extern void T1639f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].remove_traversing_cursor */
extern void T1461f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].set_after */
extern void T1639f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_item */
extern T6 T1461f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].key */
extern T0* T1639f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_key */
extern T0* T1461f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_item */
extern T0* T1461f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].after */
extern T1 T1639f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].start */
extern void T1639f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_start */
extern void T1461f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].cursor_off */
extern T1 T1461f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].off */
extern T1 T1639f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_cursor */
extern T0* T1461f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_WILDCARD, STRING_8].make */
extern T0* T1639c9(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].is_empty */
extern T1 T1461f23(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T78f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T37f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T37f226(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T37f80(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T78f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1545c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T78f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T37f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T37f79(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T854f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T854f10ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T854f10ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T854f10ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T854f10ac4(GE_context* ac, T0* a1, T0* a2);
extern T1 T854f10ot1(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [STRING_8]].set_rout_disp_final */
extern void T1581f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [LX_WILDCARD]].set_rout_disp_final */
extern void T1578f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T854f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1460f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1460f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1460f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].there_exists */
extern T1 T137f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T854f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].there_exists */
extern T1 T1461f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_item */
extern T0* T1461f30(GE_context* ac, T0* C, T6 a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T854f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T854f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].item */
extern T0* T1331f4(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_item */
extern T0* T880f34(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].after */
extern T1 T1331f7(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].start */
extern void T1331f10(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_start */
extern void T880f55(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_off */
extern T1 T880f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].off */
extern T1 T1331f8(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].is_empty */
extern T1 T880f27(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].new_cursor */
extern T0* T880f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].make */
extern T0* T1331c9(GE_context* ac, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T83f153(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T83f172(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T443f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.current_system */
extern T0* T443f4(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T443f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern T0* T443c6(GE_context* ac);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T443f2(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T443f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T442f946(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T83f227(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T781f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T37f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1545c23(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T37f28(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T78f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T78f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T37f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T529c747(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T37f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T78f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T78f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T442f687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T442f680(GE_context* ac, T0* C);
/* ET_CLASS.set_filename */
extern void T83f226(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T442f950(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T442f955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T442f967(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T442f966(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T442f965(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T442f992(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T442f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T442f1925(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T889f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T889f14(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T889f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T889f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T442f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T442f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T442f1914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T442f1913(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T934f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1206f39(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1205f39(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T407f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T442f686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T442f1912(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1206f38(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1205f38(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T442f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T442f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T442f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T442f1908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T442f1907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T442f1906(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T926f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T928f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T928f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T442f1905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T442f1904(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T442f1903(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T442f1902(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T442f1901(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T442f1900(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T442f1899(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T912f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T914f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T914f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T442f1898(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T442f1897(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T918f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T920f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T920f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T442f1896(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T918f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T920f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T442f1895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T442f1894(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T442f1893(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T442f1892(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T932f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T933f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T933f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T442f1891(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T932f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T933f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T442f1890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T442f1889(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T442f1888(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T442f1887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T442f1886(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T442f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T442f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T442f1883(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T442f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T442f1881(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T442f1880(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T442f1879(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T442f1878(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T442f1877(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T442f1876(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T442f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T442f1874(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T442f1873(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T442f1872(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T442f1871(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T442f1870(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T442f1869(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T442f1868(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T442f1867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T442f1866(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T442f1865(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T966f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T967f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T967f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T966f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T967f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T407f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1276c9(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge824os3674;
extern T0* ge824ov3674;
extern T0* T82f874(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T954c71(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T954f73(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T954f12(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1276f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T442f1864(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T442f1863(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T442f1862(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T968f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T970f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T970f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T968f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T970f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T442f1926(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T889f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T407f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T442f1861(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T971f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T973f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T973f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T972f12(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge471os19989;
extern T0* ge471ov19989;
extern T0* T972f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T968c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T442f1860(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T971f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T973f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T407f320(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T972c11(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T972f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T968f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T970c5(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T972f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T442f860(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T442f862(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T893f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T442f1859(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T442f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T442f1929(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T893f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T908f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T909f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL].extend */
extern void T909f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T893f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T908f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T909f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T893f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T893f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T442f1857(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T442f1923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T442f1928(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T893f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T909f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].set_count */
extern void T909f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T442f1856(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T442f1855(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T442f1854(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T974f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T975f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T975f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T974f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T975f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T407f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1275c8(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1275f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T442f1853(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T442f1852(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T442f1851(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T442f1850(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T442f907(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T407f344(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_object_test_local */
extern void T181f121(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1195f4(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T181f120(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1196f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1555f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T1122f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T338f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T338f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T181f119(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T338f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1554f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T264f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T261f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T442f1849(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T442f1937(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T895f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1477f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1476f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1476f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T895f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1477f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1476f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T895f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T895f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T894f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1475f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1474f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1474f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T894f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1475f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1474f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T894f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T894f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T891f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T1127f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T1128f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T1128f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T891f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1127f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T1128f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T891f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T891f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T890f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T1080f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T1081f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T1081f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T890f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1080f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T1081f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T890f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T890f7(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T442f1848(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T442f1847(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].force */
extern void T723f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].fill_with */
extern void T725f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].extend */
extern void T725f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T723f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].aliased_resized_area */
extern T0* T725f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T442f1943(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T442f1945(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T895f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1476f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1476f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T895f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T895f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1196f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].keep_head */
extern void T754f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern unsigned char ge641os15174;
extern T0* ge641ov15174;
extern T0* T1196f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T894f13(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1474f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1474f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T894f7(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T894f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1195f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].keep_head */
extern void T748f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern unsigned char ge693os15174;
extern T0* ge693ov15174;
extern T0* T1195f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T891f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T1128f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T1128f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T891f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T891f5(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T890f12(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T1081f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T1081f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T890f6(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T890f5(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1196f3(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1196f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].force */
extern void T754f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].fill_with */
extern void T753f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACROSS_COMPONENT].extend */
extern void T753f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1196c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1195f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1195f12(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].force */
extern void T748f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].fill_with */
extern void T747f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_NAMED_OBJECT_TEST].extend */
extern void T747f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1195c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T407f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1274f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1274f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1274f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1274f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1274c35(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1274f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1274f46(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1586c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge824os3683;
extern T0* ge824ov3683;
extern T0* T82f862(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T903c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T903f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T903f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T903f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1274f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T407f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T442f1846(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T442f1845(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T407f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1273f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1273f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1273f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1273f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1273f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1273f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1273f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1273c37(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1273f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1273f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T407f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T337f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge824os3724;
extern T0* ge824ov3724;
extern T0* T82f729(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T400c46(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T407f354(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T442f1844(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T442f1843(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T407f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1272f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1272f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1272f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1272f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1272f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1272f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1272c36(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1272f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1272f16(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T442f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T442f1841(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T407f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1271f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1271f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1271f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1271f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1271c36(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1271f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1271f47(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1271f16(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T407f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T442f1840(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T442f1839(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T407f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1270f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1270f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1270f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1270f47(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1270f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1270f45(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1270f44(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1270c38(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1270f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1270f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T442f1838(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T442f1837(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T407f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1269f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1269f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1269f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1269f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1269f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1269f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1269c37(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1269f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1269f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T442f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T442f1835(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T442f1942(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T442f1834(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T984f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T986f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T986f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T984f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T986f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T407f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T985f33(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T985c32(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T985f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T985c29(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T407f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T442f1833(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T442f1832(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T956f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T958f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T958f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T956f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T958f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T442f906(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1196f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1196f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T754f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T753f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1196f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1196f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T442f923(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T407f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T957f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T957f38(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T957c32(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T957f42(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern unsigned char ge824os3682;
extern T0* ge824ov3682;
extern T0* T82f861(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T400c52(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T957f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern unsigned char ge824os3740;
extern T0* ge824ov3740;
extern T0* T82f265(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1208c33(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1208f37(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1208f38(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1208f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T442f664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T442f1831(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T442f905(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T957f40(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T957f41(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T957f36(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T957f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T407f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1558c3(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T400f25(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T400f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T442f1830(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T442f904(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T957f37(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T442f1829(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T442f1828(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T442f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T442f1826(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T442f1825(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T442f1824(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1173f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1175f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1175f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1174f30(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T1072f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T1074f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T1074f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge846os19989;
extern T0* ge846ov19989;
extern T0* T1174f13(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T1072c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T442f1823(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1173f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1175f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T407f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1174f31(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1174c27(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1174f27p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T1072f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T1074c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge824os3738;
extern T0* ge824ov3738;
extern T0* T82f864(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T400c51(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1174f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T442f859(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T892f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T442f1822(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T442f1821(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T442f1924(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T892f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T900f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T901f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD].extend */
extern void T901f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T892f12(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T900f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T901f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T892f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T892f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T442f1820(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T442f1922(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T892f10(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T901f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].set_count */
extern void T901f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T442f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T442f1818(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T1141f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T1142f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T1142f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T442f1817(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1141f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T1142f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T407f309(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T293f33(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T442f1816(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T442f1815(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T442f1814(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T442f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T442f1812(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T1132f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T1134f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T1134f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T1133f29(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T1133f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T442f1811(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1132f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T1134f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T407f308(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T1133f30(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T1133c26(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T1133f26p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge824os3675;
extern T0* ge824ov3675;
extern T0* T82f689(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T350c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge824os3670;
extern T0* ge824ov3670;
extern T0* T82f863(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T350c83(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T1133f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T442f1810(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T442f1809(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T442f991(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T442f1808(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T442f1807(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T442f1806(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T1146f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T1148f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T1148f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1146f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T1148f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T407f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T1147f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T1147c21(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T1147f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T442f1805(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T962f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T963f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T963f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T442f1804(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T962f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T963f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T407f306(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T286c16(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T442f1803(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T442f1802(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T981f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T983f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T983f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T981f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T983f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T442f1801(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T407f305(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T982c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T442f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T442f1799(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T442f1798(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T442f1797(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T442f1796(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T442f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T442f1794(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T442f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T442f1792(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T442f1791(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T442f1790(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T442f903(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T407f352(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1268f27(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1268c23(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1268f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T442f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T442f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T442f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T442f1786(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T442f1785(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T442f1784(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T442f1783(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T442f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T442f1781(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T442f1780(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T442f1779(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T442f1778(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T442f1777(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T442f902(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1195f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1195f13(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T748f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T747f4(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1195f7(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1195f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T442f924(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T407f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T746f28(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T746c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T746f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T746f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T442f1776(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T442f1775(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T407f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T319f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T319c23(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T319f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T442f1774(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T442f1773(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T442f901(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T407f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1267f31(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1267c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge824os3664;
extern T0* ge824ov3664;
extern T0* T82f686(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T350c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1267f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T442f1919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern unsigned char ge191os2878;
extern T0* ge191ov2878;
extern T0* T442f889(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T442f1772(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T407f303(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1266f23(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1266c20(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge824os3723;
extern T0* ge824ov3723;
extern T0* T82f873(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T400c49(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1266f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T442f1771(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T407f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1265c25(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T407f302(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T924f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T924f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T442f1770(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T442f1769(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T442f900(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T442f900ot1(T0* a1, T0** a2);
extern T1 T442f900ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T407f349(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T943f71(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T943f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T442f1768(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T442f899(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T442f899ot1(T0* a1, T0** a2);
extern T1 T442f899ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T407f348(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T943f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T442f1767(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T442f1766(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T442f1765(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T442f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T442f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T442f1762(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T442f1761(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T442f1760(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T442f1759(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T407f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1264c21(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1264f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T442f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T442f1757(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T442f1756(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T442f1755(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T442f1754(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T442f1753(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T407f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T320c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T442f1752(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T442f1751(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T407f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T321c20(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T442f1750(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T442f1749(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T407f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1261c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T442f1748(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T407f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1263f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1263c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge824os3701;
extern T0* ge824ov3701;
extern T0* T82f698(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T400c64(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge824os3725;
extern T0* ge824ov3725;
extern T0* T82f872(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T930c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T930f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T930f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T930f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1263f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T442f1747(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T407f296(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1262f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1262c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge824os3739;
extern T0* ge824ov3739;
extern T0* T82f702(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T400c68(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge824os3684;
extern T0* ge824ov3684;
extern T0* T82f871(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T930c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1262f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T442f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T442f1745(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T442f1744(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T442f1743(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T442f1742(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T442f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T442f1740(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T442f1739(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T442f1738(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T442f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T442f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T442f1735(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T442f1734(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T407f295(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T943f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T442f1733(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T407f294(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T943f68(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T442f1732(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T407f292(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T924f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T442f1731(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T442f1730(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T442f1729(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1191f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1192f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WRITABLE].extend */
extern void T1192f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1191f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1192f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T442f1728(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T442f898(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T442f1727(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T407f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1260f23(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1260c20(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge824os3666;
extern T0* ge824ov3666;
extern T0* T82f870(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T350c79(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1260f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T442f1726(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T407f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1259f23(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1259c20(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1259f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T442f1725(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T407f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1258f23(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1258c20(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1258f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T442f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T442f897(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T442f897ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T407f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1257f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1257c20(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1257f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T442f1723(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T407f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T442f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T442f1721(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T407f287(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T442f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T442f1719(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T442f1718(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T442f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T442f1716(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T442f1715(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T407f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T442f888(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T442f1714(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge191os2870;
extern T0* ge191ov2870;
extern T0* T442f871(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T442f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T442f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T442f1711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T442f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T442f1709(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T442f1708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T442f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T442f1706(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T442f896(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T442f1705(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T407f286(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1256f28(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1256f27(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1256c24(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge824os3726;
extern T0* ge824ov3726;
extern T0* T82f869(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T906c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T906f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T906f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T906f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1256f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T407f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T442f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T442f1703(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1170f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1172f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1172f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1170f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1172f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T407f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1171f31(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1171c28(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1171f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T442f1702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T442f1701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T442f1700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T442f1699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T442f1698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T442f1697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T442f1696(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T1111f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T1113f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T1113f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1111f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T1113f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T407f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1255f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1255c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1255f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T442f1695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T442f1694(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T407f281(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1253f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1253f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1253c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1253f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T442f1693(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T442f1692(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T407f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T442f1691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T442f1690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T442f895(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T407f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1423c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T442f1689(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T1135f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T1137f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T1137f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1135f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T1137f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T407f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T442f1688(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T1138f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T1140f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T1140f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T1139f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge617os19989;
extern T0* ge617ov19989;
extern T0* T1139f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T1135c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T442f1687(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1138f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T1140f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T407f278(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T1139c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T1139f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T1139f9p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T1135f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T1137c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T442f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T442f1685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T442f1684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T442f1683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T442f1682(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T1042f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T1044f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T1044f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1042f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T1044f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T407f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T1043c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T1043f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T407f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge824os3697;
extern T0* ge824ov3697;
extern T0* T82f706(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T400c72(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T337c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T337f9p1(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T1111f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T1113c5(GE_context* ac, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge763os19989;
extern T0* ge763ov19989;
extern T0* T337f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T1111c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge824os3700;
extern T0* ge824ov3700;
extern T0* T82f695(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T400c61(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T337f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T442f1681(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T1011f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T1013f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T1013f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1011f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T1013f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T442f1680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T442f1679(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T959f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T961f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T961f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T959f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T961f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T442f894(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T407f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T960f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T960f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T960c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T960f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T960f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T442f1678(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T993f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T995f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T995f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T993f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T995f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T442f1677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T442f893(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T442f1676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T442f1675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T442f1674(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T990f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].fill_with */
extern void T992f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE].extend */
extern void T992f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T990f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T992f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T407f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1252c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge824os3668;
extern T0* ge824ov3668;
extern T0* T82f691(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T350c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1252f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T442f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T442f1672(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T996f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T998f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T998f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T996f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T998f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T407f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T442f1671(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T999f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T1001f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T1001f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T1000f9(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge761os19989;
extern T0* ge761ov19989;
extern T0* T1000f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T996c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T442f1670(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T999f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T1001f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T407f273(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T1000f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T1000c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T1000f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T996f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T998c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge824os3747;
extern T0* ge824ov3747;
extern T0* T82f703(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T400c69(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T1000f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T442f1669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T442f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T442f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T442f1666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T442f1665(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1185f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1187f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1187f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1185f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1187f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T407f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1186c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T442f1664(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1188f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1190f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1190f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1189f6(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge796os19989;
extern T0* ge796ov19989;
extern T0* T1189f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1185c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T442f1663(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1188f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1190f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T407f271(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1189c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1185f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1187c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T442f1662(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T442f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T442f1660(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T1108f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T1110f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T1110f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1108f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T1110f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T407f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T1109f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T1109c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T1109f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T442f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T442f1658(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T1045f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T1047f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T1047f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1045f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T1047f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T407f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T1046c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T442f1657(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T1048f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T1050f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T1050f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T1049f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge769os19989;
extern T0* ge769ov19989;
extern T0* T1049f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T1045c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T442f1656(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1048f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T1050f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T407f268(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T1049c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T1045f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T1047c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T442f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T442f1654(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T1090f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T1092f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T1092f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1090f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T1092f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T407f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T1091f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T1091f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T1091c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T1091f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T442f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T442f1652(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T442f1651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T442f1650(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T442f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T442f1648(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T1035f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T1036f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T1036f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1035f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T1036f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T407f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T330f29(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T407f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T442f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T442f1646(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T407f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1251f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1251c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1251f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T442f1645(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T442f1644(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T442f1643(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T442f1642(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T407f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1250f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1250c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge824os3663;
extern T0* ge824ov3663;
extern T0* T82f868(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T350c78(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1250f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T442f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T442f1640(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T442f1639(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T442f1638(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T987f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T989f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T989f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T987f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T989f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T442f892(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T896f14(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTION_ITEM].keep_head */
extern void T1478f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].set_count */
extern void T1478f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T896f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1480f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_after */
extern void T1480f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T988f11(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].force */
extern void T1479f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].fill_with */
extern void T1478f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].extend */
extern void T1478f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge496os19989;
extern T0* ge496ov19989;
extern T0* T988f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1479c3(GE_context* ac);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T896f10(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T407f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T988f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T988f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T988c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T988f10p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1479f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make_empty */
extern T0* T1478c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge824os3691;
extern T0* ge824ov3691;
extern T0* T82f705(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T400c71(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T988f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].remove_last */
extern void T271f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].move_last_cursors_after */
extern void T271f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].last */
extern T6 T271f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T442f1637(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T442f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T442f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T442f1634(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T407f261(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T442f1633(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T442f1632(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T442f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T442f1630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T442f891(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T960f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T960f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T960f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T960f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T442f1629(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T407f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1248f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1248f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1248f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1248c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1248f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern unsigned char ge191os2885;
extern T0* ge191ov2885;
extern T0* T442f890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T442f1628(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T407f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T442f1627(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T442f1626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T442f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T442f1624(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T407f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1247c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge824os3662;
extern T0* ge824ov3662;
extern T0* T82f693(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T350c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1247f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T442f1623(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T407f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T1246c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge824os3661;
extern T0* ge824ov3661;
extern T0* T82f692(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T350c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T1246f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T442f1622(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T407f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1245c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1245f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T442f1621(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T442f1620(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T442f1619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T442f1618(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T442f1617(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T1009f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T1010f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_COMPOUND].extend */
extern void T1010f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1009f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T1010f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T442f1616(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T337f11(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T442f1615(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T407f254(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T337c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T337f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T442f1614(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T442f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T442f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T442f1611(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T407f253(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T442f1610(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T442f1609(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T407f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge824os3720;
extern T0* ge824ov3720;
extern T0* T82f700(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T400c66(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T442f990(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T442f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T442f1607(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T442f1606(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T407f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge824os3709;
extern T0* ge824ov3709;
extern T0* T82f699(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T400c65(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T442f1605(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T407f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge824os3732;
extern T0* ge824ov3732;
extern T0* T82f715(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T400c81(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T442f1604(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T407f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T442f1603(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T442f1602(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T407f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T442f1601(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T442f1600(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T407f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge824os3690;
extern T0* ge824ov3690;
extern T0* T82f727(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T400c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T442f1599(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T407f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T442f1598(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1162f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1164f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1164f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1162f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1164f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T407f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1244c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T407f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T1218c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T442f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T442f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T442f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T442f1594(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T407f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T442f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T442f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T442f1591(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T442f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T442f1589(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T407f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1243f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1243c74(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1243f23(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T442f1588(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T442f1587(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T442f1586(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T442f1585(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T442f1584(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T442f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T442f1582(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T442f1581(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T442f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T442f1579(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T442f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T442f1577(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T1118f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T1120f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T1120f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1118f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T1120f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T442f1576(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T407f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T499f72(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T442f1575(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T442f1574(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T442f1573(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T442f1572(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T442f1571(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T442f1570(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T442f1569(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T442f1568(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T442f1567(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T442f887(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T442f1566(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T442f886(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T407f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1242f76(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1242c75(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1242f24(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T442f1565(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T442f1564(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T442f1563(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T442f1562(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T442f1561(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T442f1560(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T442f1559(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T442f1558(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T442f1557(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T442f1556(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T442f1555(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T442f1554(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T442f1553(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T650f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T647f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T407f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T407f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1240c10(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T442f1552(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T442f1551(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T964f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T965f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T965f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T442f1941(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T407f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1556c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T251f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T407f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T442f1550(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T442f1549(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T442f1548(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T442f1547(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T442f1546(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T964f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T965f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T407f237(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T251f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T442f1545(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T442f1544(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T442f1543(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T442f1542(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T442f1541(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T442f1540(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T407f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T442f1539(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T442f1538(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T442f885(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T407f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T260f103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T442f908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T442f1537(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T442f884(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T407f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T407f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T407f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1422c67(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T83f135(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T642f9(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T442f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T442f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T442f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T442f1533(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T442f1532(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T442f1531(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T442f1530(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T442f1529(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T442f1528(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T442f1527(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T442f1526(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T442f1525(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T442f1524(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T442f1523(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T442f1522(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T442f1521(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T442f1520(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T442f1519(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T442f1518(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T442f1517(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T442f1516(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T442f1515(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T442f1514(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T442f1513(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T442f1512(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T442f1511(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T442f1510(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T442f1509(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T442f1508(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T442f1507(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T442f1506(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T442f1505(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T442f1504(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T442f1503(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T442f1502(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T442f1501(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T442f1500(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T442f1499(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T442f1498(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T442f1497(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T442f1496(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T442f1495(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T442f1494(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T442f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T442f1492(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T442f1491(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T442f1490(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T442f1489(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T442f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T442f1487(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T442f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T442f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T442f1484(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T442f1483(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T442f1482(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T442f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T442f1480(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T442f1479(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T442f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T442f1477(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T442f1476(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T442f1475(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T442f1474(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T442f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T442f1472(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T442f1471(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T442f1470(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T442f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T442f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T442f1467(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T442f1466(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T442f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T442f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T442f1463(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T442f1462(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T442f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T442f1460(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T442f1459(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T442f1458(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T442f1457(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T442f1456(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T442f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T442f1454(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T442f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T442f1452(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1182f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1184f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VARIANT].extend */
extern void T1184f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T442f1451(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1182f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1184f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T442f1450(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T407f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1183f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1183c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge824os3745;
extern T0* ge824ov3745;
extern T0* T82f720(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T400c86(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T1183f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T407f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T442f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T442f1448(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T1129f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T1131f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T1131f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1129f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T1131f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T442f883(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T1130f9(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T1130f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T407f339(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T1130f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T1130c8(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T1130f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge824os3716;
extern T0* ge824ov3716;
extern T0* T82f728(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T400c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T1130f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T442f1447(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T442f1446(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T442f1445(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T442f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T442f1443(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T1114f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T1115f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INVARIANTS].extend */
extern void T1115f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1114f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T1115f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T442f882(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T442f972(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T895f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T895f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T442f971(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T894f12(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T894f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T442f970(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T891f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T442f969(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T890f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T886f32(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T886f31(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T886f30(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T886f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T407f338(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T886f33(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T886c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T886f34(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T886f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T442f1442(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T442f1441(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T442f1440(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T442f1439(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T1158f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T1159f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T1159f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1158f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T1159f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T442f881(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T885f17(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T885f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T407f337(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T885f19(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T885f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T885c16(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T885f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge824os3704;
extern T0* ge824ov3704;
extern T0* T82f856(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T400c53(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T885f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T442f1438(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T442f1437(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T442f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T442f1435(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T442f1434(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T1160f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T1161f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T1161f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1160f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T1161f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T442f880(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T392f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T392f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T407f336(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T392f19(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T392f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T392c16(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T392f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge824os3731;
extern T0* ge824ov3731;
extern T0* T82f1476(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T400c56(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T392f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T442f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T442f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T442f1431(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T442f1430(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T442f1429(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T442f1940(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T442f1428(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T442f1939(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T442f1939ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T896f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T896f19(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1479f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1478f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T896f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T896f8(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T407f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T407f324(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1278c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T442f994(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T37f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1546c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1546f19(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T78f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T442f998(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1279c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1279f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1279f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1279f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1279f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1279f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T442f676(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T896f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T442f1427(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T442f1426(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T442f1938(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T442f1938ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T896f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1278f6(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T442f1425(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T442f1424(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T442f1423(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T442f1422(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T442f1421(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T442f1420(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T1124f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T1126f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T1126f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1124f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T1126f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T407f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T407f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T1122c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T442f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T442f1418(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T1121f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T1123f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T1123f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1121f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T1123f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T407f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1555c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge1049os15039;
extern T0* ge1049ov15039;
extern T0* T442f878(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T442f1417(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T407f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T442f1416(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T338f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge690os19989;
extern T0* ge690ov19989;
extern T0* T338f10(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T1124c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T442f1415(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T442f1414(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1555f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T338f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T338f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T442f1413(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T442f1412(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T442f879(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T407f335(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T338f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T338c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T338f11p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T1124f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T1126c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge824os3719;
extern T0* ge824ov3719;
extern T0* T82f708(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T400c74(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T338f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T442f1411(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T442f1410(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T442f1409(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T442f989(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T442f1408(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T442f1407(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T442f1406(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T1077f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T1079f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T1079f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1077f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T1079f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T407f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T407f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T264c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T442f1405(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T442f1404(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T1076f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T1076f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1075f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T1076f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T407f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1554c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T442f1403(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T407f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T442f1402(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T261f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge678os19989;
extern T0* ge678ov19989;
extern T0* T261f11(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T1077c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T442f1401(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T442f1400(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1554f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T261f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T442f1399(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T442f1398(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T442f877(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T407f334(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T261c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T261f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T1077f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T1079c5(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T261f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T442f1397(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T442f1396(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T442f1395(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T442f1394(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T442f1393(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T442f1392(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T442f876(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T442f922(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T407f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1237f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1237c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1237f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge829os16649;
extern T0* ge829ov16649;
extern T0* T1237f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge824os3685;
extern T0* ge824ov3685;
extern T0* T82f704(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T400c70(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T442f1391(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T407f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T856f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T856c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T856f62(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T442f1390(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T407f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T856c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T442f1389(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T442f1388(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T407f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T856c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T442f1387(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T407f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T856c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T442f1386(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T407f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T856c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T442f1385(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T407f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T856c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T442f1384(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T407f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T856c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T442f1383(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T407f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T856c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T442f1382(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T407f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T856c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T442f1381(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T407f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T856c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T442f1380(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T407f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T856c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T442f1379(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T407f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T856c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T442f1378(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T407f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T856c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T442f1377(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T407f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T856c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T442f1376(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T407f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T856c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T442f1375(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T407f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T856c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T442f1374(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T407f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T856c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T442f1373(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T407f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T856c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T442f1372(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T407f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T856c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T442f1371(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T407f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T856c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T442f1370(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T407f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T856c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T442f1369(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T1056f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T1057f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T1057f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1056f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T1057f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T407f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T442f1368(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T442f1367(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T442f875(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T442f921(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T407f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T830f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T830c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T830f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge858os16649;
extern T0* ge858ov16649;
extern T0* T830f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge824os3713;
extern T0* ge824ov3713;
extern T0* T82f707(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T400c73(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T442f1366(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T442f1365(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T442f874(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T442f920(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T407f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1234f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T1234c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T1234f29(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge870os16649;
extern T0* ge870ov16649;
extern T0* T1234f30(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge824os3727;
extern T0* ge824ov3727;
extern T0* T82f713(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T400c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T442f1364(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T442f1363(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T442f1362(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T442f1361(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T442f1360(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T442f1359(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T442f1358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T442f1357(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T442f1356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T442f1355(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T442f1354(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T442f1353(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T442f1352(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T442f1351(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T442f1350(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T442f1349(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T442f1348(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T407f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T1235f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T1235c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T1235f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T442f1347(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T407f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T1235c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T442f1346(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T407f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T1235c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T442f1345(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T407f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T1235c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T442f1344(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T407f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T1235c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T442f1343(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T407f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T1235c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T442f1342(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T407f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T1235c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T442f1341(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T407f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T1235c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T442f1340(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T407f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T1235c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T442f1339(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T407f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T1235c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T442f1338(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T407f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T1235c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T442f1337(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T407f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T1235c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T442f1336(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T407f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T1235c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T442f1335(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T407f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T1235c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T442f1334(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T407f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T1235c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T442f1333(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T407f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T1235c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T442f1332(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T407f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T1235c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T442f1331(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T442f1330(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T407f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T1233f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T1233c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T1233f31(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T442f1329(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T407f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T1233c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T442f1328(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T407f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T1233c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T442f1327(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T442f1326(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T978f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T980f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_ASSIGNER].extend */
extern void T980f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T978f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T980f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T407f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T442f1325(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T442f1324(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T1058f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T1060f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T1060f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1058f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T1060f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T407f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T442f1323(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T442f1322(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T948f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T950f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T950f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T442f1321(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T948f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T950f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T442f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T442f1319(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T442f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T442f873(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T407f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1232f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1232f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1232f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1232f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1232f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1232f89(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge824os3717;
extern T0* ge824ov3717;
extern T0* T82f697(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T400c63(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1232c77(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1232f39(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T442f1317(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T442f1316(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T407f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T530f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T530f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T530f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T530f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T530f83(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T442f1315(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T442f1314(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T407f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1231f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1231f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1231f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1231f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1231f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1231f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1231f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1231f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1231f85(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1231c73(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1231f38(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T442f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T442f1312(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T407f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T521f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T521f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T521f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T521f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T521f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T521f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T521f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T521f84(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T442f1311(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T442f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T442f872(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T407f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T259f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T259f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T259f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T259f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T259f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T259f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T259f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T259c78(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T259f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T442f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T442f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T442f1307(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T442f1306(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T407f176(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1229f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1229f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1229f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1229f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1229f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1229f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1229c72(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1229f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1229f42(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T442f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T442f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T442f1303(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T442f1302(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T407f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T1228f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1228f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1228f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1228f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1228f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1228f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1228f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1228f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1228f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1228f86(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1228c74(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1228f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T442f1301(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T442f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T442f1299(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T442f1298(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T407f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T1227f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T1227f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T1227f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T1227f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T1227f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T1227f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T1227f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T1227f86(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T1227f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T1227c73(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T1227f44(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T442f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T442f1296(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T442f1295(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T442f1294(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T407f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T367f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T367c71(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge824os3743;
extern T0* ge824ov3743;
extern T0* T82f1474(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T400c55(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T367f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T442f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T442f1292(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T407f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T365f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T365c71(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T365f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T442f1291(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T442f1290(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T407f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T336f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T336f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T336f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T336f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T336f87(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T336f86(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T336f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T336f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T336c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T336f72p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T336f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T442f1289(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T407f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T368f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T368c69(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T368f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T442f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T442f1287(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T442f1936(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T728f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T728f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T728f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T728f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T1378f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T728f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T728f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T728f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T728f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T728f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T728f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T1378f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T728f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T728f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T728f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T728f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T728f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].before */
extern T1 T1378f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T442f870(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T442f1286(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T407f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T442f1285(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T442f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T442f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T442f1935(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T728f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T728f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T1378f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].after */
extern T1 T1378f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T442f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T442f1281(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T442f1934(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T732f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T732f28(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T732f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T732f30(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T1379f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T732f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T732f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T732f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T732f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T732f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T732f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T1379f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T732f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T732f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T732f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T732f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T732f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].before */
extern T1 T1379f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T442f869(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T442f1280(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T442f1279(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T442f1278(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T442f1277(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T442f1933(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T732f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T732f25(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T1379f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].after */
extern T1 T1379f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T442f1276(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T442f1275(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T442f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T442f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T442f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T442f1271(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T1061f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T1063f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T1063f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1061f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T1063f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T407f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T1062c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge824os3708;
extern T0* ge824ov3708;
extern T0* T82f718(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T400c84(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T1062f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T442f868(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T442f866(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T407f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T442f1270(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T442f1269(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T442f1268(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T442f1267(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T1064f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T1066f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T1066f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T1065f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge528os19989;
extern T0* ge528ov19989;
extern T0* T1065f3(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T1061c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T442f1266(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1064f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T1066f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T407f165(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T1065c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T1061f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T1063c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T442f1265(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T442f1932(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T442f1264(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T442f1263(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T442f1262(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1176f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1178f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1178f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1176f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1178f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T407f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T442f1261(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1179f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1181f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1181f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1316f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T442f1260(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1179f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1181f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T407f163(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1316f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1316c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1316f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T442f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T442f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T442f1257(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T442f1256(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T1026f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T1028f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T1028f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1026f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T1028f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T407f162(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1225c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1225f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T442f1255(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T407f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1224c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1224f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T442f1254(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T1029f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T1031f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T1031f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1029f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T1031f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T407f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T442f1253(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T1032f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T1034f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T1034f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T1033f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge519os19989;
extern T0* ge519ov19989;
extern T0* T1033f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T1029c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T442f1252(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1032f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T1034f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T407f159(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T1033c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T1033f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T1029f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T1031c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge824os3693;
extern T0* ge824ov3693;
extern T0* T82f717(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T400c83(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T1033f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T442f1251(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T442f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T442f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T442f1248(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T442f1247(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T442f1246(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1072f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T1074f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T407f156(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T442f1245(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T1037f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].fill_with */
extern void T1039f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR].extend */
extern void T1039f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T1038f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T1038f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T442f1244(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1037f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T1039f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T407f158(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T1038c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T1038f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge824os3695;
extern T0* ge824ov3695;
extern T0* T82f721(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T400c87(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T1038f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T442f1243(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T442f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T442f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T442f1240(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T442f1239(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T442f1238(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T442f1237(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T442f1236(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T442f1235(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T442f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T442f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T442f1232(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T442f1231(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T442f1230(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T1040f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T1041f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T1041f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1040f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T1041f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T442f1229(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T831f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge523os19989;
extern T0* ge523ov19989;
extern T0* T831f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T1037c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T442f1228(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T407f157(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T831c9(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T1037f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T1039c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T442f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T442f1226(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T442f1225(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T442f1224(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T1116f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T1117f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T1117f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T496f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T496f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T442f1223(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1116f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T1117f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T407f155(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T496c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T496f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge824os3728;
extern T0* ge824ov3728;
extern T0* T82f725(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T400c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T496f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T442f1222(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T442f1221(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T442f1220(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T442f1219(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T442f1218(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T442f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T442f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T442f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T442f1214(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T442f1213(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T442f1212(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T442f1211(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T442f1210(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T442f1209(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T442f988(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T442f1208(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T442f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T442f1206(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T1006f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T1008f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CLIENTS].extend */
extern void T1008f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1006f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T1008f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T407f154(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T1007f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T1007c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T1007f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T1007f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T442f1205(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T442f1204(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T442f1203(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1004f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T1005f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T442f867(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T407f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T442f1202(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T442f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T442f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T442f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T442f1198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T442f1197(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T407f153(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T1007c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T1007f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T442f1196(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T442f1195(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T442f1194(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T1067f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T1069f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T1069f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T1068f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T1068f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T442f1193(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1067f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T1069f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T407f151(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T1068c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T1068f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T442f1192(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T442f1191(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T1051f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].fill_with */
extern void T1053f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT].extend */
extern void T1053f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1051f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T1053f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T407f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T442f1190(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T442f1189(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T442f1188(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T442f1187(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T407f150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1222c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge824os3686;
extern T0* ge824ov3686;
extern T0* T82f867(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T400c48(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1222f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T442f1186(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T1054f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T1055f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T1055f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1054f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T1055f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T442f1185(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T495f8(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge526os19989;
extern T0* ge526ov19989;
extern T0* T495f6(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T1051c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T442f1184(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T407f149(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T495c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T495f7p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T1051f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T1053c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge824os3706;
extern T0* ge824ov3706;
extern T0* T82f712(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T400c78(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T495f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T442f1183(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T442f1182(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T442f1181(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T442f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T442f1179(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T442f1178(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1165f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1167f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1167f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1165f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1167f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T407f148(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T442f1177(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T407f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T442f1176(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1168f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1169f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1169f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T494f9(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge554os19989;
extern T0* ge554ov19989;
extern T0* T494f7(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1165c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T442f1175(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1168f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1169f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T407f146(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T494c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T494f8p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1165f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1167c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge824os3730;
extern T0* ge824ov3730;
extern T0* T82f714(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T400c80(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T494f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T442f1174(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T442f1173(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T442f1172(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T442f1171(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T442f1170(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1154f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T1155f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T407f145(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T442f1169(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T1156f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T1157f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T1157f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T442f1168(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T442f1167(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1156f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T1157f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T407f144(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T442f1166(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T442f1165(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T1149f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].fill_with */
extern void T1150f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT].extend */
extern void T1150f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T1149f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T1150f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T442f865(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T407f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T83f134(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T642f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T442f1164(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T442f1163(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T442f1162(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T442f1161(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T442f1160(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T442f1159(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T442f1158(GE_context* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T467f13(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T442f1157(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T442f1156(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T1151f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T1153f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T1153f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1151f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T1153f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T442f1155(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T1152f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern unsigned char ge547os19989;
extern T0* ge547ov19989;
extern T0* T1152f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T1156c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T442f1154(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T407f143(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T1152c6(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T1156f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T1157c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T442f1153(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T442f1152(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T442f1151(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T1143f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T1145f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_OBSOLETE].extend */
extern void T1145f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1143f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T1145f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T407f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T442f1150(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T442f1149(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T1014f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T1016f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T1016f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1014f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1016f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T407f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T407f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1219c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T442f1148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T442f1147(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T1017f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T1019f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T1019f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T442f1931(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T1018f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge899os19989;
extern T0* ge899ov19989;
extern T0* T1018f8(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T1014c3(GE_context* ac);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T407f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1220c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T1018f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T1018f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T442f1146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T442f1145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T442f1144(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1017f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1019f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T407f137(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T1018f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T1018c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T1018f12p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T1014f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T1016c5(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T1018f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T442f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T442f1142(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T442f1141(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T442f1140(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T442f1139(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T442f1138(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T407f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T442f1137(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T442f864(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T407f326(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1217c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T407f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1421c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T442f1136(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T442f1135(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T442f1134(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T442f1133(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T442f1132(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T442f1131(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T442f1130(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T1023f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T1025f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T1025f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1023f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T1025f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T442f1129(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T442f1128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T442f1127(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T442f1126(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T442f1125(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T442f1124(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T442f1123(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T442f1122(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T442f1121(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T442f1120(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T442f1119(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T442f1118(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T442f1117(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T442f1116(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T442f1115(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T442f1114(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T442f1113(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T442f1112(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T442f1111(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T442f1110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T442f1109(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T442f1108(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T442f1107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T442f1106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T442f1105(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T442f1104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T442f1103(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T442f1102(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T442f1101(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T442f1100(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T442f1099(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T442f1098(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T442f1097(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T442f1096(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T442f1095(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T442f1094(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T442f1093(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T442f1092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T442f1091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T442f1090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T442f1089(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T442f1088(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T442f1087(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T442f1086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T442f1085(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T442f1084(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T1020f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T1022f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T1022f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T1021f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T1021f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T442f1083(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1020f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T1022f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T407f134(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T1021c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T1021f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T1021f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T442f1082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T442f1081(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T442f1080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T442f1079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T442f1078(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1082f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T1084f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T442f1930(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T897f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T897f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T897f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T897f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T407f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1216f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1216c75(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1216f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge824os3660;
extern T0* ge824ov3660;
extern T0* T82f690(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T350c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1216f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T442f863(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T442f1077(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T442f1076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T442f1075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T442f1074(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T442f1073(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T442f1072(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T407f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T1083f75(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T1083c74(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T442f1071(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T442f1070(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T442f1069(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T1085f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T1087f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T1087f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1085f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T1087f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T407f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T442f1068(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T1088f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T1089f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T1089f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f32(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1216f77(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T1083f76(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T642f16(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T642f32p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge533os19989;
extern T0* ge533ov19989;
extern T0* T642f15(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T1085c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T442f1067(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1088f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T1089f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T407f130(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T642f33(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T642c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T642f26p1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T1085f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T1087c5(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T642f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T442f1066(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T442f1065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T442f1927(GE_context* ac, T0* C, T0* a1);
extern T1 T442f1927ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T897f11(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T1025f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T1025f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T897f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1481f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1481f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T83f240(GE_context* ac, T0* C, T0* a1);
extern T1 T83f240ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T642f27(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1085f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T1087f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T1087f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1216f80(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T897f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T442f1064(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T442f1063(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T442f1062(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T442f1061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T442f1060(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T442f1059(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T442f1058(GE_context* ac, T0* C);
/* ET_CLASS.set_external_keyword */
extern void T83f238(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T83f237(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T83f243(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T83f236(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T442f861(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_in_system */
extern void T83f246(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_time_stamp */
extern void T83f235(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T470f69(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T470f84(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1317f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T470f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T470f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T83f245(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T83f244(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T83f234(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T83f233(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T83f232(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T83f231(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T83f230(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T470f68(GE_context* ac, T0* C, T1 a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T122f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T536f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T536f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T536f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T536f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T121f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T536f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T536f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T536f17(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T442f919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T442f928(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T442f927(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T442f926(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T37f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T529c748(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T78f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T470f23(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T470f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T470f27(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].has */
extern T1 T1317f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T470f26(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T470f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T470f24(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T442f1057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T442f1056(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T442f1055(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T442f1054(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T1102f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T1104f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T1104f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1102f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T1104f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T407f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T442f1053(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T1099f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T1101f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T1101f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1099f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T1101f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T407f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1215c5(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1215f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T442f1052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T442f1051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T442f1050(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T442f1049(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T442f1048(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T442f1047(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T442f1046(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T442f1045(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T1105f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T1107f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T1107f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T442f1044(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1105f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T1107f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T407f127(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T442f1043(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T1096f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T1098f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T1098f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T407f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T442f1042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T442f1041(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1096f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T1098f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T407f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T442f1040(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T407f126(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T442f1039(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T442f1038(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T1093f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T1095f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T1095f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1093f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T1095f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T442f1037(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T442f1036(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T442f1035(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T442f1034(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T407f122(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T442f1033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T442f1032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T442f1031(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T442f1030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T442f1029(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T442f1028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T442f1027(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T442f1026(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T442f1025(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T442f1024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T442f1023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T442f1022(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T442f1021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T442f1020(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T442f1019(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T442f1018(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T442f1017(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T442f1016(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T442f1921(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].wipe_out */
extern void T880f38(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].slots_wipe_out */
extern void T880f54(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].clashes_wipe_out */
extern void T880f53(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_wipe_out */
extern void T880f52(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_wipe_out */
extern void T880f51(GE_context* ac, T0* C);
/* SPECIAL [ET_NAMED_CLASS].keep_head */
extern void T1468f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].set_count */
extern void T1468f9(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors_after */
extern void T880f50(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].forth */
extern void T880f41(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put_last */
extern void T880f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].compress */
extern void T880f58(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_keep_head */
extern void T880f68(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_storage_keep_head */
extern void T880f67(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].move_all_cursors */
extern void T880f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].key_storage_put */
extern void T880f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].item_for_iteration */
extern T0* T880f17(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].after */
extern T1 T880f22(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_after */
extern T1 T880f24(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].start */
extern void T880f39(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T83f239(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make */
extern T0* T880c36(GE_context* ac, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].set_internal_cursor */
extern void T880f48(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_slots */
extern void T880f46(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_clashes */
extern void T880f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_key_storage */
extern void T880f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].make_item_storage */
extern void T880f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].make */
extern T0* T1470f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_NAMED_CLASS].make_empty */
extern T0* T1468c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NAMED_CLASS].default_create */
extern T0* T1470c3(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T442f1015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T442f1920(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_end_keyword */
extern void T83f267(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T83f266(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T83f265(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T83f264(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T83f263(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T83f262(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T83f261(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T83f260(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T442f1014(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T442f1013(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T442f1012(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T442f1011(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T83f259(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T442f1010(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T83f258(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T442f1009(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T442f964(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T953f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T955f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T955f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T953f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T955f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T951f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T952f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T952f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T951f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T952f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T945f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_VOID].fill_with */
extern void T947f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_VOID].extend */
extern void T947f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T945f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T947f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T942f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T944f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T944f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T942f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T944f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T939f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T941f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T941f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T939f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T941f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].fill_with */
extern void T938f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_RESULT].extend */
extern void T938f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T938f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T934f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T929f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T931f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T931f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T929f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T931f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T926f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T928f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T923f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T925f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T925f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T923f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T925f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T921f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].fill_with */
extern void T922f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_CURRENT].extend */
extern void T922f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T921f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T922f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T915f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].fill_with */
extern void T917f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_BREAK].extend */
extern void T917f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T915f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T917f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T912f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T914f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T910f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].fill_with */
extern void T911f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_POSITION].extend */
extern void T911f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T910f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T911f3(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T905f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T907f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T907f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T905f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T907f4(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T902f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T904f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T904f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T902f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T904f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T442f963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T442f961(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T442f987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T442f986(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T442f1008(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T442f985(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T442f984(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T442f983(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T442f982(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T442f981(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T442f980(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T442f979(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T442f978(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T442f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T442f977(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T442f1007(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T442f996(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T407f16(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T407f15(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T407f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1206f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1206c35(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1206f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T442f932(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T407f13(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1205f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1205c35(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1205f41(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T407f12(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1204f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1204c64(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1204f71(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1204f70(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T407f11(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1203f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1203c64(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1203f71(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1203f70(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T407f10(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1202f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1202c64(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1202f71(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1202f70(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T37f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T78f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T37f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T78f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T407f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1201f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1201c64(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1201f71(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1201f70(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T407f8(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T1200f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T1200c64(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T1200f71(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T1200f70(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T37f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T78f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T37f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T78f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T37f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T78f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T37f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T78f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T37f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T78f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T37f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T78f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T37f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T78f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T37f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T78f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T407f7(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1199f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T442f935(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1199c36(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1199f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T442f939(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T407f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1198f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T442f934(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1198c40(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1198f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T442f702(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T442f700(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T423f54(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T423f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T423f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T423f36(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T423f58(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T423f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T423f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T423f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T423f34(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern unsigned char ge1053os25745;
extern T0* ge1053ov25745;
extern T0* T442f918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T442f925(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T442f2100(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T852f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T852f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T442f917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern unsigned char ge1053os25746;
extern T0* ge1053ov25746;
extern T0* T442f916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T442f698(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T442f2099(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T442f1006(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T407f5(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T829f40(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T829c35(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T829f36(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T37f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T78f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T37f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T78f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T37f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T78f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T37f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T78f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T37f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T78f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T407f4(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1197f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T442f933(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1197c38(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1197f43(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T442f1005(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T407f121(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1211f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1211c37(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1211f42(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T37f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T78f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T37f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T78f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T442f1004(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T407f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1210f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1210c37(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1210f42(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T37f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T78f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T407f3(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T924f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T924c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T924f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T924f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T924f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T442f997(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T442f1003(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T442f1002(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T407f119(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T400f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T442f835(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T407f118(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T400c59(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T442f833(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T407f117(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T906f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T407f116(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T407f115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T442f829(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T407f114(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge824os3742;
extern T0* ge824ov3742;
extern T0* T82f726(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T400c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T407f113(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T407f112(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T407f111(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge824os3722;
extern T0* ge824ov3722;
extern T0* T82f724(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T400c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T407f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge824os3712;
extern T0* ge824ov3712;
extern T0* T82f723(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T400c89(GE_context* ac);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T407f109(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge824os3707;
extern T0* ge824ov3707;
extern T0* T82f722(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T400c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T407f108(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T400c58(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T407f107(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T407f106(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T407f105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T442f818(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T407f104(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T407f103(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T407f102(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge824os3715;
extern T0* ge824ov3715;
extern T0* T82f719(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T400c85(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T407f101(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T407f100(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T930f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T930c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T407f99(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T407f98(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T407f97(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T285f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T407f96(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T407f95(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge824os3735;
extern T0* ge824ov3735;
extern T0* T82f716(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T400c82(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T407f94(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T312f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T407f93(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T407f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T407f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T407f90(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T400c54(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T407f89(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T407f88(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T407f87(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge824os3702;
extern T0* ge824ov3702;
extern T0* T82f711(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T400c77(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T407f86(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T407f85(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge824os3688;
extern T0* ge824ov3688;
extern T0* T82f710(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T400c76(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T407f84(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T407f83(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge824os3744;
extern T0* ge824ov3744;
extern T0* T82f709(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T400c75(GE_context* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T407f82(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T407f81(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T940f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T940c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T940f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T940f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T940f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T407f80(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T407f79(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T407f78(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1209f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1209c33(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1209f37(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1209f38(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1209f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T407f77(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T407f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T407f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T407f74(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T407f73(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T903f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T407f72(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T407f71(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T946f32(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T946c29(GE_context* ac);
/* ET_VOID.make_token */
extern void T946f33(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T946f34(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T946f11(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T407f70(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1208f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T407f69(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T407f68(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T400c50(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T407f67(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern unsigned char ge824os3721;
extern T0* ge824ov3721;
extern T0* T82f701(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T400c67(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T442f777(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T407f66(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T440f127(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T423f60(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T440f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T440f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T440f132(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T440f196(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T440f129(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T440f128(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T442f936(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T407f65(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T407f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T407f63(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T407f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T407f61(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T930c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T407f60(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T407f59(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T930c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T407f58(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T407f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T407f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T407f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T407f54(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T407f53(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge824os3711;
extern T0* ge824ov3711;
extern T0* T82f696(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T400c62(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T407f52(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T407f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T407f2(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T442f1001(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T407f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T407f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T407f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T407f47(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T407f46(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T350f77(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T407f45(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T943f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T943c67(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T943f72(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T407f44(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T407f43(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T943c66(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T407f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T943c65(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T407f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T350c82(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T407f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T350c81(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T407f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T943c64(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T442f684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T442f1000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T442f999(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T407f38(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T350c80(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T407f37(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T407f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T407f35(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T648f104(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T407f34(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T407f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T407f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T407f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T407f30(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T954f72(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T407f29(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T407f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T407f27(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge824os3665;
extern T0* ge824ov3665;
extern T0* T82f685(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T350c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T407f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T82f684(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T949c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T949f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T949f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T407f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge824os3667;
extern T0* ge824ov3667;
extern T0* T82f683(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T350c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T407f24(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T943c63(GE_context* ac);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T407f23(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T943c62(GE_context* ac);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T407f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T350c76(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T407f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T943c61(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T407f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T943c60(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T407f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T943c59(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T407f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T943c58(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T407f17(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T943c56(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T442f683(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T442f976(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T37f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T78f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T442f995(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T442f638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T442f975(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T442f958(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T442f637(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T442f636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T442f974(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T442f613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T442f959(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T442f968(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T442f993(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T442f1918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T442f1944(GE_context* ac, T0* C);
/* SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1192f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1192f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1190f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1190f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1187f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1187f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1184f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].set_count */
extern void T1184f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1181f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1181f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1178f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1178f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1175f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1175f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1172f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1172f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1169f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1169f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1167f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1167f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1164f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1164f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T1161f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T1161f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T1159f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T1159f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T1157f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T1157f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T1155f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T1155f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T1153f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T1153f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].keep_head */
extern void T1150f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].set_count */
extern void T1150f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T1148f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T1148f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T1145f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T1145f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T1142f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T1142f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T1140f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T1140f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T1137f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T1137f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T1134f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T1134f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T1131f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T1131f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T1126f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T1126f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T1123f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T1123f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T1120f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T1120f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T1117f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T1117f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T1115f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T1115f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T1113f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T1113f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T1110f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T1110f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].keep_head */
extern void T725f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].set_count */
extern void T725f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T1107f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T1107f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T1104f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T1104f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T1101f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T1101f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T1098f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T1098f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T1095f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T1095f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T1092f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T1092f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T1089f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T1089f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T1079f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T1079f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T1076f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T1076f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T1074f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T1074f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T1069f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T1069f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T1066f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T1066f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T1063f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T1063f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T1060f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T1060f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T1057f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T1057f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T1055f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T1055f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].keep_head */
extern void T1053f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT].set_count */
extern void T1053f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T1050f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T1050f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T1047f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T1047f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T1044f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T1044f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T1041f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T1041f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].keep_head */
extern void T1039f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR].set_count */
extern void T1039f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T1036f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T1036f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T1034f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T1034f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T1031f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T1031f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T1028f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T1028f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T1022f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T1022f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T1019f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T1019f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T1016f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T1016f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T1013f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T1013f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T1010f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].set_count */
extern void T1010f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T1008f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].set_count */
extern void T1008f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T1005f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T1005f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T1001f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T1001f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T998f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T998f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T995f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T995f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].keep_head */
extern void T992f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].set_count */
extern void T992f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T989f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T989f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T682f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T682f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T986f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T986f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T983f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T983f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T980f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T980f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T975f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T975f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T973f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T973f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T970f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T970f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T967f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T967f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T965f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T965f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T647f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T647f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T963f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T963f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T961f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T961f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T958f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T958f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T955f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T955f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T952f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T952f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T950f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T950f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].keep_head */
extern void T947f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].set_count */
extern void T947f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T944f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T944f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T941f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T941f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].keep_head */
extern void T938f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].set_count */
extern void T938f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T933f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T933f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T931f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T931f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T928f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T928f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T925f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T925f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].keep_head */
extern void T922f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].set_count */
extern void T922f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T920f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T920f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].keep_head */
extern void T917f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].set_count */
extern void T917f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T914f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T914f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].keep_head */
extern void T911f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].set_count */
extern void T911f8(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T907f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T907f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T904f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T904f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T442f962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T442f954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T442f956(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T896f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T896f17(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T893f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T892f9(GE_context* ac, T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T889f9(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T204f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T442f956p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T442f956p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T442f956p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T442f678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern unsigned char ge1053os25779;
extern T0* ge1053ov25779;
extern T0* T442f914(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T83f225(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T83f92(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T442f666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T442f949(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T439f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T83f224(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T439f22(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].extend */
extern void T880f37(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].put */
extern void T880f49(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T439f25(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T372f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T886f28(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T886f27(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T886f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T886f12(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T886f26(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T372f68(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T376f18(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T439f24(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T439f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T881f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T881f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T881f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T881f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T881f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T881f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T881f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1472f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_after */
extern void T1472f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T881f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T881f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T881f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1472f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T881f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T881f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T439f30(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T372f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T881f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T881f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T881f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T881f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T881f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].after */
extern T1 T1472f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T881f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T881f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T881f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].off */
extern T1 T1472f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T881f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T372f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T372f75(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T372f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T372f41(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T372f77(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T372f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T372f37(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T439f28(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T372f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T885f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T885f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T372f72(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T439f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T882f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T882f51(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T882f50(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T882f49(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T882f48(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T882f43(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T882f47(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1473f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_after */
extern void T1473f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T882f37(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T882f46(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T882f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1473f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T882f52(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T882f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T439f29(GE_context* ac, T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T882f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T882f19(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T882f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T882f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T882f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].after */
extern T1 T1473f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].start */
extern void T882f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T882f45(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T882f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].off */
extern T1 T1473f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T882f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T372f70(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T883f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.current_system */
extern T0* T439f12(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T439f21(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T439f17(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T439f20(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T439f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T439f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T439c14(GE_context* ac);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T439f19(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T883c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge968os26249;
extern T0* ge968ov26249;
extern T0* T883f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T883f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T882c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_QUERY].set_internal_cursor */
extern void T882f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T882f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1473c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T882f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T882f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T882f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T882f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T882f39(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T881c35(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].set_internal_cursor */
extern void T881f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T881f33(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1472c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T881f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T881f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T881f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T881f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T881f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T439f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T439f13(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T439f11(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T433f2(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T376f22(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1301f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T390f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T386f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T372f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T372f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1196f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T372f46(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T372f262(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T383f60(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T383f15(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T383f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found_item */
extern T0* T387f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].found */
extern T1 T387f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search */
extern void T387f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].search_position */
extern void T387f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].hash_position */
extern T6 T387f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T960f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T957f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T387f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_item */
extern T6 T387f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T37f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T529c897(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T37f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T78f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T78f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T37f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T529c896(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T78f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T388f3(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].item */
extern T0* T755f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T372f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T372f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1195f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T372f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found_item */
extern T0* T384f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].found */
extern T1 T384f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search */
extern void T384f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].search_position */
extern void T384f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T384f32(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T746f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1267f25(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T384f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T384f34(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T37f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T529c895(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T37f118(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T78f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T78f119(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T37f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T529c894(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T78f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T385f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].item */
extern T0* T749f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T372f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T372f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T37f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T529c920(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T37f60(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T78f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T78f61(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T383f45(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T383f44(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern unsigned char ge824os3633;
extern T0* ge824ov3633;
extern T0* T82f1475(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.has_name */
extern T1 T389f8(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T383f41(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T37f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T529c900(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T37f121(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T78f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T78f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T37f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T529c899(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T78f388(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T372f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T372f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T80f205(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T80f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T80f60(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T80f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T80f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T80f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T80f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T80f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T80f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T80f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T80f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T75f936(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T75f942(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T181f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T75f941(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T181f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T75f940(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T75f946(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1301f40(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T390f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T386f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T372f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T372f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T372f281(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T80f272(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T80f357(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T80f416(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T80f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T268f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.process_current */
extern void T75f937(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T75f943(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1301f57(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1301f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T390f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T386f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T372f175(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T372f188(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f188ot1(T0* a1, T0** a2);
extern T1 T372f188ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T37f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T529c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T37f113(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T78f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T78f114(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T372f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T372f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T83f193(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1778f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1778f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1778f10(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1892f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1891f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1891f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1778f9(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1892f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1891f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1778c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1778f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1778f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1893c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1892f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1891c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1892c3(GE_context* ac);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T37f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T529c938(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T37f124(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T78f427(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T78f125(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T37f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T529c937(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T37f122(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T78f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T78f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T372f49(GE_context* ac, T0* C, T0* a1);
extern T1 T372f49ot1(T0* a1);
extern T1 T372f49ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T389f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T383f42(GE_context* ac, T0* C, T0* a1);
extern T1 T383f42ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T383f56(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T383f55(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T383f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T383f16(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T37f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T529c886(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T37f112(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T78f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T78f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T372f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T372f311(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T372f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T372f310ot1(T0* a1, T0** a2);
extern T1 T372f310ot2(T0* a1, T0** a2);
extern T1 T372f310ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T372f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T372f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T372f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f314ot1(T0* a1, T0** a2);
extern T1 T372f314ot2(T0* a1);
extern T1 T372f314ot3(T0* a1, T0** a2);
extern T1 T372f314ot4(T0* a1);
extern T1 T372f314ot5(T0* a1, T0** a2);
extern T1 T372f314ot6(T0* a1, T0** a2);
extern T1 T372f314ot7(T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T37f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T529c976(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T37f123(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T78f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T78f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T37f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T529c907(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T78f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T37f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T529c975(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T37f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T78f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T78f149(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_basic */
extern T1 T83f129(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T401f34(GE_context* ac, T0* C, T8 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1718f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T286f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1718f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T286f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T372f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T372f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1872c17(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1874c22(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T372f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1873c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T376f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T83f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1316f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern unsigned char ge824os3637;
extern T0* ge824ov3637;
extern T0* T82f1478(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern unsigned char ge824os3635;
extern T0* ge824ov3635;
extern T0* T82f803(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T83f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T383f40(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T383f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T383f17(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T37f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T529c974(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T78f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T37f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T529c908(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T78f397(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T37f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T529c973(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T78f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1718c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T293c35(GE_context* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T293f35p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1718f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1718f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1718f16(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1718f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1718f9(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T372f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T372f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T37f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T529c942(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T37f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T78f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T78f137(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T37f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T529c906(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T78f395(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T37f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T529c905(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T78f394(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1265f29(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T83f197(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T372f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f246ot1(T0* a1, T0** a2);
extern T1 T372f246ot2(T0* a1, T0** a2);
extern T1 T372f246ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T372f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f308ot1(T0* a1, T0** a2);
extern T1 T372f308ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T372f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f307ot1(T0* a1, T0** a2);
extern T1 T372f307ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T37f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T529c927(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T37f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T78f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T78f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T372f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T372f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T372f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T372f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T372f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T37f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T529c984(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T78f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T372f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1796f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T83f151(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1796c41(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1796f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1796f36(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T372f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T372f305(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T380f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].force */
extern void T731f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].fill_with */
extern void T733f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].extend */
extern void T733f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T380f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T731f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].aliased_resized_area */
extern T0* T733f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T380f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T380f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T732f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T372f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T728f38(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T732f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T372f348(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].force_last */
extern void T381f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].force */
extern void T735f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].fill_with */
extern void T737f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].extend */
extern void T737f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].resize */
extern void T381f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T735f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].aliased_resized_area */
extern T0* T737f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].new_capacity */
extern T6 T381f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].extendible */
extern T1 T381f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T736f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T736f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T736f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T736f20(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T1879f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T736f19(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T736f22(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T1879f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_after */
extern void T1879f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T736f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T383f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T736f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T736f18(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T736f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T736f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T736f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T736f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T372f54(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].remove_last */
extern void T381f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].keep_head */
extern void T737f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_FEATURE]].set_count */
extern void T737f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].move_last_cursors_after */
extern void T381f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_next_cursor */
extern void T738f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_FEATURE]].set_after */
extern void T738f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].last */
extern T0* T381f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T736c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].set_internal_cursor */
extern void T736f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T736f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T1879c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_FEATURE]].is_empty */
extern T1 T381f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T728f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T728f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T728f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T728f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T728f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T732f37(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T732f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T732f40(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T732f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T732f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T732f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T83f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T265f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T265f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T372f52(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T380f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].keep_head */
extern void T733f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].set_count */
extern void T733f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T380f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T734f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_after */
extern void T734f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T380f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T380f9(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T372f113(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T80f289(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T80f374(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f374ot1(T0* a1, T0** a2);
extern T1 T80f374ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T80f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T80f466(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f466ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T80f334(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T80f78(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T80f72(GE_context* ac, T0* C, T0* a1);
extern T1 T80f72ot1(T0* a1);
extern T1 T80f72ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T80f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T80f348(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T80f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f407ot1(T0* a1, T0** a2);
extern T1 T80f407ot2(T0* a1, T0** a2);
extern T1 T80f407ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T80f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f406ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T80f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T80f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f255ot1(T0* a1, T0** a2);
extern T1 T80f255ot2(T0* a1);
extern T1 T80f255ot3(T0* a1, T0** a2);
extern T1 T80f255ot4(T0* a1);
extern T1 T80f255ot5(T0* a1, T0** a2);
extern T1 T80f255ot6(T0* a1, T0** a2);
extern T1 T80f255ot7(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T80f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T80f503(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T80f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T80f409(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T80f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T80f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T80f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f249ot1(T0* a1, T0** a2);
extern T1 T80f249ot2(T0* a1, T0** a2);
extern T1 T80f249ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T80f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f329ot1(T0* a1, T0** a2);
extern T1 T80f329ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T80f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f328ot1(T0* a1, T0** a2);
extern T1 T80f328ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T80f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T80f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T317c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T80f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T80f408(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f408ot1(T0* a1, T0** a2);
extern T1 T80f408ot2(T0* a1, T0** a2);
extern T1 T80f408ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T80f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T80f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T80f355(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T80f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T80f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T80f253(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T80f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T80f333(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T80f76(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T80f71(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T80f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T80f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T80f167(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T75f938(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T75f944(GE_context* ac, T0* C, T0* a1);
extern T1 T75f944ot1(T0* a1, T0** a2);
extern T1 T75f944ot2(T0* a1, T0** a2);
extern T1 T75f944ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T75f949(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T75f948(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T75f947(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1301f42(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T390f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T386f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T372f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T372f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T372f282(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T37f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T529c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T78f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T37f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T529c904(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T78f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T37f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T529c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T78f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T37f391(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T529c903(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T78f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T37f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T529c902(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T78f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T37f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T529c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T78f390(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T80f274(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T80f359(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T80f418(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T75f939(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T75f945(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1301f41(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T390f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T386f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T372f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T372f222(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f222ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T372f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T80f273(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T80f358(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f358ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T80f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f417ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T80f63(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T75f950(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T75f953(GE_context* ac, T0* C, T0* a1);
extern T1 T75f953ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T294f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T294f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T294f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T294f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T294f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T294f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T294f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T294f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T294f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T294f61(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T687f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T686f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T294f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T294f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T294f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T294f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].force */
extern void T687f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T686f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T686f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T294f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T294f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1301f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1301f23(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T337f5(GE_context* ac, T0* C, T6 a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1300f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T372f79(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T372f91(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T372f108(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T372f107(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T372f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T372f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T883f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T372f119(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T372f118(GE_context* ac, T0* C, T0* a1);
extern T1 T372f118ot1(T0* a1, T0** a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T376f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T376f20ot1(T0* a1, T0** a2);
extern T1 T376f20ot2(T0* a1, T0** a2);
extern T1 T376f20ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T78f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T529c802(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T78f72(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T37f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T37f71(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge191os2876;
extern T0* ge191ov2876;
extern T0* T376f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T78f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T529c801(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T37f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T1021f8(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T1021f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T376f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T376f21(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.current_system */
extern T0* T376f10(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T376f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T37f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T529c752(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T37f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T78f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T78f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T37f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T529c751(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T37f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T78f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T78f33(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T37f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T529c750(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T78f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T372f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T372f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T37f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T529c749(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T37f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T78f228(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T78f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern unsigned char ge191os2890;
extern T0* ge191ov2890;
extern T0* T372f42(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T372f103(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T372f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T883f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T372f116(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T372f115(GE_context* ac, T0* C, T0* a1);
extern T1 T372f115ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T80f116(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T80f118(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T80f125(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T80f124(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T80f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T80f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T80f130(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T80f129(GE_context* ac, T0* C, T0* a1);
extern T1 T80f129ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T80f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T80f121(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T80f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T80f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T80f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T80f127(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T80f126(GE_context* ac, T0* C, T0* a1);
extern T1 T80f126ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_do_procedure */
extern void T75f951(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T75f954(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T75f956(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T75f958(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T75f431(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T75f964(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T75f959(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T75f957(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T75f963(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_compound */
extern void T75f967(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T75f968(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T75f966(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T75f962(GE_context* ac, T0* C, T0* a1);
extern T1 T75f962ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T75f434(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T75f961(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T75f965(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T75f960(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T75f960ot1(T0* a1, T0** a2);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T295f44(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T295f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T295f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T295f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T295f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T295f29(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T295f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T295f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T295f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T295f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T295f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1301f11(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1300f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T372f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T372f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T80f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T80f119(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T75f952(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T75f955(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1301f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T390f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T386f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T385f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].force_last */
extern void T749f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].resize */
extern void T749f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T749f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NAMED_OBJECT_TEST].extendible */
extern T1 T749f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T78f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T529c1020(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T78f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T37f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T37f126(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T386f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.current_system */
extern T0* T386f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T386f62(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T372f180(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T372f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T372f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T37f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T529c916(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T37f127(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T78f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T78f128(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T37f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T529c915(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T78f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern unsigned char ge191os2886;
extern T0* ge191ov2886;
extern T0* T372f50(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T37f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T529c914(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T78f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T37f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T529c913(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T78f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T378f15(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T378f17(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T726f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_after */
extern void T726f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T37f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T529c912(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T78f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T37f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T529c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T78f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T378f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T378f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T378f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T378f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T378f10(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T37f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T529c910(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T78f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].force_last */
extern void T384f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T384f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_put */
extern void T384f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_put */
extern void T384f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].resize */
extern void T384f64(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T384f71(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T384f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T384f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T384f69(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].slots_resize */
extern void T384f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T384f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T384f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T372f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T80f316(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T80f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T80f456(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T80f486(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T80f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].force_last */
extern void T374f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T374f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T80f82(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T80f195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_named_object_test */
extern void T75f969(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T75f1015(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].force_last */
extern void T280f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].force */
extern void T668f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].fill_with */
extern void T667f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBJECT_TEST].extend */
extern void T667f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].resize */
extern void T280f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T668f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBJECT_TEST].aliased_resized_area */
extern T0* T667f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].new_capacity */
extern T6 T280f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_OBJECT_TEST].extendible */
extern T1 T280f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1301f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T390f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T386f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T372f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T372f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T372f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T372f320(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T372f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T37f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T529c940(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T529f190(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T37f69(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T78f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T78f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T80f275(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T80f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T80f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T80f460(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T80f487(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T80f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T80f459(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T75f970(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T75f1016(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T75f1065(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1301f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T390f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T386f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T372f130(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T372f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T372f236(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T80f284(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T80f369(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T80f422(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T75f971(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T75f1017(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1301f86(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1301f91(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T1130f6(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T1130f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T390f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T386f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T372f131(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T372f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T372f240(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_found_item */
extern void T387f63(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].remove_position */
extern void T387f66(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_put */
extern void T387f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_put */
extern void T387f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T387f75(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T387f74(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_put */
extern void T387f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_put */
extern void T387f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T387f73(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T387f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T388f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].prune_last */
extern void T755f15(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T386f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T390f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T372f239(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T37f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T529c934(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T37f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T78f423(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T78f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T372f238(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T388f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].force_last */
extern void T755f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].resize */
extern void T755f16(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].new_capacity */
extern T6 T755f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ACROSS_COMPONENT].extendible */
extern T1 T755f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T372f237(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T372f235(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1776f6(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T372f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T372f332(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T379f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].force */
extern void T727f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].fill_with */
extern void T729f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].extend */
extern void T729f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T379f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T727f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].aliased_resized_area */
extern T0* T729f3(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T379f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T379f6(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T728f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T728f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T83f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T266f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T266f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T372f53(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T379f15(GE_context* ac, T0* C);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].keep_head */
extern void T729f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].set_count */
extern void T729f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T379f16(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T730f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_after */
extern void T730f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T379f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T379f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].force_last */
extern void T387f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].resize */
extern void T387f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].clashes_resize */
extern void T387f79(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T387f39(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].key_storage_resize */
extern void T387f78(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].item_storage_resize */
extern void T387f77(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].slots_resize */
extern void T387f76(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_NESTED_TYPE_CONTEXT, ET_ACROSS_COMPONENT].new_capacity */
extern T6 T387f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T372f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T388f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T37f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T529c933(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T37f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T78f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T78f134(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T385f5(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T37f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T529c932(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T78f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T37f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T529c931(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T78f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T37f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T529c930(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T78f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T37f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T529c929(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T78f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T37f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T529c928(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T37f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T78f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T78f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T80f318(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T80f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T80f457(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f332(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f332p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f331(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f331p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T80f250(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T80f226(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T80f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T80f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T80f75(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T80f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T75f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T75f1018(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1301f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1718f15(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1301f100(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T286f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T390f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T386f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T372f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T372f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T80f302(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T80f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T75f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T75f1019(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1301f74(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f74ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1301f95(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T390f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T386f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T372f133(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T372f185(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f185ot1(T0* a1, T0** a2);
extern T1 T372f185ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T372f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T372f243ot1(T0* a1, T0** a2);
extern T1 T372f243ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T985f20(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T37f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T529c936(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T37f135(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T78f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T78f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T372f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T372f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T372f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T372f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T372f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T372f329ot1(T0* a1, T0** a2);
extern T1 T372f329ot2(T0* a1, T0** a2);
extern T1 T372f329ot3(T0* a1, T0** a2);
extern T1 T372f329ot4(T0* a1, T0** a2);
extern T1 T372f329ot5(T0* a1, T0** a2);
extern T1 T372f329ot6(T0* a1, T0** a2);
extern T1 T372f329ot7(T0* a1, T0** a2);
extern T1 T372f329ot8(T0* a1, T0** a2);
extern T1 T372f329ot9(T0* a1, T0** a2);
extern T1 T372f329ot10(T0* a1, T0** a2);
extern T1 T372f329ot11(T0* a1, T0** a2);
extern T1 T372f329ot12(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T37f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T529c983(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T37f152(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T78f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T78f153(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T37f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T529c982(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T78f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T37f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T529c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T37f151(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T78f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T78f152(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T37f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T529c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T78f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T972f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T972f8(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T37f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T529c979(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T37f150(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T78f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T78f151(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T37f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T529c978(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T78f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T251f34(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T251f35(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T251f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T251f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T372f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1806f7(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T1895f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T1894f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T1894f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge474os15174;
extern T0* ge474ov15174;
extern T0* T1806f5(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1895c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1807c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1806c6(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1895f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T1894c4(GE_context* ac, T6 a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T37f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T529c972(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T37f147(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T78f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T78f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T372f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T372f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T985f35(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T372f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T372f242ot1(T0* a1, T0** a2);
extern T1 T372f242ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T372f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T372f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T372f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T372f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T37f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T529c935(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T78f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T372f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T372f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T372f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T372f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T80f306(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T80f391(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f391ot1(T0* a1, T0** a2);
extern T1 T80f391ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T80f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f440ot1(T0* a1, T0** a2);
extern T1 T80f440ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T80f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T80f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f492ot1(T0* a1, T0** a2);
extern T1 T80f492ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T80f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T268f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T80f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T80f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T80f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f496ot1(T0* a1, T0** a2);
extern T1 T80f496ot2(T0* a1, T0** a2);
extern T1 T80f496ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T80f499(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f499ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T80f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f483ot1(T0* a1, T0** a2);
extern T1 T80f483ot2(T0* a1, T0** a2);
extern T1 T80f483ot3(T0* a1, T0** a2);
extern T1 T80f483ot4(T0* a1, T0** a2);
extern T1 T80f483ot5(T0* a1, T0** a2);
extern T1 T80f483ot6(T0* a1, T0** a2);
extern T1 T80f483ot7(T0* a1, T0** a2);
extern T1 T80f483ot8(T0* a1, T0** a2);
extern T1 T80f483ot9(T0* a1, T0** a2);
extern T1 T80f483ot10(T0* a1, T0** a2);
extern T1 T80f483ot11(T0* a1, T0** a2);
extern T1 T80f483ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T80f482(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T80f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T80f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T80f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f439ot1(T0* a1, T0** a2);
extern T1 T80f439ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T80f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T80f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T80f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T80f438(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T80f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T80f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T80f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f495ot1(T0* a1, T0** a2);
extern T1 T80f495ot2(T0* a1, T0** a2);
extern T1 T80f495ot3(T0* a1, T0** a2);
extern T1 T80f495ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T80f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T80f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T80f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T75f974(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T75f1021(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T75f1067(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1067ot1(T0* a1, T0** a2);
extern T1 T75f1067ot2(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T283f14(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].force */
extern void T677f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_AGENT].fill_with */
extern void T676f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].extend */
extern void T676f10(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T283f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].aliased_resized_area */
extern T0* T677f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].aliased_resized_area */
extern T0* T676f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T283f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T283f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T75f1020(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T75f1066(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1066ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T287f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T287f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T290f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1301f72(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T1133f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T1133f7(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T390f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T386f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T372f134(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T372f186(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f186ot1(T0* a1, T0** a2);
extern T1 T372f186ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T372f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.put */
extern void T1133f32(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T80f304(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T80f389(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f389ot1(T0* a1, T0** a2);
extern T1 T80f389ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T80f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f436ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T75f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T75f1022(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1022ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1301f71(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T390f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T386f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T372f135(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T372f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T80f303(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T80f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T75f976(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T75f1023(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1301f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T390f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T386f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T372f136(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T372f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T372f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T372f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T372f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_FEATURE_CHECKER.check_static_feature_validity */
extern T0* T372f315ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_FEATURE_CHECKER.check_static_feature_validity */
extern T0* T372f315ac2(GE_context* ac);
extern T1 T372f315ot1(T0* a1);
extern T1 T372f315ot2(T0* a1);
extern T1 T372f315ot3(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [ET_ASSERTIONS]].set_rout_disp_final */
extern void T1804f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T37f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T529c977(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T37f149(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T78f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T78f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_postconditions_recursive */
extern void T372f349(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].wipe_out */
extern void T393f65(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].slots_wipe_out */
extern void T393f70(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].clashes_wipe_out */
extern void T393f69(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].key_storage_wipe_out */
extern void T393f68(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].item_storage_wipe_out */
extern void T393f67(GE_context* ac, T0* C);
/* SPECIAL [ET_ASSERTIONS].keep_head */
extern void T761f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ASSERTIONS].set_count */
extern void T761f10(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].move_all_cursors_after */
extern void T393f66(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_ASSERTIONS, ET_FEATURE].for_all */
extern T1 T393f38(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.are_all_true */
extern T1 T885f12(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.are_all_true */
extern T1 T392f12(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.string_ */
extern T0* T372f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1232f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T259f52(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T372f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T883f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T372f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f250ot1(T0* a1, T0** a2);
extern T1 T372f250ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1255f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1171f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T372f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T80f290(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T80f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T80f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T80f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T309f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T247f40(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T80f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern T0* T80f347ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern T0* T80f347ac2(GE_context* ac);
extern T1 T80f347ot1(T0* a1);
extern T1 T80f347ot2(T0* a1);
extern T1 T80f347ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_postconditions_recursive */
extern void T80f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T80f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T80f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f266ot1(T0* a1, T0** a2);
extern T1 T80f266ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T80f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T75f977(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T75f1024(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1024ot1(T0* a1, T0** a2);
extern T1 T75f1024ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1301f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T390f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T386f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T372f137(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T372f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T372f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T37f378(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T529c890(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T37f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T78f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T78f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T37f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T529c889(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T37f114(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T78f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T78f115(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T37f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T529c888(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T78f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1174f20(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1174f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T80f305(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T80f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T80f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T75f978(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T75f1025(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1301f87(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T390f13(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T386f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T372f138(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T372f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T372f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T372f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T372f317(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T37f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T529c939(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T78f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T80f319(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T80f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T80f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T80f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T80f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T75f979(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T75f1026(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T75f1068(GE_context* ac, T0* C, T2 a1);
/* UT_INTEGER_FORMATTER.put_decimal_natural_32 */
extern void T356f3(GE_context* ac, T0* C, T0* a1, T10 a2);
/* ET_C_GENERATOR.in_target */
extern T1 T75f447(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1301f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T390f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T386f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T372f139(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T372f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T80f320(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T80f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T75f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T75f1027(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1301f89(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T390f15(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T386f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T372f140(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T372f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T80f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T80f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T75f981(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T75f1028(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1301f44(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T390f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T386f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T372f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T372f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T372f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T943f16(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T372f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T372f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T372f127(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T372f126(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T372f125(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T372f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T372f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T37f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T529c800(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T37f70(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T78f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T78f71(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T372f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T37f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T529c799(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T78f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T80f276(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T80f361(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T80f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T80f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T80f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T80f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T80f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T80f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T80f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T80f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T80f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T75f982(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T75f1029(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T75f1069(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T267f17(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T269f18(GE_context* ac, T0* C, T11 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T267f16(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T269f17(GE_context* ac, T0* C, T10 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_16 */
extern void T267f15(GE_context* ac, T0* C, T9 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_16 */
extern void T269f16(GE_context* ac, T0* C, T9 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_8 */
extern void T267f14(GE_context* ac, T0* C, T8 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_8 */
extern void T269f15(GE_context* ac, T0* C, T8 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T267f10(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T269f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_32 */
extern void T267f13(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_32 */
extern void T269f14(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_16 */
extern void T267f12(GE_context* ac, T0* C, T5 a1);
/* INTEGER_16.to_integer_64 */
extern T7 T5f8(GE_context* ac, T5* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_16 */
extern void T269f13(GE_context* ac, T0* C, T5 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_8 */
extern void T267f11(GE_context* ac, T0* C, T4 a1);
/* INTEGER_8.to_integer_64 */
extern T7 T4f8(GE_context* ac, T4* C);
/* KL_STRING_OUTPUT_STREAM.put_integer_8 */
extern void T269f12(GE_context* ac, T0* C, T4 a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1301f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T390f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T386f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T372f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T372f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T80f277(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T80f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T75f983(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T75f1030(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1301f46(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T390f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T386f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T372f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T372f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T80f278(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T80f363(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T75f984(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T75f1031(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1301f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T390f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T386f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T372f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T372f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T80f279(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T80f364(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T75f985(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T75f1032(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1301f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T390f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T386f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T372f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T372f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T80f280(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T80f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T75f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T75f1033(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1301f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T390f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T386f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T372f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T372f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T372f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1206f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1205f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T372f322(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T372f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T37f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T529c941(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T78f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T80f281(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T80f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T80f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T80f462(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T80f461(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T75f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T75f1034(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1205f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1301f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T390f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T386f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T372f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T372f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T80f282(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T80f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T75f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T75f1035(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1206f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1301f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T390f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T386f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T372f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T372f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T372f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T80f283(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T80f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T80f421(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T75f989(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T75f1036(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1301f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T390f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T386f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T372f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T372f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T80f285(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T80f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T75f990(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T75f1037(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1301f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T390f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T386f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T372f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T372f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T80f286(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T80f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T75f991(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1301f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T390f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T386f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T372f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T372f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T80f287(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T80f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T75f992(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1301f18(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1300f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T372f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T372f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T37f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T529c788(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T78f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T372f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T883f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T372f110(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T372f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T80f133(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T80f138(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T80f145(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T80f144(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T80f143(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_do_function */
extern void T75f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T75f1038(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T75f1070(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1301f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1300f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T372f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T372f94(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T372f112(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T37f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T529c790(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T37f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T78f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T78f63(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1690f4(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1690f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1690f10(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1690f3(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T37f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T529c789(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T37f61(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T78f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T78f62(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1690f2(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern unsigned char ge816os16426;
extern T0* ge816ov16426;
extern T0* T372f44(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1690c11(GE_context* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T1139f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T1139f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T80f134(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T80f139(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T80f146(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T80f61(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T75f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T75f1039(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1690f1(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1690f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.standard_once_keys */
extern T0* T75f449(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1301f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1300f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T372f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T372f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T80f135(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T80f140(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T75f995(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T75f1040(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1301f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1300f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T372f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T372f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T80f136(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T80f141(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T75f996(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T75f1041(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1301f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1300f25(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1300f26(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1300f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T78f476(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T529c987(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T78f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T37f475(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T37f155(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1300f8(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.current_system */
extern T0* T1300f11(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1300f53(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1300f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1232f100(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T259f102(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1300f52(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1300f55(GE_context* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1300f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T78f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T529c988(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T78f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T37f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T37f156(GE_context* ac, T0* C, T0* a1);
/* detachable ARRAY [ET_TYPE].count */
extern T6 T262f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found_item */
extern T0* T1680f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_item */
extern T0* T1680f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].found */
extern T1 T1680f29(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search */
extern void T1680f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].search_position */
extern void T1680f40(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].hash_position */
extern T6 T1680f23(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_item */
extern T0* T1680f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_item */
extern T6 T1680f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_item */
extern T6 T1680f26(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge824os3620;
extern T0* ge824ov3620;
extern T0* T82f1472(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge824os3619;
extern T0* ge824ov3619;
extern T0* T82f1470(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge824os3618;
extern T0* ge824ov3618;
extern T0* T82f1468(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge824os3612;
extern T0* ge824ov3612;
extern T0* T82f1429(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern unsigned char ge824os3548;
extern T0* ge824ov3548;
extern T0* T82f1425(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern unsigned char ge824os3531;
extern T0* ge824ov3531;
extern T0* T82f1423(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern unsigned char ge824os3526;
extern T0* ge824ov3526;
extern T0* T82f1421(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern unsigned char ge824os3520;
extern T0* ge824ov3520;
extern T0* T82f1008(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge824os3518;
extern T0* ge824ov3518;
extern T0* T82f1006(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern unsigned char ge824os3517;
extern T0* ge824ov3517;
extern T0* T82f1418(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern unsigned char ge824os3489;
extern T0* ge824ov3489;
extern T0* T82f1416(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern unsigned char ge824os3463;
extern T0* ge824ov3463;
extern T0* T82f1458(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern unsigned char ge824os3461;
extern T0* ge824ov3461;
extern T0* T82f1456(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern unsigned char ge824os3460;
extern T0* ge824ov3460;
extern T0* T82f1454(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern unsigned char ge824os3458;
extern T0* ge824ov3458;
extern T0* T82f1414(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern unsigned char ge824os3404;
extern T0* ge824ov3404;
extern T0* T82f1408(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge824os3391;
extern T0* ge824ov3391;
extern T0* T82f1450(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge824os3390;
extern T0* ge824ov3390;
extern T0* T82f1448(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge824os3337;
extern T0* ge824ov3337;
extern T0* T82f1446(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1300f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].force_last */
extern void T1680f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_put */
extern void T1680f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_put */
extern void T1680f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_put */
extern void T1680f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].resize */
extern void T1680f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].clashes_resize */
extern void T1680f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].special_integer_ */
extern T0* T1680f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].key_storage_resize */
extern void T1680f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_resize */
extern void T1680f48(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T1773f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].aliased_resized_area */
extern T0* T1770f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].slots_resize */
extern void T1680f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_modulus */
extern T6 T1680f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_capacity */
extern T6 T1680f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].item_storage_put */
extern void T1680f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].force */
extern void T1773f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].fill_with */
extern void T1770f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].extend */
extern void T1770f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].unset_found_item */
extern void T1680f39(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge824os3336;
extern T0* ge824ov3336;
extern T0* T82f1444(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].force_last */
extern void T1524f43(GE_context* ac, T0* C, T0* a1, T8 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_put */
extern void T1524f49(GE_context* ac, T0* C, T8 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_put */
extern void T1524f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_put */
extern void T1524f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_item */
extern T6 T1524f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].hash_position */
extern T6 T1524f23(GE_context* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f20(GE_context* ac, T8* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].resize */
extern void T1524f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_resize */
extern void T1524f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].special_integer_ */
extern T0* T1524f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_resize */
extern void T1524f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_resize */
extern void T1524f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1679f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1681f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].key_storage_item */
extern T8 T1524f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].clashes_item */
extern T6 T1524f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].slots_resize */
extern void T1524f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].new_capacity */
extern T6 T1524f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_put */
extern void T1524f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].force */
extern void T1679f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].fill_with */
extern void T1681f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME]].extend */
extern void T1681f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search_position */
extern void T1524f44(GE_context* ac, T0* C, T8 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_key_equality_tester */
extern void T1680f35(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1300f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_map */
extern T0* T1680c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_with_equality_testers */
extern void T1680f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_sparse_container */
extern void T1680f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].set_internal_cursor */
extern void T1680f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].new_cursor */
extern T0* T1680f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make */
extern T0* T1774c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_slots */
extern void T1680f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_clashes */
extern void T1680f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_key_storage */
extern void T1680f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME].make_item_storage */
extern void T1680f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make */
extern T0* T1773f2(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].make_empty */
extern T0* T1770c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8]].default_create */
extern T0* T1773c3(GE_context* ac);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found_item */
extern T0* T1524f20(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].item_storage_item */
extern T0* T1524f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].found */
extern T1 T1524f32(GE_context* ac, T0* C);
/* DS_HASH_TABLE [DS_HASH_TABLE [TUPLE [detachable ARRAY [ET_TYPE], detachable ET_TYPE, NATURAL_8], ET_FEATURE_NAME], NATURAL_8].search */
extern void T1524f42(GE_context* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1300f51(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge824os3583;
extern T0* ge824ov3583;
extern T0* T82f974(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern unsigned char ge824os3525;
extern T0* ge824ov3525;
extern T0* T82f1441(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern unsigned char ge824os3506;
extern T0* ge824ov3506;
extern T0* T82f1439(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern unsigned char ge824os3491;
extern T0* ge824ov3491;
extern T0* T82f1437(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge824os3298;
extern T0* ge824ov3298;
extern T0* T82f907(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge824os3296;
extern T0* ge824ov3296;
extern T0* T82f902(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge824os3295;
extern T0* ge824ov3295;
extern T0* T82f899(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge824os3293;
extern T0* ge824ov3293;
extern T0* T82f896(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge824os3291;
extern T0* ge824ov3291;
extern T0* T82f891(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1300f50(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge824os3617;
extern T0* ge824ov3617;
extern T0* T82f1435(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge824os3616;
extern T0* ge824ov3616;
extern T0* T82f1433(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge824os3614;
extern T0* ge824ov3614;
extern T0* T82f1431(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge824os3611;
extern T0* ge824ov3611;
extern T0* T82f982(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge824os3610;
extern T0* ge824ov3610;
extern T0* T82f980(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern unsigned char ge824os3441;
extern T0* ge824ov3441;
extern T0* T82f1412(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern unsigned char ge824os3440;
extern T0* ge824ov3440;
extern T0* T82f1410(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge824os3324;
extern T0* ge824ov3324;
extern T0* T82f1406(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge824os3323;
extern T0* ge824ov3323;
extern T0* T82f1404(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge824os3322;
extern T0* ge824ov3322;
extern T0* T82f1402(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge824os3321;
extern T0* ge824ov3321;
extern T0* T82f1400(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge824os3320;
extern T0* ge824ov3320;
extern T0* T82f1398(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge824os3319;
extern T0* ge824ov3319;
extern T0* T82f1396(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge824os3315;
extern T0* ge824ov3315;
extern T0* T82f1394(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge824os3314;
extern T0* ge824ov3314;
extern T0* T82f1392(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge824os3313;
extern T0* ge824ov3313;
extern T0* T82f1390(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge824os3312;
extern T0* ge824ov3312;
extern T0* T82f1388(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge824os3311;
extern T0* ge824ov3311;
extern T0* T82f1386(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge824os3310;
extern T0* ge824ov3310;
extern T0* T82f1384(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge824os3309;
extern T0* ge824ov3309;
extern T0* T82f1382(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge824os3308;
extern T0* ge824ov3308;
extern T0* T82f1380(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1300f49(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge824os3290;
extern T0* ge824ov3290;
extern T0* T82f888(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1300f48(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge824os3592;
extern T0* ge824ov3592;
extern T0* T82f1377(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge824os3547;
extern T0* ge824ov3547;
extern T0* T82f85(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge824os3546;
extern T0* ge824ov3546;
extern T0* T82f1374(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge824os3545;
extern T0* ge824ov3545;
extern T0* T82f1372(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge824os3544;
extern T0* ge824ov3544;
extern T0* T82f1370(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge824os3543;
extern T0* ge824ov3543;
extern T0* T82f1368(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge824os3542;
extern T0* ge824ov3542;
extern T0* T82f1366(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge824os3541;
extern T0* ge824ov3541;
extern T0* T82f1364(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge824os3540;
extern T0* ge824ov3540;
extern T0* T82f1362(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge824os3539;
extern T0* ge824ov3539;
extern T0* T82f1360(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge824os3538;
extern T0* ge824ov3538;
extern T0* T82f1358(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge824os3537;
extern T0* ge824ov3537;
extern T0* T82f1356(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge824os3536;
extern T0* ge824ov3536;
extern T0* T82f1354(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge824os3535;
extern T0* ge824ov3535;
extern T0* T82f1352(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge824os3534;
extern T0* ge824ov3534;
extern T0* T82f1350(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge824os3533;
extern T0* ge824ov3533;
extern T0* T82f1348(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge824os3562;
extern T0* ge824ov3562;
extern T0* T82f87(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge824os3557;
extern T0* ge824ov3557;
extern T0* T82f1345(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge824os3554;
extern T0* ge824ov3554;
extern T0* T82f1343(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge824os3514;
extern T0* ge824ov3514;
extern T0* T82f1341(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge824os3504;
extern T0* ge824ov3504;
extern T0* T82f1339(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge824os3501;
extern T0* ge824ov3501;
extern T0* T82f1337(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge824os3497;
extern T0* ge824ov3497;
extern T0* T82f1335(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge824os3494;
extern T0* ge824ov3494;
extern T0* T82f1333(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge824os3480;
extern T0* ge824ov3480;
extern T0* T82f1331(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge824os3438;
extern T0* ge824ov3438;
extern T0* T82f1329(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge824os3435;
extern T0* ge824ov3435;
extern T0* T82f1327(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge824os3432;
extern T0* ge824ov3432;
extern T0* T82f1325(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge824os3429;
extern T0* ge824ov3429;
extern T0* T82f1323(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge824os3343;
extern T0* ge824ov3343;
extern T0* T82f1320(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge824os3340;
extern T0* ge824ov3340;
extern T0* T82f1318(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge824os3326;
extern T0* ge824ov3326;
extern T0* T82f1316(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1300f47(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1300f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern unsigned char ge824os3378;
extern T0* ge824ov3378;
extern T0* T82f1314(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1300f46(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern unsigned char ge824os3377;
extern T0* ge824ov3377;
extern T0* T82f1312(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1300f45(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge824os3631;
extern T0* ge824ov3631;
extern T0* T82f1310(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge824os3558;
extern T0* ge824ov3558;
extern T0* T82f1308(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge824os3521;
extern T0* ge824ov3521;
extern T0* T82f1306(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge824os3478;
extern T0* ge824ov3478;
extern T0* T82f1304(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern unsigned char ge824os3477;
extern T0* ge824ov3477;
extern T0* T82f1302(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge824os3476;
extern T0* ge824ov3476;
extern T0* T82f1300(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge824os3475;
extern T0* ge824ov3475;
extern T0* T82f1298(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge824os3472;
extern T0* ge824ov3472;
extern T0* T82f1296(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern unsigned char ge824os3465;
extern T0* ge824ov3465;
extern T0* T82f1294(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern unsigned char ge824os3459;
extern T0* ge824ov3459;
extern T0* T82f1292(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge824os3451;
extern T0* ge824ov3451;
extern T0* T82f1290(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern unsigned char ge824os3443;
extern T0* ge824ov3443;
extern T0* T82f1288(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge824os3439;
extern T0* ge824ov3439;
extern T0* T82f1286(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern unsigned char ge824os3366;
extern T0* ge824ov3366;
extern T0* T82f1284(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge824os3344;
extern T0* ge824ov3344;
extern T0* T82f1282(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge824os3325;
extern T0* ge824ov3325;
extern T0* T82f1280(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge824os3265;
extern T0* ge824ov3265;
extern T0* T82f887(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1300f44(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern unsigned char ge824os3628;
extern T0* ge824ov3628;
extern T0* T82f1277(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern unsigned char ge824os3627;
extern T0* ge824ov3627;
extern T0* T82f1275(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern unsigned char ge824os3602;
extern T0* ge824ov3602;
extern T0* T82f1274(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern unsigned char ge824os3601;
extern T0* ge824ov3601;
extern T0* T82f1273(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern unsigned char ge824os3600;
extern T0* ge824ov3600;
extern T0* T82f1271(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern unsigned char ge824os3599;
extern T0* ge824ov3599;
extern T0* T82f1269(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern unsigned char ge824os3598;
extern T0* ge824ov3598;
extern T0* T82f1267(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern unsigned char ge824os3597;
extern T0* ge824ov3597;
extern T0* T82f1265(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern unsigned char ge824os3596;
extern T0* ge824ov3596;
extern T0* T82f1263(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern unsigned char ge824os3595;
extern T0* ge824ov3595;
extern T0* T82f1261(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern unsigned char ge824os3594;
extern T0* ge824ov3594;
extern T0* T82f1259(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern unsigned char ge824os3591;
extern T0* ge824ov3591;
extern T0* T82f1257(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern unsigned char ge824os3590;
extern T0* ge824ov3590;
extern T0* T82f1255(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern unsigned char ge824os3589;
extern T0* ge824ov3589;
extern T0* T82f1253(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern unsigned char ge824os3588;
extern T0* ge824ov3588;
extern T0* T82f1251(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern unsigned char ge824os3587;
extern T0* ge824ov3587;
extern T0* T82f1249(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern unsigned char ge824os3586;
extern T0* ge824ov3586;
extern T0* T82f1247(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern unsigned char ge824os3585;
extern T0* ge824ov3585;
extern T0* T82f1245(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern unsigned char ge824os3584;
extern T0* ge824ov3584;
extern T0* T82f1243(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern unsigned char ge824os3581;
extern T0* ge824ov3581;
extern T0* T82f1241(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern unsigned char ge824os3580;
extern T0* ge824ov3580;
extern T0* T82f1239(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern unsigned char ge824os3579;
extern T0* ge824ov3579;
extern T0* T82f1237(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern unsigned char ge824os3578;
extern T0* ge824ov3578;
extern T0* T82f1235(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern unsigned char ge824os3577;
extern T0* ge824ov3577;
extern T0* T82f1233(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern unsigned char ge824os3576;
extern T0* ge824ov3576;
extern T0* T82f1231(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern unsigned char ge824os3575;
extern T0* ge824ov3575;
extern T0* T82f1229(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern unsigned char ge824os3574;
extern T0* ge824ov3574;
extern T0* T82f1227(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern unsigned char ge824os3571;
extern T0* ge824ov3571;
extern T0* T82f1225(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern unsigned char ge824os3570;
extern T0* ge824ov3570;
extern T0* T82f1223(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern unsigned char ge824os3569;
extern T0* ge824ov3569;
extern T0* T82f1221(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern unsigned char ge824os3568;
extern T0* ge824ov3568;
extern T0* T82f1219(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern unsigned char ge824os3567;
extern T0* ge824ov3567;
extern T0* T82f1217(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern unsigned char ge824os3566;
extern T0* ge824ov3566;
extern T0* T82f1215(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern unsigned char ge824os3487;
extern T0* ge824ov3487;
extern T0* T82f1213(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern unsigned char ge824os3483;
extern T0* ge824ov3483;
extern T0* T82f1211(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern unsigned char ge824os3624;
extern T0* ge824ov3624;
extern T0* T82f1209(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern unsigned char ge824os3622;
extern T0* ge824ov3622;
extern T0* T82f1207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern unsigned char ge824os3607;
extern T0* ge824ov3607;
extern T0* T82f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern unsigned char ge824os3561;
extern T0* ge824ov3561;
extern T0* T82f1204(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern unsigned char ge824os3560;
extern T0* ge824ov3560;
extern T0* T82f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern unsigned char ge824os3559;
extern T0* ge824ov3559;
extern T0* T82f1202(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern unsigned char ge824os3556;
extern T0* ge824ov3556;
extern T0* T82f1200(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern unsigned char ge824os3555;
extern T0* ge824ov3555;
extern T0* T82f1198(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern unsigned char ge824os3553;
extern T0* ge824ov3553;
extern T0* T82f1196(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern unsigned char ge824os3552;
extern T0* ge824ov3552;
extern T0* T82f1194(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern unsigned char ge824os3551;
extern T0* ge824ov3551;
extern T0* T82f1192(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern unsigned char ge824os3550;
extern T0* ge824ov3550;
extern T0* T82f1190(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern unsigned char ge824os3527;
extern T0* ge824ov3527;
extern T0* T82f1188(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern unsigned char ge824os3523;
extern T0* ge824ov3523;
extern T0* T82f1186(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern unsigned char ge824os3522;
extern T0* ge824ov3522;
extern T0* T82f1184(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern unsigned char ge824os3519;
extern T0* ge824ov3519;
extern T0* T82f1182(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern unsigned char ge824os3516;
extern T0* ge824ov3516;
extern T0* T82f1180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern unsigned char ge824os3515;
extern T0* ge824ov3515;
extern T0* T82f1178(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern unsigned char ge824os3513;
extern T0* ge824ov3513;
extern T0* T82f1177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern unsigned char ge824os3512;
extern T0* ge824ov3512;
extern T0* T82f1176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern unsigned char ge824os3511;
extern T0* ge824ov3511;
extern T0* T82f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern unsigned char ge824os3509;
extern T0* ge824ov3509;
extern T0* T82f1174(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern unsigned char ge824os3503;
extern T0* ge824ov3503;
extern T0* T82f1172(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern unsigned char ge824os3502;
extern T0* ge824ov3502;
extern T0* T82f1170(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern unsigned char ge824os3500;
extern T0* ge824ov3500;
extern T0* T82f1168(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern unsigned char ge824os3499;
extern T0* ge824ov3499;
extern T0* T82f1166(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern unsigned char ge824os3496;
extern T0* ge824ov3496;
extern T0* T82f1164(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern unsigned char ge824os3495;
extern T0* ge824ov3495;
extern T0* T82f1162(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern unsigned char ge824os3493;
extern T0* ge824ov3493;
extern T0* T82f1160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern unsigned char ge824os3492;
extern T0* ge824ov3492;
extern T0* T82f1158(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern unsigned char ge824os3474;
extern T0* ge824ov3474;
extern T0* T82f1156(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern unsigned char ge824os3473;
extern T0* ge824ov3473;
extern T0* T82f1154(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern unsigned char ge824os3471;
extern T0* ge824ov3471;
extern T0* T82f1152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern unsigned char ge824os3470;
extern T0* ge824ov3470;
extern T0* T82f1150(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern unsigned char ge824os3469;
extern T0* ge824ov3469;
extern T0* T82f1148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern unsigned char ge824os3468;
extern T0* ge824ov3468;
extern T0* T82f1146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern unsigned char ge824os3467;
extern T0* ge824ov3467;
extern T0* T82f1144(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern unsigned char ge824os3466;
extern T0* ge824ov3466;
extern T0* T82f1142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern unsigned char ge824os3462;
extern T0* ge824ov3462;
extern T0* T82f1140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern unsigned char ge824os3455;
extern T0* ge824ov3455;
extern T0* T82f1138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern unsigned char ge824os3454;
extern T0* ge824ov3454;
extern T0* T82f1136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern unsigned char ge824os3453;
extern T0* ge824ov3453;
extern T0* T82f952(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern unsigned char ge824os3447;
extern T0* ge824ov3447;
extern T0* T82f1133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern unsigned char ge824os3445;
extern T0* ge824ov3445;
extern T0* T82f1131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern unsigned char ge824os3437;
extern T0* ge824ov3437;
extern T0* T82f1129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern unsigned char ge824os3436;
extern T0* ge824ov3436;
extern T0* T82f1127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern unsigned char ge824os3434;
extern T0* ge824ov3434;
extern T0* T82f1125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern unsigned char ge824os3433;
extern T0* ge824ov3433;
extern T0* T82f1123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern unsigned char ge824os3431;
extern T0* ge824ov3431;
extern T0* T82f1121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern unsigned char ge824os3430;
extern T0* ge824ov3430;
extern T0* T82f1119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern unsigned char ge824os3428;
extern T0* ge824ov3428;
extern T0* T82f1117(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern unsigned char ge824os3427;
extern T0* ge824ov3427;
extern T0* T82f1115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern unsigned char ge824os3407;
extern T0* ge824ov3407;
extern T0* T82f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge824os3398;
extern T0* ge824ov3398;
extern T0* T82f944(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern unsigned char ge824os3397;
extern T0* ge824ov3397;
extern T0* T82f1110(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern unsigned char ge824os3395;
extern T0* ge824ov3395;
extern T0* T82f1108(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern unsigned char ge824os3388;
extern T0* ge824ov3388;
extern T0* T82f1106(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern unsigned char ge824os3386;
extern T0* ge824ov3386;
extern T0* T82f1104(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern unsigned char ge824os3384;
extern T0* ge824ov3384;
extern T0* T82f1102(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern unsigned char ge824os3383;
extern T0* ge824ov3383;
extern T0* T82f1100(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern unsigned char ge824os3381;
extern T0* ge824ov3381;
extern T0* T82f1098(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern unsigned char ge824os3369;
extern T0* ge824ov3369;
extern T0* T82f1096(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern unsigned char ge824os3368;
extern T0* ge824ov3368;
extern T0* T82f1094(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern unsigned char ge824os3367;
extern T0* ge824ov3367;
extern T0* T82f1092(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern unsigned char ge824os3360;
extern T0* ge824ov3360;
extern T0* T82f1090(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern unsigned char ge824os3349;
extern T0* ge824ov3349;
extern T0* T82f1088(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern unsigned char ge824os3346;
extern T0* ge824ov3346;
extern T0* T82f1086(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern unsigned char ge824os3342;
extern T0* ge824ov3342;
extern T0* T82f1084(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern unsigned char ge824os3341;
extern T0* ge824ov3341;
extern T0* T82f1082(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern unsigned char ge824os3339;
extern T0* ge824ov3339;
extern T0* T82f1080(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern unsigned char ge824os3338;
extern T0* ge824ov3338;
extern T0* T82f1078(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern unsigned char ge824os3328;
extern T0* ge824ov3328;
extern T0* T82f1076(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern unsigned char ge824os3327;
extern T0* ge824ov3327;
extern T0* T82f1074(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern unsigned char ge824os3316;
extern T0* ge824ov3316;
extern T0* T82f1072(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern unsigned char ge824os3254;
extern T0* ge824ov3254;
extern T0* T82f886(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1300f43(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge824os3372;
extern T0* ge824ov3372;
extern T0* T82f1070(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge824os3371;
extern T0* ge824ov3371;
extern T0* T82f1069(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge824os3370;
extern T0* ge824ov3370;
extern T0* T82f1068(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge824os3245;
extern T0* ge824ov3245;
extern T0* T82f885(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1300f42(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern unsigned char ge824os3361;
extern T0* ge824ov3361;
extern T0* T82f1066(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1300f41(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern unsigned char ge824os3375;
extern T0* ge824ov3375;
extern T0* T82f1063(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern unsigned char ge824os3243;
extern T0* ge824ov3243;
extern T0* T82f884(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1300f40(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern unsigned char ge824os3582;
extern T0* ge824ov3582;
extern T0* T82f1060(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern unsigned char ge824os3549;
extern T0* ge824ov3549;
extern T0* T82f1058(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern unsigned char ge824os3405;
extern T0* ge824ov3405;
extern T0* T82f1056(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern unsigned char ge824os3332;
extern T0* ge824ov3332;
extern T0* T82f1054(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern unsigned char ge824os3625;
extern T0* ge824ov3625;
extern T0* T82f1052(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern unsigned char ge824os3481;
extern T0* ge824ov3481;
extern T0* T82f1050(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern unsigned char ge824os3464;
extern T0* ge824ov3464;
extern T0* T82f1048(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern unsigned char ge824os3457;
extern T0* ge824ov3457;
extern T0* T82f1046(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern unsigned char ge824os3456;
extern T0* ge824ov3456;
extern T0* T82f1044(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern unsigned char ge824os3446;
extern T0* ge824ov3446;
extern T0* T82f1042(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern unsigned char ge824os3374;
extern T0* ge824ov3374;
extern T0* T82f1040(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1300f39(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern unsigned char ge824os3393;
extern T0* ge824ov3393;
extern T0* T82f1037(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern unsigned char ge824os3389;
extern T0* ge824ov3389;
extern T0* T82f1035(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern unsigned char ge824os3257;
extern T0* ge824ov3257;
extern T0* T82f883(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1300f38(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern unsigned char ge824os3356;
extern T0* ge824ov3356;
extern T0* T82f1032(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern unsigned char ge824os3355;
extern T0* ge824ov3355;
extern T0* T82f1030(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern unsigned char ge824os3345;
extern T0* ge824ov3345;
extern T0* T82f1028(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern unsigned char ge824os3335;
extern T0* ge824ov3335;
extern T0* T82f1026(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern unsigned char ge824os3334;
extern T0* ge824ov3334;
extern T0* T82f1024(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern unsigned char ge824os3333;
extern T0* ge824ov3333;
extern T0* T82f1022(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern unsigned char ge824os3329;
extern T0* ge824ov3329;
extern T0* T82f1020(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern unsigned char ge824os3238;
extern T0* ge824ov3238;
extern T0* T82f882(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1300f37(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern unsigned char ge824os3403;
extern T0* ge824ov3403;
extern T0* T82f1017(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern unsigned char ge824os3402;
extern T0* ge824ov3402;
extern T0* T82f1015(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge824os3307;
extern T0* ge824ov3307;
extern T0* T82f1013(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern unsigned char ge824os3232;
extern T0* ge824ov3232;
extern T0* T82f881(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1300f36(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge824os3613;
extern T0* ge824ov3613;
extern T0* T82f1010(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern unsigned char ge824os3449;
extern T0* ge824ov3449;
extern T0* T82f1004(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge824os3401;
extern T0* ge824ov3401;
extern T0* T82f1002(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1300f35(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge824os3299;
extern T0* ge824ov3299;
extern T0* T82f880(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1300f34(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern unsigned char ge824os3505;
extern T0* ge824ov3505;
extern T0* T82f998(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern unsigned char ge824os3406;
extern T0* ge824ov3406;
extern T0* T82f996(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern unsigned char ge824os3364;
extern T0* ge824ov3364;
extern T0* T82f994(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern unsigned char ge824os3363;
extern T0* ge824ov3363;
extern T0* T82f992(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern unsigned char ge824os3362;
extern T0* ge824ov3362;
extern T0* T82f990(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern unsigned char ge824os3352;
extern T0* ge824ov3352;
extern T0* T82f988(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern unsigned char ge824os3351;
extern T0* ge824ov3351;
extern T0* T82f986(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1300f33(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge824os3284;
extern T0* ge824ov3284;
extern T0* T82f879(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1300f32(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge824os3498;
extern T0* ge824ov3498;
extern T0* T82f978(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge824os3348;
extern T0* ge824ov3348;
extern T0* T82f976(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1300f31(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1300f6(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1300f30(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern unsigned char ge824os3572;
extern T0* ge824ov3572;
extern T0* T82f972(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge824os3532;
extern T0* ge824ov3532;
extern T0* T82f84(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern unsigned char ge824os3486;
extern T0* ge824ov3486;
extern T0* T82f969(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern unsigned char ge824os3376;
extern T0* ge824ov3376;
extern T0* T82f88(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge824os3373;
extern T0* ge824ov3373;
extern T0* T82f965(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern unsigned char ge824os3317;
extern T0* ge824ov3317;
extern T0* T82f961(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge824os3305;
extern T0* ge824ov3305;
extern T0* T82f959(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1300f29(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge824os3623;
extern T0* ge824ov3623;
extern T0* T82f956(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern unsigned char ge824os3564;
extern T0* ge824ov3564;
extern T0* T82f954(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern unsigned char ge824os3450;
extern T0* ge824ov3450;
extern T0* T82f950(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern unsigned char ge824os3444;
extern T0* ge824ov3444;
extern T0* T82f948(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern unsigned char ge824os3400;
extern T0* ge824ov3400;
extern T0* T82f946(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern unsigned char ge824os3399;
extern T0* ge824ov3399;
extern T0* T82f942(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern unsigned char ge824os3358;
extern T0* ge824ov3358;
extern T0* T82f940(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1300f28(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge824os3604;
extern T0* ge824ov3604;
extern T0* T82f937(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge824os3621;
extern T0* ge824ov3621;
extern T0* T82f934(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge824os3608;
extern T0* ge824ov3608;
extern T0* T82f932(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge824os3606;
extern T0* ge824ov3606;
extern T0* T82f930(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge824os3605;
extern T0* ge824ov3605;
extern T0* T82f928(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge824os3565;
extern T0* ge824ov3565;
extern T0* T82f926(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge824os3448;
extern T0* ge824ov3448;
extern T0* T82f923(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge824os3396;
extern T0* ge824ov3396;
extern T0* T82f921(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge824os3394;
extern T0* ge824ov3394;
extern T0* T82f919(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge824os3357;
extern T0* ge824ov3357;
extern T0* T82f917(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge824os3350;
extern T0* ge824ov3350;
extern T0* T82f915(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1300f5(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T372f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T372f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T80f137(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f142(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T80f147(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T80f153(GE_context* ac, T0* C, T0* a1);
extern T1 T80f153ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T80f152(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T80f151(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T80f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T80f150(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T80f149(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T80f148(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1232f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f142p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T75f997(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T75f1042(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T75f1071(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3, T1 a4);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T75f1083(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T75f1082(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T75f1081(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T144f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T56c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T75f1080(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T75f1079(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T75f1078(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T75f1077(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T75f1087(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T75f1125(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T75f1184(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1184ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T75f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T75f1186(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1186ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T75f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T75f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T75f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T75f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T75f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T75f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T75f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T75f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T75f1174(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T75f1173(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T75f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T75f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T75f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T75f1124(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T75f1169(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1169ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T75f1168(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1168ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T75f1123(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T75f1122(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T75f1121(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T75f1120(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T75f1119(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T75f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T75f1118(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T75f1117(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T75f1116(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T75f1115(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T75f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T75f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T75f1164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T75f1163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T75f1114(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T75f1113(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T75f1112(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T75f1111(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T75f1086(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T75f1110(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T75f1162(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T75f1128(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T75f1127(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T75f1109(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T75f1161(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T75f1161ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T75f1161ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T75f1160(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T75f1185(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1185ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T75f1159(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T75f1158(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T75f1157(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T75f1156(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T75f1155(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T75f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T75f1153(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1153ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T75f1152(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T75f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T75f1150(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T75f1149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T75f1148(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T75f1147(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T75f1146(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T75f1108(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T75f1145(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1145ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T75f1107(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T75f1106(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T75f1144(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T75f1105(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T75f1104(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T75f1143(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T75f1103(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T75f1102(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T75f1101(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T75f1142(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T75f1141(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T75f1100(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T75f1099(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T75f1098(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T75f1097(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T75f1096(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T75f1140(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T75f1095(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T75f1139(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T75f1138(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T75f1137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T75f1136(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T75f1135(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T75f1134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T75f1133(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T75f1094(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T75f1093(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T75f1092(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T75f1091(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T75f1090(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T75f1089(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T75f1088(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T75f1132(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1132ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T75f1131(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1131ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T75f1130(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1130ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T75f1129(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T75f1126(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1232f62(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T75f1076(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1693f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern unsigned char ge215os8518;
extern T0* ge215ov8518;
extern T0* T75f458(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T1693c2(GE_context* ac);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T75f1075(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T75f1085(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T303f301(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T75f1074(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T75f1073(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T75f1073ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1330f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1329f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1328f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1327f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1306f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1305f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1305f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T78f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T529c803(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T37f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1305f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1305f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1305f6(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.index */
extern T6 T1242f22(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1304f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1299f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1298f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1297f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1296f11(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1296f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force_relation */
extern void T1521f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put_indexed_relation */
extern void T1521f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].force */
extern void T1521f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].put */
extern void T1521f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].put_new */
extern void T1676f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_put */
extern void T1676f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_put */
extern void T1676f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_put */
extern void T1676f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_put */
extern void T1676f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_item */
extern T6 T1676f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].hash_position */
extern T6 T1676f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1242f72(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_item */
extern T6 T1676f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].resize */
extern void T1676f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].clashes_resize */
extern void T1676f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].special_integer_ */
extern T0* T1676f26(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_resize */
extern void T1676f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1731f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1730f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_resize */
extern void T1676f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].key_storage_item */
extern T0* T1676f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].slots_resize */
extern void T1676f45(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_LIKE_FEATURE].resize */
extern void T1596f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].capacity */
extern T6 T1521f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].count */
extern T6 T1521f8(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_FEATURE].index_of */
extern T6 T1521f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found_item */
extern T6 T1676f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].item_storage_item */
extern T6 T1676f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].found */
extern T1 T1676f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search */
extern void T1676f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_FEATURE].search_position */
extern void T1676f53(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1295f9(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1294f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1294f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T78f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T529c805(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T78f74(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T37f284(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T37f73(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T78f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T529c804(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T37f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1294f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.current_system */
extern T0* T1294f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1294f17(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1242f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1242f82(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1283f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1283f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1283f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T78f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T529c884(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T37f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1282f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1282f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1282f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T78f475(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T529c986(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T78f155(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T37f474(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T37f154(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1282f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.current_system */
extern T0* T1282f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1282f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T376f23(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T376f29(GE_context* ac, T0* C, T0* a1);
extern T1 T376f29ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1330f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1330f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1329f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1329f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1329f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T470f38(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T470f37(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1328f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1328f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1327f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1327f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1306f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1306f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1305f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1305f17(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T78f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T529c806(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T37f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1244f77(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1243f81(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1244f22(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1243f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1304f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1299f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1298f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1297f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1297f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1297f23(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1296f12(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1296f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1295f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1295f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1294f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1294f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1283f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1282f18(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T376f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T376f30(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T376f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T883f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1330f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1329f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1328f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1327f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1306f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1305f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1304f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1299f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1298f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1297f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1296f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1295f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1294f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1283f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1282f19(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T376f25(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1301f59(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1301f94(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T78f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T529c1024(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T529f729(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T78f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T37f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T37f117(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T78f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T529c1023(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1253f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T37f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1256f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1253f15(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T906f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T78f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T529c1022(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T37f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T78f510(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T529c1021(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T78f172(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T37f509(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T37f171(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1301f8(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1301f97(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1301f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T181f92(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T390f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T386f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T372f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T372f205(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f205ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T372f258(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T882f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T882f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T882f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T882f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T882f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T882f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T882f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T882f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T882f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T882f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T882f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T882f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T882f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T882f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T882f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T882f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T372f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T372f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T372f257ot1(T0* a1, T0** a2);
extern T1 T372f257ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1253f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1256f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T83f163(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T399f3(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T81f15(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T37f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T529c893(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T78f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T37f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T529c892(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T78f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T37f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T529c891(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T37f116(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T78f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T78f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T80f291(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T80f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T80f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T80f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T309f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T247f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T310f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].force */
extern void T1701f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1700f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].extend */
extern void T1700f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge1000os15174;
extern T0* ge1000ov15174;
extern T0* T310f4(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1701c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T310f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1701f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1700f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T310f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T310f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T310f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T310c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1701f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1700c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T309c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T309f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T309f42ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T309f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T309f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T80f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f263ot1(T0* a1, T0** a2);
extern T1 T80f263ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T75f998(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T75f1043(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1301f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T390f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T386f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T372f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T372f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T37f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T529c898(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T37f120(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T78f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T78f121(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T372f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T372f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T372f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T372f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T372f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T80f314(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T80f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T80f455(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T309f43(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T247f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T80f454(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T80f453(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T80f429(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T80f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T75f999(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T75f1044(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1044ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T309f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T247f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T308f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1301f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T390f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T386f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T372f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T372f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T80f292(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T80f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T75f1000(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T75f1045(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1045ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1301f61(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T390f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T386f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T372f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T372f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T80f293(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T80f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T75f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T75f1046(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1301f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T390f31(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T386f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T372f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T372f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T80f294(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T80f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T75f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T75f1047(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1301f63(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T390f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T386f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T372f157(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T372f210(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f210ot1(T0* a1, T0** a2);
extern T1 T372f210ot2(T0* a1, T0** a2);
extern T1 T372f210ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1721c16(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T383f43(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T383f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T389f7(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].go_after */
extern void T174f79(GE_context* ac, T0* C);
/* DS_HASH_SET [INTEGER_32].cursor_go_after */
extern void T174f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1261f29(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1261f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1261f27(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T80f295(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T80f380(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f380ot1(T0* a1, T0** a2);
extern T1 T80f380ot2(T0* a1, T0** a2);
extern T1 T80f380ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T75f1003(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T75f1048(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1301f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T390f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T386f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T372f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T372f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T372f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T80f298(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T80f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T80f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T75f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T75f1049(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1301f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T390f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T386f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T372f159(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T372f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T80f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T80f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T75f1005(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T75f1050(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1301f68(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T390f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T386f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T372f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T372f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T37f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T529c909(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T37f125(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T78f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T78f126(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T80f300(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T80f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T75f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T75f1051(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1301f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T390f36(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T386f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T372f161(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T80f315(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T75f1007(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1301f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T390f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T386f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T372f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T372f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T80f317(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T80f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T75f1008(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T75f1052(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].force_last */
extern void T297f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_put */
extern void T297f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].force */
extern void T699f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].fill_with */
extern void T697f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].extend */
extern void T697f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_put */
extern void T297f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_put */
extern void T297f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_item */
extern T6 T297f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].hash_position */
extern T6 T297f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1268f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].resize */
extern void T297f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].clashes_resize */
extern void T297f70(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].special_integer_ */
extern T0* T297f37(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].key_storage_resize */
extern void T297f69(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T699f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T697f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_resize */
extern void T297f68(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].slots_resize */
extern void T297f67(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].new_capacity */
extern T6 T297f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].item_storage_put */
extern void T297f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, ET_INLINE_CONSTANT].search_position */
extern void T297f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1301f75(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f75ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T390f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T386f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T372f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T372f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T372f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T372f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T378f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T378f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T37f405(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T529c917(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T78f406(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T372f277(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T372f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T883f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T372f326(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T37f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T529c956(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T37f137(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T78f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T78f138(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T37f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T529c955(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T78f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T37f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T529c954(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T78f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T37f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T529c953(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T78f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T37f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T529c952(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T37f139(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T78f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T78f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T37f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T529c951(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T37f138(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T78f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T78f139(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T37f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T529c950(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T78f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T372f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T372f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T37f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T529c949(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T78f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T372f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T883f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T372f273(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T372f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T372f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T883f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T372f324(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T37f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T529c948(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T78f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T37f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T529c947(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T78f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T37f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T529c946(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T78f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T37f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T529c945(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T78f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T37f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T529c944(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T78f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T37f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T529c943(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T78f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T388f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T388f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T385f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T80f307(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T80f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T80f447(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T80f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T80f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f493ot1(T0* a1, T0** a2);
extern T1 T80f493ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T80f498(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T80f446(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T80f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T80f480(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T80f445(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T80f444(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T80f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T80f442(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T80f441(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T80f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T80f478(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T75f1009(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T75f1054(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T75f1053(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T75f1072(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T75f1084(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1301f76(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f76ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T390f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T386f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T372f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T372f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T37f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T529c918(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T37f128(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T78f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T78f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T80f308(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T80f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T75f1010(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T75f1056(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T75f1055(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1301f77(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f77ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T390f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T386f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T372f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T372f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T37f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T529c919(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T78f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T80f309(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T80f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T75f1011(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T75f1058(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T75f1057(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1301f78(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f78ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T390f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T386f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T372f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T372f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T372f279(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T372f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T80f310(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T80f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T80f448(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T80f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T75f1012(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T75f1060(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T75f1059(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1301f79(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f79ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T390f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T386f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T372f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T372f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T80f311(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T80f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T75f1013(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T75f1062(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T75f1061(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1301f80(GE_context* ac, T0* C, T0* a1);
extern T1 T1301f80ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T390f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T386f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T372f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T372f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T80f312(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T80f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T75f1014(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T75f1064(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T75f1063(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1330f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1329f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1328f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1327f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1306f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1305f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1304f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1299f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1298f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1297f27(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1296f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1295f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1294f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1283f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1283f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T78f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T529c880(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T37f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T78f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3f */
extern T0* T529c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T37f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T78f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T37f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T78f367(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T529c882(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T37f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1486f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1486f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1486f16(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1486f18(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put_new */
extern void T1641f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1641f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1641f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1641f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1641f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1641f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1641f32(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1216f72(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T1083f71(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1641f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1641f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1641f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1641f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1641f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1641f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1641f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1641f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1487f16(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1486f9(GE_context* ac, T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1486f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1641f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1641f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1641f27(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1641f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1641f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T78f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T529c881(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T37f365(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1282f20(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T376f26(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1330f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1330f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1330f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1329f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1329f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1328f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1328f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1328f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T470f43(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T470f42(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1327f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1327f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T470f46(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T470f45(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1327f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T470f41(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1306f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1306f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T81f114(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1695c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_CLASS_TYPE.tokens */
extern T0* T81f28(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1696c22(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T81f113(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T1696f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern unsigned char ge824os4301;
extern T0* ge824ov4301;
extern T0* T82f786(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1696f19(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1306f4(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1305f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1305f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1304f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1304f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1304f11ot1(T0* a1, T0** a2);
extern T1 T1304f11ot2(T0* a1, T0** a2);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T1303f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T1303f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T1303f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T1303f31(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T1303f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T1303f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T1303f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T1303f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.current_system */
extern T0* T1304f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1304f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1304f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1299f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1299f20(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T78f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T529c811(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T78f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T37f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T37f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1299f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_system */
extern T0* T1299f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T83f273(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1299f24(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T83f272(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1299f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1298f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1298f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1298f7(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1298f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1298f12(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1298f5(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1297f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1297f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1297f25(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1296f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1296f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1295f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1295f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1295f5(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_system */
extern T0* T1295f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1294f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1294f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1294f18(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1283f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1283f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T78f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T529c810(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T78f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T37f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T37f76(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1216f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T400f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T1083f11(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T78f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T529c809(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T37f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1216f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T400f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T1083f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T78f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T529c808(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T78f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T37f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T37f75(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T78f287(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T529c807(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T78f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T37f286(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T37f74(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1282f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1282f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1282f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T376f27(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T376f31(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T376f34(GE_context* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T376f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1301f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1300f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T372f86(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T372f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T80f155(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T37f373(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T78f374(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T80f166(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T80f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T80f165(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T80f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T80f193(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T80f192(GE_context* ac, T0* C, T0* a1);
extern T1 T80f192ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T80f191(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T80f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T72f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T80f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T80f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T80f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T80f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T80f185(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T80f184(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T80f183(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T80f182(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T80f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T80f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T80f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T80f178(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T80f177(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T80f176(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T80f175(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T80f174(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T80f173(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T80f172(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T80f171(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T80f170(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T80f169(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T259f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f160p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T75f1187(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T75f1198(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1330f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1330f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1329f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1328f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1328f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1327f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1327f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1306f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1306f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1305f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1304f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1299f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1299f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1298f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1298f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1297f28(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1297f34(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1297f33(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1296f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1295f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1295f19(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1294f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1283f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1283f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1282f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1282f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T78f474(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T529c985(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T78f154(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T37f473(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T37f153(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T376f28(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T376f32(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1301f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T372f181(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T80f206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T75f1188(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1301f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T390f54(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T386f59(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T372f179(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T372f234(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f234ot1(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T37f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T529c926(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T37f130(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T78f415(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T78f131(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T37f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T529c925(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T78f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T372f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T37f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T529c971(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T37f146(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T78f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T78f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T37f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T529c970(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T78f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T37f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T529c969(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T78f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T372f339(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T372f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T372f350ot1(T0* a1, T0** a2);
extern T1 T372f350ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T372f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T37f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T529c968(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T37f145(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T78f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T78f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T37f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T529c967(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T78f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T37f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T529c966(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T78f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T372f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T372f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T37f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T529c965(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T37f144(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T78f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T78f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T37f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T529c964(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T78f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T372f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T372f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T37f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T529c963(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T37f143(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T78f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T78f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T37f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T529c962(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T78f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T372f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T80f313(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T80f398(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f398ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T80f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T80f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T80f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f414ot1(T0* a1, T0** a2);
extern T1 T80f414ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T80f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T80f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T80f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T80f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T80f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T80f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T75f1189(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T75f1199(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1199ot1(T0* a1, T0** a2);
extern T1 T75f1199ot2(T0* a1, T0** a2);
extern T1 T75f1199ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T291f13(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T309f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T247f27(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T275f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1301f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T390f53(GE_context* ac, T0* C, T0* a1);
extern T1 T390f53ot1(T0* a1);
extern T1 T390f53ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T389f14(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T389f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].force_last */
extern void T174f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T389f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T389f18(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T389f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T386f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T372f178(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T372f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T372f287(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T372f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T80f301(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T80f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T80f435(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T80f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_object_test */
extern void T75f1190(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1301f65(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T390f52(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T386f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T372f177(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T372f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T372f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T37f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T529c924(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T37f129(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T78f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T78f130(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T320f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T320f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern unsigned char ge620os18246;
extern T0* ge620ov18246;
extern T0* T320f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T181f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T181f124(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T320f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T80f297(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T80f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T80f432(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T80f469(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1871c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T75f1191(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1301f64(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T390f51(GE_context* ac, T0* C, T0* a1);
extern T1 T390f51ot1(T0* a1);
extern T1 T390f51ot2(T0* a1);
extern T1 T390f51ot3(T0* a1, T0** a2);
extern T1 T390f51ot4(T0* a1);
extern T1 T390f51ot5(T0* a1);
extern T1 T390f51ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T648f96(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T350f70(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T386f56(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T372f176(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T372f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T372f284(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T37f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T529c923(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T78f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T321f25(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T321f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T80f296(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T80f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T80f431(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T80f468(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1870c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T75f1192(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1301f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T390f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T386f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T372f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T372f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T372f283(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f283ot1(T0* a1, T0** a2);
extern T1 T372f283ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T37f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T529c961(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T78f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T37f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T529c960(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T37f142(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T78f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T78f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T37f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T529c959(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T37f141(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T78f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T78f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T37f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T529c958(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T37f140(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T78f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T78f141(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T372f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1873f20(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T330f19(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T372f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T883f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T37f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T529c957(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T78f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_NULL_LEAF.column */
extern T6 T1908f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T1908f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1873f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T330f18(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T1873f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T80f288(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T80f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T80f424(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f424ot1(T0* a1, T0** a2);
extern T1 T80f424ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T80f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T80f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_create_expression */
extern void T75f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T75f1200(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1301f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1300f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T372f87(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T372f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T37f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T529c791(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T78f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T337f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T80f156(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T80f161(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T75f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T75f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T75f1204(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T75f1205(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T291f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1301f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1300f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T372f88(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T372f100(GE_context* ac, T0* C, T0* a1);
extern T1 T372f100ot1(T0* a1, T0** a2);
extern T1 T372f100ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T37f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T529c797(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T37f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T78f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T78f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T37f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T529c796(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T37f66(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T78f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T78f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T37f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T529c795(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T37f65(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T78f275(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T78f66(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T37f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T529c794(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T78f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T37f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T529c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T37f64(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T78f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T78f65(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T37f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T529c792(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T37f63(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T78f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T78f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T80f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T80f162(GE_context* ac, T0* C, T0* a1);
extern T1 T80f162ot1(T0* a1, T0** a2);
extern T1 T80f162ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T75f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T75f1202(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1301f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1300f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T372f89(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T372f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T37f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T529c798(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T37f68(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T78f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T78f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T80f158(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T80f163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T75f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T75f1203(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1301f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1300f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T372f90(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T372f102(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T80f159(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T80f164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T75f1197(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1330f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1329f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1328f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1327f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1306f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1305f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1304f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1299f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1298f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1297f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1296f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1295f16(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1294f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1283f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1282f15(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T376f35(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T376f39(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_n */
extern void T1330f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_n */
extern void T1329f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_n */
extern void T1328f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_n */
extern void T1327f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_n */
extern void T1306f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1305f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_n */
extern void T1304f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_n */
extern void T1299f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_n */
extern void T1298f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_n */
extern void T1297f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1296f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_n */
extern void T1295f17(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_n */
extern void T1294f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_n */
extern void T1283f29(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_n */
extern void T1282f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_n */
extern void T376f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1330f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1329f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1328f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1327f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1306f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1305f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1304f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1299f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1298f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1297f31(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1296f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1295f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1294f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1283f30(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1282f21(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T376f37(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1330f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1329f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1328f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1327f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1306f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1305f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1304f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1299f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1298f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1297f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1296f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1295f21(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1294f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1283f31(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1282f22(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T376f38(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_cluster */
extern void T442f1946(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T442f2101(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T442f2101ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PARSER.parse_cluster */
extern T0* T442f2101ac2(GE_context* ac, T0* a1);
/* ET_CLASS.is_in_group */
extern T1 T83f137(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T442f2106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T442f2105(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T854c17(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_key_equality_tester */
extern void T1461f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T854f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_map */
extern T0* T1461c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_with_equality_testers */
extern void T1461f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_sparse_container */
extern void T1461f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].set_internal_cursor */
extern void T1461f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].unset_found_item */
extern void T1461f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_slots */
extern void T1461f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].new_modulus */
extern T6 T1461f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_clashes */
extern void T1461f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_key_storage */
extern void T1461f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].make_item_storage */
extern void T1461f51(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].make */
extern T0* T1638f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].make_empty */
extern T0* T1635c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].default_create */
extern T0* T1638c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T854c16(GE_context* ac, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].put_last */
extern void T1461f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_put */
extern void T1461f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_put */
extern void T1461f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_put */
extern void T1461f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_item */
extern T6 T1461f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].compress */
extern void T1461f41(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].hash_position */
extern T6 T1461f22(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].slots_wipe_out */
extern void T1461f50(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].clashes_wipe_out */
extern void T1461f49(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].key_storage_keep_head */
extern void T1461f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_keep_head */
extern void T1461f47(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].keep_head */
extern void T1635f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_WILDCARD].set_count */
extern void T1635f8(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].move_all_cursors */
extern void T1461f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].item_storage_put */
extern void T1461f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_WILDCARD].force */
extern void T1638f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_WILDCARD].fill_with */
extern void T1635f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_WILDCARD].extend */
extern void T1635f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_WILDCARD, STRING_8].search_position */
extern void T1461f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern T0* T1460c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T1633c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T1633f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T1633f46(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].first */
extern T0* T1733f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T1633f45(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].target */
extern T0* T1762f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [detachable LX_DFA_STATE].item */
extern T0* T1861f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T1756f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].is_empty */
extern T1 T1733f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T1633f44(GE_context* ac, T0* C, T0* a1);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].set_target */
extern void T1762f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [detachable LX_DFA_STATE].put */
extern void T1861f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T1759f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T1633f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T1756f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].put_last */
extern void T1758f9(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].force */
extern void T1858f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].fill_with */
extern void T1857f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_DFA_STATE].extend */
extern void T1857f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T1756f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_equal */
extern T1 T1757f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].any_ */
extern T0* T1757f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T1756f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T1756f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T1756c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T1756f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T1744f22(GE_context* ac, T0* C, T1 a1);
/* DS_ARRAYED_LIST [LX_RULE].sort */
extern void T1733f17(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort */
extern void T1850f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_RULE].sort_with_comparator */
extern void T1850f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_RULE].subsort_with_comparator */
extern void T1850f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_RULE].replace */
extern void T1733f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].less_than */
extern T1 T1885f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].detachable_less_than */
extern T1 T1885f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].attached_less_than */
extern T1 T1885f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T1744f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].item */
extern T0* T1733f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern unsigned char ge20os37648;
extern T0* ge20ov37648;
extern T0* T1756f7(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_RULE].make */
extern T0* T1850c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_RULE].make */
extern T0* T1885c4(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].sort */
extern void T1757f25(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort */
extern void T1848f3(GE_context* ac, T0* C, T0* a1);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].sort_with_comparator */
extern void T1848f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].subsort_with_comparator */
extern void T1848f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [LX_NFA_STATE].replace */
extern void T1757f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].less_than */
extern T1 T1888f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].detachable_less_than */
extern T1 T1888f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].attached_less_than */
extern T1 T1888f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T1765f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern unsigned char ge20os37647;
extern T0* ge20ov37647;
extern T0* T1756f8(GE_context* ac, T0* C);
/* DS_BUBBLE_SORTER [LX_NFA_STATE].make */
extern T0* T1848c2(GE_context* ac, T0* a1);
/* KL_COMPARABLE_COMPARATOR [LX_NFA_STATE].make */
extern T0* T1888c4(GE_context* ac);
/* DS_ARRAYED_LIST [LX_NFA_STATE].last */
extern T0* T1757f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].is_empty */
extern T1 T1757f8(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_last */
extern void T1733f13(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].force */
extern void T1830f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_RULE].fill_with */
extern void T1755f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_RULE].extend */
extern void T1755f9(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].resize */
extern void T1733f15(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].aliased_resized_area */
extern T0* T1830f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].aliased_resized_area */
extern T0* T1755f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].new_capacity */
extern T6 T1733f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].extendible */
extern T1 T1733f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T1765f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T1765f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T1765f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].has */
extern T1 T1757f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].force_last */
extern void T1757f23(GE_context* ac, T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].force */
extern void T1854f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].fill_with */
extern void T1852f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA_STATE].extend */
extern void T1852f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].resize */
extern void T1757f28(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].aliased_resized_area */
extern T0* T1854f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA_STATE].aliased_resized_area */
extern T0* T1852f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_capacity */
extern T6 T1757f12(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extendible */
extern T1 T1757f11(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].make */
extern T0* T1733c12(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].set_internal_cursor */
extern void T1733f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].new_cursor */
extern T0* T1733f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].make */
extern T0* T1831c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].make */
extern T0* T1830f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern void T1755f7(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_RULE].make_empty */
extern T0* T1755c7(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_RULE].default_create */
extern T0* T1830c3(GE_context* ac);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].make */
extern T0* T1762c7(GE_context* ac, T6 a1, T6 a2);
/* KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T1862c1(GE_context* ac);
/* ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T1861c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T1861f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_filled */
extern T0* T1857c8(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern void T1857f5(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_DFA_STATE].make_empty */
extern T0* T1857c5(GE_context* ac, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T1756f13(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].upper */
extern T6 T1762f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T1756f12(GE_context* ac, T0* C);
/* LX_TRANSITION_TABLE [LX_DFA_STATE].lower */
extern T6 T1762f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_last */
extern void T1757f20(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].item */
extern T0* T1757f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].make */
extern T0* T1757c19(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].set_internal_cursor */
extern void T1757f26(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].new_cursor */
extern T0* T1757f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].make */
extern T0* T1855c9(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].make */
extern T0* T1854f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA_STATE].make_empty */
extern T0* T1852c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA_STATE].default_create */
extern T0* T1854c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T1759f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T1756f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1759f10(GE_context* ac, T0* C);
/* ARRAY [BOOLEAN].clear_all */
extern void T717f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1759f10p1(GE_context* ac, T0* C);
/* DS_BILINKABLE [INTEGER_32].put_left */
extern void T1844f9(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].attach_right */
extern void T1844f10(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKABLE [INTEGER_32].put */
extern void T1844f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T1633f49(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].resize */
extern void T1758f10(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].aliased_resized_area */
extern T0* T1858f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_DFA_STATE].aliased_resized_area */
extern T0* T1857f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T1759f5(GE_context* ac, T0* C);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].count */
extern T6 T1843f5(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_DFA_STATE].item */
extern T0* T1758f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T1759c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T1759f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].put */
extern void T1843f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1843c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [DS_BILINKABLE [INTEGER_32]].make_filled_area */
extern void T1843f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_filled */
extern T0* T1845c4(GE_context* ac, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].fill_with */
extern void T1845f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].extend */
extern void T1845f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [DS_BILINKABLE [INTEGER_32]].make_empty */
extern void T1845f6(GE_context* ac, T0* C, T6 a1);
/* DS_BILINKABLE [INTEGER_32].make */
extern T0* T1844c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T1633f39(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_RULE].force_first */
extern void T1733f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_RULE].put */
extern void T1733f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].move_cursors_right */
extern void T1733f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_RULE].set_position */
extern void T1831f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_RULE].move_right */
extern void T1733f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [LX_RULE].put_last */
extern void T1733f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T1744c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern unsigned char ge100os37457;
extern T0* ge100ov37457;
extern T0* T1744f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T1847c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern unsigned char ge100os37456;
extern T0* ge100ov37456;
extern T0* T1744f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T1741c12(GE_context* ac, T1 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put_first */
extern void T1757f21(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].put */
extern void T1757f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_cursors_right */
extern void T1757f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_position */
extern void T1855f10(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].move_right */
extern void T1757f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T1765f11(GE_context* ac, T0* C, T0* a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].make */
extern T0* T1840c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T1765c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T1633f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T1633f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T1633f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T1741f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].first */
extern T0* T1757f14(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA].item */
extern T0* T1763f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T1734f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T1633f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T1765f14(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].force */
extern void T1764f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_put */
extern void T1764f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_put */
extern void T1764f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_put */
extern void T1764f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_item */
extern T6 T1764f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_item */
extern T6 T1764f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].hash_position */
extern T6 T1764f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].resize */
extern void T1764f40(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].clashes_resize */
extern void T1764f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].special_integer_ */
extern T0* T1764f31(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_resize */
extern void T1764f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_resize */
extern void T1764f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].aliased_resized_area */
extern T0* T1740f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_NFA].aliased_resized_area */
extern T0* T1742f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].key_storage_item */
extern T6 T1764f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].slots_resize */
extern void T1764f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_modulus */
extern T6 T1764f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_capacity */
extern T6 T1764f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_put */
extern void T1764f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_NFA].force */
extern void T1740f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_NFA].fill_with */
extern void T1742f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_NFA].extend */
extern void T1742f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].search_position */
extern void T1764f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].test */
extern T1 T608f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].unset_found_item */
extern void T1764f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item */
extern T0* T1764f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].item_storage_item */
extern T0* T1764f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].has */
extern T1 T1764f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make */
extern T0* T1764c34(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_with_equality_testers */
extern void T1764f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_sparse_container */
extern void T1764f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].set_internal_cursor */
extern void T1764f53(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].new_cursor */
extern T0* T1764f30(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_NFA, INTEGER_32].make */
extern T0* T1865c4(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_slots */
extern void T1764f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_clashes */
extern void T1764f51(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_key_storage */
extern void T1764f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_NFA, INTEGER_32].make_item_storage */
extern void T1764f49(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].make */
extern T0* T1740f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].make_empty */
extern T0* T1742c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_NFA].default_create */
extern T0* T1740c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [INTEGER_32].default_create */
extern T0* T608c2(GE_context* ac);
/* DS_ARRAYED_LIST [LX_DFA_STATE].make */
extern T0* T1758c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].set_internal_cursor */
extern void T1758f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_DFA_STATE].new_cursor */
extern T0* T1758f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_DFA_STATE].make */
extern T0* T1859c3(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].make */
extern T0* T1858f1(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_DFA_STATE].default_create */
extern T0* T1858c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T1743f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T1743f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T1743f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T1743f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T1633f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].put */
extern void T1754f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ARRAY [LX_RULE].make_filled */
extern T0* T1754c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ARRAY [LX_RULE].make_filled_area */
extern void T1754f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_RULE].make_filled */
extern T0* T1755c5(GE_context* ac, T0* a1, T6 a2);
/* LX_FULL_DFA.build_rules */
extern void T1633f41(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [LX_RULE].make_empty_with_lower */
extern T0* T1760f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_from_array */
extern T0* T1754c8(GE_context* ac, T0* a1);
/* ARRAY [LX_RULE].set_area */
extern void T1754f10(GE_context* ac, T0* C, T0* a1);
/* KL_ARRAY [LX_RULE].new_rebase */
extern void T1860f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [LX_RULE].make_empty */
extern T0* T1860c4(GE_context* ac);
/* KL_ARRAY [LX_RULE].make_empty_area */
extern void T1860f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [LX_RULE].make_empty */
extern T0* T1754c7(GE_context* ac);
/* ARRAY [LX_RULE].make_empty_area */
extern void T1754f9(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [LX_RULE].default_create */
extern T0* T1760c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T1734f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T1734f6(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].make_empty_with_lower */
extern T0* T1832f1(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_from_array */
extern T0* T142c18(GE_context* ac, T0* a1);
/* KL_ARRAY [STRING_8].new_rebase */
extern void T1896f5(GE_context* ac, T0* C, T6 a1);
/* KL_ARRAY [STRING_8].make_empty */
extern T0* T1896c4(GE_context* ac);
/* KL_ARRAY [STRING_8].make_empty_area */
extern void T1896f6(GE_context* ac, T0* C, T6 a1);
/* ARRAY [STRING_8].make_empty */
extern T0* T142c17(GE_context* ac);
/* LX_START_CONDITIONS.string_array_routines */
extern unsigned char ge213os8597;
extern T0* ge213ov8597;
extern T0* T1734f11(GE_context* ac, T0* C);
/* KL_ARRAY_ROUTINES [STRING_8].default_create */
extern T0* T1832c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T1631f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T1631f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T1631f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T1631f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T1631f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T1631f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T1631f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T1741c13(GE_context* ac, T6 a1, T1 a2);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].make */
extern T0* T1842c4(GE_context* ac, T6 a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force_new */
extern void T1737f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_put */
extern void T1737f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_put */
extern void T1737f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_put */
extern void T1737f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_put */
extern void T1737f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_item */
extern T6 T1737f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].hash_position */
extern T6 T1737f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_item */
extern T6 T1737f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].resize */
extern void T1737f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].clashes_resize */
extern void T1737f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].special_integer_ */
extern T0* T1737f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_resize */
extern void T1737f56(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_resize */
extern void T1737f55(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].key_storage_item */
extern T0* T1737f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].slots_resize */
extern void T1737f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_modulus */
extern T6 T1737f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_capacity */
extern T6 T1737f30(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].unset_found_item */
extern void T1737f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T1743f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T1736f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T1736f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T1736f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T1736f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T1736f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T1736f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T1736f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T1736f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T1736f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T1736c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T1736f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T1736f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found_item */
extern T0* T1737f24(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item_storage_item */
extern T0* T1737f32(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].found */
extern T1 T1737f23(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search */
extern void T1737f43(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].search_position */
extern void T1737f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T1631f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T1631f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T1631f272(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T1825c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T1631f190(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1738f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1739f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T1631f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T1631f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T1736f20(GE_context* ac, T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].force */
extern void T1738f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].fill_with */
extern void T1739f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_SYMBOL_CLASS].extend */
extern void T1739f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].force */
extern void T1737f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T1631f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T1736f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T1736f25(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort */
extern void T1884f3(GE_context* ac, T0* C, T0* a1);
/* DS_SHELL_SORTER [INTEGER_32].sort_with_comparator */
extern void T1884f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_SHELL_SORTER [INTEGER_32].subsort_with_comparator */
extern void T1884f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T1736f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern unsigned char ge25os37425;
extern T0* ge25ov37425;
extern T0* T1736f17(GE_context* ac, T0* C);
/* DS_SHELL_SORTER [INTEGER_32].make */
extern T0* T1884c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T1631f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T1741c6(GE_context* ac, T0* a1, T1 a2);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].make */
extern T0* T1838c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T1631f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T1741f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T1765f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T1741f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T1741f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T1741f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T1631f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T1741f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].append_last */
extern void T1757f24(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].extend_last */
extern void T1757f29(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].forth */
extern void T1855f12(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_forth */
extern void T1757f33(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].add_traversing_cursor */
extern void T1757f34(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_next_cursor */
extern void T1855f14(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA_STATE].remove_traversing_cursor */
extern void T1757f35(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].item */
extern T0* T1855f4(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_item */
extern T0* T1757f15(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].after */
extern T1 T1855f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].start */
extern void T1855f11(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [LX_NFA_STATE].cursor_start */
extern void T1757f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].set_after */
extern void T1855f13(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].off */
extern T1 T1855f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA_STATE].before */
extern T1 T1855f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T1741f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T1631f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T1746c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T1631f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T1734f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T1761f7(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].force_last */
extern void T1763f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].resize */
extern void T1763f13(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].new_capacity */
extern T6 T1763f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].extendible */
extern T1 T1763f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T1734f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T1734f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T1632f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T1744f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T1744f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T1744f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T1744f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T1744f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T1744f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T1744f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T1741f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T1765f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T1632f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T1743c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T1743f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T1631f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T1631f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T1752c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T1631f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T1751c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T1631f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T1750c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T1631f249(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].forth */
extern void T1745f11(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_forth */
extern void T1737f64(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].add_traversing_cursor */
extern void T1737f66(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_next_cursor */
extern void T1745f14(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_position */
extern void T1745f13(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].remove_traversing_cursor */
extern void T1737f65(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].set_after */
extern void T1745f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T1736f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T1743f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T1743f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1745f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_item */
extern T0* T1737f36(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].after */
extern T1 T1745f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].start */
extern void T1745f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_start */
extern void T1737f63(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].cursor_off */
extern T1 T1737f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].off */
extern T1 T1745f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].is_empty */
extern T1 T1737f38(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].new_cursor */
extern T0* T1737f35(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [LX_SYMBOL_CLASS, STRING_8].make */
extern T0* T1745c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T1743f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T1631f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T1631f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T1631f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T1631f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T1631f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T1631f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T1631f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T1631f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T1749c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T1631f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T1748c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T1631f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T1631f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T1631f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T1631f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T1747c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T1631f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T1631f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T1753c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T1631f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T1631f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T1631f267(GE_context* ac, T0* C);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].item */
extern T0* T1737f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].has */
extern T1 T1737f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T1631f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T1631f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T1631f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T1631f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T1631f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T1631f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T1631f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T1631f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T1631f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T1631f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T1631f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T1631f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T1631f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T1631f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T1631f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T1631f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T1631f269(GE_context* ac, T0* C);
/* SPECIAL [LX_NFA].keep_head */
extern void T1742f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_NFA].set_count */
extern void T1742f9(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].keep_head */
extern void T1739f6(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].set_count */
extern void T1739f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T1631f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T1631f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T1631f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T1631f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T1631c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T1735c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T1734f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T1734c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T1734f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T1734f10(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].make */
extern T0* T1835c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].make */
extern T0* T1834f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_START_CONDITION].make_empty */
extern T0* T1833c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].default_create */
extern T0* T1834c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T1631f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T1631f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern unsigned char ge85os37046;
extern T0* ge85ov37046;
extern T0* T1631f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T1631f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern unsigned char ge85os37045;
extern T0* ge85ov37045;
extern T0* T1631f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern unsigned char ge85os37044;
extern T0* ge85ov37044;
extern T0* T1631f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern unsigned char ge85os37043;
extern T0* ge85ov37043;
extern T0* T1631f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern unsigned char ge85os37042;
extern T0* ge85ov37042;
extern T0* T1631f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern unsigned char ge85os37041;
extern T0* ge85ov37041;
extern T0* T1631f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern unsigned char ge85os37040;
extern T0* ge85ov37040;
extern T0* T1631f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern unsigned char ge85os37039;
extern T0* ge85ov37039;
extern T0* T1631f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern unsigned char ge85os37038;
extern T0* ge85ov37038;
extern T0* T1631f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern unsigned char ge85os37035;
extern T0* ge85ov37035;
extern T0* T1631f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T1631f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T1631f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T1631f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T1631f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T1631f228(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].make */
extern T0* T1738f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [LX_SYMBOL_CLASS].make_empty */
extern T0* T1739c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [LX_SYMBOL_CLASS].default_create */
extern T0* T1738c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T1631f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_key_equality_tester */
extern void T1737f41(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_map */
extern T0* T1737c40(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_with_equality_testers */
extern void T1737f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_sparse_container */
extern void T1737f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].set_internal_cursor */
extern void T1737f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_slots */
extern void T1737f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_clashes */
extern void T1737f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_key_storage */
extern void T1737f59(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [LX_SYMBOL_CLASS, STRING_8].make_item_storage */
extern void T1737f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T1631f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T1631f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1631f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1631f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T1631f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern unsigned char ge86os37220;
extern T0* ge86ov37220;
extern T0* T1631f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T1631f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern unsigned char ge86os37219;
extern T0* ge86ov37219;
extern T0* T1631f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern unsigned char ge86os37216;
extern T0* ge86ov37216;
extern T0* T1631f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T1631f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T1631f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T1631f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern unsigned char ge86os37215;
extern T0* ge86ov37215;
extern T0* T1631f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern unsigned char ge86os37214;
extern T0* ge86ov37214;
extern T0* T1631f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern unsigned char ge86os37213;
extern T0* ge86ov37213;
extern T0* T1631f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern unsigned char ge86os37212;
extern T0* ge86ov37212;
extern T0* T1631f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T1631f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T1632f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T1632f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T1632f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T1632f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T1632c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T1734c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T1734f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T1734f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T1734f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [LX_START_CONDITION].set_position */
extern void T1835f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T1734f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [LX_START_CONDITION].force */
extern void T1834f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].fill_with */
extern void T1833f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [LX_START_CONDITION].extend */
extern void T1833f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T1734f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T1761c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* DS_ARRAYED_LIST [LX_NFA].make */
extern T0* T1763c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [LX_NFA].set_internal_cursor */
extern void T1763f11(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [LX_NFA].new_cursor */
extern T0* T1763f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [LX_NFA].make */
extern T0* T1863c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T33c12(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T33f6(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1460f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T854f9(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T854f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T854f11(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T854f8(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T854f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].remove */
extern void T137f41(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].move_left */
extern void T137f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_left */
extern void T137f43(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].remove_last */
extern void T137f42(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].move_last_cursors_after */
extern void T137f45(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T137c40(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T30f77(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T30f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T30f44(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T30f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T30f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T442f2104(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PARSER.build_provider_constraint */
extern T0* T442f2104ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T442f2104ot1(T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T435f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_EIFFEL_PARSER.add_universe_full_name */
extern void T442f2107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T37f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1545c24(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T37f29(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T78f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T78f30(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T122f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T335f29(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge253os2942;
extern T0* ge253ov2942;
extern T0* T122f29(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T121f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T121f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T470f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T470f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].do_if */
extern void T1317f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T470f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T470f85(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1417f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1417c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T335f42(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T442f930(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge1049os15041;
extern T0* ge1049ov15041;
extern T0* T442f937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T442f929(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T440f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T440f176(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T440f176ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T440f176ac2(GE_context* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T440f181(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T440f180(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T440f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T440f179ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T440f179ot1(T0* a1);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T440f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T440f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T440f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T440f184p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T440f184p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T440f184p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T440f59(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T440f183(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T440f189(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T440f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T440f108(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T440f131(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T440f190(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T440f193(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T440f105(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T440f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T440f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T440f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T440f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T440f100(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T440f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T440f98(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T440f94(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T440f194(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T440f188(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T440f191(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T440f86(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T440f187(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T440f139(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T440f85(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T440f84(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T440f186(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T440f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T440f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T440f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T440f125(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T440f182(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T440f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T440f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge1051os26331;
extern T0* ge1051ov26331;
extern T0* T440f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T440f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T440f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T440f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T440f120(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T440f51(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T78f232(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T37f231(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T440f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T440f96(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T433f3(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1301f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T372f351(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T372f368(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T37f477(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T529c989(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T940f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T37f157(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T78f478(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T78f158(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T80f207(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T80f227(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T75f1206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T75f1222(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1301f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T372f352(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T372f369(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T372f384(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T80f208(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T80f228(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T80f251(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T75f1207(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T75f1223(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1301f28(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T988f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T988f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T372f353(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T372f370(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T389f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T80f209(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f229(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f229p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T75f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T75f1224(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1301f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T372f354(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T372f371(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T80f210(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f230(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f230p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T75f1209(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T75f1225(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1301f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1301f92(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T1046f5(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1301f106(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T1049f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T372f355(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T372f372(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T80f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T80f231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T75f1210(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T75f1226(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1301f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1301f93(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1301f96(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1189f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T372f356(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T372f373(GE_context* ac, T0* C, T0* a1);
extern T1 T372f373ot1(T0* a1, T0** a2);
extern T1 T372f373ot2(T0* a1, T0** a2);
extern T1 T372f373ot3(T0* a1, T0** a2);
extern T1 T372f373ot4(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T37f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T529c992(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T37f159(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T78f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T78f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T37f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T529c991(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T529f991ot1(T0* a1, T0** a2);
extern T1 T529f991ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T78f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T372f57(GE_context* ac, T0* C, T0* a1);
extern T1 T372f57ot1(T0* a1, T0** a2);
extern T1 T372f57ot2(T0* a1, T0** a2);
extern T1 T372f57ot3(T0* a1, T0** a2);
extern T1 T372f57ot4(T0* a1, T0** a2);
extern T1 T372f57ot5(T0* a1, T0** a2);
extern T1 T372f57ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern unsigned char ge946os19028;
extern T0* ge946ov19028;
extern T0* T372f61(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern unsigned char ge946os19027;
extern T0* ge946ov19027;
extern T0* T372f60(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T291f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T181f101(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T181f105(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T1000f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T1000f7(GE_context* ac, T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T37f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T529c990(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T37f158(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T78f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T78f159(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T80f212(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T80f232(GE_context* ac, T0* C, T0* a1);
extern T1 T80f232ot1(T0* a1, T0** a2);
extern T1 T80f232ot2(T0* a1, T0** a2);
extern T1 T80f232ot3(T0* a1, T0** a2);
extern T1 T80f232ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T80f70(GE_context* ac, T0* C, T0* a1);
extern T1 T80f70ot1(T0* a1, T0** a2);
extern T1 T80f70ot2(T0* a1, T0** a2);
extern T1 T80f70ot3(T0* a1, T0** a2);
extern T1 T80f70ot4(T0* a1, T0** a2);
extern T1 T80f70ot5(T0* a1, T0** a2);
extern T1 T80f70ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T80f84(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T80f83(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T75f1211(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T75f1227(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1227ot1(T0* a1, T0** a2);
extern T1 T75f1227ot2(T0* a1, T0** a2);
extern T1 T75f1227ot3(T0* a1, T0** a2);
extern T1 T75f1227ot4(T0* a1, T0** a2);
extern T1 T75f1227ot5(T0* a1, T0** a2);
extern T1 T75f1227ot6(T0* a1, T0** a2);
extern T1 T75f1227ot7(T0* a1, T0** a2);
extern T1 T75f1227ot8(T0* a1, T0** a2);
extern T1 T75f1227ot9(T0* a1, T0** a2);
extern T1 T75f1227ot10(T0* a1, T0** a2);
extern T1 T75f1227ot11(T0* a1, T0** a2);
extern T1 T75f1227ot12(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1301f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T372f357(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T372f374(GE_context* ac, T0* C, T0* a1);
extern T1 T372f374ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T372f386(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T37f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T529c994(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T37f161(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T78f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T78f162(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1245f19(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T37f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T529c993(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T37f160(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T78f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T78f161(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1245f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T372f385(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T80f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T80f233(GE_context* ac, T0* C, T0* a1);
extern T1 T80f233ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T80f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T80f254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T75f1212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T75f1228(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1301f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T372f358(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T372f375(GE_context* ac, T0* C, T0* a1);
extern T1 T372f375ot1(T0* a1);
extern T1 T372f375ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T372f388(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T389f17(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T389f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T389f22(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T389f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T389f16(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T37f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T529c995(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T37f162(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T78f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T78f163(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T1246f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T372f387(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T372f387ot1(T0* a1, T0** a2);
extern T1 T372f387ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T37f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T529c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T37f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T78f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T78f166(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T37f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T529c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T78f491(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T37f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T529c1001(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T37f164(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T78f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T78f165(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T37f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T529c1000(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T78f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T372f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T37f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T529c999(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T78f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T372f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T372f399(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T80f214(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T80f234(GE_context* ac, T0* C, T0* a1);
extern T1 T80f234ot1(T0* a1);
extern T1 T80f234ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T80f259(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T80f338(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T80f258(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f258ot1(T0* a1, T0** a2);
extern T1 T80f258ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T80f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T80f336(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T80f335(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T75f1213(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T75f1229(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T309f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T247f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_result */
extern T1 T181f93(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1301f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T372f359(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T372f376(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T372f389(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T37f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T529c996(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T37f163(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T78f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T78f164(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T383f49(GE_context* ac, T0* C);
/* UT_VERSION.is_greater_equal */
extern T1 T79f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge191os2868;
extern T0* ge191ov2868;
extern T0* T372f58(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T80f215(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T80f235(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T80f260(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T80f339(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T80f74(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T75f1214(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T75f1230(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1301f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T372f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T372f377(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T80f216(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T80f236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T75f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T75f1231(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1301f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T372f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T372f378(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T372f390(GE_context* ac, T0* C, T0* a1);
extern T1 T372f390ot1(T0* a1, T0** a2);
extern T1 T372f390ot2(T0* a1, T0** a2);
extern T1 T372f390ot3(T0* a1, T0** a2);
extern T1 T372f390ot4(T0* a1, T0** a2);
extern T1 T372f390ot5(T0* a1);
extern T1 T372f390ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T372f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T37f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T529c1009(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T78f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T37f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T529c1008(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T78f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T37f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T529c1007(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1251f10(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1250f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T78f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T37f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T529c1006(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T78f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T372f59(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T376f40(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T37f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T529c1005(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T37f166(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T78f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T78f167(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T37f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T529c1004(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T78f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1251f7(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1251f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T331f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T1718f11(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T286f11(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1250f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1250f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T80f217(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T80f237(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T80f261(GE_context* ac, T0* C, T0* a1);
extern T1 T80f261ot1(T0* a1, T0** a2);
extern T1 T80f261ot2(T0* a1, T0** a2);
extern T1 T80f261ot3(T0* a1, T0** a2);
extern T1 T80f261ot4(T0* a1, T0** a2);
extern T1 T80f261ot5(T0* a1);
extern T1 T80f261ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T80f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T80f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1251f8(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1250f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T80f79(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T75f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T75f1232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T75f1238(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1301f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T372f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T372f379(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T80f218(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T80f238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T75f1217(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T75f1233(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1301f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T372f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T372f380(GE_context* ac, T0* C, T0* a1);
extern T1 T372f380ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T372f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T881f54(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T881f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T881f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T881f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T881f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T881f57(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T881f63(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T881f32(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T881f62(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T881f61(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T881f31(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T881f60(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T881f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T881f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T881f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T881f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T372f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T37f485(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T529c997(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T78f486(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T80f219(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T80f239(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T80f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T80f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T75f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T75f1234(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1301f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T372f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T372f381(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T372f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T372f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T372f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T80f220(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T80f240(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T80f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T80f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T80f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T75f1219(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T75f1235(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1301f98(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T372f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T372f382(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T37f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T529c998(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T78f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T372f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T372f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T372f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T37f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T529c1019(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T37f170(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T78f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T78f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T37f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T529c1018(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T78f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T37f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T529c1017(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T78f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T372f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T37f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T529c1016(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T37f169(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T78f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T78f170(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T37f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T529c1015(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T78f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T37f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T529c1014(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T78f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T372f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T37f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T529c1013(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T37f168(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T78f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T78f169(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T37f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T529c1012(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T78f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T372f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T37f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T529c1011(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T37f167(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T78f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T78f168(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T37f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T529c1010(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T78f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T80f221(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T80f241(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T80f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T80f356(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f356ot1(T0* a1, T0** a2);
extern T1 T80f356ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T80f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T80f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T80f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T80f267(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T75f1220(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T75f1236(GE_context* ac, T0* C, T0* a1);
extern T1 T75f1236ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1423f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1301f101(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T390f57(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T386f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T372f366(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T372f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T80f430(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T80f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T75f1221(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T75f1237(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1301f107(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T390f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T386f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T372f406(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T372f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T80f507(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T80f510(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T75f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T75f1242(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1301f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T390f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T386f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T372f407(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T372f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T80f508(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T80f511(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T75f1240(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T75f1243(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1301f109(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T390f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T386f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T372f408(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T372f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T80f509(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T80f512(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T75f1241(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T75f1244(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1229f80(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1228f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T1227f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T368f77(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T367f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T365f79(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T336f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T259f86(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1229f76(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1228f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T1227f77(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T368f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T367f75(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T365f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T336f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T259f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1229f73(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1228f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T1227f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T368f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T367f72(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T365f72(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T336f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T259f79(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T1229f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T1228f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T1227f75(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T368f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T367f73(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T365f73(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T336f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T259f80(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1229f81(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1229f81p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1228f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1228f83p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1227f82(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1227f82p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T368f78(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T368f78p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T367f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T367f80p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T365f80(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T365f80p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T336f81(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T336f81p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T259f87p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1229f82(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1229f98(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T261f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1228f84(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1228f103(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1227f83(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1227f101(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T368f79(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T368f92(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T367f81(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T367f96(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T365f81(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T365f95(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T336f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T336f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T259f88(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T259f108(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1229f83(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1228f85(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1228f85p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1227f84(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1227f84p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T368f80(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T367f82(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T365f82(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T336f83(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T336f83p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T259f89(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1232f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1231f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T530f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T521f80(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1232f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1231f77(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T530f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T521f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1232f78(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1231f74(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T530f75(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T521f76(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1232f79(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T1231f75(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T530f76(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T521f77(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1232f86(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1231f82(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T530f80(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T521f81(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1232f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1232f103(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1231f83(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1231f101(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T530f81(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T530f96(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T521f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T521f99(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1232f88(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1231f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1231f84p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T530f82(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T521f83(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T521f83p1(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_seed */
extern void T1235f103(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T1234f71(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T1233f89(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T830f70(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T181f108(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.reset */
extern void T1235f102(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T1234f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T1233f88(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T830f71(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T181f122(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T520f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T519f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T322f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T305f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T238f59(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T520f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T519f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T322f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T305f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T238f51(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T520f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T519f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T322f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T305f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T238f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T520f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T308f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T308f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T519f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T322f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T305f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.set_attribute_position */
extern void T238f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T520f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T519f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T322f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T305f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T238f49(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T520f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T519f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T322f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T305f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T238f50(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T520f67(GE_context* ac, T0* C, T0* a1);
extern T1 T520f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T519f67(GE_context* ac, T0* C, T0* a1);
extern T1 T519f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T322f64(GE_context* ac, T0* C, T0* a1);
extern T1 T322f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T305f64(GE_context* ac, T0* C, T0* a1);
extern T1 T305f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T238f61(GE_context* ac, T0* C, T0* a1);
extern T1 T238f61ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T520f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T519f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T322f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T305f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T238f62(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T520f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1870f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T519f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T322f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T305f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T238f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T520f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1871f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T519f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T322f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T305f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T238f65(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T520f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T519f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T322f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T305f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T238f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T520f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T519f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T322f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T305f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T238f63(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T520f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T519f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T322f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T305f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T238f55(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T229f193(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_MASTER_CLASS, ET_CLASS_NAME].key */
extern T0* T632f6(GE_context* ac, T0* C);
/* DS_HASH_TABLE [ET_MASTER_CLASS, ET_CLASS_NAME].cursor_key */
extern T0* T232f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T470f32(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T83f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T216f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T199f21(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T556f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T553f27(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T159f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T158f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T158f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T556f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T553f29(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T159f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T159f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T155f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T841f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1576f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1576c3(GE_context* ac, T0* a1);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T842c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T1409c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1409c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T154f27(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T836f13(GE_context* ac, T0* C, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].force_last */
extern void T836f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [XM_ELEMENT_NODE].make */
extern T0* T1560c3(GE_context* ac, T0* a1);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].before_addition */
extern void T836f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T154f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T154f19(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].last */
extern T0* T836f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T154f18(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_ELEMENT_NODE].is_empty */
extern T1 T836f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T158f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T158f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T556f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T553f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T159f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1410c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1410c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T158f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T158f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T556f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T553f31(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T159f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1411c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T158f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T158f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T556f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T553f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1337f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1537f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1682f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1682f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1682c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1337f8(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T55f103(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1337f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T55c102(GE_context* ac);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T55f49(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T159f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T154c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T153f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T153f16(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [XM_DOCUMENT_NODE].go_after */
extern void T1408f14(GE_context* ac, T0* C);
/* XM_LINKED_LIST [XM_DOCUMENT_NODE].cursor_go_after */
extern void T834f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T154c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T159f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T557f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T557f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T557f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T557f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T557f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T516f6(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T557f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T557f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T557f29(GE_context* ac, T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T557f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T557f46(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].aliased_resized_area */
extern T0* T1342f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].aliased_resized_area */
extern T0* T1343f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T557f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T557f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T557f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T557f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T557f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T557f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].force */
extern void T1342f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].fill_with */
extern void T1343f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].extend */
extern void T1343f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T557f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1340f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T557f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T516f5(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T557f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T557f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T158f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T158f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T556f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T553f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1337f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1537f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1537f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1682f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1537f13(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1538f13(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1538f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1537f12(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1537f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1337f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1244os31186;
extern T0* ge1244ov31186;
extern T0* T1337f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T553f33p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1337f2(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1538f11(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1537f18(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1537f19(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1537f20(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1538f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1538f10(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1537f17(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1538f15(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1537f7(GE_context* ac, T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].off */
extern T1 T1538f7(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1538f6(GE_context* ac, T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1538f9(GE_context* ac, T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1537f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1244os31187;
extern T0* ge1244ov31187;
extern T0* T1337f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T553f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T159f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T154f16(GE_context* ac, T0* C);
extern T1 T154f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T154f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T153f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T153f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T158f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T158f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T556f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T553f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1337f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T55f104(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1537f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1337f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T553f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1339f7(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1337f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T553f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T553f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T553f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1211os25873;
extern T0* ge1211ov25873;
extern T0* T553f21(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T159f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T410c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T158f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T158f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T556f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T553f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T159f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T158f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T158f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T556f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T553f32(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T553f32p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T553f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T553f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T553f43(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1339f8(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1339f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T553f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1211os25872;
extern T0* ge1211ov25872;
extern T0* T553f24(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1211os25880;
extern T0* ge1211ov25880;
extern T0* T553f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1211os25879;
extern T0* ge1211ov25879;
extern T0* T553f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T553f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1211os25874;
extern T0* ge1211ov25874;
extern T0* T553f23(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1339f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T553f12(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1339f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1337f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T159f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T158f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T158f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T556f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T553f36(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T159f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T158f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T158f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T556f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T553f44(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T159f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T158f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T553f41(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T159f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T158f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T304f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T269f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T267f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T304f38(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T304f38p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T269f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T269f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T267f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T267f6p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T304f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T304f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T304f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T269f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T269f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T267f9(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T304f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T269f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T267f4(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T304f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T304f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T304f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T269f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T267f7(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T304f37(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T304f46(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T269f9(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T267f8(GE_context* ac, T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T51f25(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T47f28(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T46f28(GE_context* ac, T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T151c8(GE_context* ac);
/* DS_LINKED_LIST [INTEGER_32].set_internal_cursor */
extern void T151f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T151f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T552c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T45f31(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T148c8(GE_context* ac);
/* DS_LINKED_LIST [BOOLEAN].set_internal_cursor */
extern void T148f9(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T148f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T550c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T44f31(GE_context* ac, T0* C);
/* AP_FLAG.reset */
extern void T42f22(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T51f26(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T51f27(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T51f18(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T140f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T51f17(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T39f35(GE_context* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T39f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1685f3(GE_context* ac, T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1685f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1685f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T138f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T138f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1684f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T35f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1684f2(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T138f16(GE_context* ac, T0* C, T6 a1);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1685c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1684c3(GE_context* ac);
/* AP_STRING_OPTION.record_occurrence */
extern void T47f29(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T46f29(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T151f10(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T45f32(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge5os4546;
extern T0* ge5ov4546;
extern T0* T45f22(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T45f23(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T137f20(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge5os4547;
extern T0* ge5ov4547;
extern T0* T45f21(GE_context* ac, T0* C);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T148f10(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [BOOLEAN].put_right */
extern void T549f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [BOOLEAN].make */
extern T0* T549c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T44f33(GE_context* ac, T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T144f14(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T42f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T898f10(GE_context* ac, T0* C);
/* KL_STDIN_FILE.read_character */
extern void T887f13(GE_context* ac, T0* C);
/* CONSOLE.read_character */
extern void T863f31(GE_context* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T863f14(GE_context* ac, T0* C, T14 a1);
/* CONSOLE.end_of_file */
extern T1 T863f11(GE_context* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T863f13(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern unsigned char ge267os20425;
extern T0* ge267ov20425;
extern T0* T887f7(GE_context* ac, T0* C);
/* STD_FILES.input */
extern unsigned char ge1508os177;
extern T0* ge1508ov177;
extern T0* T359f5(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T863c29(GE_context* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T863f32(GE_context* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T887f10(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T845f32(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1455f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1455f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T845f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T845f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T845f38(GE_context* ac, T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1455f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [CHARACTER_8].put_right */
extern void T1630f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [CHARACTER_8].make */
extern T0* T1630c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T845f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1312os31400;
extern T0* ge1312ov31400;
extern T0* T845f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1456f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1456f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1456f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1456f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1456f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge315os8521;
extern T0* ge315ov8521;
extern T0* T845f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1456c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T845f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T845f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T845f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T845f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T843f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T843f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1456f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1456f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T30f67(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T30f71(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T30f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T898f11(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T887f14(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T845f33(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T30f62(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_error_handler */
extern void T71f194(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_error_handler */
extern void T65f193(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_error_handler */
extern void T62f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ise_version */
extern void T71f195(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_ecma_version */
extern void T71f218(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T71f161(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.ise_6_4_7_6592 */
extern unsigned char ge191os2889;
extern T0* ge191ov2889;
extern T0* T71f180(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_version */
extern void T65f194(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecma_version */
extern void T65f214(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.ise_6_4_7_7252 */
extern T0* T65f187(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.ise_6_4_7_6592 */
extern T0* T65f183(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_version */
extern void T62f191(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_ecma_version */
extern void T62f226(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.ise_6_4_7_7252 */
extern T0* T62f183(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.ise_6_4_7_6592 */
extern T0* T62f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_flat_mode */
extern void T71f202(GE_context* ac, T0* C, T1 a1);
extern T1 T71f202ot1(T0* a1, T0** a2);
extern T1 T71f202ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_mode */
extern void T65f201(GE_context* ac, T0* C, T1 a1);
extern T1 T65f201ot1(T0* a1, T0** a2);
extern T1 T65f201ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_mode */
extern void T62f198(GE_context* ac, T0* C, T1 a1);
extern T1 T62f198ot1(T0* a1, T0** a2);
extern T1 T62f198ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.set_flat_dbc_mode */
extern void T71f203(GE_context* ac, T0* C, T1 a1);
extern T1 T71f203ot1(T0* a1, T0** a2);
extern T1 T71f203ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_flat_dbc_mode */
extern void T65f202(GE_context* ac, T0* C, T1 a1);
extern T1 T65f202ot1(T0* a1, T0** a2);
extern T1 T65f202ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.set_flat_dbc_mode */
extern void T62f199(GE_context* ac, T0* C, T1 a1);
extern T1 T62f199ot1(T0* a1, T0** a2);
extern T1 T62f199ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T71f196(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T71f196ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T71f219(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].do_all */
extern void T471f37(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T71f287(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f287ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f287ac2(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_LIBRARY]].set_rout_disp_final */
extern void T462f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T188f196(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T188f196ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T188f196ac2(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T460f170(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T460f170ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T460f170ac2(GE_context* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T196f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T189f9(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make */
extern T0* T471c36(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].set_internal_cursor */
extern void T471f48(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].new_cursor */
extern T0* T471f35(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].make */
extern T0* T1319c8(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].make_slots */
extern void T471f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_clashes */
extern void T471f45(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_key_storage */
extern void T471f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].make_item_storage */
extern void T471f43(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].make */
extern T0* T1322f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_UNIVERSE].make_empty */
extern T0* T1320c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1322c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern unsigned char ge745os6151;
extern T6 ge745ov6151;
extern T6 T71f163(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T65f195(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T65f195ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T65f216(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T65f237(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f237ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f237ac2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T65f166(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T62f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T62f192ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T62f227(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T62f296(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f296ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f296ac2(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T62f181(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_all */
extern void T71f197(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_3 */
extern void T71f224(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T71f224ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T71f224ac2(GE_context* ac);
extern T1 T71f224ot1(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern void T71f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T71f289ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T71f289ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T71f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_UNIVERSE].forth */
extern void T471f40(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_forth */
extern void T471f51(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].add_traversing_cursor */
extern void T471f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_next_cursor */
extern void T1319f10(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_position */
extern void T1319f11(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_UNIVERSE].remove_traversing_cursor */
extern void T471f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].set_after */
extern void T1319f9(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].item_for_iteration */
extern T0* T471f34(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_item */
extern T0* T471f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].go_after */
extern void T471f39(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_go_after */
extern void T471f50(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].cursor_off */
extern T1 T471f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].off */
extern T1 T1319f5(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].after */
extern T1 T471f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_after */
extern T1 T471f28(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_UNIVERSE].after */
extern T1 T1319f7(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].start */
extern void T471f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_UNIVERSE].cursor_start */
extern void T471f49(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_UNIVERSE].is_empty */
extern T1 T471f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.compile_degree_4 */
extern void T71f223(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac3(GE_context* ac, T0* a1);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T71f223ac6(GE_context* ac);
/* ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T6 T71f164(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T71f164ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T71f164ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parsed_class_count_recursive */
extern T0* T71f164ac3(GE_context* ac);
/* KL_AGENT_ROUTINES [ET_CLASS].call */
extern void T790f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T789f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T71f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T71f297ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.class_actions */
extern unsigned char ge810os6169;
extern T0* ge810ov6169;
extern T0* T71f156(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_CLASS].default_create */
extern T0* T790c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T789c2(GE_context* ac, T6 a1);
/* ET_LACE_SYSTEM.check_provider_validity */
extern void T71f222(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T71f222ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.check_provider_validity */
extern T0* T71f222ac2(GE_context* ac);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T71f221(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T71f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T71f228ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_CLUSTER]].set_rout_disp_final */
extern void T478f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T71f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T71f292(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T71f292ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T456f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T71f229(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].do_all */
extern void T480f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T480f24(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T480f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T71f294(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T71f294ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T188f197(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T188f197ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T460f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T460f171ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].force_last */
extern void T480f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_put */
extern void T480f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_put */
extern void T480f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T480f29(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T480f26(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].resize */
extern void T480f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T480f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T480f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T480f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T480f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1325f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1326f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T480f20(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].slots_resize */
extern void T480f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T480f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T480f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T480f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].force */
extern void T1325f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].fill_with */
extern void T1326f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTERNAL_UNIVERSE].extend */
extern void T1326f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].search_position */
extern void T480f33(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T480f19(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T480f38(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].has */
extern T1 T480f17(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make */
extern T0* T480c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T480f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T480f21(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_INTERNAL_UNIVERSE].make */
extern T0* T1323c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_slots */
extern void T480f37(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_clashes */
extern void T480f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T480f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T480f34(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].make */
extern T0* T1325f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1326c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1325c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T71f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T71f227ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T71f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.check_master_class_validity */
extern void T71f226(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.check_master_class_validity */
extern T0* T71f226ac1(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T470f63(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T441f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T441f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T441f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T78f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T78f373(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1775c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T470f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T78f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T37f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T37f372(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T37f78(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T441f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T441f4(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.current_system */
extern T0* T441f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T441f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T441f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T441f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T78f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1775c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T37f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T78f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1775c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T37f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T78f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1775c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T37f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T441f10(GE_context* ac, T0* C, T1 a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T433f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T71f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f290ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f290ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.parse_all_recursive */
extern void T71f221p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.parse_all_recursive */
extern T0* T71f221p1ac8(GE_context* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T188f194(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f194ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f194ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T188f194ac3(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T482f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T195f22(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T470f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T470f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T196f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T623f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T460f168(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T460f168ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T460f168ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T460f168ac3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.parse_all */
extern void T188f195(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f195ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f195ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f195ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.parse_all */
extern T0* T188f195ac4(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T470f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T470f78(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_first */
extern void T1317f21(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].delete */
extern void T1317f20(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T470f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T470f76(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove */
extern void T1317f17(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].move_left */
extern void T1317f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_cursors_left */
extern void T1317f29(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1317f28(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1317f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T470f64(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac3(GE_context* ac, T0* a1);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T470f64ac5(GE_context* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T470f71(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T122f30(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T121f33(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T470f30(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T470f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T470f34(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T470f33(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T83f249(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T83f250(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T1033f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1225f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1316f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1224f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T831f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T1038f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T886f29(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T886f29p1(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T1152f8(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T467f14(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T466f12(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T496f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T495f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T1068f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1222f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T494f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1221f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T266f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T265f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T470f74(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].do_all */
extern void T1317f18(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T470f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.current_system */
extern T0* T470f28(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T470f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T767f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.parse_all */
extern void T460f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.parse_all */
extern T0* T460f169ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.parse_all */
extern T0* T460f169ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LIBRARY.parse_all */
extern T0* T460f169ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LIBRARY.parse_all */
extern T0* T460f169ac4(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T449f6(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].force_last */
extern void T1314f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].resize */
extern void T1314f15(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1314f7(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1314f8(GE_context* ac, T0* C, T6 a1);
/* [attached] PREDICATE [[attached] TUPLE [ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T452f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T71f232(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f232ac31(GE_context* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T486f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T486f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T486f10(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_NAMED_CLASS].go_after */
extern void T1331f11(GE_context* ac, T0* C);
/* detachable DS_HASH_SET [ET_NAMED_CLASS].cursor_go_after */
extern void T880f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T470f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T470f39(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T486f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T486f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T486f3(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.current_system */
extern T0* T486f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T83f257(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T485f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T485f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T485f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1330f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T485f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T485f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1329f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1329f6(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T485f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T485f5(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.current_system */
extern T0* T485f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T83f256(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T484f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T484f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T484f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T484f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1328f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T484f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T484f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T484f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T484f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.current_system */
extern T0* T484f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T83f255(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T483f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T483f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T483f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1327f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T483f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T483f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T483f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.current_system */
extern T0* T483f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T83f254(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T83f136(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T83f253(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T266f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T265f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T83f252(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T642f31(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1083f78(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T266f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T265f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T83f251(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T470f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T470f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T470f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T486c5(GE_context* ac);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T486f2(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T485c7(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1330c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1329c4(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1329f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T485f7p1(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T485f4(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T484c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1328c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T484f6p1(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T484f3(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T483c6(GE_context* ac);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1327c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T483f6p1(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T483f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T71f296(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T71f296ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T71f157(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f157ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f157ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f157ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f157ac4(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE].set_rout_disp_final */
extern void T787f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [ET_MASTER_CLASS]].set_rout_disp_final */
extern void T786f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_AGENT_ROUTINES [ANY].call */
extern void T783f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T71f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f300ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f300ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern unsigned char ge292os6172;
extern T0* ge292ov6172;
extern T0* T71f181(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ANY].default_create */
extern T0* T783c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T782c5(GE_context* ac);
/* ET_LACE_SYSTEM.import_classes */
extern void T71f231(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f231ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f231ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f231ac3(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.parse_all */
extern void T71f288(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T71f288ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T71f288ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T71f288ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T71f288ac4(GE_context* ac, T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T213f8(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T189f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T189f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T188f198(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T188f198ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].force_last */
extern void T621f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].slots_put */
extern void T621f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].clashes_put */
extern void T621f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_LIBRARY].slots_item */
extern T6 T621f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].hash_position */
extern T6 T621f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].resize */
extern void T621f41(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_resize */
extern void T621f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T621f27(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].key_storage_resize */
extern void T621f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_resize */
extern void T621f45(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].aliased_resized_area */
extern T0* T1367f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIBRARY].aliased_resized_area */
extern T0* T1368f4(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].key_storage_item */
extern T0* T621f26(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T621f17(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T621f28(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].slots_resize */
extern void T621f44(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T621f21(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_capacity */
extern T6 T621f19(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_put */
extern void T621f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].force */
extern void T1367f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_LIBRARY].fill_with */
extern void T1368f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIBRARY].extend */
extern void T1368f8(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].search_position */
extern void T621f39(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].key_equality_tester */
extern T0* T621f25(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T621f36(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_LIBRARY].has */
extern T1 T621f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T460f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T460f172ac1(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T621f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T621c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].set_internal_cursor */
extern void T621f37(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T621f24(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1366c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T621f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T621f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T621f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T621f32(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1367f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_LIBRARY].make_empty */
extern T0* T1368c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1367c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T196f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T196f7ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T781f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T449f4(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T449f3(GE_context* ac, T0* C);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].do_all */
extern void T448f32(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make */
extern T0* T448c30(GE_context* ac, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T448f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T448f17(GE_context* ac, T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_ASSEMBLY].make */
extern T0* T1310c4(GE_context* ac, T0* a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_slots */
extern void T448f36(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_clashes */
extern void T448f35(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T448f34(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T448f33(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.compile_degree_5 */
extern void T71f220(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_5 */
extern T0* T71f220ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.compile_all */
extern void T65f196(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.compile_degree_3 */
extern void T65f221(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T65f221ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_3 */
extern T0* T65f221ac2(GE_context* ac);
extern T1 T65f221ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern void T65f239(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T65f239ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_if_recursive_until */
extern T0* T65f239ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T65f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.compile_degree_4 */
extern void T65f220(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac3(GE_context* ac, T0* a1);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.compile_degree_4 */
extern T0* T65f220ac6(GE_context* ac);
/* ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T6 T65f169(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T65f169ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T65f169ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parsed_class_count_recursive */
extern T0* T65f169ac3(GE_context* ac);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T65f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T65f247ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T65f163(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.check_provider_validity */
extern void T65f219(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T65f219ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.check_provider_validity */
extern T0* T65f219ac2(GE_context* ac);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T65f218(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T65f225(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T65f225ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T65f243(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T65f242(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T65f242ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T65f226(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T65f244(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T65f244ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T65f224(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T65f224ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T65f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.check_master_class_validity */
extern void T65f223(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.check_master_class_validity */
extern T0* T65f223ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T65f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f240ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f240ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.parse_all_recursive */
extern void T65f218p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.parse_all_recursive */
extern T0* T65f218p1ac8(GE_context* ac);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T65f229(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f229ac31(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T65f246(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T65f246ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T65f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f170ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f170ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f170ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f170ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T65f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f304ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f304ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T65f164(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T65f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f228ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f228ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f228ac3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.parse_all */
extern void T65f238(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T65f238ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T65f238ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T65f238ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.parse_all */
extern T0* T65f238ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.compile_degree_5 */
extern void T65f217(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.compile_degree_5 */
extern T0* T65f217ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.compile_all */
extern void T62f193(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.compile_degree_3 */
extern void T62f232(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T62f232ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T62f232ac2(GE_context* ac);
extern T1 T62f232ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern void T62f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T62f298ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_if_recursive_until */
extern T0* T62f298ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T62f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.compile_degree_4 */
extern void T62f231(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac3(GE_context* ac, T0* a1);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T62f231ac6(GE_context* ac);
/* ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T6 T62f182(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T62f182ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T62f182ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parsed_class_count_recursive */
extern T0* T62f182ac3(GE_context* ac);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T62f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T62f306ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T62f185(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.check_provider_validity */
extern void T62f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T62f230ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.check_provider_validity */
extern T0* T62f230ac2(GE_context* ac);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T62f229(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T62f236(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T62f236ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T62f302(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T62f301(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T62f301ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T62f237(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T62f303(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T62f303ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T62f235(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T62f235ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T62f300(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.check_master_class_validity */
extern void T62f234(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.check_master_class_validity */
extern T0* T62f234ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T62f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f299ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f299ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.parse_all_recursive */
extern void T62f229p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.parse_all_recursive */
extern T0* T62f229p1ac8(GE_context* ac);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T62f240(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f240ac31(GE_context* ac, T1 a1);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T62f305(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T62f305ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T62f166(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f166ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f166ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f166ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f166ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T62f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f309ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f309ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T62f184(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T62f239(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f239ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f239ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f239ac3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.parse_all */
extern void T62f297(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T62f297ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T62f297ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T62f297ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T62f297ac4(GE_context* ac, T0* a1);
/* ET_XACE_CLUSTERS.do_all */
extern void T415f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.compile_degree_5 */
extern void T62f228(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_5 */
extern T0* T62f228ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T71f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f198ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f198ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T65f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f197ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f197ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T62f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f194ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f194ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.activate_processors */
extern void T71f200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T442c945(GE_context* ac);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T442f948(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T442f953(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1048os27763;
extern T0* ge1048ov27763;
extern T0* T442f667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T442f910(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T442f2054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T442f2102(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T442f931(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T442f2053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T442f2052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T442f2051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T442f2050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T442f2049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T442f2048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T442f2047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T442f2046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T442f2045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T442f2044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T442f2043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T442f2042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T442f2041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T442f2040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T442f2039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T442f2038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T442f2037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T442f2036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T442f2035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T442f2034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T442f2033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T442f2032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T442f2031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T442f2030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T442f2029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T442f2028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T442f2027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T442f2026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T442f2025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T442f2024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T442f2023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T442f2022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T442f2021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T442f2020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1048os27727;
extern T0* ge1048ov27727;
extern T0* T442f665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T442f2019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T442f2018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T442f2017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T442f2016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T442f2015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T442f2014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T442f2013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T442f2012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T442f2011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T442f2010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T442f2009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T442f2008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T442f2007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T442f2006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T442f2005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T442f2004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T442f2003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T442f2002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T442f2001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T442f2000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T442f1999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T442f1998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T442f1997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T442f1996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T442f1995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T442f1994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T442f1993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T442f1992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T442f1991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T442f1990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T442f1989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T442f1988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T442f1987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T442f1986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T442f1985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1048os27724;
extern T0* ge1048ov27724;
extern T0* T442f663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T442f1984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T442f1983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1048os27714;
extern T0* ge1048ov27714;
extern T0* T442f661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T442f1982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T442f1981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T442f1980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T442f1979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T442f1978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T442f1977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T442f1976(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T442f1975(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T442f1974(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1048os27711;
extern T0* ge1048ov27711;
extern T0* T442f659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T442f1973(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T442f1972(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1048os27701;
extern T0* ge1048ov27701;
extern T0* T442f657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T442f1971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T442f1970(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T442f1969(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T442f1968(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T442f1967(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T442f1966(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T442f1965(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T442f1964(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T442f1963(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1048os27700;
extern T0* ge1048ov27700;
extern T0* T442f655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1048os27690;
extern T0* ge1048ov27690;
extern T0* T442f653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T442f1962(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T442f1961(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T442f1960(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T442f1959(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T442f1958(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T442f1957(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T442f1956(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T442f1955(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T442f1954(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1048os27684;
extern T0* ge1048ov27684;
extern T0* T442f651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T442f1953(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T442f1952(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T442f1951(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T442f1950(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T442f1949(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1048os27681;
extern T0* ge1048ov27681;
extern T0* T442f643(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T442f1948(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T442f1947(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T442f952(GE_context* ac, T0* C);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1191f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1192c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1191c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1188f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1190c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1188c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1182f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1184c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1182c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1179f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1181c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1179c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1173f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1175c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1173c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1170f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1172c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1170c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1168f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1169c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1168c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1162f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1164c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1162c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T1160f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T1161c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T1160c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T1158f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T1159c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T1158c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T1151f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T1153c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T1151c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T1149f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T1150c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T1149c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T1146f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T1148c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T1146c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T1143f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T1145c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T1143c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T1141f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T1142c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T1141c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T1138f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T1140c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T1138c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T1132f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T1134c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T1132c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T1129f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T1131c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T1129c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T1127f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T1128c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T1127c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T1121f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T1123c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T1121c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T1118f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T1120c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T1118c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T1116f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T1117c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T1116c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T1114f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T1115c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T1114c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T1108f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T1110c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T1108c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T1105f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T1107c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T1105c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T1102f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T1104c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T1102c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T1099f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T1101c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T1099c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T1096f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T1098c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T1096c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T1093f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T1095c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T1093c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T1090f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T1092c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T1090c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T1088f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T1089c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T1088c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T1080f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T1081c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T1080c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T1075f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T1076c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T1075c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T1067f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T1069c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T1067c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T1064f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T1066c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T1064c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T1058f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T1060c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T1058c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T1056f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T1057c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T1056c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T1054f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T1055c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T1054c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T1048f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T1050c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T1048c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T1042f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T1044c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T1042c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T1040f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T1041c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T1040c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T1035f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T1036c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T1035c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T1032f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T1034c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T1032c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T1026f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T1028c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T1026c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1023f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T1025c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T1023c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T1020f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T1022c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T1020c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T1017f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T1019c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T1017c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T1011f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T1013c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T1011c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T1009f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T1010c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T1009c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T1006f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T1008c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T1006c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T999f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T1001c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T999c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T993f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T995c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T993c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T990f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T992c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T990c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T987f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T989c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T987c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T984f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T986c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T984c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T981f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T983c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T981c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T978f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T980c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T978c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T974f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T975c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T974c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T971f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T973c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T971c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T966f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T967c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T966c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T964f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T965c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T964c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T962f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T963c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T962c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T959f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T961c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T959c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T956f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T958c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T956c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T953f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T955c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T953c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T951f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T952c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T951c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T948f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T950c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T948c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T945f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_VOID].make_empty */
extern T0* T947c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T945c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T942f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T944c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T942c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T939f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T941c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T939c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T938c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T937c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T934f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T934c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T932f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T933c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T932c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T929f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T931c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T929c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T926f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T928c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T926c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T923f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T925c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T923c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T921f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T922c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T921c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T918f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T920c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T918c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T915f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T917c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T915c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T912f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T914c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T912c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T910f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T911c4(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T910c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T908f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T909c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T908c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T905f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T907c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T905c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T902f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T904c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T902c3(GE_context* ac);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T900f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T901c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T900c3(GE_context* ac);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T442f947(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T442f951(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T442f957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T442f957p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T442f973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge1052os28338;
extern T0* ge1052ov28338;
extern T0* T442f675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T442f912(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T442f2098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T442f2103(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T442f2097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T442f2096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge1052os28334;
extern T0* ge1052ov28334;
extern T0* T442f674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T442f2095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T442f2094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T442f2093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge1052os28333;
extern T0* ge1052ov28333;
extern T0* T442f673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge1052os28330;
extern T0* ge1052ov28330;
extern T0* T442f672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T442f2092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T442f2091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge1052os28326;
extern T0* ge1052ov28326;
extern T0* T442f671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T442f2090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T442f2089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T442f2088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge1052os28322;
extern T0* ge1052ov28322;
extern T0* T442f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T442f2087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T442f2086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T442f2085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge1052os28306;
extern T0* ge1052ov28306;
extern T0* T442f669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T442f2084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T442f2083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T442f2082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T442f2081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T442f2080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T442f2079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T442f2078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T442f2077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T442f2076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T442f2075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T442f2074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T442f2073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T442f2072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T442f2071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T442f2070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge1052os28290;
extern T0* ge1052ov28290;
extern T0* T442f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T442f2069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T442f2068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T442f2067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T442f2066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T442f2065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T442f2064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T442f2063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T442f2062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T442f2061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T442f2060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T442f2059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T442f2058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T442f2057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T442f2056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T442f2055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T442f601(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T897c10(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T897f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T897f9(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1481c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T896c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].set_internal_cursor */
extern void T896f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T896f7(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1480c5(GE_context* ac, T0* a1);
/* DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T895c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1477f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1476c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1477c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T894c10(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1475f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1474c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1475c3(GE_context* ac);
/* DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T893c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T892c8(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T891c9(GE_context* ac, T6 a1);
/* DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T890c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge265os2907;
extern T0* ge265ov2907;
extern T0* T131f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T887c12(GE_context* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T442f656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T442f945p1(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T441c7(GE_context* ac);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T441f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T440c133(GE_context* ac);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T440f134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T440f135(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T440f136(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T440f136p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T440f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge1050os26292;
extern T0* ge1050ov26292;
extern T0* T440f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T440f90(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T440f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T440f177(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T440f55(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T440f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T440f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T440f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge1050os26288;
extern T0* ge1050ov26288;
extern T0* T440f80(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T440f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T440f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T440f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge1050os26287;
extern T0* ge1050ov26287;
extern T0* T440f77(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge1050os26284;
extern T0* ge1050ov26284;
extern T0* T440f71(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T440f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T440f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge1050os26280;
extern T0* ge1050ov26280;
extern T0* T440f69(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T440f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T440f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T440f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge1050os26276;
extern T0* ge1050ov26276;
extern T0* T440f67(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T440f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T440f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T440f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge1050os26265;
extern T0* ge1050ov26265;
extern T0* T440f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T440f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T440f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T440f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T440f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T440f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T440f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T440f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T440f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T440f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T440f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge1050os26254;
extern T0* ge1050ov26254;
extern T0* T440f89(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T440f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T440f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T440f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T440f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T440f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T440f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T440f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T440f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T440f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T440f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T440f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T440f88(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.activate_processors */
extern void T65f199(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.activate_processors */
extern void T62f196(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f201(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f201p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f201p1ac8(GE_context* ac);
/* ET_ECF_LIBRARY.preparse */
extern void T188f193(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.preparse */
extern void T188f193p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f193p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f193p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f193p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T188f193p1ac4(GE_context* ac, T0* a1);
/* ET_LIBRARY.preparse */
extern void T460f167(GE_context* ac, T0* C);
/* ET_LIBRARY.preparse */
extern void T460f167p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T460f167p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T460f167p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T460f167p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T460f167p1ac4(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T71f230(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f230ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f230ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f230ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f230ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f200(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f200p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f200p1ac8(GE_context* ac);
/* ET_ECF_SYSTEM.preparse */
extern void T65f227(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f227ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f227ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f227ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f227ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f197(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f197p1(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f197p1ac8(GE_context* ac);
/* ET_XACE_SYSTEM.preparse */
extern void T62f238(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f238ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f238ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f238ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f238ac4(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.print_time */
extern void T71f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T438f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T438f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T438f23(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T438f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T438f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T438f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T438f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T438f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T438c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T438f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T438f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T240f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T240f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T240f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T240f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T240f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T240f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T240f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T240f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T240f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T240f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T240f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T240f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T240f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T240f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge343os22687;
extern T6 ge343ov22687;
extern T6 T240f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T240f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge343os22686;
extern T6 ge343ov22686;
extern T6 T240f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T240f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge343os22685;
extern T6 ge343ov22685;
extern T6 T240f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T231f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T240f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T240f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f7(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T438f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T240f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T240f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T240f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1409os22928;
extern T0* ge1409ov22928;
extern T0* T438f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T240c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T240f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T240f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T240f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T240f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T240f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T240f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T240f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T240f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T240f3(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.print_time */
extern void T65f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.print_time */
extern void T62f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.register_class */
extern void T71f298(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T83f223(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_class */
extern void T65f302(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T62f307(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T34f229(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T71f303(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1268f26(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_inline_constant */
extern void T65f307(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_inline_constant */
extern void T62f311(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_inline_constant */
extern void T34f233(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T71f314(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T65f330(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T62f323(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T34f243(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T71f315(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T65f331(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T62f324(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T34f244(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T71f316(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T65f332(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T62f325(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T34f245(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T71f317(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T65f333(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T62f326(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T34f246(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T71f318(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T65f334(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T62f327(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T34f247(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T71f319(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T65f335(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T62f328(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T34f248(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T71f320(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T65f336(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T62f329(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T34f249(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T71f321(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T65f337(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T62f330(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T34f250(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T71f322(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T65f338(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T62f331(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T34f251(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T71f302(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.register_feature */
extern void T65f306(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_feature */
extern void T62f310(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T34f232(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T120f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T117f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T101f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T99f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T97f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T96f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T95f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T93f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T91f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T89f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T120f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T118f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T117f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T101f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T100f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T99f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T96f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T95f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T93f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T91f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T89f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T120f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T534f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T532f12(GE_context* ac, T532* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T118f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T117f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T101f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T100f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T99f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T97f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T95f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T93f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T91f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T89f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T120f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T118f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T117f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T101f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T100f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T99f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T98f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T95f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T93f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T91f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T89f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T120f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T118f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T101f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T100f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T98f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T95f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T93f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T91f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T89f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1842f3(GE_context* ac, T0* C, T6 a1);
/* LX_EPSILON_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1840f2(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS_TRANSITION [LX_NFA_STATE].labeled */
extern T1 T1838f3(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T1873f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1255f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1171f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T331f3(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1873f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1423f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T291f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1237f39(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T903f9(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T856f59(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1244f36(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1243f36(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1245f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1237f8(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1234f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T924f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1237f9(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.operator_name */
extern T0* T1234f17(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.operator_name */
extern T0* T830f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1509f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1309f26(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1509f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1309f23(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1512f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1509f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1309f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1512f5(GE_context* ac, T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1513f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1509f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1309f25(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T1908f4(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1211f36(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1210f36(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T1209f32(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T1208f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1206f34(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1205f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1204f63(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1203f63(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1202f63(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1201f63(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T1200f63(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1199f31(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T1198f35(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1197f37(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T946f28(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T906f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T829f31(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T648f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T400f35(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T350f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T312f29(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T285f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T181f99(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T795f31(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T795f46(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T795f46p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T188f106(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T188f107(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T849f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T501f13(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T501f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T501f23(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T414f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T414f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T414f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T397f14(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T397f18(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T397f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T214f47(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T214f50(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T214f50p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T501f14(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T397f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T501f15(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T501f21(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T501f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T501f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T501f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T501f20(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T501f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T501f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T397f16(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T397f22(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T397f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T397f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T397f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T397f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T397f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T397f20(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T795f38(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T460f97(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T414f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T214f48(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T188f108(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1422f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1216f34(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1083f32(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CLUSTER].item */
extern T0* T1441f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T872f9(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T629f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1232f54(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1231f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1229f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1228f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1227f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T530f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T521f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T368f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T367f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T365f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T336f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T259f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1509f12(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1309f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1232f48(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1231f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1229f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1228f53(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1227f52(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T530f44(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T521f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T368f30(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T367f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T365f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T336f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T259f33(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1509f13(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1309f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1232f49(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1231f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1229f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1228f54(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1227f53(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T530f45(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T521f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T368f31(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T367f31(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T365f32(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T336f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T259f34(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1309f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1232f50(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1231f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1229f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1228f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1227f54(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T530f46(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T521f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T368f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T367f32(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T365f33(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T336f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T259f35(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1509f16(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1309f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1232f51(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1231f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1229f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1228f56(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1227f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T530f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T521f50(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T368f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T367f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T365f34(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T336f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T259f36(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1509f18(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1232f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1231f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1229f54(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1228f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1227f56(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T530f48(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T521f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T368f34(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T367f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T365f35(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T336f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T259f37(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1509f9(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1309f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1232f53(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1231f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1229f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1228f58(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1227f57(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T530f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T521f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T368f35(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T367f35(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T365f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T336f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T259f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1232f46(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1231f45(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1229f48(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1228f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T1227f50(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T530f42(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T521f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T368f28(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T367f28(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T365f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T336f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T259f63(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1278f4(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1278f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1274f21(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1273f24(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1272f23(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1271f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1270f25(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1269f24(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1268f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1267f17(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1266f10(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1265f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1264f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1261f12(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1260f10(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1259f10(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1258f10(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1257f10(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1256f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1211f20(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1210f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1209f21(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1208f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1206f22(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1205f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1204f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1203f41(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1202f41(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1201f41(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T1200f41(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1199f22(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1198f26(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1197f21(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1174f16(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1171f14(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T1147f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T1133f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T985f15(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T982f12(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T957f21(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T946f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T829f21(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T746f14(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T330f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T321f10(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T320f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T319f11(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T312f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T293f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T291f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T290f14(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T285f19(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T181f81(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1244f35(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1199f18(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1198f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T829f17(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1224f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T469f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1225f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T469f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1421f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T442f941(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T1018f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T442f942(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T1018f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T1018f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1244f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1243f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1242f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1217f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T442f940(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T499f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1421f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1220f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1219f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1217f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1421f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1217f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1421f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1244f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1243f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1242f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1220f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T442f944(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1219f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T442f943(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1217f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T499f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CHOICE_RANGE.choice */
extern T0* T1252f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1211f31(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1210f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1204f58(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1203f58(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1202f58(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1201f58(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T1200f58(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1197f32(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1171f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T291f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T181f100(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1211f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1210f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1204f60(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1203f60(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1202f60(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1201f60(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T1200f60(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1197f34(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1171f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T291f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T181f103(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1211f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1210f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1204f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1203f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1202f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1201f59(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T1200f59(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1197f33(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1171f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T291f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T181f102(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1211f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1210f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1204f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1203f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1202f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1201f61(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T1200f61(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1197f35(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1171f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T291f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T181f104(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1874f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1873f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1872f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1721f13(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1276f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1274f22(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1273f25(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1272f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1271f23(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1270f26(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1269f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1268f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1267f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1266f11(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1265f13(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1264f12(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1261f13(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1260f11(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1259f11(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1258f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1257f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1256f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1211f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1210f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1209f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1208f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1206f23(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1205f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1204f42(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1203f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1202f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1201f42(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1200f42(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1199f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1198f27(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1197f22(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1174f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1171f15(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T1147f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T1133f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T985f16(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T982f13(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T957f22(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T954f66(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T946f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T829f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T746f15(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T330f14(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T321f11(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T320f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T319f12(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T312f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T293f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T291f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T290f15(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T285f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T181f82(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1204f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern unsigned char ge568os10325;
extern T11 ge568ov10325;
extern T11 T1204f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1203f21(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1203f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1203f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1202f21(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1202f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1201f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1201f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1201f43(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_8 */
extern T4 T1200f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1200f44(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T1200f43(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1204f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern unsigned char ge568os10326;
extern T11 ge568ov10326;
extern T11 T1204f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1203f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1203f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1202f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1202f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1201f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1201f45(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_16 */
extern T5 T1200f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1200f45(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1204f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern unsigned char ge568os10328;
extern T11 ge568ov10328;
extern T11 T1204f46(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1203f27(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1203f47(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1202f27(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1202f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1201f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1201f47(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_64 */
extern T7 T1200f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1200f47(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1204f29(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1203f29(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1202f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1201f29(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_8 */
extern T8 T1200f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1204f31(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1203f31(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1202f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1201f31(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_16 */
extern T9 T1200f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1204f33(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1203f33(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1202f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1201f33(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_32 */
extern T10 T1200f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1204f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1203f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1202f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1201f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_natural_64 */
extern T11 T1200f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1204f20(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1203f20(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1202f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1201f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1200f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1204f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1203f22(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1202f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1201f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1200f22(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1204f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1204f47(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1203f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1202f28(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1202f47(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1201f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1200f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1204f30(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1203f30(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1202f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1201f30(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1200f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1204f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1203f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1202f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1201f32(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1200f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1204f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern unsigned char ge568os10327;
extern T11 ge568ov10327;
extern T11 T1204f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1203f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1203f46(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1202f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1202f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1201f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1201f46(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1200f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1200f46(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1204f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1203f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1202f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1201f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1200f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1204f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1203f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1201f39(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1200f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1203f40(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1202f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1201f40(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T1200f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1204f34(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1203f34(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1202f34(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1201f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1200f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1204f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1203f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1202f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1201f53(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T1200f53(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1204f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1203f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1202f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1201f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1200f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1237f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T856f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1237f6(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T856f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1237f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T856f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1237f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T856f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1237f17(GE_context* ac, T0* C, T0* a1);
extern T1 T1237f17ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T1235f61(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1234f50(GE_context* ac, T0* C, T0* a1);
extern T1 T1234f50ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T1233f47(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T856f13(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T830f48(GE_context* ac, T0* C, T0* a1);
extern T1 T830f48ot1(T0* a1, T0** a2);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1237f40(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1237f41(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T1235f78(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T1235f79(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1234f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1234f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T1233f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T1233f65(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T856f60(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T856f61(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T830f65(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T830f66(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T450f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T229f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T216f103(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T199f13(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T197f95(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T195f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1874f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1265f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T982f16(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T825f7(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1874f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1265f18(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T982f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T825f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T290f18(GE_context* ac, T0* C);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T822f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T822f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T820f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T820f5(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T819f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T818f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T817f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T817f3ac1(GE_context* ac, T0* a1, T0* a2);
/* DS_LINKED_LIST [STRING_8].there_exists */
extern T1 T144f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T817f4(GE_context* ac, T0* C);
/* UC_UTF8_STRING.has */
extern T1 T844f66(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_MULTITHREADED_CONDITION.is_enabled */
extern T1 T816f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T815f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T815f4(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T814f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T814f3ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T814f5(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T814f4(GE_context* ac, T0* C);
/* ET_ECF_CONDITIONS.is_enabled */
extern T1 T810f4(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ECF_CONDITION].item */
extern T0* T1449f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1274f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1273f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1272f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1271f25(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1270f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1269f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1274f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1271f28(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1556f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1422f35(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1244f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1243f33(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1242f34(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1240f4(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1216f60(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1083f58(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_parameter_with_type */
extern T0* T866f30(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T499f21(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T260f50(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T83f117(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T81f48(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1556f7(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1240f7(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1556f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1422f65(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1244f69(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1243f72(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1242f73(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1240f8(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1216f73(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T1083f72(GE_context* ac, T0* C);
/* ET_LIKE_N.label */
extern T0* T866f65(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T499f67(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T260f100(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T83f205(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T81f104(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1556f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1240f9(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T606f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T604f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T603f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T566f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T606f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T604f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T603f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T566f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T606f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T845f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T845f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T604f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T603f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T566f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T606f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T604f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T603f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T566f44(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1236f3(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T135f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1236f5(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1235f73(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T1235f41(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1234f60(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T1234f19(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1233f59(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T1233f27(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T830f60(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T830f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T181f84(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1236f4(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1236f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T1235f22(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1234f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T1233f22(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T830f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T181f53(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T450f94(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T229f104(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T216f97(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T197f94(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T795f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T800f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T800f3ac1(GE_context* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T799f9(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T799f9ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T799f9ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T1905f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1444f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1444f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ECF_FILE_RULE].for_all */
extern T1 T1445f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T795f50(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T795f49(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T795f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T795f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T795f55(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T414f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T414f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T371f15(GE_context* ac, T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T77f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T414f49(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T409f141(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1152os12393;
extern T0* ge1152ov12393;
extern T0* T409f142(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T409f140(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T414f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T414f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T214f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T215f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T215f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T215f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T214f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T214f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T214f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T795f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T795f37p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T414f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T414f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T214f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T214f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T795f35(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T795f48(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T795f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T795f44(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T414f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T414f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T414f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T414f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T214f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T214f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T214f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T214f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T214f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T795f30(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T414f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T414f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T214f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T214f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T795f42(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T414f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T214f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T795f39(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T414f31(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T397f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T214f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T795f43(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T501f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T414f33(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T214f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T795f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T501f18(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T414f38(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T397f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T214f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T795f28(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T501f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T414f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T397f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T214f32(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T501f7(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T397f8(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T795f29(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T501f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T414f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T397f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T214f36(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T397f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T397f11(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T795f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T501f9(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T414f39(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T397f10(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T214f34(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T795f32(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T501f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T414f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T397f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T214f46(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern unsigned char ge725os6643;
extern T0* ge725ov6643;
extern T0* T795f54(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern unsigned char ge736os6643;
extern T0* ge736ov6643;
extern T0* T501f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T414f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T397f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T214f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T795f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T795f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T188f114(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T188f116(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T795f56(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T501f16(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T501f22(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T414f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T414f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T414f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T397f17(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T397f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T214f49(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T214f49p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T214f52(GE_context* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T886f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T886f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T886f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1232f70(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1229f65(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T886f17(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T530f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T368f62(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T367f64(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T365f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T259f71(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T886f13(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T886f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1232f69(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1231f66(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1229f64(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1228f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T1227f66(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T886f15(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T530f63(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T521f65(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T368f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T367f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T365f63(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T336f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T259f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1232f72(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1231f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1229f67(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1228f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T1227f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T530f66(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T521f67(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T368f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T367f66(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T365f66(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T336f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T259f73(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1232f73(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1231f69(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1229f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1228f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T1227f69(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T886f21(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T530f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T521f68(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T368f65(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T367f67(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T365f67(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T336f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T259f74(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T886f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T886f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T886f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T272f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T520f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T519f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T322f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T305f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T272f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T238f43(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T272f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T954f53(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T648f58(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T350f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T954f55(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T648f60(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T350f17(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1586f4(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1275f5(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1874f18(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1873f15(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1872f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1721f14(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1586f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1274f23(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1273f26(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1272f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1271f24(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1270f27(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1269f26(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1268f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1267f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1266f12(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1265f14(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1264f13(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1261f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1260f12(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1259f12(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1258f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1257f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1256f16(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1211f22(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1210f22(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1209f23(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1208f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1206f24(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1205f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1204f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1203f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1202f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1201f48(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T1200f48(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1199f24(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1198f28(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1197f23(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1174f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1171f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T1147f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T1133f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T985f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T982f14(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T957f26(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T946f23(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T829f26(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T746f19(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T330f15(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T321f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T320f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T319f15(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T312f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T293f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T291f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T290f16(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T285f18(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T181f77(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1874f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1873f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1872f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1721f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1274f13(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1273f15(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1272f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1271f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1270f19(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1269f19(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1268f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1267f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1266f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1265f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1264f8(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1261f7(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1260f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1259f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1258f4(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1257f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1256f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1211f11(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1210f11(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1209f15(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1208f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1206f10(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1205f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1204f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1203f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1202f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1201f10(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T1200f10(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1199f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1198f12(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1197f11(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1174f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1171f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T1147f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T1133f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T985f8(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T982f7(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T957f15(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T946f15(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T829f6(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T746f7(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T330f10(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T321f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T320f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T319f9(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T312f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T293f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T291f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T290f11(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T285f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T181f49(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1874f10(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1873f10(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1872f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1806f3(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1721f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1718f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1274f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1273f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1272f32(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1271f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1270f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1269f33(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1268f19(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1267f23(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1266f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1265f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1264f17(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1261f19(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1260f16(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1259f16(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1258f16(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1257f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1256f20(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1245f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1211f27(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1210f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1209f27(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1208f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1206f29(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1205f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1204f54(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1203f54(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1202f54(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1201f54(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1200f54(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1199f29(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1198f33(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1197f28(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1174f23(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1171f20(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T1147f17(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T1133f22(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T985f23(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T982f20(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T972f9(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T957f27(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T946f24(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T829f28(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T746f20(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T330f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T321f16(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T320f17(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T319f19(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T312f25(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T293f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T291f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T290f21(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T286f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T285f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T181f94(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1245f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1874f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1873f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1872f9(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1806f4(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1721f9(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1718f7(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1274f18(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1273f20(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1272f19(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1271f20(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1270f22(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1269f21(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1268f10(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1267f16(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1266f9(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1265f8(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1264f10(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1261f9(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1260f9(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1259f9(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1258f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1257f9(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1256f13(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1245f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1211f16(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1210f16(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1209f17(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1208f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1206f18(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1205f18(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1204f19(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1203f19(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1202f19(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1201f19(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T1200f19(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1199f17(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1198f21(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1197f17(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1174f15(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1171f13(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T1147f10(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T1133f15(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T985f13(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T982f11(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T972f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T957f20(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T946f17(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T829f16(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T746f13(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T330f12(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T321f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T320f6(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T319f6(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T312f14(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T293f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T291f8(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T290f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T286f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T285f10(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T181f75(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1216f74(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T1021f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T1083f73(GE_context* ac, T0* C);
/* ET_LIKE_N.last_leaf */
extern T0* T866f66(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1211f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1210f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1206f19(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1205f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1204f36(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1203f36(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1202f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1201f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1200f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1199f19(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1198f23(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1197f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T829f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1211f19(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1210f19(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1209f20(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1208f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1206f21(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1205f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1204f38(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1203f38(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1202f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1201f38(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T1200f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1197f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1209f19(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1208f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1206f20(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1205f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1204f37(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1203f37(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1202f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1201f37(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T1200f37(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1199f20(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1198f24(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T829f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1211f30(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1210f30(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1209f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1208f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1206f32(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1205f32(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1199f34(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1198f38(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1197f31(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T829f33(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T319f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1267f14(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T746f11(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T319f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1274f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1273f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1272f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T985f14(GE_context* ac, T0* C);
extern T1 T985f14ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1274f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1274f30(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1273f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1273f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1272f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1272f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1271f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1271f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1270f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1270f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1269f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1269f32(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T985f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1237f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1237f7ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T1235f17(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1234f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1234f20ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T1233f17(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T856f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T830f24(GE_context* ac, T0* C, T0* a1);
extern T1 T830f24ot1(T0* a1, T0** a2);
/* ET_IDENTIFIER.same_call_name */
extern T1 T181f69(GE_context* ac, T0* C, T0* a1);
extern T1 T181f69ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1796f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1263f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1262f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1237f11(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T1235f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1234f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T1233f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T943f35(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T930f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T924f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T856f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T830f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T181f78(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1263f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1262f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1237f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T1235f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1234f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T1233f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T943f36(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T930f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T924f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T856f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T830f26(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T648f92(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T181f79(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1796f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1263f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1262f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1237f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T1235f14(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1234f14(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T1233f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T943f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T930f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T924f15(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T856f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T830f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T648f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T181f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1796f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1263f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1262f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1237f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T1235f49(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1234f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T1233f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T943f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T930f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T924f26(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T856f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T830f36(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T648f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T181f57(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1796f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1263f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1262f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1237f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T1235f50(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1234f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T1233f36(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T943f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T930f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T924f27(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T856f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T830f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T648f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T181f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1796f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1263f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1262f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1237f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T1235f51(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1234f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T1233f37(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T943f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T930f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T924f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T856f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T830f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T648f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T181f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1796f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1263f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1262f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1237f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T1235f52(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1234f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T1233f38(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T943f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T930f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T924f29(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T856f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T830f39(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T648f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T181f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1796f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1263f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1262f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1237f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T1235f53(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1234f42(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T1233f39(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T943f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T930f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T924f30(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T856f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T830f40(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T648f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T181f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1796f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1263f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1262f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1237f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T1235f54(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1234f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T1233f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T943f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T930f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T924f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T856f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T830f41(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T648f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T181f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1796f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1263f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1262f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1237f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T1235f55(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1234f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T1233f41(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T943f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T930f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T924f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T856f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T830f42(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T648f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T181f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1796f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1263f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1262f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1237f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T1235f56(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1234f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T1233f42(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T943f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T930f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T924f33(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T856f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T830f43(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T648f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T181f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1796f15(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1263f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1262f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1237f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T1235f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1234f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T1233f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T943f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T930f17(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T924f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T856f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T830f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T648f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T181f45(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1796f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1263f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1262f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1237f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T1235f57(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1234f46(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T1233f43(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T943f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T930f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T924f34(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T856f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T830f44(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T648f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T181f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1796f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1263f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1262f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1237f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T1235f58(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1234f47(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T1233f44(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T943f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T930f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T924f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T856f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T830f45(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T648f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T181f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1796f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1263f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1262f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1237f36(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T1235f59(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1234f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T1233f45(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T943f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T930f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T924f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T856f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T830f46(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T648f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T181f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1796f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1263f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1262f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1237f37(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T1235f60(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1234f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T1233f46(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T943f34(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T930f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T924f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T856f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T830f47(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T648f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T181f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1796f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1263f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1262f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1237f38(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1235f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1234f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1233f56(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T943f37(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T930f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T924f40(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T856f58(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T830f59(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T648f93(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T181f80(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1796f24(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1263f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1262f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1237f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T1235f46(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1234f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1233f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T943f20(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T930f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T924f23(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T856f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T830f33(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T648f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T181f54(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1796f34(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1263f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1262f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1237f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T1235f47(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1234f36(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1233f33(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T943f21(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T930f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T924f24(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T856f37(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T830f34(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T648f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T181f55(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1796f37(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1263f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1262f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1237f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T1235f48(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1234f37(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T1233f34(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T943f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T930f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T924f25(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T856f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T830f35(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T648f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T181f56(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T856f41(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1796f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T1235f74(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1234f61(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T1233f60(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T943f38(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T930f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T924f41(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T906f14(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T830f61(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T648f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T181f87(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1796f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T1235f75(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1234f62(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T1233f61(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T943f39(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T930f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T924f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T906f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T830f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T648f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T181f88(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1796f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1263f4(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1237f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T1235f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1234f11(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1233f11(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T943f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T930f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T924f12(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T856f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T830f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T648f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T181f41(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1796f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1263f6(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1262f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1237f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T1235f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1234f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T1233f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T943f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T930f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T924f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T856f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T830f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T648f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T181f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1796f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1262f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1237f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T1235f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1234f12(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1233f12(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T943f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T930f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T924f13(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T856f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T830f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T648f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T181f42(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1796f27(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1796f33(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1263f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1263f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1262f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1262f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T943f40(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T943f41(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T930f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T930f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T924f43(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T924f44(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T906f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T648f98(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T648f99(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1796f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1263f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1262f10(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T943f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T930f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T924f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T648f72(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1796f26(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1263f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1262f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T943f8(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T930f5(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T924f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T906f9(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1874f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1776f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1265f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1261f11(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1245f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T982f9(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T825f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T290f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T287f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1874f16(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1776f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1265f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1261f10(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1245f9(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T985f24(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T982f8(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T825f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T290f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T287f5(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1776f7(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1245f11(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T825f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T287f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1874f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1265f9(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1245f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1874f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T985f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T290f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T287f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T1235f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1234f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T1233f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T830f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T181f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1232f57(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1231f56(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1229f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1228f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T1227f60(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T530f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T521f55(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T368f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T367f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T365f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T336f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T259f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1232f65(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1231f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1229f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1228f63(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T1227f62(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T530f54(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T521f61(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T368f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T367f53(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T365f53(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T336f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T259f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1232f58(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1231f57(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1229f59(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1228f62(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T1227f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T530f55(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T521f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T368f39(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T367f39(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T365f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T336f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T259f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1232f66(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T530f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T530f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T530f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1231f63(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1229f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1229f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1229f93(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1229f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1228f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T1227f63(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T530f60(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T521f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T368f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T368f59(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T367f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T367f61(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T365f59(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T365f61(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T336f62(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T259f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1232f67(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1232f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1232f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1232f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1231f64(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1231f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1231f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1231f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1229f62(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1229f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1228f65(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1228f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1228f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1228f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T1227f64(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T1227f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T1227f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T1227f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T530f61(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T530f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T521f63(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T521f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T521f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T521f93(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T368f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T368f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T368f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T368f83(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T367f60(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T367f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T367f88(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T367f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T367f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T367f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T365f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T365f88(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T365f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T365f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T365f85(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T336f63(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T336f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T336f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T336f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T259f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T259f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T259f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T259f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1232f61(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1231f60(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T530f58(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T521f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1232f60(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1231f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T530f57(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T521f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1232f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1231f58(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T530f56(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T521f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1232f40(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1231f39(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T530f36(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T521f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1232f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1231f44(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T530f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T521f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1232f42(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1231f42(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T530f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T521f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1232f55(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1231f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1229f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1228f60(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T1227f59(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T530f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T521f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T368f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T367f37(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T365f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T336f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T259f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1232f45(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1231f43(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T530f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T521f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1232f56(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T530f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T521f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1232f32(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1231f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T530f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T521f32(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1874f11(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1872f11(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1721f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1267f13(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1266f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1265f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1261f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1256f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1171f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T1147f5(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T982f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T957f17(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T946f8(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T746f8(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T321f7(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T320f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T319f7(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T312f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T291f12(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T290f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T181f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1274f29(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1273f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_true */
extern T1 T1272f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1271f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1270f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_true */
extern T1 T1269f31(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_true */
extern T1 T1268f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_true */
extern T1 T1267f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_true */
extern T1 T1266f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_true */
extern T1 T1265f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_true */
extern T1 T1264f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_true */
extern T1 T1261f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_true */
extern T1 T1260f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_true */
extern T1 T1259f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_true */
extern T1 T1258f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_true */
extern T1 T1257f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_true */
extern T1 T1256f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_true */
extern T1 T1211f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_true */
extern T1 T1210f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_true */
extern T1 T1209f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_true */
extern T1 T1208f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_true */
extern T1 T1206f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_true */
extern T1 T1205f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_true */
extern T1 T1204f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_true */
extern T1 T1203f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_true */
extern T1 T1202f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_true */
extern T1 T1201f52(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_true */
extern T1 T1200f52(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_true */
extern T1 T1199f28(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_true */
extern T1 T1198f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_true */
extern T1 T1197f27(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_true */
extern T1 T1174f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_true */
extern T1 T1171f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_true */
extern T1 T1147f16(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_true */
extern T1 T1133f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_true */
extern T1 T985f22(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_true */
extern T1 T982f19(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_true */
extern T1 T957f25(GE_context* ac, T0* C);
/* ET_VOID.is_true */
extern T1 T946f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_true */
extern T1 T829f25(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_true */
extern T1 T746f18(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_true */
extern T1 T330f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_true */
extern T1 T321f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_true */
extern T1 T320f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_true */
extern T1 T319f18(GE_context* ac, T0* C);
/* ET_RESULT.is_true */
extern T1 T312f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_true */
extern T1 T293f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T291f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_true */
extern T1 T290f20(GE_context* ac, T0* C);
/* ET_CURRENT.is_true */
extern T1 T285f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_true */
extern T1 T181f90(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1874f5(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T1873f5(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T1872f5(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1721f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1274f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1273f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1272f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1271f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1270f30(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1269f29(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1268f16(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1267f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1266f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1265f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1264f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1261f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1260f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1259f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1258f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1257f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1256f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1211f24(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1210f24(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1209f24(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1208f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1206f26(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1205f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1204f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1203f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1202f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1201f50(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T1200f50(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1199f26(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1198f30(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1197f25(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1174f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1171f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T1147f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T1133f19(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T985f19(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T982f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T957f23(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T946f20(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T829f23(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T746f16(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T330f17(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T321f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T320f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T319f16(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T312f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T293f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T291f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T290f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T181f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1274f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1273f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1272f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1271f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1270f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1269f35(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1268f21(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1267f26(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1266f18(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1265f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1264f19(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1261f21(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1260f18(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1259f18(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1258f18(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1257f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1256f22(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1211f29(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1210f29(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1209f29(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1208f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1206f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1205f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1204f56(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1203f56(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1202f56(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1201f56(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T1200f56(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1199f32(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1198f36(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1197f30(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1174f25(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1171f22(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T1147f19(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T1133f24(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T985f27(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T982f22(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T957f30(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T946f26(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T829f32(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T746f23(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T330f25(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T321f18(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T320f20(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T319f21(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T312f27(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T293f25(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T291f20(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T290f23(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T285f29(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T181f98(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1874f12(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1873f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1872f12(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1721f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1274f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1273f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1272f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1271f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1270f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1269f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1268f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1267f21(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1266f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1265f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1264f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1261f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1260f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1259f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1258f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1257f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1256f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1211f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1210f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1209f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1208f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1206f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1205f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1204f51(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1203f51(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1202f51(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1201f51(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1200f51(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1199f27(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1198f31(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1197f26(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1174f21(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1171f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T1147f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T1133f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T985f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T982f18(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T957f24(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T946f21(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T829f24(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T746f17(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T330f20(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T321f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T320f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T319f17(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T312f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T293f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T291f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T290f19(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T285f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T181f89(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1874f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1873f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1872f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1721f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1274f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1273f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1272f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1271f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1270f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1269f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1268f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1267f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1266f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1265f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1264f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1261f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1260f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1259f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1258f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1257f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1256f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1211f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1210f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1209f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1208f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1206f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1205f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1204f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1203f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1202f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1201f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1200f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1199f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1199f33(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1198f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1198f37(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1197f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1174f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1171f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1147f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T1133f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T985f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T982f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T957f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T946f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T829f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T829f30(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T746f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T330f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T321f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T320f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T319f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T312f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T293f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T291f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T290f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T285f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T181f97(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1874f4(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1873f16(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1872f15(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1721f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1274f16(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1273f18(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1272f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1271f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1270f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1269f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1268f6(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1267f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1266f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1265f6(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1264f6(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1261f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1260f7(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1259f7(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1258f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1257f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1256f10(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1211f9(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1210f9(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1209f10(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1208f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1206f25(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1205f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1204f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1203f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1202f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1201f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T1200f16(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1199f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1198f29(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1197f9(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1174f12(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1174f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1171f9(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T1147f6(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T1133f8(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T1133f6(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T985f11(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T982f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T957f18(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T946f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T829f27(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T746f9(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T330f9(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T321f8(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T320f8(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T319f8(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T312f8(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T293f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T293f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T291f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T290f10(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T285f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1874f21(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1873f21(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1872f16(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1721f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1274f34(GE_context* ac, T0* C);
extern T1 T1274f34ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T972f10(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1273f36(GE_context* ac, T0* C);
extern T1 T1273f36ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1272f35(GE_context* ac, T0* C);
extern T1 T1272f35ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1271f35(GE_context* ac, T0* C);
extern T1 T1271f35ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1270f37(GE_context* ac, T0* C);
extern T1 T1270f37ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1269f36(GE_context* ac, T0* C);
extern T1 T1269f36ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1268f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1267f27(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T1266f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1265f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T1264f20(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1261f22(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1260f19(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T1259f19(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1258f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1257f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1256f23(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1211f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1210f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T1209f31(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T1208f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1206f33(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1205f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1204f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1203f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1202f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1201f62(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T1200f62(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1199f35(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T1198f39(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1197f36(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T1174f26(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T1171f27(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T1147f20(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T1133f25(GE_context* ac, T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T985f28(GE_context* ac, T0* C);
extern T1 T985f28ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T982f23(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T648f100(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T957f31(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T946f27(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T829f34(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T746f24(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T330f23(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T321f19(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T320f21(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T319f22(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T312f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T293f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T291f26(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T290f24(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T285f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1405f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1405f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1405f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1405f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1405f11ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1405f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T531f10(GE_context* ac, T0* C, T0* a1);
extern T1 T531f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T531f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T531f13(GE_context* ac, T0* C, T0* a1);
extern T1 T531f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T531f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T520f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T519f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T322f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T305f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T273f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T273f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T273f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T273f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T238f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T520f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T519f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T322f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T305f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T238f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1405f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T531f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T520f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T519f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T322f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T305f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T273f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T238f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1405f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T531f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T520f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T519f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T322f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T305f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T273f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T238f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1405f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T531f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T273f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1405f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T531f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T520f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T519f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T322f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T305f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T273f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T238f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T520f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T519f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T322f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T305f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T238f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1405f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T531f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T520f28(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T519f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T322f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T305f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T273f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T238f40(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1405f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T531f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T520f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T519f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T322f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T305f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T273f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T238f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T520f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T519f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T322f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T305f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T238f35(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1696f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1695f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T642f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T500f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T251f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1696f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1695f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T642f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T500f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T251f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1696f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1695f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T642f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T500f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T251f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T1696f7(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T1695f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T642f17(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T500f8(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T251f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1696f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1695f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T642f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T500f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T251f17(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1696f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1695f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T642f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T500f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T251f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1696f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1695f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T642f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T500f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T251f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1696f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1695f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T642f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T500f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T251f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1696f13(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1695f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T642f22(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T500f13(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T251f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1696f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1695f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T642f14(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T500f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T251f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1696f16(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1695f16(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T642f23(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T500f14(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T251f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T251f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1696f17(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1696f18(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1695f14(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T642f12(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T500f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T251f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1696f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1695f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T642f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T500f15(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T251f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1696f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern unsigned char ge824os3658;
extern T0* ge824ov3658;
extern T0* T82f1501(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T1908c5(GE_context* ac);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1695f18(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T642f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T500f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T251f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T1218f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T1218f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T954f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T954f51(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T648f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T648f56(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T493f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T493f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T400f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T350f10(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T350f58(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T954f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T954f56(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T648f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T648f61(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T400f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T400f14(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T350f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T350f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T1218f16(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T82f41(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern unsigned char ge824os3656;
extern T0* ge824ov3656;
extern T0* T82f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern unsigned char ge824os3652;
extern T0* ge824ov3652;
extern T0* T82f75(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T349f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern unsigned char ge824os3651;
extern T0* ge824ov3651;
extern T0* T82f74(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T349f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern unsigned char ge824os3653;
extern T0* ge824ov3653;
extern T0* T82f73(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern unsigned char ge824os3655;
extern T0* ge824ov3655;
extern T0* T82f72(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern unsigned char ge824os3654;
extern T0* ge824ov3654;
extern T0* T82f71(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern unsigned char ge824os3647;
extern T0* ge824ov3647;
extern T0* T82f69(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern unsigned char ge824os3646;
extern T0* ge824ov3646;
extern T0* T82f68(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern unsigned char ge824os3648;
extern T0* ge824ov3648;
extern T0* T82f67(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern unsigned char ge824os3650;
extern T0* ge824ov3650;
extern T0* T82f66(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern unsigned char ge824os3649;
extern T0* ge824ov3649;
extern T0* T82f65(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern unsigned char ge824os3641;
extern T0* ge824ov3641;
extern T0* T82f64(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern unsigned char ge824os3640;
extern T0* ge824ov3640;
extern T0* T82f63(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern unsigned char ge824os3644;
extern T0* ge824ov3644;
extern T0* T82f62(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern unsigned char ge824os3643;
extern T0* ge824ov3643;
extern T0* T82f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T1218f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T954f61(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T648f6(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T493f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T493f14(GE_context* ac, T0* C);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T400f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T350f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T349f12(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T349f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T1218f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T954f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T648f8(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T493f9(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T350f8(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T349f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T1218f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T954f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T648f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T493f4(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T400f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T350f14(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T349f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T1218f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T1218f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T954f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T954f50(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T648f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T648f55(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T493f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T493f11(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T400f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T350f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T350f57(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T1218f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T954f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T648f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T493f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T400f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T350f15(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T349f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T1218f3(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T954f69(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T648f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T493f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T400f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T350f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T1218f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T954f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T648f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T493f6(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T400f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T350f4(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T349f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T1218f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T954f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T954f52(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T648f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T648f57(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T493f3(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T400f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T400f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T400f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T350f11(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T350f59(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T1218f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T954f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T954f54(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T648f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T648f59(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T493f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T400f16(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T400f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T400f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T350f12(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T350f60(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T1218f17(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T954f62(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T648f4(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T493f17(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T400f23(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T350f5(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T349f13(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1556f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1422f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1244f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1243f9(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1242f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1240f5(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1216f57(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T1083f54(GE_context* ac, T0* C);
/* ET_LIKE_N.actual_parameter */
extern T0* T866f16(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T499f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T260f43(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T83f104(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T81f42(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1556f3(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1422f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1244f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1243f8(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1242f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1240f3(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1216f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T1083f12(GE_context* ac, T0* C);
/* ET_LIKE_N.type */
extern T0* T866f15(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T499f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T260f8(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T83f103(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T81f7(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1556f5(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1422f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1244f48(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1243f51(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1242f50(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1240f6(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1216f61(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1083f59(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type */
extern T0* T866f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T499f46(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T260f77(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T83f177(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T81f85(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f112(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f112ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f112ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T188f112ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern unsigned char ge745os6152;
extern T6 ge745ov6152;
extern T6 T188f115(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f159(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f159ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f159ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f159ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T71f167(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f167(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f167ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f167ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f167ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T65f175(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f162(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f162ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f162ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f162ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T62f170(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T34f152(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T34f152ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T34f152ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T34f152ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T34f155(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T460f94(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T460f95(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T460f96(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T450f93(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T450f96(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T450f98(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T229f103(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T229f105(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T229f107(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T216f96(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T216f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T216f100(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T197f93(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T197f96(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T197f98(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T188f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_name */
extern T0* T71f158(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T65f174(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T62f169(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T34f151(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T71f175(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T71f170(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T71f176(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T65f184(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T65f178(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T65f185(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T62f179(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T62f174(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T62f180(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T34f147(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T34f141(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T34f148(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T71f166(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T65f176(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T62f171(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T34f154(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.hash_code */
extern T6 T460f92(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T450f91(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T229f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T216f95(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T197f91(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T188f103(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T71f160(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T65f168(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T62f163(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T34f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T188f111(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T71f173(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T65f180(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T62f177(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T34f145(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.master_class */
extern T0* T460f91(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T188f102(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T71f172(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T65f182(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T62f165(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T34f143(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.shortest_path */
extern T0* T460f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T460f103ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T460f103ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T460f103ac3(GE_context* ac, T0* a1, T0* a2);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].negated */
extern T1 T1395f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] PREDICATE [[attached] TUPLE [ET_UNIVERSE]].set_rout_disp_final */
extern void T1396f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T460f185(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].force_first */
extern void T849f12(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put */
extern void T849f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T849f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].set_position */
extern void T1459f5(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].move_right */
extern void T849f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].force */
extern void T1458f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].fill_with */
extern void T1457f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* SPECIAL [ET_ADAPTED_UNIVERSE].extend */
extern void T1457f8(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].put_last */
extern void T849f16(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].resize */
extern void T849f14(GE_context* ac, T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1458f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1457f4(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T849f8(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].extendible */
extern T1 T849f7(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].before */
extern T1 T1393f4(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].back */
extern void T1393f16(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_back */
extern void T1392f60(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].add_traversing_cursor */
extern void T1392f62(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_next_cursor */
extern void T1393f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_position */
extern void T1393f18(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].remove_traversing_cursor */
extern void T1392f61(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_before */
extern void T1393f19(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_item */
extern T6 T1392f25(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].finish */
extern void T1393f15(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_finish */
extern void T1392f59(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_off */
extern T1 T1392f35(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].off */
extern T1 T1393f10(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].is_empty */
extern T1 T1392f34(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].forth */
extern void T1393f14(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_forth */
extern void T1392f58(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].set_after */
extern void T1393f17(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].go_after */
extern void T1393f13(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_go_after */
extern void T1392f57(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].has */
extern T1 T1392f20(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].search_position */
extern void T1392f38(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].hash_position */
extern T6 T1392f24(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_item */
extern T0* T1392f27(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_item */
extern T6 T1392f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern unsigned char ge810os6171;
extern T0* ge810ov6171;
extern T0* T460f104(GE_context* ac, T0* C);
/* KL_AGENT_ROUTINES [ET_UNIVERSE].default_create */
extern T0* T1395c2(GE_context* ac);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].item */
extern T6 T1393f9(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_item */
extern T6 T1392f31(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_item */
extern T6 T1392f33(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].key */
extern T0* T1393f7(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_key */
extern T0* T1392f30(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].after */
extern T1 T1393f5(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].start */
extern void T1393f12(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].cursor_start */
extern void T1392f56(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_cursor */
extern T0* T1392f21(GE_context* ac, T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_UNIVERSE].make */
extern T0* T1393c11(GE_context* ac, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].force_last */
extern void T1392f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_put */
extern void T1392f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_put */
extern void T1392f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_put */
extern void T1392f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].resize */
extern void T1392f42(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].clashes_resize */
extern void T1392f50(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].special_integer_ */
extern T0* T1392f28(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].key_storage_resize */
extern void T1392f49(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_resize */
extern void T1392f48(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].slots_resize */
extern void T1392f47(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_modulus */
extern T6 T1392f22(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].new_capacity */
extern T6 T1392f23(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].item_storage_put */
extern void T1392f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].unset_found_item */
extern void T1392f40(GE_context* ac, T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_map */
extern T0* T1392c36(GE_context* ac, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_with_equality_testers */
extern void T1392f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_sparse_container */
extern void T1392f46(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].set_internal_cursor */
extern void T1392f55(GE_context* ac, T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_slots */
extern void T1392f54(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_clashes */
extern void T1392f53(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_key_storage */
extern void T1392f52(GE_context* ac, T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_UNIVERSE].make_item_storage */
extern void T1392f51(GE_context* ac, T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].make */
extern T0* T849c11(GE_context* ac, T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T849f13(GE_context* ac, T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T849f6(GE_context* ac, T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_UNIVERSE].make */
extern T0* T1459c4(GE_context* ac, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].make */
extern T0* T1458f1(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1457c5(GE_context* ac, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1458c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T450f102(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T450f102ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T450f102ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T450f102ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T450f183(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T450f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f114(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f114ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f114ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T229f114ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T229f206(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T229f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f107(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f107ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f107ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T216f107ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T216f192(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T216f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f101(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f101ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f101ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T197f101ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T197f183(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T197f103(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T188f117(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f117ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f117ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T188f117ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T188f212(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T188f118(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T71f169(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f169ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f169ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f169ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T71f313(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T71f171(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T65f186(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f186ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f186ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f186ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T65f305(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T65f165(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T62f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f173ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f173ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f173ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T62f321(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T62f175(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T34f158(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T34f158ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T34f158ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T34f158ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T34f235(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T34f142(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_name */
extern unsigned char ge739os6643;
extern T0* ge739ov6643;
extern T0* T460f100(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern unsigned char ge734os6643;
extern T0* ge734ov6643;
extern T0* T450f101(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T229f113(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T216f106(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T197f100(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T188f113(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern unsigned char ge743os5965;
extern T0* ge743ov5965;
extern T0* T71f182(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T65f189(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T62f186(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T34f159(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T460f98(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T460f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T460f102(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T450f99(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T450f100(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T229f111(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T229f112(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T216f104(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T216f105(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T197f99(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T197f102(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T188f109(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T71f183(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T65f190(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T62f187(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T34f160(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.adapted_universe */
extern T0* T460f93(GE_context* ac, T0* C, T0* a1);
extern T1 T460f93ot1(T0* a1, T0** a2);
extern T1 T460f93ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T196f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T189f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T450f92(GE_context* ac, T0* C, T0* a1);
extern T1 T450f92ot1(T0* a1, T0** a2);
/* DS_ARRAYED_LIST [ET_DOTNET_ASSEMBLY].has */
extern T1 T1314f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T229f109(GE_context* ac, T0* C, T0* a1);
extern T1 T229f109ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T216f102(GE_context* ac, T0* C, T0* a1);
extern T1 T216f102ot1(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T197f92(GE_context* ac, T0* C, T0* a1);
extern T1 T197f92ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T188f104(GE_context* ac, T0* C, T0* a1);
extern T1 T188f104ot1(T0* a1, T0** a2);
extern T1 T188f104ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T71f168(GE_context* ac, T0* C, T0* a1);
extern T1 T71f168ot1(T0* a1, T0** a2);
extern T1 T71f168ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T65f177(GE_context* ac, T0* C, T0* a1);
extern T1 T65f177ot1(T0* a1, T0** a2);
extern T1 T65f177ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T62f172(GE_context* ac, T0* C, T0* a1);
extern T1 T62f172ot1(T0* a1, T0** a2);
extern T1 T62f172ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T34f157(GE_context* ac, T0* C, T0* a1);
extern T1 T34f157ot1(T0* a1, T0** a2);
extern T1 T34f157ot2(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T383f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f25ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T383f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern unsigned char ge824os3636;
extern T0* ge824ov3636;
extern T0* T82f248(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T866c67(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T866f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T260f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T83f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T81f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T383f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T260f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T83f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T81f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T383f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T260f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T83f140(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T81f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T383f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T260f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T83f141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T81f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T383f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T260f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T83f143(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T81f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T383f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T260f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T83f144(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T81f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T383f24(GE_context* ac, T0* C);
extern T1 T383f24ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T383f30(GE_context* ac, T0* C, T0* a1);
extern T1 T383f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T260f58(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T83f145(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T81f57(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T383f31(GE_context* ac, T0* C, T0* a1);
extern T1 T383f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T260f59(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T83f146(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T81f58(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T383f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f12ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T260f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T83f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T81f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T383f32(GE_context* ac, T0* C, T0* a1);
extern T1 T383f32ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T260f61(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T83f148(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T81f60(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T383f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f22ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T260f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T83f149(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T81f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T383f13(GE_context* ac, T0* C, T0* a1);
extern T1 T383f13ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T260f63(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T83f150(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T81f62(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T383f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f35ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T260f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T83f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T81f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T383f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f36ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T383f37(GE_context* ac, T0* C, T0* a1);
extern T1 T383f37ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T260f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T83f185(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T81f90(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T383f38(GE_context* ac, T0* C, T0* a1);
extern T1 T383f38ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T260f90(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T83f186(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T81f91(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T383f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T260f28(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T83f88(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T81f22(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T383f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T260f32(GE_context* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T83f91(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T81f24(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T383f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T383f48ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T260f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T83f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T81f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T383f8(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T260f34(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T83f52(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T81f35(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T383f27(GE_context* ac, T0* C);
extern T1 T383f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T260f55(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T83f142(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T81f54(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T383f34(GE_context* ac, T0* C, T6 a1);
extern T1 T383f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T260f68(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T83f164(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T81f69(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T383f19(GE_context* ac, T0* C);
extern T1 T383f19ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T260f16(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T83f121(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T81f18(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T383f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T260f33(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T83f51(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T81f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T260f17(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T83f93(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T81f19(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T383f10(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T83f196(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T81f98(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T383f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1422f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T1244f27(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T1243f26(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T1242f27(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1216f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T1083f15(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type */
extern T0* T866f20(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T499f9(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T260f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T83f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T81f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1422f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f11ot1(T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1422f24(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T1244f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1244f24(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T1243f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1243f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1242f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1242f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1216f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f18ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1083f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f16ot1(T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T1083f51(GE_context* ac, T0* C);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T866f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T866f6(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T383f23(GE_context* ac, T0* C, T6 a1);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T499f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T499f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1422f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f12ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1244f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1243f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1242f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1216f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1083f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f17ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T866f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T499f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1422f13(GE_context* ac, T0* C, T0* a1);
extern T1 T1422f13ot1(T0* a1, T0** a2);
extern T1 T1422f13ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1244f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1243f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1242f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1216f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1216f20ot1(T0* a1, T0** a2);
extern T1 T1216f20ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1083f18(GE_context* ac, T0* C, T0* a1);
extern T1 T1083f18ot1(T0* a1, T0** a2);
extern T1 T1083f18ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T866f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T499f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1422f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f14ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1244f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1243f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1242f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1216f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f22ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1083f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f20ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T866f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T499f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1422f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f15ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1244f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1243f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1242f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1216f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f23ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1083f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f21ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T866f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T499f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1422f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f36ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1244f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1243f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1242f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1216f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f25ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1083f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f23ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T866f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T499f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1422f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f37ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1244f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1243f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1242f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1216f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f26ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1083f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f24ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T866f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T499f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1422f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f18ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1244f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1243f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1242f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1216f32(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f32ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1083f30(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f30ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T866f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T499f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1422f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f5ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1244f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1243f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1242f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1216f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1083f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f33ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T866f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T499f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1422f16(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f16ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1244f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1243f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1242f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1216f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1083f35(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f35ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T866f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T499f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1422f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f17ot1(T0* a1, T0** a2);
extern T1 T1422f17ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1244f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1244f25(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1243f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1242f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1216f49(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f49ot1(T0* a1, T0** a2);
extern T1 T1216f49ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1083f41(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f41ot1(T0* a1, T0** a2);
extern T1 T1083f41ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T866f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T499f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1422f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1244f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1243f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1242f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1216f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1083f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T866f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T499f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1422f41(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1244f41(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1243f44(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1242f43(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1216f51(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T1083f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_reference */
extern T1 T866f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T499f39(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T260f71(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T83f167(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T81f72(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1422f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f50ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1244f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1243f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1242f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1216f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f43ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1083f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f57ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_type_with_type_marks */
extern T1 T866f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T499f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T260f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T260f26(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T83f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T81f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1422f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f51ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1244f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1243f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1242f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1216f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f41ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1083f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f45ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T866f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T499f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T260f85(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T260f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T260f21(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T83f69(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T83f83(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T83f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T81f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1422f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f54ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1244f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1243f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1242f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1216f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f42ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1083f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f46ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T866f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T499f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T499f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T260f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T83f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T81f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1422f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f55ot1(T0* a1, T0** a2);
extern T1 T1422f55ot2(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1244f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1243f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1242f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1216f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f55ot1(T0* a1, T0** a2);
extern T1 T1216f55ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1083f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f52ot1(T0* a1, T0** a2);
extern T1 T1083f52ot2(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_base_type_with_type_mark */
extern T0* T866f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T499f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1422f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f56ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1244f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1243f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1242f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1216f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f56ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1083f56(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f56ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T866f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T499f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1422f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f57ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1244f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1243f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1242f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1216f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f44ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1083f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f61ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T866f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T499f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T260f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T83f189(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T81f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1422f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1244f59(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1243f62(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1243f83(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1243f82(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1242f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1242f84(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1242f64(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T1242f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1216f38(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1083f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.type_with_type_mark */
extern T0* T866f57(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.set_like_keyword */
extern void T866f74(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.make */
extern T0* T866c73(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T499f57(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T499f76(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1422f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1244f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1243f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1242f44(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1216f30(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1083f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_base_type */
extern T0* T866f40(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T499f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T260f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T83f168(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T81f73(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1422f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f48ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1244f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1243f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1242f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1216f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f40ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1083f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f44ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T866f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T499f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T260f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T83f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T81f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_separate */
extern T1 T81f26(GE_context* ac, T0* C);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T83f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T81f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1422f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f27ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1244f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1243f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1242f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1216f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f27ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1083f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f25ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T866f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T499f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1422f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f30ot1(T0* a1, T0** a2);
extern T1 T1422f30ot2(T0* a1, T0** a2);
extern T1 T1422f30ot3(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1244f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1243f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1242f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1216f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f24ot1(T0* a1, T0** a2);
extern T1 T1216f24ot2(T0* a1, T0** a2);
extern T1 T1216f24ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1083f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f22ot1(T0* a1, T0** a2);
extern T1 T1083f22ot2(T0* a1, T0** a2);
extern T1 T1083f22ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T866f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T499f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1422f38(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f38ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1244f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1243f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1242f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1216f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f39ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1083f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f37ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T866f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T499f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1422f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f39ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1244f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1243f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1242f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1216f31(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f31ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1083f29(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f29ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T866f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T499f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1422f6(GE_context* ac, T0* C, T0* a1);
extern T1 T1422f6ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1244f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1243f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1242f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1216f36(GE_context* ac, T0* C, T0* a1);
extern T1 T1216f36ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T1083f34(GE_context* ac, T0* C, T0* a1);
extern T1 T1083f34ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T866f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T499f22(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T260f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T83f80(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T81f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1422f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f58ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1244f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1243f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1242f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1242f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1216f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f63ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1083f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f62ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T866f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T499f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T260f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T83f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T81f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1422f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f59ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1244f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1244f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1243f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1243f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1242f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1216f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f64ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1083f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f63ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T866f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T499f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T260f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T83f191(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T81f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1422f53(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1422f53ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1244f54(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1243f57(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1242f56(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1216f66(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1216f66ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T1083f65(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1083f65ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T866f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T499f52(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1422f64(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f64ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1244f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1243f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1242f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1216f71(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f71ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1083f70(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f70ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T866f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T499f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1422f32(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T1244f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T1243f30(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T1242f31(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1216f52(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1083f48(GE_context* ac, T0* C);
/* ET_LIKE_N.has_anchored_type */
extern T1 T866f34(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T499f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T260f65(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T83f159(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T81f66(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1422f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1422f20ot1(T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1244f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1243f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1242f32(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1216f45(GE_context* ac, T0* C, T0* a1);
extern T1 T1216f45ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T1083f42(GE_context* ac, T0* C, T0* a1);
extern T1 T1083f42ot1(T0* a1);
/* ET_LIKE_N.has_formal_types */
extern T1 T866f35(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T499f35(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T260f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T83f160(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T81f67(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1422f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1244f38(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1243f41(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1242f40(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1216f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1083f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.depends_on_qualified_anchored_type */
extern T1 T866f36(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T499f36(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T260f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T83f162(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T81f68(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1422f46(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1422f61(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1422f61ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1244f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1244f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1243f50(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1243f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1242f49(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1242f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1216f59(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1216f62(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1216f62ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1083f55(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1083f60(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1083f60ot1(T0* a1, T0** a2);
/* ET_LIKE_N.resolved_formal_parameters */
extern T0* T866f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type_mark */
extern T0* T866f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T499f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T499f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T260f76(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T260f84(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T260f10(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T260f22(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T83f176(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T83f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T83f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T83f85(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T81f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T81f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T81f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T81f27(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1422f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1244f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1243f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1242f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1216f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1083f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_syntactical_type */
extern T1 T866f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T499f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T260f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T83f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T81f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1422f60(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1244f64(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1243f67(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1242f67(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1216f65(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1083f64(GE_context* ac, T0* C);
/* ET_LIKE_N.has_identifier_anchored_type */
extern T1 T866f61(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T499f62(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T260f95(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T83f192(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T81f97(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1422f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1244f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1243f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1242f29(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1216f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1083f19(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable */
extern T1 T866f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T499f16(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T260f42(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T83f115(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T81f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1422f25(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1244f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1243f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1242f26(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1216f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1083f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded */
extern T1 T866f19(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T499f8(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T260f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T83f55(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T81f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1422f52(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1244f53(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1243f56(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1242f55(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1216f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T1083f67(GE_context* ac, T0* C);
/* ET_LIKE_N.is_named_type */
extern T1 T866f51(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T499f51(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T260f86(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T81f87(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1422f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1244f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1243f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1242f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1216f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T1083f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_named_type */
extern T1 T866f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T499f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1422f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1244f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1243f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1242f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1216f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1083f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.conforms_to_type */
extern T1 T866f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T499f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1422f63(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1244f66(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1243f69(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1242f69(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1216f70(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T1083f69(GE_context* ac, T0* C);
/* ET_LIKE_N.is_base_type */
extern T1 T866f63(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T499f64(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T260f96(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T83f198(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T81f99(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1422f34(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1244f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1243f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1242f33(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1216f46(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T1083f38(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T866f29(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T499f20(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T260f49(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T83f116(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T81f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1422f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1244f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1243f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1242f45(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1216f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1083f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T866f41(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T499f41(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T260f73(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T83f169(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T81f74(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1422f45(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1244f44(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1243f47(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1242f46(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1216f48(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T1083f40(GE_context* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T866f42(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T260f75(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T83f171(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T81f82(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1422f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f62ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T81f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1244f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1243f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1242f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1216f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f69ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1083f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f68ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T866f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T499f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1422f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1244f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1243f10(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1242f10(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1216f58(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T1083f53(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T866f5(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T499f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1422f66(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1244f70(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1243f73(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1242f74(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T499f68(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T260f101(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T83f206(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T81f105(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1422f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1422f21ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1244f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1243f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1242f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1216f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1216f33ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1083f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1083f31ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T866f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T499f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1422f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1244f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1243f24(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1242f25(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1216f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T1083f13(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_class */
extern T0* T866f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T499f7(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T260f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T83f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T81f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1422f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1244f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1243f11(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1242f11(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1216f67(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T1083f66(GE_context* ac, T0* C);
/* ET_LIKE_N.position */
extern T0* T866f17(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T499f33(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T260f64(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T83f158(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T81f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T368f44(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T367f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T365f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T368f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T367f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T365f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1229f46(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1229f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1228f46(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1228f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T1227f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T1227f98(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T368f43(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T368f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T367f43(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T367f90(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T365f43(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T365f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T336f52(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T336f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T259f51(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T259f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1228f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T1227f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T368f56(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T367f56(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T365f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T336f55(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T259f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1229f40(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1228f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T1227f40(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T368f23(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T367f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T365f58(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T336f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T259f56(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1229f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1228f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T1227f41(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T368f24(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T367f58(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T365f25(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T336f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T259f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1229f43(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1228f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1227f42(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T368f25(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T367f25(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T365f26(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T336f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T259f60(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1229f38(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1228f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T1227f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T259f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1229f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1228f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T1227f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T368f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T367f52(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T365f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T336f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T259f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1229f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T1227f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T368f26(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T367f26(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T365f27(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T336f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T259f61(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1229f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1228f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1227f32(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T368f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T367f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T336f48(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T259f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1229f33(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1228f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1227f33(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T368f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T365f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T336f49(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T259f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1229f34(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1228f34(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T1227f34(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T368f40(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T367f41(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T365f42(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T336f44(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T259f45(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1229f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1228f48(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T1227f48(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T368f27(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T367f40(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T365f41(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T336f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T259f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T368f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T367f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T365f50(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T336f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1229f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1228f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T1227f36(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T368f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T367f27(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T365f46(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T336f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T259f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1229f69(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1229f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1228f71(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1228f73(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T1227f70(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1227f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T368f66(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T368f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T367f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T367f70(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T365f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T365f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T336f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T336f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T259f75(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T259f77(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1229f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T1228f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T1227f35(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T368f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T367f50(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T365f51(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T336f51(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T259f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1229f70(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1228f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1227f71(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T368f67(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T367f69(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T365f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T336f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T259f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1229f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T1007f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_ancestor */
extern T1 T83f204(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T399f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T468f8(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1228f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T1227f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T368f63(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T367f65(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T365f65(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T336f66(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T259f72(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1229f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1228f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T1227f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T368f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T367f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T365f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T336f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T259f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1229f47(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1228f47(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T1227f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T367f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T365f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T259f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1229f45(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1228f45(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T1227f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T368f42(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T367f42(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T365f28(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T336f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T259f49(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1232f34(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1232f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1231f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1231f98(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T530f41(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T530f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T521f30(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T521f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1232f43(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1231f31(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T530f29(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T521f43(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1232f35(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1231f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T521f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1232f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1231f35(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T530f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T521f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1232f37(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1231f36(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T530f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T521f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1232f44(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1231f41(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T530f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T521f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1232f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1232f76(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1231f70(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1231f72(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T530f68(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T530f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T521f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T521f71(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1232f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T1231f32(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T530f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T521f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1232f75(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1231f71(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T530f69(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T521f70(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1232f41(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1231f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T530f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T521f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1232f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_creation_exported_to */
extern T1 T83f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T831f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_exported_to */
extern T1 T1038f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1231f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T530f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T521f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1232f71(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1231f67(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T530f65(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T521f66(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1234f9(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T1233f9(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T181f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T1235f8(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T830f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T181f51(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T1235f76(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1234f63(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T1233f62(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T830f63(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T181f91(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T1235f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T1233f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T1235f6(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1234f6(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T1233f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T830f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T181f40(GE_context* ac, T0* C, T0* a1);
extern T1 T181f40ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.is_argument */
extern T1 T1235f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1234f51(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T1233f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T830f49(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T181f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T1235f63(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1234f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T1233f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T830f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T181f70(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T1235f64(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T1234f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T1233f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T830f51(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T181f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T1235f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T1234f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T1233f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T830f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T181f71(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T1235f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1234f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T1233f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T830f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T181f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T1235f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1234f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T1233f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T830f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T181f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T1235f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1234f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T1233f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T830f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T181f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T1235f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1234f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T1233f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T830f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T181f73(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T1235f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T1234f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T1233f7(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T830f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T181f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T1235f42(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1234f21(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T1233f28(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T830f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T181f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T1235f5(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T1234f31(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T1233f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T830f12(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T1235f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1234f16(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T1233f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T830f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T181f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T1235f77(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1234f64(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T1233f63(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T830f64(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T181f96(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T520f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T519f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T322f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_tuple */
extern T1 T238f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T520f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T519f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T322f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T305f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T238f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T520f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T519f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T322f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T305f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T238f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T520f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T519f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T322f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T305f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T238f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T520f24(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T519f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T322f22(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T305f49(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T238f36(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T520f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T519f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T305f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T238f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T520f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T308f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T308f15(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T308f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T308f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T308f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T520f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T308c10(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T519f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T519f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T237f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T80f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1405c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T519f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T519f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T322f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T322f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T322f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T322f40p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T305f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T305f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T237f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T80f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T305f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T305f40p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T238f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T238f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T520f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T520f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T520f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T247f36(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T520f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T520f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T519f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T519f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T519f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T322f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T322f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T322f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T322f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T305f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T305f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T305f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T237f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T80f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge824os3410;
extern T0* ge824ov3410;
extern T0* T82f86(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T305f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T238f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T238f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T238f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T520f34(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T519f35(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T322f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T305f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T238f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T322f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T305f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T238f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T520f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T519f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T322f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T305f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T238f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T520f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T519f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T322f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T305f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T238f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T520f25(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T519f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T322f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T305f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T238f28(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T520f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T519f39(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T322f29(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T305f29(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T238f30(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.to_text */
extern T0* T1279f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1279f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1279f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1279f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1279f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1279f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1279f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T954f67(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T954f74(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T954f70(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T648f73(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T648f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T648f97(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T400f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T400f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T400f34(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T350f66(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T350f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T350f69(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T285f21(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T285f38(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T285f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T181f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T181f123(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T181f85(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T179f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T179f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T179f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1796f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1211f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1210f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1209f7(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1208f7(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1206f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1205f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1204f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1203f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1202f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1201f9(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T1200f9(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1199f9(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1198f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1197f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T954f63(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T946f7(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T943f19(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T940f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T930f6(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T924f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T906f13(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T903f12(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T829f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T648f18(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T400f26(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T350f18(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T312f11(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T285f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T181f47(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T179f8(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1796f30(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1211f6(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1210f6(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1209f5(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1208f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1206f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1205f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1204f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1203f17(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1202f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1201f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T1200f17(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1199f7(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1198f14(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1197f24(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T954f64(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T946f5(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T943f17(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T940f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T930f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T924f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T906f11(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T903f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T829f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T648f16(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T400f27(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T350f19(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T312f9(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T285f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T181f25(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T179f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1796f31(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1211f7(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1210f7(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1209f6(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1208f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1206f8(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1205f8(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1204f49(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1203f49(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1202f49(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1201f49(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T1200f49(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1199f8(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1198f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1197f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T954f65(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T946f6(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T943f18(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T940f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T930f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T924f20(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T906f12(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T903f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T829f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T648f17(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T400f28(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T350f20(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T312f10(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T285f12(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T181f26(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T179f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T844f27(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T844f15(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T844c79(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T844f99(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f13(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T844f50(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f20(GE_context* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T260f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T83f195(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T81f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T260f14(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T83f62(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T81f21(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T83f123(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T83f77(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T81f17(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T260f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T83f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T81f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T260f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T83f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T81f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T260f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T83f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T81f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T260f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T83f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T81f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T260f41(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T83f114(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T81f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T260f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T83f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T81f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T260f15(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T83f111(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T81f29(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T260f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T83f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T81f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T260f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T83f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T81f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T260f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T83f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T81f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T260f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T83f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforming_ancestor */
extern T0* T83f70(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T81f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T260f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1696f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T251f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T83f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T81f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T260f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T83f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T81f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T260f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T83f120(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T81f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T260f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T83f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T81f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T260f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T83f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T81f80(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T260f48(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T83f119(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T81f45(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T260f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T83f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T81f37(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.to_text */
extern T0* T260f37(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T83f98(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T81f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T260f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T83f165(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T81f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T260f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f166(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T260f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T83f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T81f78(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T260f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T83f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T81f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T260f97(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T83f201(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T81f100(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T260f81(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T260f81ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T83f173(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T81f77(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T81f77ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T260f13(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T83f94(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T81f84(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T260f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T83f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T81f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T260f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T83f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T81f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T260f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_to_type */
extern T1 T83f124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T81f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T183f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T183f2(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T145f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T59f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T59f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T844f64(GE_context* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T58f2(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1825f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T1825f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1825f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1825f4(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T1775f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T1775f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T1775f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T1775f9(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T1753f5(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T1753f3(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T1753f6(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T1753f4(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T1752f5(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T1752f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T1752f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T1752f4(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T1751f5(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T1751f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T1751f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T1751f4(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T1750f5(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T1750f3(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T1750f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T1750f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T1749f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T1749f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T1749f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T1749f4(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1748f5(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T1748f3(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1748f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1748f4(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T1747f5(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T1747f3(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T1747f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T1747f4(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T1746f5(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T1746f3(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T1746f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T1746f4(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1683f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1683f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1683f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1683f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1546f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1546f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1546f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1546f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1545f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1545f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1545f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1545f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1389f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1389f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1389f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1389f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1334f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1334f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1334f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1334f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1333f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1333f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1333f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1333f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T778f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T778f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T778f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T778f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T777f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T777f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T777f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T777f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T776f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T776f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T776f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T776f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T775f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T775f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T775f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T775f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T774f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T774f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T774f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T774f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T773f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T773f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T773f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T773f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T772f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T772f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T772f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T772f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T771f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T771f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T771f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T771f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T529f35(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T529f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T529f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T529f34(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T528f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T528f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T528f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T528f9(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T527f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T527f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T527f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T527f9(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T431f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T431f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T431f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T431f4(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T430f5(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T430f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T430f6(GE_context* ac, T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T430f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T429f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T429f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T429f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T428f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T428f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T428f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T428f4(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T427f5(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T427f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T427f6(GE_context* ac, T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T427f4(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T426f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T426f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T426f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T426f4(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T307f3(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T307f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T307f7(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T307f6(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T168f5(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T168f3(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T168f6(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T168f4(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T88f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T88f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T88f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T88f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T87f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T87f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T87f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T87f6(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T41f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T41f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T41f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T41f19(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T51f11(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T47f15(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T46f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T45f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T44f17(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T42f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T47f14(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T46f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T45f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T44f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T51f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T47f13(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T46f16(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T45f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T44f15(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T42f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T51f12(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T42f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T51f13(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T47f16(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T46f13(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T45f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T44f13(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T42f12(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T51f14(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T47f17(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T46f19(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T45f17(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T44f19(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T42f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T51f19(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T47f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T46f22(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T45f25(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T44f24(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T42f16(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T845f6(GE_context* ac, T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1455f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T845f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T30f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T898f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T887f5(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T845f7(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T30f38(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T898f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T887f11(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CONSOLE.read_stream */
extern void T863f30(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T863f33(GE_context* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T534f15(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T863f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern unsigned char ge1456os4980;
extern T0* ge1456ov4980;
extern T0* T863f16(GE_context* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T887f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T845f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T845f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T30f37(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge254os4735;
extern T0* ge254ov4735;
extern T0* T30f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T30f45(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge269os4710;
extern T0* ge269ov4710;
extern T0* T898f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T845f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.stop_requested */
extern T1 T71f177(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.stop_requested */
extern T1 T65f179(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.stop_requested */
extern T1 T62f168(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T71f179(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T781c3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.dotnet_assembly_consumer */
extern T0* T65f188(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T62f160(GE_context* ac, T0* C);
/* ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T34f153(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.is_ise */
extern T1 T71f165(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.is_ise */
extern T1 T65f172(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.is_ise */
extern T1 T62f176(GE_context* ac, T0* C);
/* ET_SYSTEM.is_ise */
extern T1 T34f156(GE_context* ac, T0* C);
extern T0* GE_ma713(T6 c, T6 n, ...);
extern T0* GE_ma142(T6 c, T6 n, ...);
extern T0* GE_ma517(T6 c, T6 n, ...);
extern T0* GE_ma262(T6 c, T6 n, ...);
extern T0* GE_ma554(T6 c, T6 n, ...);
extern T0* GE_mt28(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt193();
extern T0* GE_mt1727(T0* a1, T0* a2, T8 a3);
extern T0* GE_mt477(T0* a1);
extern T0* ge267ov4710;
extern T0* ge266ov5877;
extern T0* ge224ov3042;
extern T0* ge164ov5883;
extern T0* ge330ov20619;
extern T0* ge320ov20564;
extern T0* ge268ov5877;
extern T0* ge1042ov16417;
extern T0* ge1042ov16424;
extern T0* ge1042ov16423;
extern T0* ge1042ov16422;
extern T0* ge252ov4755;
extern T0* ge253ov2943;
extern T0* ge1042ov16418;
extern T0* ge1042ov16420;
extern T0* ge1042ov16377;
extern T0* ge251ov20120;
extern T0* ge251ov20121;
extern T0* ge1755ov23666;
extern T0* ge1755ov23651;
extern T0* ge1755ov23644;
extern T0* ge1755ov23629;
extern T0* ge1755ov23654;
extern T0* ge1755ov23647;
extern T0* ge1755ov23655;
extern T0* ge1755ov23664;
extern T0* ge1755ov23657;
extern T0* ge1755ov23653;
extern T0* ge1755ov23641;
extern T0* ge1755ov23642;
extern T0* ge1755ov23656;
extern T0* ge1755ov23643;
extern T0* ge1755ov23630;
extern T0* ge1755ov23631;
extern T0* ge1755ov23632;
extern T0* ge1755ov23638;
extern T0* ge1755ov23640;
extern T0* ge1755ov23635;
extern T0* ge1755ov23660;
extern T0* ge1755ov23659;
extern T0* ge1755ov23636;
extern T0* ge1755ov23637;
extern T0* ge1755ov23634;
extern T0* ge1755ov23633;
extern T0* ge1751ov23421;
extern T0* ge1042ov16419;
extern T0* ge1042ov16421;
extern T0* ge1042ov16101;
extern T0* ge1042ov16137;
extern T0* ge1042ov16110;
extern T0* ge1042ov16105;
extern T0* ge1042ov16136;
extern T0* ge1042ov16360;
extern T0* ge1042ov16364;
extern T0* ge1042ov16361;
extern T0* ge1042ov16363;
extern T0* ge1042ov16362;
extern T0* ge1042ov16365;
extern T0* ge1042ov16367;
extern T0* ge1042ov16366;
extern T0* ge1042ov16368;
extern T0* ge1035ov10585;
extern T0* ge1035ov10584;
extern T0* ge1035ov10583;
extern T0* ge824ov4135;
extern T0* ge271ov20057;
extern T0* ge271ov20058;
extern T0* ge259ov20248;
extern T0* ge259ov20247;
extern T0* ge274ov20057;
extern T0* ge274ov20058;
extern T0* ge252ov4757;
extern T0* ge1042ov16183;
extern T0* ge1042ov16404;
extern T0* ge1042ov16189;
extern T0* ge1042ov16090;
extern T0* ge1042ov16405;
extern T0* ge1042ov16260;
extern T0* ge1042ov16259;
extern T0* ge1042ov16212;
extern T0* ge1042ov16310;
extern T0* ge1042ov16373;
extern T0* ge1042ov16145;
extern T0* ge1042ov16399;
extern T0* ge1042ov16191;
extern T0* ge1042ov16168;
extern T0* ge1042ov16092;
extern T0* ge1042ov16369;
extern T0* ge1042ov16166;
extern T0* ge824ov4106;
extern T0* ge824ov4126;
extern T0* ge1042ov16143;
extern T0* ge1042ov16335;
extern T0* ge1042ov16139;
extern T0* ge1042ov16357;
extern T0* ge1042ov16111;
extern T0* ge1042ov16138;
extern T0* ge1042ov16394;
extern T0* ge1042ov16356;
extern T0* ge1042ov16354;
extern T0* ge1042ov16355;
extern T0* ge1042ov16350;
extern T0* ge1042ov16337;
extern T0* ge1042ov16338;
extern T0* ge1042ov16339;
extern T0* ge1042ov16342;
extern T0* ge1042ov16343;
extern T0* ge1042ov16344;
extern T0* ge1042ov16345;
extern T0* ge1042ov16346;
extern T0* ge1042ov16347;
extern T0* ge1042ov16348;
extern T0* ge1042ov16349;
extern T0* ge1042ov16351;
extern T0* ge1042ov16352;
extern T0* ge1042ov16353;
extern T0* ge1042ov16341;
extern T0* ge1042ov16340;
extern T0* ge1042ov16400;
extern T0* ge824ov3957;
extern T0* ge1042ov16150;
extern T0* ge1042ov16140;
extern T0* ge1042ov16413;
extern T0* ge1042ov16211;
extern T0* ge1042ov16187;
extern T0* ge1042ov16186;
extern T0* ge1042ov16403;
extern T0* ge1042ov16097;
extern T0* ge1042ov16188;
extern T0* ge1042ov16372;
extern T0* ge1042ov16144;
extern T0* ge1042ov16371;
extern T0* ge1042ov16387;
extern T0* ge1042ov16374;
extern T0* ge1042ov16158;
extern T0* ge1042ov16159;
extern T0* ge1042ov16388;
extern T0* ge1042ov16154;
extern T0* ge824ov4109;
extern T0* ge1042ov16246;
extern T0* ge1042ov16163;
extern T0* ge1042ov16243;
extern T0* ge1042ov16094;
extern T0* ge1042ov16100;
extern T0* ge1042ov16279;
extern T0* ge1042ov16198;
extern T0* ge1042ov16122;
extern T0* ge1042ov16359;
extern T0* ge1042ov16358;
extern T0* ge1042ov16334;
extern T0* ge1042ov16333;
extern T0* ge1042ov16332;
extern T0* ge1042ov16331;
extern T0* ge1042ov16330;
extern T0* ge1042ov16329;
extern T0* ge1042ov16328;
extern T0* ge1042ov16327;
extern T0* ge1042ov16326;
extern T0* ge1042ov16325;
extern T0* ge1042ov16324;
extern T0* ge1042ov16323;
extern T0* ge1042ov16322;
extern T0* ge1042ov16321;
extern T0* ge1042ov16320;
extern T0* ge1042ov16319;
extern T0* ge1042ov16318;
extern T0* ge1042ov16317;
extern T0* ge1042ov16316;
extern T0* ge1042ov16315;
extern T0* ge1042ov16314;
extern T0* ge1042ov16313;
extern T0* ge1042ov16312;
extern T0* ge1042ov16311;
extern T0* ge1042ov16309;
extern T0* ge1042ov16308;
extern T0* ge1042ov16307;
extern T0* ge1042ov16306;
extern T0* ge1042ov16305;
extern T0* ge1042ov16304;
extern T0* ge1042ov16244;
extern T0* ge1042ov16242;
extern T0* ge1042ov16190;
extern T0* ge1042ov16273;
extern T0* ge1042ov16174;
extern T0* ge1042ov16155;
extern T0* ge1042ov16401;
extern T0* ge1042ov16206;
extern T0* ge1042ov16407;
extern T0* ge1042ov16229;
extern T0* ge1042ov16226;
extern T0* ge1042ov16290;
extern T0* ge1042ov16298;
extern T0* ge1042ov16289;
extern T0* ge1042ov16297;
extern T0* ge1042ov16288;
extern T0* ge1042ov16296;
extern T0* ge1042ov16278;
extern T0* ge1042ov16102;
extern T0* ge1042ov16287;
extern T0* ge1042ov16295;
extern T0* ge1042ov16286;
extern T0* ge1042ov16294;
extern T0* ge1042ov16285;
extern T0* ge1042ov16293;
extern T0* ge1042ov16205;
extern T0* ge1042ov16176;
extern T0* ge1042ov16098;
extern T0* ge1042ov16108;
extern T0* ge1042ov16132;
extern T0* ge1042ov16130;
extern T0* ge1042ov16121;
extern T0* ge1042ov16120;
extern T0* ge1042ov16119;
extern T0* ge1042ov16118;
extern T0* ge1042ov16117;
extern T0* ge1042ov16225;
extern T0* ge1042ov16115;
extern T0* ge1042ov16133;
extern T0* ge1042ov16107;
extern T0* ge1042ov16104;
extern T0* ge1042ov16151;
extern T0* ge1042ov16193;
extern T0* ge1042ov16192;
extern T0* ge1042ov16336;
extern T0* ge1042ov16269;
extern T0* ge1042ov16300;
extern T0* ge1042ov16299;
extern T0* ge1042ov16292;
extern T0* ge1042ov16291;
extern T0* ge1042ov16284;
extern T0* ge1042ov16283;
extern T0* ge1042ov16280;
extern T0* ge1042ov16281;
extern T0* ge1042ov16277;
extern T0* ge1042ov16276;
extern T0* ge1042ov16275;
extern T0* ge1042ov16395;
extern T0* ge1042ov16274;
extern T0* ge1042ov16267;
extern T0* ge1042ov16266;
extern T0* ge1042ov16263;
extern T0* ge1042ov16261;
extern T0* ge1042ov16258;
extern T0* ge1042ov16257;
extern T0* ge1042ov16256;
extern T0* ge1042ov16255;
extern T0* ge1042ov16254;
extern T0* ge1042ov16253;
extern T0* ge1042ov16252;
extern T0* ge1042ov16251;
extern T0* ge1042ov16239;
extern T0* ge1042ov16240;
extern T0* ge1042ov16236;
extern T0* ge1042ov16238;
extern T0* ge1042ov16237;
extern T0* ge1042ov16235;
extern T0* ge1042ov16233;
extern T0* ge1042ov16234;
extern T0* ge1042ov16232;
extern T0* ge1042ov16231;
extern T0* ge1042ov16230;
extern T0* ge1042ov16228;
extern T0* ge1042ov16227;
extern T0* ge1042ov16224;
extern T0* ge1042ov16223;
extern T0* ge1042ov16222;
extern T0* ge1042ov16221;
extern T0* ge1042ov16220;
extern T0* ge1042ov16219;
extern T0* ge1042ov16218;
extern T0* ge1042ov16217;
extern T0* ge1042ov16209;
extern T0* ge1042ov16207;
extern T0* ge1042ov16204;
extern T0* ge1042ov16203;
extern T0* ge1042ov16202;
extern T0* ge1042ov16201;
extern T0* ge1042ov16200;
extern T0* ge1042ov16208;
extern T0* ge1042ov16271;
extern T0* ge1042ov16270;
extern T0* ge1042ov16268;
extern T0* ge1042ov16182;
extern T0* ge1042ov16181;
extern T0* ge1042ov16180;
extern T0* ge1042ov16179;
extern T0* ge1042ov16178;
extern T0* ge1042ov16177;
extern T0* ge1042ov16165;
extern T0* ge1042ov16164;
extern T0* ge1042ov16162;
extern T0* ge1042ov16272;
extern T0* ge1042ov16210;
extern T0* ge1042ov16170;
extern T0* ge1042ov16169;
extern T0* ge1042ov16173;
extern T0* ge1042ov16172;
extern T0* ge1042ov16171;
extern T0* ge1042ov16175;
extern T0* ge1042ov16241;
extern T0* ge1042ov16161;
extern T0* ge1042ov16160;
extern T0* ge1042ov16386;
extern T0* ge1042ov16245;
extern T0* ge1042ov16396;
extern T0* ge1042ov16389;
extern T0* ge1042ov16390;
extern T0* ge1042ov16091;
extern T0* ge1042ov16391;
extern T0* ge1042ov16146;
extern T0* ge1042ov16141;
extern T0* ge1042ov16167;
extern T0* ge824ov3761;
extern T0* ge824ov3785;
extern T0* ge824ov3827;
extern T0* ge1042ov16095;
extern T0* ge1042ov16096;
extern T0* ge824ov3796;
extern T0* ge1042ov16378;
extern T0* ge1042ov16156;
extern T0* ge1042ov16157;
extern T0* ge1042ov16282;
extern T0* ge1042ov16262;
extern T0* ge1042ov16265;
extern T0* ge1042ov16264;
extern T0* ge1042ov16103;
extern T0* ge1042ov16402;
extern T0* ge1042ov16409;
extern T0* ge1042ov16152;
extern T0* ge1042ov16410;
extern T0* ge1042ov16393;
extern T0* ge1042ov16408;
extern T0* ge1042ov16128;
extern T0* ge1042ov16127;
extern T0* ge1042ov16126;
extern T0* ge1042ov16125;
extern T0* ge1042ov16116;
extern T0* ge1042ov16114;
extern T0* ge1042ov16113;
extern T0* ge1042ov16109;
extern T0* ge824ov3757;
extern T0* ge1042ov16131;
extern T0* ge824ov3786;
extern T0* ge1042ov16124;
extern T0* ge824ov3776;
extern T0* ge1042ov16112;
extern T0* ge824ov3764;
extern T0* ge1042ov16142;
extern T0* ge824ov3799;
extern T0* ge1042ov16106;
extern T0* ge824ov3752;
extern T0* ge824ov3773;
extern T0* ge824ov3772;
extern T0* ge824ov3756;
extern T0* ge824ov3794;
extern T0* ge824ov3748;
extern T0* ge824ov3750;
extern T0* ge824ov3798;
extern T0* ge824ov3797;
extern T0* ge824ov3790;
extern T0* ge824ov3789;
extern T0* ge824ov3784;
extern T0* ge824ov3783;
extern T0* ge824ov3788;
extern T0* ge824ov3787;
extern T0* ge824ov3780;
extern T0* ge824ov3779;
extern T0* ge824ov3778;
extern T0* ge824ov3777;
extern T0* ge824ov3768;
extern T0* ge824ov3767;
extern T0* ge824ov3766;
extern T0* ge824ov3765;
extern T0* ge824ov3754;
extern T0* ge824ov3753;
extern T0* ge824ov3751;
extern T0* ge824ov4124;
extern T0* ge824ov3800;
extern T0* ge1041ov9718;
extern T0* ge1041ov9445;
extern T0* ge1041ov9275;
extern T0* ge1039ov8736;
extern T0* ge1039ov8730;
extern T0* ge1039ov8724;
extern T0* ge1039ov8732;
extern T0* ge1039ov8726;
extern T0* ge1039ov8720;
extern T0* ge1039ov8735;
extern T0* ge1039ov8729;
extern T0* ge1039ov8723;
extern T0* ge1039ov8737;
extern T0* ge1039ov8731;
extern T0* ge1039ov8725;
extern T0* ge824ov3856;
extern T0* ge1039ov8734;
extern T0* ge1039ov8728;
extern T0* ge1039ov8722;
extern T0* ge824ov4048;
extern T0* ge824ov3905;
extern T0* ge1041ov9740;
extern T0* ge1041ov9463;
extern T0* ge1041ov9297;
extern T0* ge1041ov9738;
extern T0* ge1041ov9461;
extern T0* ge1041ov9295;
extern T0* ge824ov4078;
extern T0* ge824ov4038;
extern T0* ge824ov3844;
extern T0* ge824ov4089;
extern T0* ge824ov4002;
extern T0* ge824ov4104;
extern T0* ge824ov3962;
extern T0* ge824ov3803;
extern T0* ge824ov3828;
extern T0* ge1041ov9737;
extern T0* ge1041ov9460;
extern T0* ge1041ov9294;
extern T0* ge1041ov9735;
extern T0* ge1041ov9458;
extern T0* ge1041ov9292;
extern T0* ge1041ov9736;
extern T0* ge1041ov9459;
extern T0* ge1041ov9293;
extern T0* ge824ov3851;
extern T0* ge1039ov8733;
extern T0* ge1039ov8727;
extern T0* ge1039ov8721;
extern T0* ge824ov4130;
extern T0* ge824ov4254;
extern T0* ge824ov4238;
extern T0* ge824ov3791;
extern T0* ge824ov3792;
extern T0* ge824ov4251;
extern T0* ge824ov4252;
extern T0* ge824ov4245;
extern T0* ge824ov4248;
extern T0* ge824ov4240;
extern T0* ge824ov4243;
extern T0* ge824ov4239;
extern T0* ge824ov4253;
extern T0* ge824ov4236;
extern T0* ge824ov4237;
extern T0* ge824ov4152;
extern T0* ge824ov4131;
extern T0* ge824ov3795;
extern T0* ge824ov4148;
extern T0* ge824ov3793;
extern T0* ge824ov3781;
extern T0* ge824ov3770;
extern T0* ge824ov3763;
extern T0* ge824ov3759;
extern T0* ge824ov3758;
extern T0* ge824ov4172;
extern T0* ge1135ov13058;
extern T0* ge1132ov22376;
extern T0* ge1132ov22288;
extern T0* ge1132ov22426;
extern T0* ge1132ov22338;
extern T0* ge1135ov13066;
extern T0* ge1135ov13037;
extern T0* ge1135ov13038;
extern T0* ge1135ov13060;
extern T0* ge1124ov13498;
extern T0* ge1124ov13499;
extern T0* ge1124ov13500;
extern T0* ge1132ov22425;
extern T0* ge1132ov22337;
extern T0* ge1135ov13062;
extern T0* ge1135ov13045;
extern T0* ge1135ov13059;
extern T0* ge1135ov13040;
extern T0* ge1132ov22419;
extern T0* ge1132ov22331;
extern T0* ge1132ov22418;
extern T0* ge1132ov22330;
extern T0* ge1132ov22427;
extern T0* ge1132ov22339;
extern T0* ge1135ov13022;
extern T0* ge1135ov13050;
extern T0* ge1135ov13039;
extern T0* ge1135ov13019;
extern T0* ge1135ov13035;
extern T0* ge1135ov13031;
extern T0* ge1135ov13032;
extern T0* ge1135ov13033;
extern T0* ge1135ov13056;
extern T0* ge1135ov13064;
extern T0* ge1135ov13057;
extern T0* ge1135ov13049;
extern T0* ge1135ov13063;
extern T0* ge1132ov22463;
extern T0* ge1132ov22375;
extern T0* ge1132ov22462;
extern T0* ge1132ov22374;
extern T0* ge1132ov22461;
extern T0* ge1132ov22373;
extern T0* ge1132ov22460;
extern T0* ge1132ov22372;
extern T0* ge1132ov22423;
extern T0* ge1132ov22335;
extern T0* ge1132ov22422;
extern T0* ge1132ov22334;
extern T0* ge1132ov22421;
extern T0* ge1132ov22333;
extern T0* ge1132ov22420;
extern T0* ge1132ov22332;
extern T0* ge1135ov13018;
extern T0* ge1135ov13021;
extern T0* ge1135ov13034;
extern T0* ge1132ov22431;
extern T0* ge1132ov22343;
extern T0* ge1132ov22430;
extern T0* ge1132ov22342;
extern T0* ge1132ov22429;
extern T0* ge1132ov22341;
extern T0* ge1132ov22428;
extern T0* ge1132ov22340;
extern T0* ge1138ov13017;
extern T0* ge1138ov13016;
extern T0* ge1135ov13047;
extern T0* ge1135ov13025;
extern T0* ge1135ov13051;
extern T0* ge1135ov13020;
extern T0* ge1135ov13044;
extern T0* ge1135ov13024;
extern T0* ge1135ov13027;
extern T0* ge1135ov13028;
extern T0* ge1135ov13026;
extern T0* ge1135ov13065;
extern T0* ge1135ov13041;
extern T0* ge1135ov13042;
extern T0* ge1135ov13061;
extern T0* ge1135ov13023;
extern T0* ge1135ov13043;
extern T0* ge1132ov22412;
extern T0* ge1132ov22324;
extern T0* ge1132ov22411;
extern T0* ge1132ov22323;
extern T0* ge1132ov22410;
extern T0* ge1132ov22322;
extern T0* ge1132ov22409;
extern T0* ge1132ov22321;
extern T0* ge1132ov22408;
extern T0* ge1132ov22320;
extern T0* ge1135ov13030;
extern T0* ge1132ov22394;
extern T0* ge1132ov22306;
extern T0* ge1132ov22395;
extern T0* ge1132ov22307;
extern T0* ge1132ov22393;
extern T0* ge1132ov22305;
extern T0* ge1132ov22392;
extern T0* ge1132ov22304;
extern T0* ge1132ov22391;
extern T0* ge1132ov22303;
extern T0* ge1132ov22390;
extern T0* ge1132ov22302;
extern T0* ge1132ov22399;
extern T0* ge1132ov22311;
extern T0* ge1132ov22398;
extern T0* ge1132ov22310;
extern T0* ge1132ov22397;
extern T0* ge1132ov22309;
extern T0* ge1132ov22396;
extern T0* ge1132ov22308;
extern T0* ge1132ov22459;
extern T0* ge1132ov22371;
extern T0* ge1132ov22458;
extern T0* ge1132ov22370;
extern T0* ge1132ov22457;
extern T0* ge1132ov22369;
extern T0* ge1132ov22456;
extern T0* ge1132ov22368;
extern T0* ge1132ov22401;
extern T0* ge1132ov22313;
extern T0* ge1132ov22400;
extern T0* ge1132ov22312;
extern T0* ge1132ov22383;
extern T0* ge1132ov22295;
extern T0* ge1132ov22384;
extern T0* ge1132ov22296;
extern T0* ge1132ov22382;
extern T0* ge1132ov22294;
extern T0* ge1132ov22381;
extern T0* ge1132ov22293;
extern T0* ge1132ov22404;
extern T0* ge1132ov22316;
extern T0* ge1132ov22405;
extern T0* ge1132ov22317;
extern T0* ge1132ov22403;
extern T0* ge1132ov22315;
extern T0* ge1132ov22402;
extern T0* ge1132ov22314;
extern T0* ge1132ov22442;
extern T0* ge1132ov22354;
extern T0* ge1132ov22441;
extern T0* ge1132ov22353;
extern T0* ge1132ov22440;
extern T0* ge1132ov22352;
extern T0* ge1132ov22439;
extern T0* ge1132ov22351;
extern T0* ge1132ov22438;
extern T0* ge1132ov22350;
extern T0* ge1132ov22437;
extern T0* ge1132ov22349;
extern T0* ge1135ov13029;
extern T0* ge1135ov13036;
extern T0* ge1135ov13053;
extern T0* ge1135ov13052;
extern T0* ge1135ov13055;
extern T0* ge1135ov13048;
extern T0* ge1135ov13046;
extern T0* ge1132ov22447;
extern T0* ge1132ov22359;
extern T0* ge1132ov22446;
extern T0* ge1132ov22358;
extern T0* ge1132ov22445;
extern T0* ge1132ov22357;
extern T0* ge1132ov22444;
extern T0* ge1132ov22356;
extern T0* ge1132ov22443;
extern T0* ge1132ov22355;
extern T0* ge1132ov22451;
extern T0* ge1132ov22363;
extern T0* ge1132ov22455;
extern T0* ge1132ov22367;
extern T0* ge1132ov22454;
extern T0* ge1132ov22366;
extern T0* ge1132ov22453;
extern T0* ge1132ov22365;
extern T0* ge1132ov22452;
extern T0* ge1132ov22364;
extern T0* ge1132ov22450;
extern T0* ge1132ov22362;
extern T0* ge1132ov22380;
extern T0* ge1132ov22292;
extern T0* ge1132ov22379;
extern T0* ge1132ov22291;
extern T0* ge1132ov22378;
extern T0* ge1132ov22290;
extern T0* ge1132ov22377;
extern T0* ge1132ov22289;
extern T0* ge1135ov13054;
extern T0* ge1132ov22449;
extern T0* ge1132ov22361;
extern T0* ge1132ov22436;
extern T0* ge1132ov22348;
extern T0* ge1132ov22435;
extern T0* ge1132ov22347;
extern T0* ge1132ov22433;
extern T0* ge1132ov22345;
extern T0* ge1132ov22434;
extern T0* ge1132ov22346;
extern T0* ge1132ov22432;
extern T0* ge1132ov22344;
extern T0* ge1132ov22448;
extern T0* ge1132ov22360;
extern T0* ge1132ov22389;
extern T0* ge1132ov22301;
extern T0* ge1132ov22388;
extern T0* ge1132ov22300;
extern T0* ge1132ov22386;
extern T0* ge1132ov22298;
extern T0* ge1132ov22387;
extern T0* ge1132ov22299;
extern T0* ge1132ov22385;
extern T0* ge1132ov22297;
extern T0* ge1132ov22407;
extern T0* ge1132ov22319;
extern T0* ge1132ov22406;
extern T0* ge1132ov22318;
extern T0* ge1132ov22416;
extern T0* ge1132ov22328;
extern T0* ge1132ov22415;
extern T0* ge1132ov22327;
extern T0* ge1132ov22417;
extern T0* ge1132ov22329;
extern T0* ge1132ov22424;
extern T0* ge1132ov22336;
extern T0* ge1124ov13504;
extern T0* ge1124ov13503;
extern T0* ge1132ov22414;
extern T0* ge1132ov22326;
extern T0* ge1132ov22413;
extern T0* ge1132ov22325;
extern T0* ge1314ov21614;
extern T0* ge1314ov21576;
extern T0* ge1314ov21574;
extern T0* ge1314ov21615;
extern T0* ge1314ov21587;
extern T0* ge1314ov21586;
extern T0* ge1314ov21597;
extern T0* ge1314ov21591;
extern T0* ge1314ov21590;
extern T0* ge1314ov21589;
extern T0* ge1314ov21595;
extern T0* ge1314ov21594;
extern T0* ge1314ov21596;
extern T0* ge1314ov21573;
extern T0* ge1314ov21599;
extern T0* ge1314ov21608;
extern T0* ge1317ov21437;
extern T0* ge1317ov21435;
extern T0* ge1317ov21436;
extern T0* ge1314ov21609;
extern T0* ge1314ov21610;
extern T0* ge1314ov21613;
extern T0* ge1314ov21611;
extern T0* ge1314ov21612;
extern T0* ge1314ov21606;
extern T0* ge1310ov22013;
extern T0* ge1310ov22014;
extern T0* ge1314ov21579;
extern T0* ge1314ov21602;
extern T0* ge1307ov12493;
extern T0* ge1307ov12492;
extern T0* ge1314ov21622;
extern T0* ge1314ov21623;
extern T0* ge1314ov21624;
extern T0* ge1314ov21617;
extern T0* ge1314ov21600;
extern T0* ge1314ov21601;
extern T0* ge1314ov21603;
extern T0* ge1314ov21607;
extern T0* ge1263ov20673;
extern T0* ge1153ov11234;
extern T0* ge1153ov11235;
extern T0* ge1153ov11236;
extern T0* ge1153ov11237;
extern T0* ge1153ov11238;
extern T0* ge1153ov11239;
extern T0* ge1153ov11240;
extern T0* ge1153ov11241;
extern T0* ge1153ov11242;
extern T0* ge1153ov11243;
extern T0* ge1153ov11244;
extern T0* ge1153ov11245;
extern T0* ge1153ov11246;
extern T0* ge1153ov11247;
extern T0* ge1153ov11248;
extern T0* ge1153ov11249;
extern T0* ge1153ov11250;
extern T0* ge1153ov11251;
extern T0* ge1153ov11252;
extern T0* ge1153ov11253;
extern T0* ge1153ov11254;
extern T0* ge1153ov11255;
extern T0* ge1153ov11256;
extern T0* ge1153ov11257;
extern T0* ge1153ov11258;
extern T0* ge1153ov11259;
extern T0* ge1153ov11260;
extern T0* ge1153ov11261;
extern T0* ge1153ov11262;
extern T0* ge1153ov11263;
extern T0* ge1153ov11264;
extern T0* ge1153ov11265;
extern T0* ge1153ov11266;
extern T0* ge1153ov11267;
extern T0* ge1153ov11268;
extern T0* ge1153ov11269;
extern T0* ge1153ov11270;
extern T0* ge1153ov11271;
extern T0* ge1153ov11272;
extern T0* ge1153ov11273;
extern T0* ge1153ov11274;
extern T0* ge1153ov11275;
extern T0* ge1153ov11276;
extern T0* ge1153ov11277;
extern T0* ge1153ov11278;
extern T0* ge1153ov11279;
extern T0* ge1153ov11280;
extern T0* ge1153ov11281;
extern T0* ge1153ov11282;
extern T0* ge1153ov11283;
extern T0* ge1153ov11284;
extern T0* ge1153ov11285;
extern T0* ge1153ov11286;
extern T0* ge1153ov11287;
extern T0* ge1153ov11288;
extern T0* ge1153ov11289;
extern T0* ge1153ov11290;
extern T0* ge1153ov11291;
extern T0* ge1153ov11292;
extern T0* ge1153ov11293;
extern T0* ge1153ov11294;
extern T0* ge1153ov11295;
extern T0* ge1153ov11296;
extern T0* ge1153ov11297;
extern T0* ge1153ov11298;
extern T0* ge1153ov11299;
extern T0* ge1153ov11300;
extern T0* ge1153ov11301;
extern T0* ge1153ov11302;
extern T0* ge1153ov11303;
extern T0* ge1153ov11304;
extern T0* ge1153ov11305;
extern T0* ge1153ov11306;
extern T0* ge1153ov11307;
extern T0* ge1153ov11308;
extern T0* ge1153ov11309;
extern T0* ge1153ov11310;
extern T0* ge1153ov11311;
extern T0* ge1153ov11312;
extern T0* ge1153ov11313;
extern T0* ge1153ov11314;
extern T0* ge1153ov11315;
extern T0* ge1153ov11316;
extern T0* ge1153ov11317;
extern T0* ge1153ov11318;
extern T0* ge1153ov11319;
extern T0* ge1153ov11320;
extern T0* ge1153ov11321;
extern T0* ge1153ov11322;
extern T0* ge1153ov11323;
extern T0* ge1153ov11324;
extern T0* ge1153ov11325;
extern T0* ge1153ov11326;
extern T0* ge1153ov11327;
extern T0* ge1153ov11328;
extern T0* ge1153ov11329;
extern T0* ge1153ov11430;
extern T0* ge1153ov11442;
extern T0* ge1184ov11201;
extern T0* ge1153ov11453;
extern T0* ge1153ov11438;
extern T0* ge1153ov11443;
extern T0* ge1153ov11444;
extern T0* ge1153ov11445;
extern T0* ge1153ov11431;
extern T0* ge1153ov11449;
extern T0* ge1153ov11456;
extern T0* ge1153ov11436;
extern T0* ge1153ov11427;
extern T0* ge1153ov11452;
extern T0* ge1153ov11434;
extern T0* ge1153ov11439;
extern T0* ge1153ov11437;
extern T0* ge1153ov11433;
extern T0* ge1153ov11448;
extern T0* ge1153ov11450;
extern T0* ge1153ov11458;
extern T0* ge1153ov11455;
extern T0* ge1153ov11447;
extern T0* ge1153ov11429;
extern T0* ge1153ov11454;
extern T0* ge1153ov11428;
extern T0* ge1153ov11435;
extern T0* ge1153ov11451;
extern T0* ge1153ov11446;
extern T0* ge1153ov11440;
extern T0* ge1153ov11432;
extern T0* ge1153ov11460;
extern T0* ge1153ov11441;
extern T0* ge1153ov11457;
extern T0* ge1184ov11200;
extern T0* ge1184ov11199;
extern T0* ge1143ov11853;
extern T0* ge1149ov11778;
extern T0* ge1350ov12897;
extern T0* ge9ov11120;
extern T0* ge9ov11127;
extern T0* ge16ov10740;
extern T0* ge290ov2854;
extern T0* ge6ov10760;
extern T0* ge9ov11123;
extern T0* ge9ov11130;
extern T0* ge9ov11121;
extern T0* ge9ov11128;
extern T0* ge9ov11122;
extern T0* ge9ov11129;
extern T0* ge9ov11124;
extern T0* ge9ov11131;
extern T0* ge9ov11125;
extern T0* ge9ov11132;
extern T0* ge6ov10755;
extern T0* ge6ov10754;
extern T0* ge6ov10762;
extern T0* ge6ov10761;
extern T0* ge1192ov3067;
extern T0* ge1192ov3065;
extern T0* ge1321ov31215;
extern T0* ge1321ov31216;
extern T0* ge1312ov31371;
extern T0* ge1312ov31373;
extern T0* ge824ov3775;
extern T0* ge1031ov8700;
extern T0* ge1031ov8698;
extern T0* ge1031ov8696;
extern T0* ge922ov6772;
extern T0* ge915ov9906;
extern T0* ge911ov15097;
extern T0* ge1041ov9690;
extern T0* ge1041ov9430;
extern T0* ge1041ov9247;
extern T0* ge1041ov9691;
extern T0* ge1041ov9248;
extern T0* ge1041ov9597;
extern T0* ge1041ov9379;
extern T0* ge1041ov9154;
extern T0* ge824ov4121;
extern T0* ge1041ov9511;
extern T0* ge1041ov9341;
extern T0* ge1041ov9068;
extern T0* ge1041ov9512;
extern T0* ge1041ov9069;
extern T0* ge1041ov9495;
extern T0* ge1041ov9334;
extern T0* ge1041ov9052;
extern T0* ge1041ov9494;
extern T0* ge1041ov9051;
extern T0* ge1041ov9496;
extern T0* ge1041ov9053;
extern T0* ge1041ov9520;
extern T0* ge1041ov9345;
extern T0* ge1041ov9077;
extern T0* ge1041ov9509;
extern T0* ge1041ov9066;
extern T0* ge1041ov9510;
extern T0* ge1041ov9067;
extern T0* ge1041ov9627;
extern T0* ge1041ov9396;
extern T0* ge1041ov9184;
extern T0* ge1041ov9626;
extern T0* ge1041ov9183;
extern T0* ge1041ov9628;
extern T0* ge1041ov9397;
extern T0* ge1041ov9185;
extern T0* ge1041ov9524;
extern T0* ge1041ov9347;
extern T0* ge1041ov9081;
extern T0* ge1041ov9530;
extern T0* ge1041ov9351;
extern T0* ge1041ov9087;
extern T0* ge1041ov9619;
extern T0* ge1041ov9392;
extern T0* ge1041ov9176;
extern T0* ge1041ov9602;
extern T0* ge1041ov9382;
extern T0* ge1041ov9159;
extern T0* ge1041ov9629;
extern T0* ge1041ov9398;
extern T0* ge1041ov9186;
extern T0* ge1041ov9527;
extern T0* ge1041ov9349;
extern T0* ge1041ov9084;
extern T0* ge1041ov9534;
extern T0* ge1041ov9354;
extern T0* ge1041ov9091;
extern T0* ge1041ov9620;
extern T0* ge1041ov9393;
extern T0* ge1041ov9177;
extern T0* ge1041ov9618;
extern T0* ge1041ov9391;
extern T0* ge1041ov9175;
extern T0* ge1041ov9603;
extern T0* ge1041ov9383;
extern T0* ge1041ov9160;
extern T0* ge1041ov9621;
extern T0* ge1041ov9394;
extern T0* ge1041ov9178;
extern T0* ge824ov4119;
extern T0* ge824ov3889;
extern T0* ge824ov3801;
extern T0* ge824ov3985;
extern T0* ge824ov3862;
extern T0* ge1041ov9739;
extern T0* ge1041ov9462;
extern T0* ge1041ov9296;
extern T0* ge824ov3930;
extern T0* ge824ov3850;
extern T0* ge1041ov9593;
extern T0* ge1041ov9378;
extern T0* ge1041ov9150;
extern T0* ge1041ov9594;
extern T0* ge1041ov9151;
extern T0* ge1041ov9585;
extern T0* ge1041ov9375;
extern T0* ge1041ov9142;
extern T0* ge1041ov9596;
extern T0* ge1041ov9153;
extern T0* ge1041ov9595;
extern T0* ge1041ov9152;
extern T0* ge1041ov9592;
extern T0* ge1041ov9377;
extern T0* ge1041ov9149;
extern T0* ge1041ov9557;
extern T0* ge1041ov9363;
extern T0* ge1041ov9114;
extern T0* ge1041ov9556;
extern T0* ge1041ov9362;
extern T0* ge1041ov9113;
extern T0* ge1041ov9555;
extern T0* ge1041ov9361;
extern T0* ge1041ov9112;
extern T0* ge1041ov9554;
extern T0* ge1041ov9360;
extern T0* ge1041ov9111;
extern T0* ge1041ov9553;
extern T0* ge1041ov9110;
extern T0* ge1041ov9485;
extern T0* ge1041ov9330;
extern T0* ge1041ov9042;
extern T0* ge1041ov9483;
extern T0* ge1041ov9329;
extern T0* ge1041ov9040;
extern T0* ge1041ov9563;
extern T0* ge1041ov9364;
extern T0* ge1041ov9120;
extern T0* ge1041ov9560;
extern T0* ge1041ov9117;
extern T0* ge1041ov9571;
extern T0* ge1041ov9366;
extern T0* ge1041ov9128;
extern T0* ge1041ov9567;
extern T0* ge1041ov9365;
extern T0* ge1041ov9124;
extern T0* ge1041ov9564;
extern T0* ge1041ov9121;
extern T0* ge1041ov9561;
extern T0* ge1041ov9118;
extern T0* ge1041ov9572;
extern T0* ge1041ov9129;
extern T0* ge1041ov9568;
extern T0* ge1041ov9125;
extern T0* ge1041ov9565;
extern T0* ge1041ov9122;
extern T0* ge1041ov9562;
extern T0* ge1041ov9119;
extern T0* ge1041ov9573;
extern T0* ge1041ov9130;
extern T0* ge1041ov9569;
extern T0* ge1041ov9126;
extern T0* ge1041ov9683;
extern T0* ge1041ov9426;
extern T0* ge1041ov9240;
extern T0* ge1041ov9579;
extern T0* ge1041ov9370;
extern T0* ge1041ov9136;
extern T0* ge1041ov9578;
extern T0* ge1041ov9135;
extern T0* ge1041ov9559;
extern T0* ge1041ov9116;
extern T0* ge1041ov9558;
extern T0* ge1041ov9115;
extern T0* ge1041ov9570;
extern T0* ge1041ov9127;
extern T0* ge1041ov9566;
extern T0* ge1041ov9123;
extern T0* ge1041ov9577;
extern T0* ge1041ov9369;
extern T0* ge1041ov9134;
extern T0* ge1041ov9576;
extern T0* ge1041ov9368;
extern T0* ge1041ov9133;
extern T0* ge1041ov9575;
extern T0* ge1041ov9367;
extern T0* ge1041ov9132;
extern T0* ge1041ov9672;
extern T0* ge1041ov9420;
extern T0* ge1041ov9229;
extern T0* ge1041ov9670;
extern T0* ge1041ov9419;
extern T0* ge1041ov9227;
extern T0* ge1041ov9498;
extern T0* ge1041ov9335;
extern T0* ge1041ov9055;
extern T0* ge1041ov9625;
extern T0* ge1041ov9395;
extern T0* ge1041ov9182;
extern T0* ge1041ov9497;
extern T0* ge1041ov9054;
extern T0* ge1041ov9624;
extern T0* ge1041ov9181;
extern T0* ge1041ov9623;
extern T0* ge1041ov9180;
extern T0* ge1041ov9528;
extern T0* ge1041ov9350;
extern T0* ge1041ov9085;
extern T0* ge1041ov9526;
extern T0* ge1041ov9348;
extern T0* ge1041ov9083;
extern T0* ge1041ov9525;
extern T0* ge1041ov9082;
extern T0* ge1041ov9532;
extern T0* ge1041ov9352;
extern T0* ge1041ov9089;
extern T0* ge1041ov9531;
extern T0* ge1041ov9088;
extern T0* ge1041ov9533;
extern T0* ge1041ov9353;
extern T0* ge1041ov9090;
extern T0* ge1041ov9607;
extern T0* ge1041ov9384;
extern T0* ge1041ov9164;
extern T0* ge1041ov9606;
extern T0* ge1041ov9163;
extern T0* ge1041ov9574;
extern T0* ge1041ov9131;
extern T0* ge1041ov9605;
extern T0* ge1041ov9162;
extern T0* ge1041ov9604;
extern T0* ge1041ov9161;
extern T0* ge1041ov9608;
extern T0* ge1041ov9385;
extern T0* ge1041ov9165;
extern T0* ge1041ov9514;
extern T0* ge1041ov9342;
extern T0* ge1041ov9071;
extern T0* ge1041ov9513;
extern T0* ge1041ov9070;
extern T0* ge1041ov9519;
extern T0* ge1041ov9076;
extern T0* ge1041ov9516;
extern T0* ge1041ov9343;
extern T0* ge1041ov9073;
extern T0* ge1041ov9517;
extern T0* ge1041ov9074;
extern T0* ge1041ov9622;
extern T0* ge1041ov9179;
extern T0* ge1041ov9515;
extern T0* ge1041ov9072;
extern T0* ge1041ov9529;
extern T0* ge1041ov9086;
extern T0* ge1041ov9518;
extern T0* ge1041ov9344;
extern T0* ge1041ov9075;
extern T0* ge1041ov9523;
extern T0* ge1041ov9346;
extern T0* ge1041ov9080;
extern T0* ge1041ov9521;
extern T0* ge1041ov9078;
extern T0* ge1041ov9522;
extern T0* ge1041ov9079;
extern T0* ge1041ov9630;
extern T0* ge1041ov9399;
extern T0* ge1041ov9187;
extern T0* ge1041ov9599;
extern T0* ge1041ov9371;
extern T0* ge1041ov9156;
extern T0* ge1041ov9493;
extern T0* ge1041ov9333;
extern T0* ge1041ov9050;
extern T0* ge1041ov9491;
extern T0* ge1041ov9048;
extern T0* ge1041ov9487;
extern T0* ge1041ov9332;
extern T0* ge1041ov9044;
extern T0* ge1041ov9486;
extern T0* ge1041ov9331;
extern T0* ge1041ov9043;
extern T0* ge1041ov9729;
extern T0* ge1041ov9451;
extern T0* ge1041ov9286;
extern T0* ge1041ov9732;
extern T0* ge1041ov9455;
extern T0* ge1041ov9289;
extern T0* ge1041ov9688;
extern T0* ge1041ov9429;
extern T0* ge1041ov9245;
extern T0* ge1041ov9731;
extern T0* ge1041ov9454;
extern T0* ge1041ov9288;
extern T0* ge1041ov9598;
extern T0* ge1041ov9380;
extern T0* ge1041ov9155;
extern T0* ge1041ov9600;
extern T0* ge1041ov9157;
extern T0* ge1030ov8628;
extern T0* ge1030ov8623;
extern T0* ge1030ov8618;
extern T0* ge1030ov8629;
extern T0* ge1030ov8624;
extern T0* ge1030ov8619;
extern T0* ge1030ov8627;
extern T0* ge1030ov8622;
extern T0* ge1030ov8617;
extern T0* ge1041ov9742;
extern T0* ge1041ov9464;
extern T0* ge1041ov9299;
extern T0* ge824ov4114;
extern T0* ge824ov4159;
extern T0* ge824ov4113;
extern T0* ge824ov4110;
extern T0* ge824ov4174;
extern T0* ge824ov4158;
extern T0* ge824ov4133;
extern T0* ge824ov4160;
extern T0* ge824ov4175;
extern T0* ge824ov4117;
extern T0* ge824ov4162;
extern T0* ge824ov4129;
extern T0* ge824ov4132;
extern T0* ge824ov4182;
extern T0* ge824ov4123;
extern T0* ge824ov4154;
extern T0* ge824ov4142;
extern T0* ge824ov4168;
extern T0* ge824ov4122;
extern T0* ge824ov4180;
extern T0* ge824ov4150;
extern T0* ge824ov4136;
extern T0* ge824ov4167;
extern T0* ge1038ov37023;
extern T0* ge1038ov37022;
extern T0* ge824ov4153;
extern T0* ge824ov4115;
extern T0* ge824ov4147;
extern T0* ge824ov4163;
extern T0* ge824ov4151;
extern T0* ge824ov4178;
extern T0* ge824ov4141;
extern T0* ge824ov4125;
extern T0* ge824ov4127;
extern T0* ge824ov4164;
extern T0* ge824ov4116;
extern T0* ge824ov4138;
extern T0* ge824ov4166;
extern T0* ge1041ov9741;
extern T0* ge1041ov9298;
extern T0* ge1053ov25752;
extern T0* ge824ov4235;
extern T0* ge824ov4241;
extern T0* ge824ov4242;
extern T0* ge824ov4244;
extern T0* ge824ov4246;
extern T0* ge824ov4247;
extern T0* ge824ov4249;
extern T0* ge824ov4250;
extern T0* ge824ov4297;
extern T0* ge824ov4298;
extern T0* ge824ov4299;
extern T0* ge824ov3749;
extern T0* ge824ov3755;
extern T0* ge824ov3760;
extern T0* ge824ov3762;
extern T0* ge824ov3769;
extern T0* ge824ov3771;
extern T0* ge824ov3774;
extern T0* ge824ov3782;
extern T0* ge824ov3802;
extern T0* ge824ov3804;
extern T0* ge824ov3805;
extern T0* ge824ov3806;
extern T0* ge824ov3807;
extern T0* ge824ov3808;
extern T0* ge824ov3809;
extern T0* ge824ov3810;
extern T0* ge824ov3811;
extern T0* ge824ov3812;
extern T0* ge824ov3813;
extern T0* ge824ov3814;
extern T0* ge824ov3815;
extern T0* ge824ov3816;
extern T0* ge824ov3817;
extern T0* ge824ov3818;
extern T0* ge824ov3819;
extern T0* ge824ov3820;
extern T0* ge824ov3821;
extern T0* ge824ov3822;
extern T0* ge824ov3823;
extern T0* ge824ov3824;
extern T0* ge824ov3825;
extern T0* ge824ov3826;
extern T0* ge824ov3829;
extern T0* ge824ov3830;
extern T0* ge824ov3831;
extern T0* ge824ov3832;
extern T0* ge824ov3833;
extern T0* ge824ov3834;
extern T0* ge824ov3835;
extern T0* ge824ov3836;
extern T0* ge824ov3837;
extern T0* ge824ov3838;
extern T0* ge824ov3839;
extern T0* ge824ov3840;
extern T0* ge824ov3841;
extern T0* ge824ov3842;
extern T0* ge824ov3843;
extern T0* ge824ov3845;
extern T0* ge824ov3846;
extern T0* ge824ov3847;
extern T0* ge824ov3848;
extern T0* ge824ov3849;
extern T0* ge824ov3852;
extern T0* ge824ov3853;
extern T0* ge824ov3854;
extern T0* ge824ov3855;
extern T0* ge824ov3857;
extern T0* ge824ov3858;
extern T0* ge824ov3859;
extern T0* ge824ov3860;
extern T0* ge824ov3861;
extern T0* ge824ov3863;
extern T0* ge824ov3864;
extern T0* ge824ov3865;
extern T0* ge824ov3866;
extern T0* ge824ov3867;
extern T0* ge824ov3868;
extern T0* ge824ov3869;
extern T0* ge824ov3870;
extern T0* ge824ov3871;
extern T0* ge824ov3872;
extern T0* ge824ov3873;
extern T0* ge824ov3874;
extern T0* ge824ov3875;
extern T0* ge824ov3876;
extern T0* ge824ov3877;
extern T0* ge824ov3878;
extern T0* ge824ov3879;
extern T0* ge824ov3880;
extern T0* ge824ov3881;
extern T0* ge824ov3882;
extern T0* ge824ov3883;
extern T0* ge824ov3884;
extern T0* ge824ov3885;
extern T0* ge824ov3886;
extern T0* ge824ov3887;
extern T0* ge824ov3888;
extern T0* ge824ov3890;
extern T0* ge824ov3891;
extern T0* ge824ov3892;
extern T0* ge824ov3893;
extern T0* ge824ov3894;
extern T0* ge824ov3895;
extern T0* ge824ov3896;
extern T0* ge824ov3897;
extern T0* ge824ov3898;
extern T0* ge824ov3899;
extern T0* ge824ov3900;
extern T0* ge824ov3901;
extern T0* ge824ov3902;
extern T0* ge824ov3903;
extern T0* ge824ov3904;
extern T0* ge824ov3906;
extern T0* ge824ov3907;
extern T0* ge824ov3908;
extern T0* ge824ov3909;
extern T0* ge824ov3910;
extern T0* ge824ov3911;
extern T0* ge824ov3912;
extern T0* ge824ov3913;
extern T0* ge824ov3914;
extern T0* ge824ov3915;
extern T0* ge824ov3916;
extern T0* ge824ov3917;
extern T0* ge824ov3918;
extern T0* ge824ov3919;
extern T0* ge824ov3920;
extern T0* ge824ov3921;
extern T0* ge824ov3922;
extern T0* ge824ov3923;
extern T0* ge824ov3924;
extern T0* ge824ov3925;
extern T0* ge824ov3926;
extern T0* ge824ov3927;
extern T0* ge824ov3928;
extern T0* ge824ov3929;
extern T0* ge824ov3931;
extern T0* ge824ov3932;
extern T0* ge824ov3933;
extern T0* ge824ov3934;
extern T0* ge824ov3935;
extern T0* ge824ov3936;
extern T0* ge824ov3937;
extern T0* ge824ov3938;
extern T0* ge824ov3939;
extern T0* ge824ov3940;
extern T0* ge824ov3941;
extern T0* ge824ov3942;
extern T0* ge824ov3943;
extern T0* ge824ov3944;
extern T0* ge824ov3945;
extern T0* ge824ov3946;
extern T0* ge824ov3947;
extern T0* ge824ov3948;
extern T0* ge824ov3949;
extern T0* ge824ov3950;
extern T0* ge824ov3951;
extern T0* ge824ov3952;
extern T0* ge824ov3953;
extern T0* ge824ov3954;
extern T0* ge824ov3955;
extern T0* ge824ov3956;
extern T0* ge824ov3958;
extern T0* ge824ov3959;
extern T0* ge824ov3960;
extern T0* ge824ov3961;
extern T0* ge824ov3963;
extern T0* ge824ov3964;
extern T0* ge824ov3965;
extern T0* ge824ov3966;
extern T0* ge824ov3967;
extern T0* ge824ov3968;
extern T0* ge824ov3969;
extern T0* ge824ov3970;
extern T0* ge824ov3971;
extern T0* ge824ov3972;
extern T0* ge824ov3973;
extern T0* ge824ov3974;
extern T0* ge824ov3975;
extern T0* ge824ov3976;
extern T0* ge824ov3977;
extern T0* ge824ov3978;
extern T0* ge824ov3979;
extern T0* ge824ov3980;
extern T0* ge824ov3981;
extern T0* ge824ov3982;
extern T0* ge824ov3983;
extern T0* ge824ov3984;
extern T0* ge824ov3986;
extern T0* ge824ov3987;
extern T0* ge824ov3988;
extern T0* ge824ov3989;
extern T0* ge824ov3990;
extern T0* ge824ov3991;
extern T0* ge824ov3992;
extern T0* ge824ov3993;
extern T0* ge824ov3994;
extern T0* ge824ov3995;
extern T0* ge824ov3996;
extern T0* ge824ov3997;
extern T0* ge824ov3998;
extern T0* ge824ov3999;
extern T0* ge824ov4000;
extern T0* ge824ov4001;
extern T0* ge824ov4003;
extern T0* ge824ov4004;
extern T0* ge824ov4005;
extern T0* ge824ov4006;
extern T0* ge824ov4007;
extern T0* ge824ov4008;
extern T0* ge824ov4009;
extern T0* ge824ov4010;
extern T0* ge824ov4011;
extern T0* ge824ov4012;
extern T0* ge824ov4013;
extern T0* ge824ov4014;
extern T0* ge824ov4015;
extern T0* ge824ov4016;
extern T0* ge824ov4017;
extern T0* ge824ov4018;
extern T0* ge824ov4019;
extern T0* ge824ov4020;
extern T0* ge824ov4021;
extern T0* ge824ov4022;
extern T0* ge824ov4023;
extern T0* ge824ov4024;
extern T0* ge824ov4025;
extern T0* ge824ov4026;
extern T0* ge824ov4027;
extern T0* ge824ov4028;
extern T0* ge824ov4029;
extern T0* ge824ov4030;
extern T0* ge824ov4031;
extern T0* ge824ov4032;
extern T0* ge824ov4033;
extern T0* ge824ov4034;
extern T0* ge824ov4035;
extern T0* ge824ov4036;
extern T0* ge824ov4037;
extern T0* ge824ov4039;
extern T0* ge824ov4040;
extern T0* ge824ov4041;
extern T0* ge824ov4042;
extern T0* ge824ov4043;
extern T0* ge824ov4044;
extern T0* ge824ov4045;
extern T0* ge824ov4046;
extern T0* ge824ov4047;
extern T0* ge824ov4049;
extern T0* ge824ov4050;
extern T0* ge824ov4051;
extern T0* ge824ov4052;
extern T0* ge824ov4053;
extern T0* ge824ov4054;
extern T0* ge824ov4055;
extern T0* ge824ov4056;
extern T0* ge824ov4057;
extern T0* ge824ov4058;
extern T0* ge824ov4059;
extern T0* ge824ov4060;
extern T0* ge824ov4061;
extern T0* ge824ov4062;
extern T0* ge824ov4063;
extern T0* ge824ov4064;
extern T0* ge824ov4065;
extern T0* ge824ov4066;
extern T0* ge824ov4067;
extern T0* ge824ov4068;
extern T0* ge824ov4069;
extern T0* ge824ov4070;
extern T0* ge824ov4071;
extern T0* ge824ov4072;
extern T0* ge824ov4073;
extern T0* ge824ov4074;
extern T0* ge824ov4075;
extern T0* ge824ov4076;
extern T0* ge824ov4077;
extern T0* ge824ov4079;
extern T0* ge824ov4080;
extern T0* ge824ov4081;
extern T0* ge824ov4082;
extern T0* ge824ov4083;
extern T0* ge824ov4084;
extern T0* ge824ov4085;
extern T0* ge824ov4086;
extern T0* ge824ov4087;
extern T0* ge824ov4088;
extern T0* ge824ov4090;
extern T0* ge824ov4091;
extern T0* ge824ov4092;
extern T0* ge824ov4093;
extern T0* ge824ov4094;
extern T0* ge824ov4095;
extern T0* ge824ov4096;
extern T0* ge824ov4097;
extern T0* ge824ov4098;
extern T0* ge824ov4099;
extern T0* ge824ov4100;
extern T0* ge824ov4101;
extern T0* ge824ov4102;
extern T0* ge824ov4103;
extern T0* ge824ov4105;
extern T0* ge824ov4107;
extern T0* ge824ov4108;
extern T0* ge824ov4111;
extern T0* ge824ov4112;
extern T0* ge824ov4120;
extern T0* ge824ov4128;
extern T0* ge824ov4134;
extern T0* ge824ov4137;
extern T0* ge824ov4139;
extern T0* ge824ov4140;
extern T0* ge824ov4143;
extern T0* ge824ov4144;
extern T0* ge824ov4145;
extern T0* ge824ov4146;
extern T0* ge824ov4149;
extern T0* ge824ov4155;
extern T0* ge824ov4156;
extern T0* ge824ov4157;
extern T0* ge824ov4165;
extern T0* ge824ov4169;
extern T0* ge824ov4170;
extern T0* ge824ov4171;
extern T0* ge824ov4173;
extern T0* ge824ov4176;
extern T0* ge824ov4177;
extern T0* ge824ov4179;
extern T0* ge824ov4181;
extern T0* ge824ov4183;
extern T0* ge824ov4197;
extern T0* ge824ov4198;
extern T0* ge824ov4199;
extern T0* ge824ov4200;
extern T0* ge824ov4201;
extern T0* ge824ov4203;
extern T0* ge824ov4204;
extern T0* ge824ov4205;
extern T0* ge824ov4206;
extern T0* ge824ov4207;
extern T0* ge824ov4208;
extern T0* ge824ov4209;
extern T0* ge824ov4210;
extern T0* ge824ov4211;
extern T0* ge824ov4212;
extern T0* ge824ov4213;
extern T0* ge824ov4214;
extern T0* ge824ov4215;
extern T0* ge824ov4216;
extern T0* ge824ov4217;
extern T0* ge824ov4218;
extern T0* ge824ov4219;
extern T0* ge824ov4220;
extern T0* ge824ov4221;
extern T0* ge824ov4224;
extern T0* ge824ov4225;
extern T0* ge824ov4226;
extern T0* ge824ov4227;
extern T0* ge824ov4228;
extern T0* ge824ov4229;
extern T0* ge824ov4230;
extern T0* ge824ov4231;
extern T0* ge824ov4232;
extern T0* ge824ov4233;
extern T0* ge228ov14256;
extern T0* ge1053ov25780;
extern T0* ge1041ov9547;
extern T0* ge1041ov9358;
extern T0* ge1041ov9104;
extern T0* ge1041ov9546;
extern T0* ge1041ov9103;
extern T0* ge1041ov9545;
extern T0* ge1041ov9357;
extern T0* ge1041ov9102;
extern T0* ge1041ov9544;
extern T0* ge1041ov9101;
extern T0* ge1041ov9548;
extern T0* ge1041ov9359;
extern T0* ge1041ov9105;
extern T0* ge1041ov9539;
extern T0* ge1041ov9356;
extern T0* ge1041ov9096;
extern T0* ge1041ov9541;
extern T0* ge1041ov9098;
extern T0* ge1041ov9701;
extern T0* ge1041ov9437;
extern T0* ge1041ov9258;
extern T0* ge1041ov9696;
extern T0* ge1041ov9433;
extern T0* ge1041ov9253;
extern T0* ge1041ov9715;
extern T0* ge1041ov9442;
extern T0* ge1041ov9272;
extern T0* ge1041ov9616;
extern T0* ge1041ov9390;
extern T0* ge1041ov9173;
extern T0* ge1041ov9698;
extern T0* ge1041ov9434;
extern T0* ge1041ov9255;
extern T0* ge1041ov9697;
extern T0* ge1041ov9254;
extern T0* ge1041ov9508;
extern T0* ge1041ov9340;
extern T0* ge1041ov9065;
extern T0* ge1041ov9695;
extern T0* ge1041ov9252;
extern T0* ge1041ov9694;
extern T0* ge1041ov9251;
extern T0* ge1041ov9507;
extern T0* ge1041ov9339;
extern T0* ge1041ov9064;
extern T0* ge1041ov9479;
extern T0* ge1041ov9325;
extern T0* ge1041ov9036;
extern T0* ge1041ov9702;
extern T0* ge1041ov9259;
extern T0* ge1041ov9714;
extern T0* ge1041ov9271;
extern T0* ge1041ov9614;
extern T0* ge1041ov9389;
extern T0* ge1041ov9171;
extern T0* ge1041ov9478;
extern T0* ge1041ov9035;
extern T0* ge1041ov9549;
extern T0* ge1041ov9106;
extern T0* ge1041ov9537;
extern T0* ge1041ov9094;
extern T0* ge1041ov9543;
extern T0* ge1041ov9100;
extern T0* ge1041ov9540;
extern T0* ge1041ov9097;
extern T0* ge1041ov9538;
extern T0* ge1041ov9095;
extern T0* ge1041ov9686;
extern T0* ge1041ov9428;
extern T0* ge1041ov9243;
extern T0* ge1041ov9687;
extern T0* ge1041ov9244;
extern T0* ge1041ov9674;
extern T0* ge1041ov9421;
extern T0* ge1041ov9231;
extern T0* ge1041ov9675;
extern T0* ge1041ov9422;
extern T0* ge1041ov9232;
extern T0* ge1041ov9671;
extern T0* ge1041ov9228;
extern T0* ge1041ov9710;
extern T0* ge1041ov9440;
extern T0* ge1041ov9267;
extern T0* ge1042ov16184;
extern T0* ge1042ov16412;
extern T0* ge1042ov16392;
extern T0* ge1042ov16301;
extern T0* ge1042ov16406;
extern T0* ge1042ov16376;
extern T0* ge1042ov16303;
extern T0* ge1042ov16196;
extern T0* ge1042ov16302;
extern T0* ge1042ov16398;
extern T0* ge1042ov16385;
extern T0* ge1042ov16414;
extern T0* ge1041ov9709;
extern T0* ge1041ov9439;
extern T0* ge1041ov9266;
extern T0* ge1041ov9713;
extern T0* ge1041ov9441;
extern T0* ge1041ov9270;
extern T0* ge1041ov9712;
extern T0* ge1041ov9269;
extern T0* ge1041ov9708;
extern T0* ge1041ov9265;
extern T0* ge1041ov9707;
extern T0* ge1041ov9264;
extern T0* ge1041ov9706;
extern T0* ge1041ov9263;
extern T0* ge1041ov9705;
extern T0* ge1041ov9262;
extern T0* ge1041ov9704;
extern T0* ge1041ov9261;
extern T0* ge1041ov9724;
extern T0* ge1041ov9447;
extern T0* ge1041ov9281;
extern T0* ge1041ov9480;
extern T0* ge1041ov9326;
extern T0* ge1041ov9037;
extern T0* ge1041ov9636;
extern T0* ge1041ov9401;
extern T0* ge1041ov9193;
extern T0* ge1041ov9635;
extern T0* ge1041ov9192;
extern T0* ge1041ov9634;
extern T0* ge1041ov9191;
extern T0* ge1041ov9633;
extern T0* ge1041ov9190;
extern T0* ge1041ov9632;
extern T0* ge1041ov9189;
extern T0* ge1041ov9631;
extern T0* ge1041ov9400;
extern T0* ge1041ov9188;
extern T0* ge1042ov16415;
extern T0* ge1041ov9641;
extern T0* ge1041ov9404;
extern T0* ge1041ov9198;
extern T0* ge1041ov9648;
extern T0* ge1041ov9408;
extern T0* ge1041ov9205;
extern T0* ge1041ov9647;
extern T0* ge1041ov9204;
extern T0* ge1041ov9646;
extern T0* ge1041ov9407;
extern T0* ge1041ov9203;
extern T0* ge1041ov9645;
extern T0* ge1041ov9202;
extern T0* ge1041ov9644;
extern T0* ge1041ov9406;
extern T0* ge1041ov9201;
extern T0* ge1041ov9643;
extern T0* ge1041ov9200;
extern T0* ge1041ov9642;
extern T0* ge1041ov9405;
extern T0* ge1041ov9199;
extern T0* ge1041ov9640;
extern T0* ge1041ov9197;
extern T0* ge1042ov16379;
extern T0* ge1041ov9703;
extern T0* ge1041ov9438;
extern T0* ge1041ov9260;
extern T0* ge1041ov9727;
extern T0* ge1041ov9449;
extern T0* ge1041ov9284;
extern T0* ge1041ov9725;
extern T0* ge1041ov9448;
extern T0* ge1041ov9282;
extern T0* ge1041ov9723;
extern T0* ge1041ov9280;
extern T0* ge1042ov16249;
extern T0* ge1041ov9765;
extern T0* ge1041ov9474;
extern T0* ge1041ov9322;
extern T0* ge1041ov9721;
extern T0* ge1041ov9278;
extern T0* ge1042ov16213;
extern T0* ge1042ov16214;
extern T0* ge1042ov16215;
extern T0* ge1042ov16216;
extern T0* ge1042ov16247;
extern T0* ge1042ov16248;
extern T0* ge1042ov16250;
extern T0* ge1041ov9722;
extern T0* ge1041ov9279;
extern T0* ge1041ov9550;
extern T0* ge1041ov9107;
extern T0* ge1041ov9717;
extern T0* ge1041ov9444;
extern T0* ge1041ov9274;
extern T0* ge818ov18085;
extern T0* ge818ov18084;
extern T0* ge1041ov9716;
extern T0* ge1041ov9443;
extern T0* ge1041ov9273;
extern T0* ge818ov18086;
extern T0* ge1041ov9734;
extern T0* ge1041ov9457;
extern T0* ge1041ov9291;
extern T0* ge1041ov9733;
extern T0* ge1041ov9456;
extern T0* ge1041ov9290;
extern T0* ge1042ov16135;
extern T0* ge1042ov16123;
extern T0* ge1042ov16397;
extern T0* ge1042ov16148;
extern T0* ge1042ov16375;
extern T0* ge1041ov9684;
extern T0* ge1041ov9241;
extern T0* ge1041ov9680;
extern T0* ge1041ov9425;
extern T0* ge1041ov9237;
extern T0* ge1041ov9681;
extern T0* ge1041ov9238;
extern T0* ge1041ov9488;
extern T0* ge1041ov9045;
extern T0* ge1041ov9601;
extern T0* ge1041ov9381;
extern T0* ge1041ov9158;
extern T0* ge1041ov9682;
extern T0* ge1041ov9239;
extern T0* ge1041ov9503;
extern T0* ge1041ov9338;
extern T0* ge1041ov9060;
extern T0* ge1041ov9502;
extern T0* ge1041ov9059;
extern T0* ge1041ov9501;
extern T0* ge1041ov9337;
extern T0* ge1041ov9058;
extern T0* ge1041ov9505;
extern T0* ge1041ov9062;
extern T0* ge1041ov9506;
extern T0* ge1041ov9063;
extern T0* ge1041ov9500;
extern T0* ge1041ov9336;
extern T0* ge1041ov9057;
extern T0* ge1041ov9699;
extern T0* ge1041ov9435;
extern T0* ge1041ov9256;
extern T0* ge1042ov16384;
extern T0* ge1041ov9477;
extern T0* ge1041ov9324;
extern T0* ge1041ov9034;
extern T0* ge1041ov9551;
extern T0* ge1041ov9108;
extern T0* ge1041ov9656;
extern T0* ge1041ov9409;
extern T0* ge1041ov9213;
extern T0* ge1041ov9654;
extern T0* ge1041ov9211;
extern T0* ge1041ov9652;
extern T0* ge1041ov9209;
extern T0* ge1041ov9651;
extern T0* ge1041ov9208;
extern T0* ge1041ov9677;
extern T0* ge1041ov9423;
extern T0* ge1041ov9234;
extern T0* ge1041ov9679;
extern T0* ge1041ov9424;
extern T0* ge1041ov9236;
extern T0* ge1041ov9669;
extern T0* ge1041ov9418;
extern T0* ge1041ov9226;
extern T0* ge1041ov9711;
extern T0* ge1041ov9268;
extern T0* ge1041ov9655;
extern T0* ge1041ov9212;
extern T0* ge1041ov9653;
extern T0* ge1041ov9210;
extern T0* ge1041ov9650;
extern T0* ge1041ov9207;
extern T0* ge1041ov9649;
extern T0* ge1041ov9206;
extern T0* ge1041ov9673;
extern T0* ge1041ov9230;
extern T0* ge1041ov9668;
extern T0* ge1041ov9225;
extern T0* ge1041ov9657;
extern T0* ge1041ov9410;
extern T0* ge1041ov9214;
extern T0* ge1041ov9658;
extern T0* ge1041ov9215;
extern T0* ge1041ov9689;
extern T0* ge1041ov9246;
extern T0* ge1041ov9492;
extern T0* ge1041ov9049;
extern T0* ge1041ov9490;
extern T0* ge1041ov9047;
extern T0* ge1041ov9489;
extern T0* ge1041ov9046;
extern T0* ge1041ov9685;
extern T0* ge1041ov9427;
extern T0* ge1041ov9242;
extern T0* ge1041ov9743;
extern T0* ge1041ov9465;
extern T0* ge1041ov9300;
extern T0* ge1041ov9744;
extern T0* ge1041ov9301;
extern T0* ge1041ov9693;
extern T0* ge1041ov9432;
extern T0* ge1041ov9250;
extern T0* ge1041ov9692;
extern T0* ge1041ov9431;
extern T0* ge1041ov9249;
extern T0* ge1041ov9730;
extern T0* ge1041ov9453;
extern T0* ge1041ov9287;
extern T0* ge1041ov9700;
extern T0* ge1041ov9436;
extern T0* ge1041ov9257;
extern T0* ge1041ov9617;
extern T0* ge1041ov9174;
extern T0* ge1041ov9754;
extern T0* ge1041ov9469;
extern T0* ge1041ov9311;
extern T0* ge1041ov9752;
extern T0* ge1041ov9309;
extern T0* ge1041ov9753;
extern T0* ge1041ov9310;
extern T0* ge1041ov9749;
extern T0* ge1041ov9467;
extern T0* ge1041ov9306;
extern T0* ge1041ov9747;
extern T0* ge1041ov9304;
extern T0* ge1041ov9748;
extern T0* ge1041ov9305;
extern T0* ge1041ov9750;
extern T0* ge1041ov9468;
extern T0* ge1041ov9307;
extern T0* ge1041ov9751;
extern T0* ge1041ov9308;
extern T0* ge1041ov9745;
extern T0* ge1041ov9466;
extern T0* ge1041ov9302;
extern T0* ge1041ov9746;
extern T0* ge1041ov9303;
extern T0* ge1041ov9720;
extern T0* ge1041ov9446;
extern T0* ge1041ov9277;
extern T0* ge1041ov9719;
extern T0* ge1041ov9276;
extern T0* ge1041ov9587;
extern T0* ge1041ov9144;
extern T0* ge1041ov9590;
extern T0* ge1041ov9376;
extern T0* ge1041ov9147;
extern T0* ge1041ov9580;
extern T0* ge1041ov9372;
extern T0* ge1041ov9137;
extern T0* ge1041ov9583;
extern T0* ge1041ov9374;
extern T0* ge1041ov9140;
extern T0* ge1041ov9586;
extern T0* ge1041ov9143;
extern T0* ge1041ov9552;
extern T0* ge1041ov9109;
extern T0* ge1041ov9664;
extern T0* ge1041ov9415;
extern T0* ge1041ov9221;
extern T0* ge1041ov9663;
extern T0* ge1041ov9414;
extern T0* ge1041ov9220;
extern T0* ge1041ov9661;
extern T0* ge1041ov9413;
extern T0* ge1041ov9218;
extern T0* ge1041ov9662;
extern T0* ge1041ov9219;
extern T0* ge1041ov9660;
extern T0* ge1041ov9412;
extern T0* ge1041ov9217;
extern T0* ge1041ov9659;
extern T0* ge1041ov9411;
extern T0* ge1041ov9216;
extern T0* ge1041ov9665;
extern T0* ge1041ov9417;
extern T0* ge1041ov9222;
extern T0* ge66ov37592;
extern T0* ge1030ov8626;
extern T0* ge1030ov8621;
extern T0* ge1030ov8616;
extern T0* ge1041ov9728;
extern T0* ge1041ov9450;
extern T0* ge1041ov9285;
extern T0* ge1042ov16147;
extern T0* ge1042ov16149;
extern T0* ge1042ov16370;
extern T0* ge1042ov16195;
extern T0* ge1041ov9638;
extern T0* ge1041ov9403;
extern T0* ge1041ov9195;
extern T0* ge1041ov9639;
extern T0* ge1041ov9196;
extern T0* ge1041ov9637;
extern T0* ge1041ov9402;
extern T0* ge1041ov9194;
extern T0* ge1042ov16199;
extern T0* ge1041ov9481;
extern T0* ge1041ov9327;
extern T0* ge1041ov9038;
extern T0* ge1041ov9482;
extern T0* ge1041ov9328;
extern T0* ge1041ov9039;
extern T0* ge1041ov9609;
extern T0* ge1041ov9386;
extern T0* ge1041ov9166;
extern T0* ge1041ov9535;
extern T0* ge1041ov9355;
extern T0* ge1041ov9092;
extern T0* ge1041ov9536;
extern T0* ge1041ov9093;
extern T0* ge1041ov9611;
extern T0* ge1041ov9387;
extern T0* ge1041ov9168;
extern T0* ge1041ov9612;
extern T0* ge1041ov9169;
extern T0* ge1041ov9610;
extern T0* ge1041ov9167;
extern T0* ge1041ov9613;
extern T0* ge1041ov9388;
extern T0* ge1041ov9170;
extern T0* ge1041ov9589;
extern T0* ge1041ov9146;
extern T0* ge1041ov9591;
extern T0* ge1041ov9148;
extern T0* ge1041ov9581;
extern T0* ge1041ov9138;
extern T0* ge1041ov9584;
extern T0* ge1041ov9141;
extern T0* ge1041ov9582;
extern T0* ge1041ov9373;
extern T0* ge1041ov9139;
extern T0* ge1041ov9588;
extern T0* ge1041ov9145;
extern T0* ge1041ov9499;
extern T0* ge1041ov9056;
extern T0* ge1041ov9615;
extern T0* ge1041ov9172;
extern T0* ge1041ov9764;
extern T0* ge1041ov9473;
extern T0* ge1041ov9321;
extern T0* ge1041ov9762;
extern T0* ge1041ov9319;
extern T0* ge1041ov9763;
extern T0* ge1041ov9320;
extern T0* ge1041ov9759;
extern T0* ge1041ov9471;
extern T0* ge1041ov9316;
extern T0* ge1041ov9757;
extern T0* ge1041ov9314;
extern T0* ge1041ov9758;
extern T0* ge1041ov9315;
extern T0* ge1041ov9760;
extern T0* ge1041ov9472;
extern T0* ge1041ov9317;
extern T0* ge1041ov9761;
extern T0* ge1041ov9318;
extern T0* ge1041ov9755;
extern T0* ge1041ov9470;
extern T0* ge1041ov9312;
extern T0* ge1041ov9756;
extern T0* ge1041ov9313;
extern T0* ge1243ov21101;
extern T0* ge1243ov21100;
extern T0* ge357ov5877;
extern T0* ge270ov5877;
extern T0* ge257ov5877;
extern T0* ge16ov10741;
extern T0* ge16ov10742;
extern T0* ge16ov10743;
extern T0* ge1040ov8656;
extern T0* ge1040ov8652;
extern T0* ge1040ov8651;
extern T0* ge1040ov8655;
extern T0* ge1040ov8650;
extern T0* ge1040ov8654;
extern T0* ge1040ov8649;
extern T0* ge1040ov8653;
extern T0* ge1040ov8648;
extern T0* ge828ov16580;
extern T0* ge824ov4295;
extern T0* ge824ov4296;
extern T0* ge824ov4276;
extern T0* ge824ov4292;
extern T0* ge824ov4280;
extern T0* ge824ov4281;
extern T0* ge824ov4282;
extern T0* ge824ov4283;
extern T0* ge824ov4277;
extern T0* ge824ov4284;
extern T0* ge824ov4285;
extern T0* ge824ov4286;
extern T0* ge824ov4287;
extern T0* ge824ov4278;
extern T0* ge824ov4293;
extern T0* ge824ov4288;
extern T0* ge824ov4289;
extern T0* ge824ov4290;
extern T0* ge824ov4279;
extern T0* ge824ov4291;
extern T0* ge824ov4294;
extern T0* ge824ov4234;
extern T0* ge1312ov31370;
extern T0* ge1312ov31372;
extern T0* ge725ov6893;
extern T0* ge725ov6894;
extern T0* ge824ov4272;
extern T0* ge824ov4271;
extern T0* ge824ov4259;
extern T0* ge824ov4260;
extern T0* ge824ov4261;
extern T0* ge824ov4262;
extern T0* ge824ov4263;
extern T0* ge824ov4264;
extern T0* ge824ov4265;
extern T0* ge824ov4266;
extern T0* ge824ov4267;
extern T0* ge824ov4268;
extern T0* ge824ov4269;
extern T0* ge824ov4270;
extern T0* ge824ov4274;
extern T0* ge824ov4275;
extern T0* ge824ov4255;
extern T0* ge824ov4256;
extern T0* ge824ov4257;
extern T0* ge824ov4258;
extern T0* ge824ov4273;
extern T0* ge850ov17208;
extern T0* ge850ov17207;
extern T0* ge824ov4187;
extern T0* ge824ov4188;
extern T0* ge824ov4186;
extern T0* ge824ov4184;
extern T0* ge824ov4185;
extern T0* ge824ov4192;
extern T0* ge824ov4193;
extern T0* ge824ov4191;
extern T0* ge824ov4189;
extern T0* ge824ov4190;
extern T0* ge824ov4194;
extern T0* ge824ov4195;
extern T0* ge824ov4196;
extern T0* ge824ov4222;
extern T0* ge869ov17786;
extern T0* ge857ov17333;
extern T0* ge51ov5881;
extern T0* ge37ov5881;
extern T0* ge43ov5881;
extern T0* ge42ov5881;
extern T0* ge41ov5881;
extern T0* ge32ov5881;
extern T0* ge31ov5881;
extern T0* ge48ov5881;
extern T0* ge61ov5881;
extern T0* ge1162ov5881;
extern T0* ge169ov5881;
extern T0* ge168ov5881;
extern T0* ge1156ov5881;
extern T0* ge1172ov5881;
extern T0* ge1169ov5881;
extern T0* ge1168ov5881;
extern T0* ge1164ov5881;
extern T0* ge1171ov5881;
extern T0* ge1163ov5881;
extern T0* ge1175ov5881;
extern T0* ge1159ov5881;
extern T0* ge1170ov5881;
extern T0* ge1174ov5881;
extern T0* ge1166ov5881;
extern T0* ge1157ov5881;
extern T0* ge1165ov5881;
extern T0* ge163ov5881;
extern T0* ge166ov5881;
extern T0* ge173ov5881;
extern T0* ge162ov5881;
extern T0* ge267ov20424;
extern T0* ge254ov4734;
extern T0* geic2;
extern T0* geic3;
extern T0* geic4;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field (eif_array, \
										"area", EIF_REFERENCE); \
		memcpy ((type *) area, c_array, nelts * sizeof (type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference (EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS
extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter();
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen( EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date (EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date (EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef EIF_THREADS

/*
	Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
*/

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, attr)
#define eif_thr_wait(term)
#define eif_thr_wait_with_timeout(term,tms) EIF_FALSE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_FALSE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,attr) GE_thread_create_with_attr((current_obj),(init_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(term) GE_thread_wait(term)
#define eif_thr_wait_with_timeout(term,tms) GE_thread_wait_with_timeout((term),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_trylock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 0
#define eif_thr_cond_destroy(a_mutex_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_FALSE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(an_item)
#define eif_thr_rwl_unlock(an_item)
#define eif_thr_rwl_wrlock(an_item)
#define eif_thr_rwl_destroy(an_item)

#define eif_thr_sleep(nanoseconds)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define EIF_GET_CONTEXT
#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2013, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open (EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next (EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind (EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close (EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable (EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable (EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current (EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir (EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size();

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
