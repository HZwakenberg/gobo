/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Class name mapping as defined in the FreeELKS library. */
#ifndef EIF_INTEGER
#define EIF_INTEGER EIF_INTEGER_32
#endif
#ifndef EIF_CHARACTER
#define EIF_CHARACTER EIF_CHARACTER_8
#endif
#ifndef EIF_REAL
#define EIF_REAL EIF_REAL_32
#endif
#ifndef EIF_DOUBLE
#define EIF_DOUBLE EIF_REAL_64
#endif
#ifndef GE_ms
#define GE_ms(s,c) GE_ms8((s),(c))
#endif

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <stddef.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif
/* VxWorks definition */
#ifdef EIF_VXWORKS
#define EIF_IS_VXWORKS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VXWORKS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Portable integer pointers */
#ifdef EIF_WINDOWS
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
typedef __int64 intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#ifndef _UINTPTR_T_DEFINED
#define _UINTPTR_T_DEFINED
#ifdef _WIN64
  typedef unsigned __int64 uintptr_t;
#else
  typedef unsigned int uintptr_t;
#endif
#endif
#endif

/* C type for underlying integer type identifying object's dynamic type. */
typedef uint16_t EIF_TYPE_INDEX;

/*
 * Abstraction representing an Eiffel type.
 * It is made of a compiler type-id,
 * and of some annotations (attached/detachable/separate/variant/frozen).
 */
typedef struct eif_type {
	EIF_TYPE_INDEX id;
	EIF_TYPE_INDEX annotations;
} EIF_TYPE;

/*
 * Since EIF_TYPE and EIF_ENCODED_TYPE have the same size, the encoded version
 * is basically a memcpy version of the EIF_TYPE representation.
 * It is used to provide backward compatibility to most Eiffel and
 * C APIs manipulating types as an INTEGER.
 */
typedef int32_t EIF_ENCODED_TYPE;
typedef EIF_ENCODED_TYPE EIF_TYPE_ID;
#define EIF_NO_TYPE (EIF_TYPE_ID)(-1)

/* Basic Eiffel types */
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags;} EIF_ANY;
typedef EIF_ANY* EIF_REFERENCE;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; EIF_REFERENCE area; EIF_INTEGER count;} EIF_STRING;
typedef struct {EIF_TYPE_INDEX id; uint16_t flags; uint32_t offset; EIF_INTEGER count; EIF_INTEGER capacity;} EIF_SPECIAL;

#ifdef EIF_WINDOWS
typedef wchar_t EIF_NATIVE_CHAR;
#else
typedef char EIF_NATIVE_CHAR;
#endif
typedef EIF_NATIVE_CHAR* EIF_FILENAME;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

#define EIF_IS_WORKBENCH EIF_FALSE
#define EIF_POINTER_DISPLAY "lX"

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif
#ifdef __LCC__
/* lcc-win32 reports a constant overflow for -21474836478. */
#define GE_min_int32 (-GE_int32(2147483647)-GE_int32(1))
#else
#define GE_min_int32 GE_int32(-2147483648)
#endif
#if defined(__LCC__) || defined(__MINGW32__)
/* lcc-win32 reports a constant overflow for -9223372036854775808. */
/* mingw-win64 warns that integer constant is so large that it is unsigned. */
#define GE_min_int64 (-GE_int64(9223372036854775807)-GE_int64(1))
#else
#define GE_min_int64 GE_int64(-9223372036854775808)
#endif
#if defined(__LCC__) && !defined(_WIN64)
/* lcc-win32 does not consider 64 bit constants as constants in case statement. */
#define GE_case_int64(x) ((int32_t)(x))
#define GE_case_nat64(x) ((uint32_t)(x))
#else
#define GE_case_int64(x) (x)
#define GE_case_nat64(x) (x)
#endif

#ifdef _WIN64
#define GE_IS_64_BITS EIF_TRUE
#else
#define GE_IS_64_BITS EIF_TEST(sizeof(void*)==64)
#endif

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
 * Gobo compiler version.
 * Starts with 6080 (looks like GOBO) followed by 5 digits.
 */
#define GE_compiler_version() 608000001

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)
#define SIGBLOCK
#define SIGRESUME
#define rt_public				/* default C scope */
#define rt_private static		/* static outside a block means private */
#define rt_shared				/* data shared between modules, but not public */
typedef intptr_t rt_int_ptr;
typedef uintptr_t rt_uint_ptr;
#define RTMS(s) GE_str8(s)
#define RTMS_EX(s,c) GE_ms8((s),(c))

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement once features"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ONCE_H
#define GE_ONCE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Struct to keep track of the call status
 * and results of once features.
 */
typedef struct {
	EIF_BOOLEAN* boolean_value;
	EIF_REFERENCE* boolean_exception;
	unsigned char* boolean_status;
	unsigned int boolean_count;
	EIF_CHARACTER_8* character_8_value;
	EIF_REFERENCE* character_8_exception;
	unsigned char* character_8_status;
	unsigned int character_8_count;
	EIF_CHARACTER_32* character_32_value;
	EIF_REFERENCE* character_32_exception;
	unsigned char* character_32_status;
	unsigned int character_32_count;
	EIF_INTEGER_8* integer_8_value;
	EIF_REFERENCE* integer_8_exception;
	unsigned char* integer_8_status;
	unsigned int integer_8_count;
	EIF_INTEGER_16* integer_16_value;
	EIF_REFERENCE* integer_16_exception;
	unsigned char* integer_16_status;
	unsigned int integer_16_count;
	EIF_INTEGER_32* integer_32_value;
	EIF_REFERENCE* integer_32_exception;
	unsigned char* integer_32_status;
	unsigned int integer_32_count;
	EIF_INTEGER_64* integer_64_value;
	EIF_REFERENCE* integer_64_exception;
	unsigned char* integer_64_status;
	unsigned int integer_64_count;
	EIF_NATURAL_8* natural_8_value;
	EIF_REFERENCE* natural_8_exception;
	unsigned char* natural_8_status;
	unsigned int natural_8_count;
	EIF_NATURAL_16* natural_16_value;
	EIF_REFERENCE* natural_16_exception;
	unsigned char* natural_16_status;
	unsigned int natural_16_count;
	EIF_NATURAL_32* natural_32_value;
	EIF_REFERENCE* natural_32_exception;
	unsigned char* natural_32_status;
	unsigned int natural_32_count;
	EIF_NATURAL_64* natural_64_value;
	EIF_REFERENCE* natural_64_exception;
	unsigned char* natural_64_status;
	unsigned int natural_64_count;
	EIF_POINTER* pointer_value;
	EIF_REFERENCE* pointer_exception;
	unsigned char* pointer_status;
	unsigned int pointer_count;
	EIF_REAL_32* real_32_value;
	EIF_REFERENCE* real_32_exception;
	unsigned char* real_32_status;
	unsigned int real_32_count;
	EIF_REAL_64* real_64_value;
	EIF_REFERENCE* real_64_exception;
	unsigned char* real_64_status;
	unsigned int real_64_count;
	EIF_REFERENCE* reference_value;
	EIF_REFERENCE* reference_exception;
	unsigned char* reference_status;
	unsigned int reference_count;
	EIF_REFERENCE* procedure_exception;
	unsigned char* procedure_status;
	unsigned int procedure_count;
} GE_onces;

/*
 * Variable to keep track of the call status
 * and results of once-per-process features.
 */
extern GE_onces* GE_process_onces;

/*
 * Initialize `GE_process_onces'.
 */
extern void GE_init_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Create a new 'GE_onces' struct which can deal with the
 * numbers of once features passed as argument.
 */
extern GE_onces* GE_new_onces(
	unsigned int a_boolean_count,
	unsigned int a_character_8_count,
	unsigned int a_character_32_count,
	unsigned int a_integer_8_count,
	unsigned int a_integer_16_count,
	unsigned int a_integer_32_count,
	unsigned int a_integer_64_count,
	unsigned int a_natural_8_count,
	unsigned int a_natural_16_count,
	unsigned int a_natural_32_count,
	unsigned int a_natural_64_count,
	unsigned int a_pointer_count,
	unsigned int a_real_32_count,
	unsigned int a_real_64_count,
	unsigned int a_reference_count,
	unsigned int a_procedure_count);

/*
 * Free memory allocated by `a_onces'.
 */
extern void GE_free_onces(GE_onces* a_onces);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_ONCE_H
#include "ge_once.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_TYPES_H
#include "ge_thread_types.h"
#endif
#endif

#include <setjmp.h>

/*
 * On Linux glibc systems, we need to use sig* versions of jmp_buf,
 * setjmp and longjmp to preserve the signal handling context.
 * One way to detect this is if _SIGSET_H_types has
 * been defined in /usr/include/setjmp.h.
 * NOTE: ANSI only recognizes the non-sig versions.
 */
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define GE_EX_VOID		1			/* Feature applied to void reference */
#define GE_EX_MEM		2			/* No more memory */
#define GE_EX_PRE		3			/* Pre-condition violated */
#define GE_EX_POST		4			/* Post-condition violated */
#define GE_EX_FLOAT		5			/* Floating point exception (signal SIGFPE) */
#define GE_EX_CINV		6			/* Class invariant violated */
#define GE_EX_CHECK		7			/* Check instruction violated */
#define GE_EX_FAIL		8			/* Routine failure */
#define GE_EX_WHEN		9			/* Unmatched inspect value */
#define GE_EX_VAR		10			/* Non-decreasing loop variant */
#define GE_EX_LINV		11			/* Loop invariant violated */
#define GE_EX_SIG		12			/* Operating system signal */
#define GE_EX_BYE		13			/* Eiffel run-time panic */
#define GE_EX_RESC		14			/* Exception in rescue clause */
#define GE_EX_OMEM		15			/* Out of memory (cannot be ignored) */
#define GE_EX_RES		16			/* Resumption failed (retry did not succeed) */
#define GE_EX_CDEF		17			/* Create on deferred */
#define GE_EX_EXT		18			/* External event */
#define GE_EX_VEXP		19			/* Void assigned to expanded */
#define GE_EX_HDLR		20			/* Exception in signal handler */
#define GE_EX_IO		21			/* I/O error */
#define GE_EX_SYS		22			/* Operating system error */
#define GE_EX_RETR		23			/* Retrieval error */
#define GE_EX_PROG		24			/* Developer exception */
#define GE_EX_FATAL		25			/* Eiffel run-time fatal error */
#define GE_EX_DOL		26			/* $ applied to melted feature */
#define GE_EX_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define GE_EX_COM		28			/* COM error raised by EiffelCOM runtime */
#define GE_EX_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */
#define GE_EX_OLD		30			/* Old violation */
#define GE_EX_SEL		31			/* Serialization failure */
#define GE_EX_DIRTY		32			/* SCOOP processor dirty exception. */
#define GE_EX_NEX		32			/* Number of internal exceptions */

/*
 * String buffer used to build the exception trace.
 */
typedef struct GE_exception_trace_buffer_struct GE_exception_trace_buffer;
struct GE_exception_trace_buffer_struct {
	char* area;
	uint32_t count;
	uint32_t capacity;
};

/*
 * Information about the feature being executed.
 */
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
#ifdef GE_USE_CURRENT_IN_EXCEPTION_TRACE
	void* object; /* Current object */
#endif
	const char* class_name;
	const char* feature_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
 * Context of features containing a rescue clause.
 */
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
 * Information about the execution context.
 * One such struct per thread.
 */
typedef struct GE_context_struct GE_context;
struct GE_context_struct {
	GE_call* call; /* Call stack */
	uint32_t in_assertion; /* Is an assertion evaluated? */
	GE_rescue* last_rescue; /* Context of last feature entered containing a rescue clause */
	uint32_t in_rescue; /* Number of rescue clauses currently being executed */
	EIF_REFERENCE exception_manager; /* Exception manager */
	char raising_exception; /* Is an exception currently being raised? */
	char exception_trace_enabled; /* Should exception trace be displayed? */
	long exception_code; /* Code of the exception currently being raised, 0 otherwise */
	const char* exception_tag; /* Tag of the exception currently being raised, NULL otherwise */
	GE_exception_trace_buffer exception_trace_buffer; /* String buffer used to build the exception trace */
	GE_exception_trace_buffer last_exception_trace; /* Last non-routine-failure exception trace */
	int pre_ecma_mapping_status; /* Do we map old names to new name? (i.e. STRING to STRING_8, INTEGER to INTEGER_32, ...). */
#ifdef GE_USE_THREADS
	GE_thread_context* thread; /* Thread context */
	GE_onces* process_onces; /* Cache for status and results of onces-per-process */
	GE_onces* thread_onces; /* Status and results of onces-per-thread */
	void* wel_per_thread_data; /* WEL private data */
#endif
};

/*
 * Default initialization for `GE_context'.
 */
extern GE_context GE_default_context;

/*
 * Execution context of main thread.
 */
extern GE_context* GE_main_context;

/*
 * Execution context of current thread.
 */
extern GE_context* GE_current_context(void);

/*
 * Initialization of exception handling.
 */
extern void GE_init_exception(GE_context* context);

/*
 * Free memory allocated in `a_context' for exception handling.
 */
extern void GE_free_exception(GE_context* a_context);

/*
 * Pointer to function to create a new exception manager object
 * (of type ISE_EXCEPTION_MANAGER).
 */
extern EIF_REFERENCE (*GE_new_exception_manager)(EIF_BOOLEAN);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.init_exception_manager.
 */
extern void (*GE_init_exception_manager)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.last_exception.
 */
extern EIF_REFERENCE (*GE_last_exception)(GE_context*, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.once_raise.
 */
extern void (*GE_once_raise)(GE_context*, EIF_REFERENCE, EIF_REFERENCE);

/*
 * Pointer to Eiffel routine ISE_EXCEPTION_MANAGER.set_exception_data.
 */
extern void (*GE_set_exception_data)(GE_context*, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN, EIF_INTEGER_32, EIF_INTEGER_32, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_REFERENCE, EIF_INTEGER_32, EIF_BOOLEAN);

/*
 * Exception tag associated with `a_code'.
 */
extern char* GE_exception_tag(long a_code);

/*
 * Raise an exception with code `a_code'.
 */
extern void GE_raise(long a_code);

/*
 * Raise an exception with code `a_code' and message `msg'.
 */
extern void GE_raise_with_message(long a_code, const char* msg);

/*
 * Raise an exception from EXCEPTION_MANAGER.
 */
extern void GE_developer_raise(long a_code, char* a_meaning, char* a_message);

/*
 * Raise exception which was raised the first time a once routine
 * was executed when executing it again.
 */
extern void GE_raise_once_exception(GE_context* a_context, EIF_REFERENCE a_exception);

/*
 * Exception, if any, which was last raised in `a_context'.
 */
extern EIF_REFERENCE GE_last_exception_raised(GE_context* a_context);

/*
 * Jump to execute the rescue of the last routine with a rescue
 * in the call stack.
 */
extern void GE_jump_to_last_rescue(GE_context* a_context);

/*
 * Set `in_assertion' to 'not b'.
 * Return the opposite of previous value.
 */
extern EIF_BOOLEAN GE_check_assert(EIF_BOOLEAN b);

/*
 * Check whether the type id of `obj' is not in `type_ids'.
 * If it is, then raise a CAT-call exception. Don't do anything if `obj' is Void.
 * `nb' is the number of ids in `type_ids' and is expected to be >0.
 * `type_ids' is sorted in increasing order.
 * Return `obj'.
 */
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
extern EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, EIF_TYPE_INDEX type_ids[], int nb);

/*
 * Check whether `obj' is Void.
 * If it is, then raise a call-on-void-target exception.
 * Return `obj'.
 */
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
 * Check whether `ptr' is a null pointer.
 * If it is, then raise a no-more-memory exception.
 * Return `ptr'.
 */
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void GE_set_windows_exception_filter(void);
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate native strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2013-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_NATIVE_STRING_H
#define GE_NATIVE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <string.h>
#ifdef EIF_WINDOWS
#ifdef __LCC__
/* With lcc-win32, stat.h should be included before wchar.h. */
#include <sys/stat.h>
#endif
#include <wchar.h>
#else
#include <sys/types.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/* Macro used to manipulate native strings, i.e: (wchar_t*) */
#define GE_nstrlen wcslen /* size of string */
#define GE_nstrncpy wcsncpy /* Copy n characters of one string to another */
#define GE_nstrcpy wcscpy /* Copy one string to another */
#define GE_nstrncat wcsncat /* Append characters of a string */
#define GE_nstrcat wcscat /* Append a string */
#define GE_nstrstr wcsstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) L##quote /* Manifest Native string declaration */
#define GE_nstr_fopen _wfopen /* Open file using native string name */
#define GE_nstrcmp wcscmp /* Compare two strings. */
#define GE_nstrdup _wcsdup /* Duplicate string. */
#define GE_nstr_cat_ascii(dest, src) {							\
		int i;													\
		size_t dest_len, src_len;								\
		dest_len = rt_nstrlen (dest);							\
		src_len = strlen (src);									\
		for (i = 0; i < src_len; i++) {							\
			dest[dest_len + i] = (EIF_NATIVE_CHAR)src[i];		\
		}														\
		dest[dest_len + src_len] = (EIF_NATIVE_CHAR)0;			\
	}

#else /* not EIF_WINDOWS */

/* Macro used to manipulate native strings, i.e: (char*) */
#define GE_nstrlen strlen /* size of string */
#define GE_nstrncpy strncpy /* Copy n characters of one string to another */
#define GE_nstrcpy strcpy /* Copy one string to another */
#define GE_nstrncat strncat /* Append characters of a string */
#define GE_nstrcat strcat /* Append a string */
#define GE_nstrstr strstr /* Return a pointer to the first occurrence of a search string in a string. */
#define GE_nmakestr(quote) quote /* Manifest Native string declaration */
#define GE_nstr_fopen fopen /* Open file using native string name */
#define GE_nstrcmp strcmp /* Compare two strings. */
#define GE_nstrdup strdup /* Duplicate string. */
#define GE_nstr_cat_ascii strcat

#endif


#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern EIF_NATIVE_CHAR** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement type information"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TYPES_H
#define GE_TYPES_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Type annotations.
 * When a type has no annotation, it means a detachable, non-separate, variant type.
 * In all other cases, there will be an annotation.
 */
#define ANNOTATION_MASK			0x007F	/* All possible annotations. */
#define ATTACHED_FLAG			0x0001
#define DETACHABLE_FLAG			0x0002	/* Only present when overriding an attached type. */
#define SEPARATE_FLAG			0x0004
#define VARIANT_FLAG			0x0008	/* Only present when overriding a frozen/poly type. */
#define UNUSABLE_FLAG			0x0010	/* Reserved for backward compatibility for storables. */
#define FROZEN_FLAG				0x0020
#define POLY_FLAG				0x0040

/*
 * Type flags.
 */
#define GE_TYPE_FLAG_SPECIAL		0x0010
#define GE_TYPE_FLAG_TUPLE			0x0020
#define GE_TYPE_FLAG_EXPANDED		0x0040
#define GE_TYPE_FLAG_DEFERRED		0x0080
#define GE_TYPE_FLAG_NONE			0x0100
#define GE_TYPE_FLAG_BASIC_MASK		0x000F /* One of "BOOLEAN", "CHARACTER_8", "CHARACTER_32", "INTEGER_8", "INTEGER_16", "INTEGER_32", "INTEGER_64", "NATURAL_8", "NATURAL_16", "NATURAL_32", "NATURAL_64", "POINTER", "REAL_32", "REAL_64" */
#define GE_TYPE_FLAG_BOOLEAN		0x0001
#define GE_TYPE_FLAG_CHARACTER_8	0x0002
#define GE_TYPE_FLAG_CHARACTER_32	0x0003
#define GE_TYPE_FLAG_INTEGER_8		0x0004
#define GE_TYPE_FLAG_INTEGER_16		0x0005
#define GE_TYPE_FLAG_INTEGER_32		0x0006
#define GE_TYPE_FLAG_INTEGER_64		0x0007
#define GE_TYPE_FLAG_NATURAL_8		0x0008
#define GE_TYPE_FLAG_NATURAL_16		0x0009
#define GE_TYPE_FLAG_NATURAL_32		0x000A
#define GE_TYPE_FLAG_NATURAL_64		0x000B
#define GE_TYPE_FLAG_POINTER		0x000C
#define GE_TYPE_FLAG_REAL_32		0x000D
#define GE_TYPE_FLAG_REAL_64		0x000E

/*
 * Convention for attribute types.
 * The values are in sync with REFLECTOR_CONSTANTS.
 */
#define GE_TYPE_KIND_INVALID		-1
#define GE_TYPE_KIND_POINTER		0
#define GE_TYPE_KIND_REFERENCE		1
#define GE_TYPE_KIND_CHARACTER_8	2
#define GE_TYPE_KIND_BOOLEAN		3
#define GE_TYPE_KIND_INTEGER_32		4
#define GE_TYPE_KIND_REAL_32		5
#define GE_TYPE_KIND_REAL_64		6
#define GE_TYPE_KIND_EXPANDED		7
#define GE_TYPE_KIND_INTEGER_8		9
#define GE_TYPE_KIND_INTEGER_16		10
#define GE_TYPE_KIND_INTEGER_64 	11
#define GE_TYPE_KIND_CHARACTER_32	12
#define GE_TYPE_KIND_NATURAL_8		13
#define GE_TYPE_KIND_NATURAL_16		14
#define GE_TYPE_KIND_NATURAL_32 	15
#define GE_TYPE_KIND_NATURAL_64 	16

/*
 * Object flags.
 */
#define GE_OBJECT_FLAG_MARKED		0x0001

/*
 * Ancestor relationship between two types X and Y.
 */
#ifdef GE_USE_ANCESTORS
typedef struct {
	EIF_TYPE_INDEX type_id; /* Type id of Y */
	EIF_BOOLEAN conforms; /* Does X conform to Y? */
	void (**qualified_calls)(); /* Function pointers, indexed by call id, when the static type of the target is Y and the dynamic type is X */
} GE_ancestor;
#endif

/*
 * Attribute.
 */
#ifdef GE_USE_ATTRIBUTES
typedef struct {
#ifdef GE_USE_ATTRIBUTE_NAME
	const char* name; /* Attribute name */
#endif
#ifdef GE_USE_ATTRIBUTE_TYPE_ID
	EIF_ENCODED_TYPE type_id; /* Static type id */
#endif
#ifdef GE_USE_ATTRIBUTE_OFFSET
	uint32_t offset; /* Address offset in object */
#endif
} GE_attribute;
#endif

/*
 * Type information.
 */
typedef struct {
	EIF_TYPE_INDEX type_id;
	uint16_t flags;
#ifdef GE_USE_TYPE_GENERATOR
	const char* generator; /* Generator class name */
#endif
#ifdef GE_USE_TYPE_NAME
	const char* name; /* Full type name */
#endif
#ifdef GE_USE_TYPE_GENERIC_PARAMETERS
	EIF_ENCODED_TYPE* generic_parameters;
	uint32_t generic_parameter_count;
#endif
#ifdef GE_USE_ANCESTORS
	GE_ancestor** ancestors;
	uint32_t ancestor_count;
#endif
#ifdef GE_USE_ATTRIBUTES
	GE_attribute** attributes;
	uint32_t attribute_count;
#endif
#ifdef GE_USE_TYPE_OBJECT_SIZE
	uint64_t object_size;
#endif
	EIF_REFERENCE (*new_instance)();
	void (*dispose)(GE_context*, EIF_REFERENCE);
} GE_type_info;

typedef struct {
	EIF_TYPE_INDEX id; /* Type id of the "TYPE [X]" object */
	EIF_INTEGER type_id; /* Type id of the type "X" */
	EIF_BOOLEAN is_special;
	void (*dispose)(GE_context*, EIF_REFERENCE);
	EIF_REFERENCE a1; /* internal_name */
	EIF_REFERENCE a2; /* internal_name_32 */
} EIF_TYPE_OBJ;

/*
 * Types indexed by type id.
 * Generated by the compiler.
 */
extern EIF_TYPE_OBJ GE_types[];
extern GE_type_info GE_type_infos[];

/*
 * Number of type infos in `GE_type_infos'.
 * Do not take into account the fake item at index 0.
 */
extern int GE_type_info_count;

/*
 * Encode a EIF_TYPE into a EIF_ENCODED_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_ENCODED_TYPE GE_encoded_type(EIF_TYPE a_type);

/*
 * Decode a EIF_ENCODED_TYPE into a EIF_TYPE.
 * The lower part of EIF_ENCODED_TYPE contains the .id field,
 * and the upper part the .annotations.
 */
extern EIF_TYPE GE_decoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Type with `a_id' and `a_annotations'.
 */
extern EIF_TYPE GE_new_type(EIF_TYPE_INDEX a_id, EIF_TYPE_INDEX a_annotations);

/*
 * Type of object `obj'.
 */
#define GE_object_type(obj)	GE_new_type(((EIF_REFERENCE)(obj))->id, 0x0)
#define GE_object_encoded_type(obj) GE_encoded_type(GE_object_type(obj))

/*
 * Attachment status of `a_type'.
 */
#define GE_is_attached_type(a_type) EIF_TEST(((a_type).annotations & ATTACHED_FLAG) || GE_is_expanded_type_index((a_type).id))
#define GE_is_attached_encoded_type(a_type) GE_is_attached_type(GE_decoded_type(a_type))

/*
 * Associated detachable type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_non_attached_type(EIF_TYPE a_type);
#define GE_non_attached_encoded_type(a_type) GE_encoded_type(GE_non_attached_type(GE_decoded_type(a_type)))

/*
 * Associated attached type of `a_type' if any,
 * otherwise `a_type'.
 */
extern EIF_TYPE GE_attached_type(EIF_TYPE a_type);
#define GE_attached_encoded_type(t) GE_encoded_type(GE_attached_type(GE_decoded_type(t)))

/*
 * Is `a_type' a SPECIAL type?
 */
#define GE_is_special_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_SPECIAL)
#define GE_is_special_encoded_type(a_type) GE_is_special_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_object(obj) GE_is_special_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of user-defined expanded type?
 */
extern EIF_BOOLEAN GE_is_special_of_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_expanded_encoded_type(a_type) GE_is_special_of_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_expanded_object(obj) GE_is_special_of_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type?
 */
extern EIF_BOOLEAN GE_is_special_of_reference_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_encoded_type(a_type) GE_is_special_of_reference_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_object(obj) GE_is_special_of_reference_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a SPECIAL type of reference type or basic expanded type?
 * (Note that user-defined expanded types are excluded.)
 */
extern EIF_BOOLEAN GE_is_special_of_reference_or_basic_expanded_type_index(EIF_TYPE_INDEX a_type);
#define GE_is_special_of_reference_or_basic_expanded_encoded_type(a_type) GE_is_special_of_reference_or_basic_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_special_of_reference_or_basic_expanded_object(obj) GE_is_special_of_reference_or_basic_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a TUPLE type?
 */
#define GE_is_tuple_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_TUPLE)
#define GE_is_tuple_encoded_type(a_type) GE_is_tuple_type_index(GE_decoded_type(a_type).id)
#define GE_is_tuple_object(obj) GE_is_tuple_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' an expanded type?
 */
#define GE_is_expanded_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_EXPANDED)
#define GE_is_expanded_encoded_type(a_type) GE_is_expanded_type_index(GE_decoded_type(a_type).id)
#define GE_is_expanded_object(obj) GE_is_expanded_type_index(((EIF_REFERENCE)(obj))->id)

/*
 * Is `a_type' a type whose base class is deferred?
 */
#define GE_is_deferred_type_index(a_type) EIF_TEST(GE_type_infos[a_type].flags & GE_TYPE_FLAG_DEFERRED)
#define GE_is_deferred_encoded_type(a_type) GE_is_deferred_type_index(GE_decoded_type(a_type).id)

/*
 * Does `i'-th field of `a_object + a_physical_offset' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_copy_semantics_field(EIF_INTEGER i, EIF_POINTER a_object, EIF_INTEGER a_physical_offset);

/*
 * Does `i'-th item of special `a_object' (which is expected to be reference)
 * denote a reference with copy semantics?
 */
extern EIF_BOOLEAN GE_is_special_copy_semantics_item(EIF_INTEGER i, EIF_POINTER a_object);

/*
 * Generator class name of `a_type'.
 */
extern EIF_REFERENCE GE_generator_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generator_of_encoded_type(a_type) GE_generator_of_type_index(GE_decoded_type(a_type).id)

/*
 * Full name of `a_type'.
 */
extern EIF_REFERENCE GE_generating_type_of_encoded_type(EIF_ENCODED_TYPE a_type);

/*
 * Encoded type whose name is `a_name'.
 * -1 if no such type.
 */
extern EIF_ENCODED_TYPE GE_encoded_type_from_name(EIF_POINTER a_name);

/*
 * Does `a_type_1' conform to `a_type_2'?
 */
extern EIF_BOOLEAN GE_encoded_type_conforms_to(EIF_ENCODED_TYPE a_type_1, EIF_ENCODED_TYPE a_type_2);

/*
 * Number of generic parameters.
 */
extern EIF_INTEGER GE_generic_parameter_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_generic_parameter_count_of_encoded_type(a_type) GE_generic_parameter_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Type of `i'-th generic parameter of `a_type'.
 */
extern EIF_INTEGER GE_generic_parameter_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER i);
#define GE_generic_parameter_of_encoded_type(a_type,i) GE_generic_parameter_of_type_index(GE_decoded_type(a_type).id, (i))

/*
 * Number of fields of an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_count_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_field_count_of_encoded_type(a_type) GE_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Physical offset of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_offset_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_offset_of_encoded_type(i, a_type) GE_field_offset_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Name of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_POINTER GE_field_name_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_name_of_encoded_type(i, a_type) GE_field_name_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Static type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_static_type_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_static_type_of_encoded_type(i, a_type) GE_field_static_type_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Kind of type of the `i'-th field for an object of dynamic type `a_type'.
 */
extern EIF_INTEGER GE_field_type_kind_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_field_type_kind_of_encoded_type(i, a_type) GE_field_type_kind_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Physical size of `a_object'.
 */
extern EIF_NATURAL_64 GE_object_size(EIF_POINTER a_object);

/*
 * Is `i'-th field of objects of type `a_type' a user-defined expanded attribute?
 */
extern EIF_BOOLEAN GE_is_field_expanded_of_type_index(EIF_INTEGER i, EIF_TYPE_INDEX a_type);
#define GE_is_field_expanded_of_encoded_type(i, a_type) GE_is_field_expanded_of_type_index((i), GE_decoded_type(a_type).id)

#define GE_field_address_at(a_field_offset, a_object, a_physical_offset) ((char*)(a_object) + (a_physical_offset) + (a_field_offset))
#define GE_object_at_offset(a_enclosing, a_physical_offset) (EIF_REFERENCE)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_raw_object_at_offset(a_enclosing, a_physical_offset) (EIF_POINTER)(GE_field_address_at(0, (a_enclosing), (a_physical_offset)))
#define GE_object_encoded_type_at_offset(a_enclosing, a_physical_offset) GE_object_encoded_type(GE_raw_object_at_offset((a_enclosing), (a_physical_offset)))
#define GE_boolean_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_character_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_integer_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_8_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_16_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_natural_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_pointer_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_32_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_real_64_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_raw_reference_field_at(a_field_offset, a_object, a_physical_offset) (EIF_POINTER)*(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_reference_field_at(a_field_offset, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address_at((a_field_offset), (a_object), (a_physical_offset)))
#define GE_set_boolean_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_boolean_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_character_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_character_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_integer_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_integer_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_8_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_8_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_16_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_16_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_natural_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_natural_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_pointer_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_pointer_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_32_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_32_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_real_64_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_real_64_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value
#define GE_set_reference_field_at(a_field_offset, a_object, a_physical_offset, a_value) GE_reference_field_at((a_field_offset), (a_object), (a_physical_offset)) = a_value

#if defined(GE_USE_ATTRIBUTES) && defined(GE_USE_ATTRIBUTE_OFFSET)
#define GE_field_address(i, a_object, a_physical_offset) GE_field_address_at(GE_type_infos[((EIF_REFERENCE)(a_object))->id].attributes[(i) - 1]->offset, (a_object), (a_physical_offset))
#define GE_boolean_field(i, a_object, a_physical_offset) *(EIF_BOOLEAN*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_8_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_character_32_field(i, a_object, a_physical_offset) *(EIF_CHARACTER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_8_field(i, a_object, a_physical_offset) *(EIF_INTEGER_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_16_field(i, a_object, a_physical_offset) *(EIF_INTEGER_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_32_field(i, a_object, a_physical_offset) *(EIF_INTEGER_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_integer_64_field(i, a_object, a_physical_offset) *(EIF_INTEGER_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_8_field(i, a_object, a_physical_offset) *(EIF_NATURAL_8*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_16_field(i, a_object, a_physical_offset) *(EIF_NATURAL_16*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_32_field(i, a_object, a_physical_offset) *(EIF_NATURAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_natural_64_field(i, a_object, a_physical_offset) *(EIF_NATURAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_pointer_field(i, a_object, a_physical_offset) *(EIF_POINTER*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_32_field(i, a_object, a_physical_offset) *(EIF_REAL_32*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_real_64_field(i, a_object, a_physical_offset) *(EIF_REAL_64*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_reference_field(i, a_object, a_physical_offset) *(EIF_REFERENCE*)(GE_field_address((i), (a_object), (a_physical_offset)))
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value) GE_boolean_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value) GE_character_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value) GE_character_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value) GE_integer_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value) GE_integer_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value) GE_integer_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value) GE_integer_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value) GE_natural_8_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value) GE_natural_16_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value) GE_natural_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value) GE_natural_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value) GE_pointer_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value) GE_real_32_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value) GE_real_64_field((i), (a_object), (a_physical_offset)) = (a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value) GE_reference_field((i), (a_object), (a_physical_offset)) = (a_value)
#else
#define GE_boolean_field(i, a_object, a_physical_offset) (EIF_BOOLEAN)0
#define GE_character_8_field(i, a_object, a_physical_offset) (EIF_CHARACTER_8)0
#define GE_character_32_field(i, a_object, a_physical_offset) (EIF_CHARACTER_32)0
#define GE_integer_8_field(i, a_object, a_physical_offset) (EIF_INTEGER_8)0
#define GE_integer_16_field(i, a_object, a_physical_offset) (EIF_INTEGER_16)0
#define GE_integer_32_field(i, a_object, a_physical_offset) (EIF_INTEGER_32)0
#define GE_integer_64_field(i, a_object, a_physical_offset) (EIF_INTEGER_64)0
#define GE_natural_8_field(i, a_object, a_physical_offset) (EIF_NATURAL_8)0
#define GE_natural_16_field(i, a_object, a_physical_offset) (EIF_NATURAL_16)0
#define GE_natural_32_field(i, a_object, a_physical_offset) (EIF_NATURAL_32)0
#define GE_natural_64_field(i, a_object, a_physical_offset) (EIF_NATURAL_64)0
#define GE_pointer_field(i, a_object, a_physical_offset) (EIF_POINTER)0
#define GE_real_32_field(i, a_object, a_physical_offset) (EIF_REAL_32)0
#define GE_real_64_field(i, a_object, a_physical_offset) (EIF_REAL_64)0
#define GE_reference_field(i, a_object, a_physical_offset) (EIF_REFERENCE)0
#define GE_set_boolean_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_character_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_integer_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_8_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_16_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_natural_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_pointer_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_32_field(i, a_object, a_physical_offset, a_value)
#define GE_set_real_64_field(i, a_object, a_physical_offset, a_value)
#define GE_set_reference_field(i, a_object, a_physical_offset, a_value)
#endif

/*
 * Number of non-transient fields of an object of dynamic type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_persistent_field_count_of_type_index(a_type) GE_field_count_of_type_index(a_type)
#define GE_persistent_field_count_of_encoded_type(a_type) GE_persistent_field_count_of_type_index(GE_decoded_type(a_type).id)

/*
 * Is `i'-th field of objects of type `a_type' a transient field?
 * TODO: storable not implemented yet.
 */
#define GE_is_field_transient_of_type_index(i, a_type) EIF_FALSE
#define GE_is_field_transient_of_encoded_type(i, a_type) GE_is_field_transient_of_type_index((i), GE_decoded_type(a_type).id)

/*
 * Storable version of objects of type `a_type'.
 * TODO: storable not implemented yet.
 */
#define GE_storable_version_of_type_index(a_type) EIF_VOID
#define GE_storable_version_of_encoded_type(a_type) GE_storable_version_of_type_index(GE_decoded_type(a_type).id)

/*
 * Get a lock on `GE_mark_object' and `GE_unmark_object' routines so that
 * 2 threads cannot `GE_mark_object' and `GE_unmark_object' at the same time.
 */
extern void GE_lock_marking(void);

/*
 * Release a lock on `GE_mark_object' and `GE_unmark_object', so that another
 * thread can use `GE_mark_object' and `GE_unmark_object'.
 */
extern void GE_unlock_marking(void);

/*
 * Is `obj' marked?
 */
extern EIF_BOOLEAN GE_is_object_marked(EIF_POINTER obj);

/*
 * Mark `obj'.
 */
extern void GE_mark_object(EIF_POINTER obj);

/*
 * Unmark `obj'.
 */
extern void GE_unmark_object(EIF_POINTER obj);

/*
 * New instance of dynamic `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 * `a_type' cannot represent a SPECIAL type, use
 * `GE_new_special_instance_of_special_type_index' instead.
 */
extern EIF_REFERENCE GE_new_instance_of_type_index(EIF_TYPE_INDEX a_type);
#define GE_new_instance_of_encoded_type(a_type) GE_new_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of dynamic `a_type' that represents
 * a SPECIAL with can contain `a_capacity' element. To create a SPECIAL of
 * basic type, use `SPECIAL'.
 */
extern EIF_REFERENCE GE_new_special_any_instance_of_type_index(EIF_TYPE_INDEX a_type, EIF_INTEGER a_capacity);
#define GE_new_special_any_instance_of_encoded_type(a_type, a_capacity) GE_new_special_instance_of_type_index(GE_decoded_type(a_type).id, (a_capacity))

/*
 * New instance of tuple of type `a_type'.
 * Note: returned object is not initialized and may
 * hence violate its invariant.
 */
#define GE_new_tuple_instance_of_type_index(a_type) GE_new_instance_of_type_index(a_type)
#define GE_new_tuple_instance_of_encoded_type(a_type) GE_new_tuple_instance_of_type_index(GE_decoded_type(a_type).id)

/*
 * New instance of TYPE for object of type `a_type'.
 */
extern EIF_REFERENCE GE_new_type_instance_of_encoded_type(EIF_ENCODED_TYPE a_type);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to manipulate strings"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_STRING_H
#define GE_STRING_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * New Eiffel empty string of type "STRING_8" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str8(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_str32(EIF_INTEGER c);

/*
 * New Eiffel empty string of type "IMMUTABLE_STRING_32" with can
 * contain `c' characters.
 * Note: The implementation of this function is generated
 * by the Eiffel compiler.
 */
extern EIF_REFERENCE GE_new_istr32(EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms8(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_8" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str8(const char* s);

/*
 * New Eiffel string of type "STRING_32" containing the
 * first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ms32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_str32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing
 * the first `c' characters found in ASCII string `s'.
 */
extern EIF_REFERENCE GE_ims32(const char* s, EIF_INTEGER c);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated ASCII string `s'.
 */
extern EIF_REFERENCE GE_istr32(const char* s);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing the
 * first `n' native characters found in native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_ims32_from_nstr(EIF_NATIVE_CHAR* s, EIF_INTEGER n);

/*
 * New Eiffel string of type "IMMUTABLE_STRING_32" containing all
 * characters found in the null-terminated native string `s'.
 * Invalid native characters are escaped.
 */
extern EIF_REFERENCE GE_istr32_from_nstr(EIF_NATIVE_CHAR* s);

/*
 * New Eiffel string of type "STRING" containing all
 * characters found in the null-terminated ASCII string `s'
 */
extern EIF_REFERENCE GE_str(const char* s);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize mutex to determine whether a new
 * console needs to be created.
 */
#ifdef EIF_WINDOWS
extern void GE_init_console(void);
#else
#define GE_init_console()
#endif

/*
 * Create a new DOS console if needed (i.e. in case of a Windows application).
 */
#ifdef EIF_WINDOWS
extern void GE_show_console(void);
#else
#define GE_show_console()
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_main(int argc, EIF_NATIVE_CHAR** argv);

/*
 * System name.
 */
extern char* GE_system_name;

/*
 * Root class name.
 */
extern char* GE_root_class_name;

#ifdef EIF_WINDOWS

#include <windows.h>

/*
 * Used in WEL.
 */
extern HINSTANCE eif_hInstance;
extern HINSTANCE eif_hPrevInstance;
extern LPWSTR eif_lpCmdLine;
extern int eif_nCmdShow;

/*
 * Main entry point when compiling a Windows application.
 * See:
 *    http://en.wikipedia.org/wiki/WinMain
 *    http://msdn2.microsoft.com/en-us/library/ms633559.aspx
 */
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#ifdef GE_USE_BOEHM_GC
/*
 *	Use the Boehm garbage collector.
 *	See:
 *		http://en.wikipedia.org/wiki/Boehm_GC
 *		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
 */
#define GC_IGNORE_WARN
#ifdef GE_USE_THREADS
#define GC_THREADS
#undef GC_NO_THREAD_REDIRECTS
#endif
#include "gc.h"
#endif

/*
 * GC initialization.
 */

#ifdef GE_USE_BOEHM_GC
#ifdef GE_USE_THREADS
#define GE_init_gc() \
	GC_INIT(); \
	GC_allow_register_threads(); \
	GC_enable_incremental()
#else
#define GE_init_gc() \
	GC_INIT(); \
	GC_enable_incremental()
#endif
#else /* No GC */
#define GE_init_gc() /* do nothing */
#endif

/*
 * Memory allocation.
 */

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc(size) GE_null(GC_MALLOC(size))
#else /* No GC */
#define GE_malloc(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc(size) GC_MALLOC(size)
#else /* No GC */
#define GE_unprotected_malloc(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic(size) GE_null(GC_MALLOC_ATOMIC(size))
#else /* No GC */
#define GE_malloc_atomic(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic(size) GC_MALLOC_ATOMIC(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc(nelem, elsize) GE_null(GC_MALLOC((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc(nelem, elsize) GC_MALLOC((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic(nelem, elsize) memset(GE_null(GC_MALLOC_ATOMIC((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_uncollectable(size) GE_null(GC_MALLOC_UNCOLLECTABLE(size))
#else /* No GC */
#define GE_malloc_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_uncollectable(size) GC_MALLOC_UNCOLLECTABLE(size)
#else /* No GC */
#define GE_unprotected_malloc_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_atomic_uncollectable(size) GE_null(GC_malloc_atomic_uncollectable(size))
#else /* No GC */
#define GE_malloc_atomic_uncollectable(size) GE_null(malloc(size))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is not necessarily zeroed (unless `GE_malloc_atomic_cleared' is_defined).
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_malloc_atomic_uncollectable(size) GC_malloc_atomic_uncollectable(size)
#else /* No GC */
#define GE_unprotected_malloc_atomic_uncollectable(size) malloc(size)
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_uncollectable(nelem, elsize) GE_null(GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize)))
#else /* No GC */
#define GE_calloc_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that can contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_calloc_uncollectable(nelem, elsize) GC_MALLOC_UNCOLLECTABLE((nelem) * (elsize))
#else /* No GC */
#define GE_unprotected_calloc_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_calloc_atomic_uncollectable(nelem, elsize) memset(GE_null(GC_malloc_atomic_uncollectable((nelem) * (elsize))), 0, (nelem) * (elsize))
#else /* No GC */
#define GE_calloc_atomic_uncollectable(nelem, elsize) GE_null(calloc((nelem), (elsize)))
#endif

/*
 * Allocate memory that does not contain pointers to collectable objects.
 * The allocated memory is zeroed.
 * The allocated object is itself not collectable.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
extern void* GE_unprotected_calloc_atomic_uncollectable(size_t nelem, size_t elsize);
#else /* No GC */
#define GE_unprotected_calloc_atomic_uncollectable(nelem, elsize) calloc((nelem), (elsize))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_realloc(p, size) GE_null(GC_REALLOC((p), (size)))
#else /* No GC */
#define GE_realloc(p, size) GE_null(realloc((p), (size)))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is not necessarily zeroed.
 * Do not raise an exception when no-more-memory.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_unprotected_realloc(p, size) GC_REALLOC((p), (size))
#else /* No GC */
#define GE_unprotected_realloc(p, size) realloc((p), (size))
#endif

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Raise an exception when no-more-memory.
 */
extern void* GE_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Allocate more memory for the given pointer.
 * The reallocated pointer keeps the same properties (e.g. atomic or not, collectable or not).
 * The extra allocated memory is zeroed.
 * Do not raise an exception when no-more-memory.
 */
extern void* GE_unprotected_recalloc(void* p, size_t old_nelem, size_t new_nelem, size_t elsize);

/*
 * Explicitly deallocate an object.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_free(p) GC_FREE(p)
#else /* No GC */
#define GE_free(p) free(p)
#endif

/*
 * When defined, `GE_malloc_cleared' means that `GE_malloc' and
 * `GE_malloc_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
#define GE_malloc_cleared
#else /* No GC */
#endif

/*
 * When defined, `GE_malloc_atomic_cleared' means that `GE_malloc_atomic'
 * and `GE_malloc_atomic_uncollectable' make sure that the allocated memory
 * is zeroed.
 */
#ifdef GE_USE_BOEHM_GC
/* #define GE_malloc_atomic_cleared */
#else /* No GC */
#endif

/*
 * Dispose
 */

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#ifdef GE_USE_BOEHM_GC
extern void GE_boehm_dispose(void* C, void* disp); /* Call dispose routine `disp' on object `C'. */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER_NO_ORDER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)
#else /* No GC */
#define GE_register_dispose(obj, disp) /* do nothing */
#endif

/*
 * Access to objects, useful with GCs which move objects in memory.
 * This is not the case here, since the Boehm GC is not a moving GC.
 */

/* Access object through hector. */
#define eif_access(obj) (obj)
/* Freeze memory address. */
#define eif_freeze(obj) (obj)
/* The C side adopts an object. */
#define eif_adopt(obj) (obj)
/* The C side protects an object. */
#define eif_protect(obj) (obj)
/* The C side weans adopted object. */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address. */
#define eif_unfreeze(obj)
/* Always frozen since they do not move. */
#define eif_frozen(obj) 1
/* Always frozen since they do not move. */
#define spfrozen(obj) 1

#endif

/*
	description:

		"C functions used to implement class IDENTIFIED"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_IDENTIFIED_H
#define GE_IDENTIFIED_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Initialize data to keep track of object ids.
 */
extern void GE_init_identified(void);

/*
 * Get a new id for `object', assuming it is NOT in the stack.
 */
extern EIF_INTEGER_32 GE_object_id(EIF_OBJECT object);

/*
 * Return the object associated with `id'.
 */
extern EIF_REFERENCE GE_id_object(EIF_INTEGER_32 id);

/*
 * Remove the object associated with `id' from the stack.
 */
extern void GE_object_id_free(EIF_INTEGER_32 id);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* SPECIAL [CHARACTER_32] */
typedef struct S16 T16;

/* STRING_8 */
typedef struct S17 T17;

/* STRING_32 */
typedef struct S18 T18;

/* IMMUTABLE_STRING_32 */
typedef struct S19 T19;

/* ISE_EXCEPTION_MANAGER */
typedef struct S20 T20;

/* GEC */
typedef struct S24 T24;

/* [attached] CELL [detachable EXCEPTION] */
typedef struct S25 T25;

/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
typedef struct S26 T26;

/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
typedef struct S27 T27;

/* [attached] CELL [[attached] NO_MORE_MEMORY] */
typedef struct S28 T28;

/* C_STRING */
typedef struct S29 T29;

/* [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
typedef struct S30 T30;

/* KL_TEXT_INPUT_FILE */
typedef struct S31 T31;

/* KL_ARGUMENTS */
typedef struct S32 T32;

/* ET_ISE_VARIABLES */
typedef struct S33 T33;

/* ET_ERROR_HANDLER */
typedef struct S34 T34;

/* ET_SYSTEM */
typedef struct S35 T35;

/* KL_STRING_ROUTINES */
typedef struct S36 T36;

/* KL_EXCEPTIONS */
typedef struct S38 T38;

/* AP_PARSER */
typedef struct S39 T39;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S40 T40;

/* AP_ERROR */
typedef struct S41 T41;

/* AP_FLAG */
typedef struct S42 T42;

/* AP_ENUMERATION_OPTION */
typedef struct S44 T44;

/* AP_BOOLEAN_OPTION */
typedef struct S45 T45;

/* AP_INTEGER_OPTION */
typedef struct S46 T46;

/* AP_STRING_OPTION */
typedef struct S47 T47;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S51 T51;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S53 T53;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S54 T54;

/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
typedef struct S55 T55;

/* ST_SPLITTER */
typedef struct S56 T56;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S58 T58;

/* detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
typedef struct S59 T59;

/* ET_XACE_SYSTEM */
typedef struct S62 T62;

/* ET_ECF_SYSTEM_PARSER */
typedef struct S63 T63;

/* ET_ECF_ERROR_HANDLER */
typedef struct S64 T64;

/* ET_ECF_SYSTEM */
typedef struct S65 T65;

/* ET_ECF_TARGET */
typedef struct S66 T66;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S67 T67;

/* ET_ECF_VARIABLES */
typedef struct S68 T68;

/* ET_LACE_PARSER */
typedef struct S69 T69;

/* ET_LACE_ERROR_HANDLER */
typedef struct S70 T70;

/* ET_LACE_SYSTEM */
typedef struct S71 T71;

/* ET_DYNAMIC_SYSTEM */
typedef struct S72 T72;

/* ET_SYSTEM_PROCESSOR */
typedef struct S73 T73;

/* ET_C_GENERATOR */
typedef struct S76 T76;

/* KL_SHELL_COMMAND */
typedef struct S77 T77;

/* [attached] DS_HASH_SET [[attached] STRING_8] */
typedef struct S78 T78;

/* UT_VERSION */
typedef struct S79 T79;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S80 T80;

/* ET_CLASS_TYPE */
typedef struct S81 T81;

/* ET_TOKEN_CONSTANTS */
typedef struct S82 T82;

/* ET_CLASS */
typedef struct S83 T83;

/* KL_OPERATING_SYSTEM */
typedef struct S85 T85;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S87 T87;

/* UT_VERSION_NUMBER */
typedef struct S88 T88;

/* VOID_TARGET */
typedef struct S89 T89;

/* [attached] TYPE [[attached] VOID_TARGET] */
#define T90 EIF_TYPE_OBJ

/* ROUTINE_FAILURE */
typedef struct S91 T91;

/* [attached] TYPE [[attached] ROUTINE_FAILURE] */
#define T92 EIF_TYPE_OBJ

/* OLD_VIOLATION */
typedef struct S93 T93;

/* [attached] TYPE [[attached] OLD_VIOLATION] */
#define T94 EIF_TYPE_OBJ

/* NO_MORE_MEMORY */
typedef struct S95 T95;

/* INVARIANT_VIOLATION */
typedef struct S96 T96;

/* OPERATING_SYSTEM_SIGNAL_FAILURE */
typedef struct S97 T97;

/* IO_FAILURE */
typedef struct S98 T98;

/* OPERATING_SYSTEM_FAILURE */
typedef struct S99 T99;

/* COM_FAILURE */
typedef struct S100 T100;

/* EIFFEL_RUNTIME_PANIC */
typedef struct S101 T101;

/* PRECONDITION_VIOLATION */
typedef struct S104 T104;

/* POSTCONDITION_VIOLATION */
typedef struct S105 T105;

/* FLOATING_POINT_FAILURE */
typedef struct S106 T106;

/* CHECK_VIOLATION */
typedef struct S107 T107;

/* BAD_INSPECT_VALUE */
typedef struct S108 T108;

/* VARIANT_VIOLATION */
typedef struct S109 T109;

/* LOOP_INVARIANT_VIOLATION */
typedef struct S110 T110;

/* RESCUE_FAILURE */
typedef struct S111 T111;

/* RESUMPTION_FAILURE */
typedef struct S112 T112;

/* CREATE_ON_DEFERRED */
typedef struct S113 T113;

/* EXTERNAL_FAILURE */
typedef struct S114 T114;

/* VOID_ASSIGNED_TO_EXPANDED */
typedef struct S115 T115;

/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
typedef struct S116 T116;

/* MISMATCH_FAILURE */
typedef struct S117 T117;

/* DEVELOPER_EXCEPTION */
typedef struct S118 T118;

/* ADDRESS_APPLIED_TO_MELTED_FEATURE */
typedef struct S119 T119;

/* SERIALIZATION_FAILURE */
typedef struct S120 T120;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S121 T121;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S122 T122;

/* PRIMES */
typedef struct S123 T123;

/* [attached] SPECIAL [[attached] INTEGER_32] */
typedef struct S124 T124;

/* [attached] SPECIAL [[attached] BOOLEAN] */
typedef struct S125 T125;

/* detachable KL_LINKABLE [[attached] CHARACTER_8] */
typedef struct S127 T127;

/* MANAGED_POINTER */
typedef struct S129 T129;

/* FILE_INFO */
typedef struct S130 T130;

/* MUTEX */
typedef struct S131 T131;

/* UT_ERROR_HANDLER */
typedef struct S132 T132;

/* KL_STANDARD_FILES */
typedef struct S133 T133;

/* KL_STDERR_FILE */
typedef struct S134 T134;

/* KL_STDOUT_FILE */
typedef struct S135 T135;

/* UC_STRING */
typedef struct S136 T136;

/* KL_ANY_ROUTINES */
typedef struct S137 T137;

/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
typedef struct S140 T140;

/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S141 T141;

/* [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
typedef struct S142 T142;

/* AP_ERROR_HANDLER */
typedef struct S143 T143;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S144 T144;

/* [attached] ARRAY [[attached] STRING_8] */
typedef struct S145 T145;

/* [attached] SPECIAL [[attached] STRING_8] */
typedef struct S146 T146;

/* [attached] DS_LINKED_LIST [[attached] STRING_8] */
typedef struct S147 T147;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S148 T148;

/* [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
typedef struct S151 T151;

/* [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
typedef struct S154 T154;

/* ET_XACE_AST_FACTORY */
typedef struct S155 T155;

/* XM_DOCUMENT */
typedef struct S156 T156;

/* XM_ELEMENT */
typedef struct S157 T157;

/* XM_POSITION_TABLE */
typedef struct S158 T158;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S160 T160;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S161 T161;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S162 T162;

/* ET_XACE_VALIDATOR */
typedef struct S163 T163;

/* ET_XACE_PREPROCESSOR */
typedef struct S164 T164;

/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
typedef struct S165 T165;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S166 T166;

/* XM_EIFFEL_PARSER */
typedef struct S167 T167;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S170 T170;

/* UT_MESSAGE */
typedef struct S171 T171;

/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
typedef struct S173 T173;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
typedef struct S174 T174;

/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
typedef struct S175 T175;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S176 T176;

/* [attached] DS_HASH_SET [[attached] INTEGER_32] */
typedef struct S177 T177;

/* ET_ECF_AST_FACTORY */
typedef struct S178 T178;

/* [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
typedef struct S179 T179;

/* [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
typedef struct S180 T180;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
typedef struct S181 T181;

/* detachable TUPLE */
typedef struct S182 T182;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, BOOLEAN, [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
typedef struct S183 T183;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S185 T185;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S186 T186;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S187 T187;

/* ET_ECF_STATE */
typedef struct S188 T188;

/* ET_ECF_TARGETS */
typedef struct S189 T189;

/* ET_ECF_LIBRARY */
typedef struct S191 T191;

/* ET_ADAPTED_LIBRARIES */
typedef struct S192 T192;

/* [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S194 T194;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
typedef struct S195 T195;

/* ET_COMPRESSED_POSITION */
typedef struct S196 T196;

/* XM_ATTRIBUTE */
typedef struct S198 T198;

/* ET_IDENTIFIER */
typedef struct S199 T199;

/* ET_ECF_SYSTEM_CONFIG */
typedef struct S200 T200;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S202 T202;

/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S203 T203;

/* ET_ECF_TARGET_PARENT */
typedef struct S204 T204;

/* ET_ECF_CAPABILITIES */
typedef struct S205 T205;

/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
typedef struct S206 T206;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
typedef struct S207 T207;

/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S208 T208;

/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
typedef struct S209 T209;

/* [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
typedef struct S210 T210;

/* ET_ECF_ADAPTED_LIBRARY */
typedef struct S211 T211;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
typedef struct S212 T212;

/* ET_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S214 T214;

/* ET_ECF_DOTNET_ASSEMBLY */
typedef struct S215 T215;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
typedef struct S217 T217;

/* ET_ECF_ERROR */
typedef struct S218 T218;

/* EXECUTION_ENVIRONMENT */
typedef struct S219 T219;

/* ET_LACE_AST_FACTORY */
typedef struct S220 T220;

/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
typedef struct S221 T221;

/* YY_FILE_BUFFER */
typedef struct S222 T222;

/* YY_BUFFER */
typedef struct S223 T223;

/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
typedef struct S224 T224;

/* [attached] SPECIAL [detachable ANY] */
typedef struct S227 T227;

/* [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
typedef struct S228 T228;

/* [attached] SPECIAL [[attached] ET_IDENTIFIER] */
typedef struct S229 T229;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
typedef struct S230 T230;

/* ET_LACE_CLUSTERS */
typedef struct S231 T231;

/* ET_LACE_CLUSTER */
typedef struct S232 T232;

/* ET_LACE_EXCLUDE */
typedef struct S233 T233;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S234 T234;

/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
typedef struct S235 T235;

/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
typedef struct S236 T236;

/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S237 T237;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
typedef struct S238 T238;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
typedef struct S239 T239;

/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
typedef struct S240 T240;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
typedef struct S241 T241;

/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
typedef struct S242 T242;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
typedef struct S243 T243;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
typedef struct S244 T244;

/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S245 T245;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S246 T246;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S247 T247;

/* KL_PLATFORM */
typedef struct S248 T248;

/* KL_INTEGER_ROUTINES */
typedef struct S249 T249;

/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S250 T250;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
typedef struct S251 T251;

/* [attached] TUPLE [[attached] ET_CLASS] */
typedef struct S252 T252;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S253 T253;

/* [attached] TUPLE [INTEGER_32] */
typedef struct S254 T254;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S255 T255;

/* ET_DYNAMIC_TYPE */
typedef struct S256 T256;

/* DT_DATE_TIME */
typedef struct S257 T257;

/* [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S258 T258;

/* ET_DYNAMIC_FEATURE */
typedef struct S263 T263;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S267 T267;

/* ET_EXTERNAL_FUNCTION */
typedef struct S275 T275;

/* ET_TUPLE_TYPE */
typedef struct S276 T276;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S277 T277;

/* [attached] ARRAY [[attached] ET_TYPE] */
typedef struct S278 T278;

/* [attached] SPECIAL [[attached] ET_TYPE] */
typedef struct S279 T279;

/* ET_FORMAL_ARGUMENT */
typedef struct S280 T280;

/* ET_QUERY_LIST */
typedef struct S281 T281;

/* ET_PROCEDURE_LIST */
typedef struct S282 T282;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S283 T283;

/* DT_SYSTEM_CLOCK */
typedef struct S284 T284;

/* ET_EIFFEL_PREPARSER */
typedef struct S285 T285;

/* ET_MASTER_CLASS_CHECKER */
typedef struct S286 T286;

/* ET_EIFFEL_PARSER */
typedef struct S287 T287;

/* ET_PROVIDER_CHECKER */
typedef struct S288 T288;

/* ET_ANCESTOR_BUILDER */
typedef struct S289 T289;

/* ET_FEATURE_FLATTENER */
typedef struct S290 T290;

/* ET_INTERFACE_CHECKER */
typedef struct S291 T291;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S292 T292;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
typedef struct S293 T293;

/* [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
typedef struct S294 T294;

/* ET_AST_NULL_PROCESSOR */
typedef struct S295 T295;

/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S296 T296;

/* ET_AST_FACTORY */
typedef struct S297 T297;

/* ET_NULL_ERROR_HANDLER */
typedef struct S298 T298;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S300 T300;

/* DT_DATE_TIME_DURATION */
typedef struct S301 T301;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S302 T302;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S303 T303;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S304 T304;

/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
typedef struct S305 T305;

/* ET_DYNAMIC_TYPE_HASH_LIST */
typedef struct S306 T306;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S307 T307;

/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
typedef struct S308 T308;

/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
typedef struct S309 T309;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
typedef struct S310 T310;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S311 T311;

/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
typedef struct S312 T312;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S313 T313;

/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
typedef struct S314 T314;

/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S315 T315;

/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S316 T316;

/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
typedef struct S317 T317;

/* ET_EXPRESSION */
typedef struct S318 T318;

/* ET_CURRENT */
typedef struct S319 T319;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S320 T320;

/* ET_QUALIFIED_CALL_INSTRUCTION */
typedef struct S321 T321;

/* ET_QUALIFIED_CALL_EXPRESSION */
typedef struct S324 T324;

/* ET_UNQUALIFIED_CALL_EXPRESSION */
typedef struct S325 T325;

/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S326 T326;

/* ET_MANIFEST_TUPLE */
typedef struct S327 T327;

/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S328 T328;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S329 T329;

/* [attached] ARRAY [[attached] INTEGER_32] */
typedef struct S330 T330;

/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S331 T331;

/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S332 T332;

/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
typedef struct S333 T333;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S334 T334;

/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S335 T335;

/* ET_IDENTIFIER_TESTER */
typedef struct S336 T336;

/* detachable KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
typedef struct S337 T337;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S338 T338;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S339 T339;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S340 T340;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S341 T341;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S342 T342;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S343 T343;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S344 T344;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
typedef struct S345 T345;

/* ET_RESULT */
typedef struct S346 T346;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S347 T347;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S351 T351;

/* ET_OBJECT_TEST */
typedef struct S353 T353;

/* ET_OBJECT_EQUALITY_EXPRESSION */
typedef struct S354 T354;

/* ET_EQUALITY_EXPRESSION */
typedef struct S355 T355;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S356 T356;

/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
typedef struct S359 T359;

/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
typedef struct S360 T360;

/* ET_CREATE_EXPRESSION */
typedef struct S364 T364;

/* ET_QUALIFIED_CALL */
typedef struct S365 T365;

/* KL_DIRECTORY */
typedef struct S369 T369;

/* UT_TEMPLATE_EXPANDER */
typedef struct S370 T370;

/* ET_EXTENDED_ATTRIBUTE */
typedef struct S371 T371;

/* ET_COMPOUND */
typedef struct S372 T372;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S373 T373;

/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
typedef struct S377 T377;

/* ET_IMPLICIT_TYPE_MARK */
typedef struct S384 T384;

/* ET_SYMBOL */
typedef struct S385 T385;

/* [attached] PROCEDURE [[attached] TUPLE] */
typedef struct S386 T386;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S387 T387;

/* [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S388 T388;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S389 T389;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S390 T390;

/* UT_INTEGER_FORMATTER */
typedef struct S391 T391;

/* STD_FILES */
typedef struct S394 T394;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S396 T396;

/* [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S398 T398;

/* [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S399 T399;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S400 T400;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S402 T402;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S403 T403;

/* ET_ATTRIBUTE */
typedef struct S404 T404;

/* NATIVE_STRING */
typedef struct S406 T406;

/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
typedef struct S407 T407;

/* [attached] TYPE [[attached] STRING_8] */
#define T408 EIF_TYPE_OBJ

/* ET_FEATURE_CHECKER */
typedef struct S409 T409;

/* [attached] DS_CELL [[attached] INTEGER_32] */
typedef struct S410 T410;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S411 T411;

/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S412 T412;

/* ET_TYPE_CHECKER */
typedef struct S414 T414;

/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
typedef struct S416 T416;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S417 T417;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S418 T418;

/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S419 T419;

/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S420 T420;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S421 T421;

/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S422 T422;

/* ET_OBJECT_TEST_SCOPE */
typedef struct S423 T423;

/* ET_OBJECT_TEST_SCOPE_BUILDER */
typedef struct S424 T424;

/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S425 T425;

/* ET_ACROSS_CURSOR_SCOPE */
typedef struct S426 T426;

/* ET_ATTACHMENT_SCOPE */
typedef struct S427 T427;

/* ET_ATTACHMENT_SCOPE_BUILDER */
typedef struct S428 T428;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S429 T429;

/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
typedef struct S430 T430;

/* ET_PRECONDITIONS */
typedef struct S431 T431;

/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S432 T432;

/* ET_FEATURE_LIST */
typedef struct S434 T434;

/* ET_UNKNOWN_GROUP */
typedef struct S436 T436;

/* ET_BASE_TYPE_LIST */
typedef struct S438 T438;

/* ET_KEYWORD */
typedef struct S439 T439;

/* ET_CLASS_CODES */
typedef struct S440 T440;

/* PATH */
typedef struct S441 T441;

/* ARGUMENTS_32 */
typedef struct S443 T443;

/* ET_INTERNAL_ERROR */
typedef struct S444 T444;

/* ST_WORD_WRAPPER */
typedef struct S445 T445;

/* ET_XACE_EXTERNALS */
typedef struct S447 T447;

/* ET_XACE_OPTIONS */
typedef struct S448 T448;

/* ET_XACE_TARGET */
typedef struct S449 T449;

/* ET_XACE_TARGETS */
typedef struct S452 T452;

/* ET_XACE_CLUSTERS */
typedef struct S454 T454;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S455 T455;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S456 T456;

/* ET_XACE_CLUSTER */
typedef struct S458 T458;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
typedef struct S459 T459;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S462 T462;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S463 T463;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S464 T464;

/* UT_COUNTER */
typedef struct S466 T466;

/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
typedef struct S467 T467;

/* [attached] TUPLE [UT_COUNTER] */
typedef struct S468 T468;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S469 T469;

/* [attached] TUPLE [[attached] ET_UNIVERSE] */
typedef struct S470 T470;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S471 T471;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S472 T472;

/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S474 T474;

/* ET_DOTNET_ASSEMBLIES */
typedef struct S475 T475;

/* ET_DOTNET_ASSEMBLY */
typedef struct S476 T476;

/* [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S477 T477;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S478 T478;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S479 T479;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
typedef struct S480 T480;

/* [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S481 T481;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S482 T482;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
typedef struct S483 T483;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
typedef struct S484 T484;

/* [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
typedef struct S485 T485;

/* ET_LIBRARY */
typedef struct S486 T486;

/* [attached] TUPLE [[attached] ET_LIBRARY] */
typedef struct S487 T487;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
typedef struct S488 T488;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S489 T489;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S491 T491;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S492 T492;

/* [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
typedef struct S493 T493;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
typedef struct S494 T494;

/* [attached] TUPLE [ET_XACE_CLUSTERS] */
typedef struct S495 T495;

/* ET_MASTER_CLASS */
typedef struct S496 T496;

/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
typedef struct S497 T497;

/* [attached] TUPLE [[attached] ET_CLUSTER] */
typedef struct S498 T498;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
typedef struct S499 T499;

/* [attached] TUPLE [ET_XACE_SYSTEM] */
typedef struct S500 T500;

/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S501 T501;

/* [attached] TUPLE [ET_AST_PROCESSOR] */
typedef struct S502 T502;

/* [attached] TUPLE [[attached] ET_MASTER_CLASS] */
typedef struct S503 T503;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S504 T504;

/* [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S505 T505;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
typedef struct S506 T506;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S507 T507;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S508 T508;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S509 T509;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S510 T510;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
typedef struct S511 T511;

/* [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
typedef struct S513 T513;

/* [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
typedef struct S514 T514;

/* [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
typedef struct S515 T515;

/* [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
typedef struct S516 T516;

/* [attached] TUPLE [BOOLEAN] */
typedef struct S517 T517;

/* ET_CLASS_NAME_TESTER */
typedef struct S518 T518;

/* ET_PARENT */
typedef struct S520 T520;

/* ET_PARENT_LIST */
typedef struct S521 T521;

/* ET_CLIENT_LIST */
typedef struct S522 T522;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S523 T523;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
typedef struct S524 T524;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
typedef struct S527 T527;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
typedef struct S531 T531;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
typedef struct S532 T532;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
typedef struct S533 T533;

/* ET_CLIENT */
typedef struct S534 T534;

/* ET_ATTACHMENT_SEPARATE_KEYWORDS */
typedef struct S535 T535;

/* ET_RENAME_LIST */
typedef struct S536 T536;

/* ET_EXPORT_LIST */
typedef struct S537 T537;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S538 T538;

/* ET_NONE_GROUP */
typedef struct S541 T541;

/* ET_LIKE_CURRENT */
typedef struct S542 T542;

/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
typedef struct S543 T543;

/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
typedef struct S545 T545;

/* [attached] TUPLE [[attached] STRING_8] */
typedef struct S546 T546;

/* [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
typedef struct S547 T547;

/* [attached] TUPLE [KL_STRING_ROUTINES] */
typedef struct S548 T548;

/* ET_ECF_SETTINGS */
typedef struct S550 T550;

/* ET_ECF_OPTIONS */
typedef struct S551 T551;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S552 T552;

/* XM_NAMESPACE */
typedef struct S553 T553;

/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
typedef struct S554 T554;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S555 T555;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S556 T556;

/* ET_DO_PROCEDURE */
typedef struct S557 T557;

/* UT_CONFIG_PARSER */
typedef struct S559 T559;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
typedef struct S560 T560;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S563 T563;

/* ET_DEFERRED_PROCEDURE */
typedef struct S564 T564;

/* UTF_CONVERTER */
typedef struct S565 T565;
extern T0* GE_boxed565(T565 a1);
typedef struct Sb565 Tb565;

/* [attached] CELL [[attached] INTEGER_32] */
typedef struct S566 T566;

/* KL_PATHNAME */
typedef struct S568 T568;

/* READABLE_STRING_32 */
typedef struct S570 T570;

/* [attached] SPECIAL [[attached] NATURAL_8] */
typedef struct S571 T571;

/* TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
typedef struct S572 T572;
extern T0* GE_boxed572(T572 a1);
typedef struct Sb572 Tb572;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
typedef struct S573 T573;

/* [attached] SPECIAL [[attached] AP_OPTION] */
typedef struct S575 T575;

/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
typedef struct S576 T576;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S577 T577;

/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S578 T578;

/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S579 T579;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S580 T580;

/* detachable DS_LINKABLE [[attached] STRING_8] */
typedef struct S581 T581;

/* detachable DS_LINKABLE [[attached] BOOLEAN] */
typedef struct S582 T582;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
typedef struct S583 T583;

/* detachable DS_LINKABLE [[attached] INTEGER_32] */
typedef struct S584 T584;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S585 T585;

/* XM_NAMESPACE_RESOLVER */
typedef struct S586 T586;

/* [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
typedef struct S587 T587;

/* [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
typedef struct S588 T588;

/* XM_CALLBACKS_NULL */
typedef struct S589 T589;

/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
typedef struct S590 T590;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
typedef struct S596 T596;

/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
typedef struct S597 T597;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
typedef struct S598 T598;

/* XM_EIFFEL_SCANNER */
typedef struct S599 T599;

/* XM_DEFAULT_POSITION */
typedef struct S600 T600;

/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
typedef struct S602 T602;

/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
typedef struct S603 T603;

/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S604 T604;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S606 T606;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S608 T608;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S609 T609;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S610 T610;

/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S611 T611;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S612 T612;

/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S613 T613;

/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
typedef struct S614 T614;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S615 T615;

/* XM_DTD_EXTERNAL_ID */
typedef struct S616 T616;

/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
typedef struct S617 T617;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S618 T618;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S619 T619;

/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S620 T620;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S621 T621;

/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S622 T622;

/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S623 T623;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S624 T624;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S625 T625;

/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S626 T626;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S627 T627;

/* [attached] DS_BILINKED_LIST [[attached] STRING_8] */
typedef struct S628 T628;

/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
typedef struct S629 T629;

/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
typedef struct S630 T630;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S631 T631;

/* XM_EIFFEL_DECLARATION */
typedef struct S632 T632;

/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
typedef struct S633 T633;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S636 T636;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S637 T637;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S639 T639;

/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
typedef struct S640 T640;

/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
typedef struct S641 T641;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
typedef struct S642 T642;

/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
typedef struct S643 T643;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
typedef struct S646 T646;

/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S647 T647;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
typedef struct S650 T650;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
typedef struct S651 T651;

/* ET_CLUSTERS */
typedef struct S652 T652;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S653 T653;

/* [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
typedef struct S654 T654;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
typedef struct S655 T655;

/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S656 T656;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
typedef struct S658 T658;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
typedef struct S659 T659;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
typedef struct S660 T660;

/* [attached] SPECIAL [[attached] ET_ECF_TARGET] */
typedef struct S661 T661;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
typedef struct S663 T663;

/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
typedef struct S666 T666;

/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
typedef struct S667 T667;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S668 T668;

/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
typedef struct S669 T669;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
typedef struct S671 T671;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S672 T672;

/* [attached] TYPE [[attached] ET_IDENTIFIER] */
#define T673 EIF_TYPE_OBJ

/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
typedef struct S674 T674;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
typedef struct S677 T677;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
typedef struct S678 T678;

/* [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
typedef struct S679 T679;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
typedef struct S680 T680;

/* [attached] SPECIAL [[attached] ET_CLASS_NAME] */
typedef struct S681 T681;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
typedef struct S682 T682;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
typedef struct S683 T683;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
typedef struct S684 T684;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S687 T687;

/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S691 T691;

/* ET_BRACKET_SYMBOL */
typedef struct S692 T692;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S694 T694;

/* C_DATE */
typedef struct S695 T695;

/* KL_STDIN_FILE */
typedef struct S696 T696;

/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
typedef struct S698 T698;

/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S699 T699;

/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S700 T700;

/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
typedef struct S701 T701;

/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
typedef struct S702 T702;

/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
typedef struct S703 T703;

/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S704 T704;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
typedef struct S705 T705;

/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
typedef struct S706 T706;

/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
typedef struct S707 T707;

/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
typedef struct S708 T708;

/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
typedef struct S709 T709;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
typedef struct S710 T710;

/* [attached] SPECIAL [detachable ET_KEYWORD] */
typedef struct S711 T711;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
typedef struct S712 T712;

/* ET_AGENT_KEYWORD */
typedef struct S713 T713;

/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
typedef struct S714 T714;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S715 T715;

/* ET_PRECURSOR_KEYWORD */
typedef struct S716 T716;

/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
typedef struct S717 T717;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
typedef struct S718 T718;

/* [attached] SPECIAL [detachable ET_SYMBOL] */
typedef struct S719 T719;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
typedef struct S720 T720;

/* [attached] SPECIAL [detachable ET_POSITION] */
typedef struct S721 T721;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S722 T722;

/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
typedef struct S724 T724;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
typedef struct S725 T725;

/* [attached] SPECIAL [detachable ET_BREAK] */
typedef struct S727 T727;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
typedef struct S728 T728;

/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
typedef struct S730 T730;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
typedef struct S731 T731;

/* [attached] SPECIAL [detachable ET_CURRENT] */
typedef struct S732 T732;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
typedef struct S733 T733;

/* ET_FREE_OPERATOR */
typedef struct S734 T734;

/* [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
typedef struct S735 T735;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
typedef struct S736 T736;

/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
typedef struct S738 T738;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
typedef struct S739 T739;

/* ET_KEYWORD_OPERATOR */
typedef struct S740 T740;

/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
typedef struct S741 T741;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
typedef struct S742 T742;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
typedef struct S743 T743;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
typedef struct S744 T744;

/* [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
typedef struct S746 T746;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
typedef struct S747 T747;

/* [attached] SPECIAL [detachable ET_RESULT] */
typedef struct S748 T748;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
typedef struct S749 T749;

/* ET_RETRY_INSTRUCTION */
typedef struct S750 T750;

/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
typedef struct S751 T751;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
typedef struct S752 T752;

/* ET_SYMBOL_OPERATOR */
typedef struct S753 T753;

/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
typedef struct S754 T754;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
typedef struct S755 T755;

/* ET_VOID */
typedef struct S756 T756;

/* [attached] SPECIAL [detachable ET_VOID] */
typedef struct S757 T757;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S758 T758;

/* ET_SEMICOLON_SYMBOL */
typedef struct S759 T759;

/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
typedef struct S760 T760;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
typedef struct S761 T761;

/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
typedef struct S762 T762;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S763 T763;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S764 T764;

/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
typedef struct S765 T765;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
typedef struct S766 T766;

/* ET_ACROSS_EXPRESSION */
typedef struct S767 T767;

/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
typedef struct S768 T768;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S769 T769;

/* ET_ACROSS_INSTRUCTION */
typedef struct S770 T770;

/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
typedef struct S771 T771;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S772 T772;

/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S773 T773;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S774 T774;

/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
typedef struct S775 T775;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S776 T776;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S777 T777;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S778 T778;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S780 T780;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S781 T781;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S782 T782;

/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S783 T783;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
typedef struct S784 T784;

/* [attached] SPECIAL [detachable ET_AGENT_TARGET] */
typedef struct S785 T785;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
typedef struct S786 T786;

/* ET_ALIAS_NAME */
typedef struct S787 T787;

/* [attached] SPECIAL [detachable ET_ALIAS_NAME] */
typedef struct S788 T788;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
typedef struct S789 T789;

/* [attached] SPECIAL [detachable ET_ASSIGNER] */
typedef struct S791 T791;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
typedef struct S792 T792;

/* ET_BRACKET_EXPRESSION */
typedef struct S793 T793;

/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
typedef struct S794 T794;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
typedef struct S795 T795;

/* ET_CALL_AGENT */
typedef struct S796 T796;

/* [attached] SPECIAL [detachable ET_CALL_AGENT] */
typedef struct S797 T797;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S798 T798;

/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S799 T799;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
typedef struct S800 T800;

/* ET_CHECK_INSTRUCTION */
typedef struct S801 T801;

/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
typedef struct S802 T802;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
typedef struct S803 T803;

/* [attached] SPECIAL [detachable ET_CHOICE] */
typedef struct S805 T805;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
typedef struct S806 T806;

/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
typedef struct S808 T808;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
typedef struct S809 T809;

/* [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
typedef struct S811 T811;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
typedef struct S812 T812;

/* ET_CHOICE_LIST */
typedef struct S813 T813;

/* [attached] SPECIAL [detachable ET_CHOICE_LIST] */
typedef struct S814 T814;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
typedef struct S815 T815;

/* [attached] SPECIAL [detachable ET_CLASS] */
typedef struct S816 T816;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
typedef struct S817 T817;

/* [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
typedef struct S818 T818;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
typedef struct S819 T819;

/* ET_CLIENTS */
typedef struct S820 T820;

/* [attached] SPECIAL [detachable ET_CLIENTS] */
typedef struct S821 T821;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
typedef struct S822 T822;

/* [attached] SPECIAL [detachable ET_COMPOUND] */
typedef struct S823 T823;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
typedef struct S824 T824;

/* [attached] SPECIAL [detachable ET_CONDITIONAL] */
typedef struct S826 T826;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
typedef struct S827 T827;

/* [attached] SPECIAL [detachable ET_CONSTANT] */
typedef struct S828 T828;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S829 T829;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S831 T831;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S832 T832;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S833 T833;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S834 T834;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S835 T835;

/* ET_CONSTRAINT_CREATOR */
typedef struct S836 T836;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
typedef struct S837 T837;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
typedef struct S838 T838;

/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
typedef struct S840 T840;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
typedef struct S841 T841;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
typedef struct S843 T843;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S844 T844;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
typedef struct S846 T846;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S847 T847;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S848 T848;

/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
typedef struct S849 T849;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
typedef struct S850 T850;

/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
typedef struct S851 T851;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
typedef struct S852 T852;

/* ET_CREATION_REGION */
typedef struct S853 T853;

/* [attached] SPECIAL [detachable ET_CREATION_REGION] */
typedef struct S854 T854;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
typedef struct S855 T855;

/* ET_CREATOR */
typedef struct S856 T856;

/* [attached] SPECIAL [detachable ET_CREATOR] */
typedef struct S857 T857;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
typedef struct S858 T858;

/* ET_CREATOR_LIST */
typedef struct S859 T859;

/* [attached] SPECIAL [detachable ET_CREATOR_LIST] */
typedef struct S860 T860;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S861 T861;

/* ET_DEBUG_INSTRUCTION */
typedef struct S862 T862;

/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
typedef struct S863 T863;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S864 T864;

/* ET_ELSEIF_EXPRESSION */
typedef struct S865 T865;

/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
typedef struct S866 T866;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S867 T867;

/* ET_ELSEIF_EXPRESSION_LIST */
typedef struct S868 T868;

/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
typedef struct S869 T869;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
typedef struct S870 T870;

/* ET_ELSEIF_PART */
typedef struct S871 T871;

/* [attached] SPECIAL [detachable ET_ELSEIF_PART] */
typedef struct S872 T872;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
typedef struct S873 T873;

/* ET_ELSEIF_PART_LIST */
typedef struct S874 T874;

/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
typedef struct S875 T875;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
typedef struct S876 T876;

/* [attached] SPECIAL [detachable ET_EXPORT] */
typedef struct S878 T878;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
typedef struct S879 T879;

/* [attached] SPECIAL [detachable ET_EXPORT_LIST] */
typedef struct S880 T880;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
typedef struct S881 T881;

/* [attached] SPECIAL [detachable ET_EXPRESSION] */
typedef struct S882 T882;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
typedef struct S883 T883;

/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
typedef struct S884 T884;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S885 T885;

/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
typedef struct S886 T886;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
typedef struct S887 T887;

/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
typedef struct S889 T889;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
typedef struct S890 T890;

/* ET_FEATURE_CLAUSE */
typedef struct S891 T891;

/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
typedef struct S892 T892;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S893 T893;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S894 T894;

/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
typedef struct S895 T895;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
typedef struct S896 T896;

/* ET_FEATURE_EXPORT */
typedef struct S897 T897;

/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
typedef struct S898 T898;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
typedef struct S899 T899;

/* [attached] SPECIAL [detachable ET_FEATURE_NAME] */
typedef struct S900 T900;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S901 T901;

/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
typedef struct S903 T903;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
typedef struct S904 T904;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
typedef struct S905 T905;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S906 T906;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S908 T908;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S909 T909;

/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
typedef struct S910 T910;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
typedef struct S911 T911;

/* ET_FORMAL_PARAMETER */
typedef struct S912 T912;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
typedef struct S913 T913;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S914 T914;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
typedef struct S916 T916;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S917 T917;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
typedef struct S918 T918;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
typedef struct S919 T919;

/* ET_IF_EXPRESSION */
typedef struct S920 T920;

/* [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
typedef struct S921 T921;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
typedef struct S922 T922;

/* ET_IF_INSTRUCTION */
typedef struct S923 T923;

/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
typedef struct S924 T924;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
typedef struct S925 T925;

/* ET_INDEXING_LIST */
typedef struct S926 T926;

/* [attached] SPECIAL [detachable ET_INDEXING_LIST] */
typedef struct S927 T927;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
typedef struct S928 T928;

/* [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
typedef struct S930 T930;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
typedef struct S931 T931;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM] */
typedef struct S933 T933;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S934 T934;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
typedef struct S936 T936;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
typedef struct S937 T937;

/* ET_INDEXING_TERM_LIST */
typedef struct S938 T938;

/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
typedef struct S939 T939;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
typedef struct S940 T940;

/* [attached] SPECIAL [detachable ET_INLINE_AGENT] */
typedef struct S942 T942;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S943 T943;

/* ET_INSPECT_INSTRUCTION */
typedef struct S944 T944;

/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
typedef struct S945 T945;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
typedef struct S946 T946;

/* [attached] SPECIAL [detachable ET_INSTRUCTION] */
typedef struct S948 T948;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
typedef struct S949 T949;

/* ET_INVARIANTS */
typedef struct S950 T950;

/* [attached] SPECIAL [detachable ET_INVARIANTS] */
typedef struct S951 T951;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S952 T952;

/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S953 T953;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
typedef struct S954 T954;

/* [attached] SPECIAL [detachable ET_LIKE_TYPE] */
typedef struct S956 T956;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
typedef struct S957 T957;

/* ET_LOCAL_VARIABLE */
typedef struct S958 T958;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
typedef struct S959 T959;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S960 T960;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
typedef struct S962 T962;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S963 T963;

/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
typedef struct S964 T964;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
typedef struct S965 T965;

/* ET_LOOP_INVARIANTS */
typedef struct S966 T966;

/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
typedef struct S967 T967;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
typedef struct S968 T968;

/* ET_MANIFEST_ARRAY */
typedef struct S969 T969;

/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
typedef struct S970 T970;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S971 T971;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
typedef struct S973 T973;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S974 T974;

/* ET_MANIFEST_STRING_LIST */
typedef struct S975 T975;

/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
typedef struct S976 T976;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
typedef struct S977 T977;

/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
typedef struct S978 T978;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
typedef struct S979 T979;

/* [attached] SPECIAL [detachable ET_OBSOLETE] */
typedef struct S981 T981;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S982 T982;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S983 T983;

/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
typedef struct S984 T984;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
typedef struct S985 T985;

/* [attached] SPECIAL [detachable ET_PARENT] */
typedef struct S986 T986;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S987 T987;

/* ET_PARENT_CLAUSE_LIST */
typedef struct S988 T988;

/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
typedef struct S989 T989;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
typedef struct S990 T990;

/* [attached] SPECIAL [detachable ET_PARENT_ITEM] */
typedef struct S991 T991;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
typedef struct S992 T992;

/* [attached] SPECIAL [detachable ET_PARENT_LIST] */
typedef struct S993 T993;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
typedef struct S994 T994;

/* ET_POSTCONDITIONS */
typedef struct S995 T995;

/* [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
typedef struct S996 T996;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
typedef struct S997 T997;

/* [attached] SPECIAL [detachable ET_PRECONDITIONS] */
typedef struct S998 T998;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
typedef struct S999 T999;

/* [attached] SPECIAL [detachable ET_PROCEDURE] */
typedef struct S1000 T1000;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1001 T1001;

/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
typedef struct S1003 T1003;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
typedef struct S1004 T1004;

/* [attached] SPECIAL [detachable ET_QUERY] */
typedef struct S1005 T1005;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
typedef struct S1006 T1006;

/* [attached] SPECIAL [detachable ET_RENAME_ITEM] */
typedef struct S1008 T1008;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
typedef struct S1009 T1009;

/* [attached] SPECIAL [detachable ET_RENAME_LIST] */
typedef struct S1010 T1010;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1011 T1011;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S1012 T1012;

/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
typedef struct S1013 T1013;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
typedef struct S1014 T1014;

/* ET_STRIP_EXPRESSION */
typedef struct S1015 T1015;

/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
typedef struct S1016 T1016;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
typedef struct S1017 T1017;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
typedef struct S1018 T1018;

/* [attached] SPECIAL [detachable ET_TYPE_ITEM] */
typedef struct S1020 T1020;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
typedef struct S1021 T1021;

/* [attached] SPECIAL [detachable ET_TYPE_LIST] */
typedef struct S1023 T1023;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
typedef struct S1024 T1024;

/* ET_VARIANT */
typedef struct S1025 T1025;

/* [attached] SPECIAL [detachable ET_VARIANT] */
typedef struct S1026 T1026;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
typedef struct S1027 T1027;

/* ET_WHEN_PART */
typedef struct S1028 T1028;

/* [attached] SPECIAL [detachable ET_WHEN_PART] */
typedef struct S1029 T1029;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
typedef struct S1030 T1030;

/* ET_WHEN_PART_LIST */
typedef struct S1031 T1031;

/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
typedef struct S1032 T1032;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
typedef struct S1033 T1033;

/* [attached] SPECIAL [detachable ET_WRITABLE] */
typedef struct S1034 T1034;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
typedef struct S1035 T1035;

/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1036 T1036;

/* ET_PARENT_CHECKER1 */
typedef struct S1037 T1037;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1038 T1038;

/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1039 T1039;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1040 T1040;

/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1042 T1042;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1043 T1043;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
typedef struct S1045 T1045;

/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1046 T1046;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1047 T1047;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1048 T1048;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1049 T1049;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
typedef struct S1050 T1050;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1051 T1051;

/* ET_SIGNATURE_CHECKER */
typedef struct S1052 T1052;

/* ET_PARENT_CHECKER2 */
typedef struct S1053 T1053;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1054 T1054;

/* ET_BUILTIN_FEATURE_CHECKER */
typedef struct S1055 T1055;

/* ET_PRECURSOR_CHECKER */
typedef struct S1056 T1056;

/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1057 T1057;

/* [attached] DS_HASH_SET [[attached] ET_CLASS] */
typedef struct S1058 T1058;

/* ET_PARENT_CHECKER3 */
typedef struct S1059 T1059;

/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
typedef struct S1060 T1060;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
typedef struct S1061 T1061;

/* ET_PARENT_FEATURE */
typedef struct S1063 T1063;

/* ET_INHERITED_FEATURE */
typedef struct S1064 T1064;

/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
typedef struct S1065 T1065;

/* [attached] DS_HASH_SET [[attached] ET_QUERY] */
typedef struct S1066 T1066;

/* ET_SUPPLIER_BUILDER */
typedef struct S1067 T1067;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
typedef struct S1068 T1068;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
typedef struct S1069 T1069;

/* ET_SYSTEM_ERROR */
typedef struct S1071 T1071;

/* ET_VALIDITY_ERROR */
typedef struct S1072 T1072;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S1074 T1074;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
typedef struct S1075 T1075;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
typedef struct S1076 T1076;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
typedef struct S1077 T1077;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
typedef struct S1079 T1079;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1080 T1080;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1081 T1081;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
typedef struct S1082 T1082;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1083 T1083;

/* [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
typedef struct S1085 T1085;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
typedef struct S1086 T1086;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
typedef struct S1087 T1087;

/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1088 T1088;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1089 T1089;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
typedef struct S1090 T1090;

/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1091 T1091;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1092 T1092;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
typedef struct S1093 T1093;

/* [attached] SPECIAL [[attached] ET_AGENT] */
typedef struct S1094 T1094;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
typedef struct S1095 T1095;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
typedef struct S1096 T1096;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
typedef struct S1098 T1098;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1099 T1099;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1100 T1100;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1101 T1101;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
typedef struct S1103 T1103;

/* [attached] SPECIAL [[attached] ET_FEATURE] */
typedef struct S1104 T1104;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
typedef struct S1105 T1105;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
typedef struct S1106 T1106;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
typedef struct S1108 T1108;

/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
typedef struct S1109 T1109;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
typedef struct S1111 T1111;

/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1112 T1112;

/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1114 T1114;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
typedef struct S1115 T1115;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
typedef struct S1116 T1116;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
typedef struct S1117 T1117;

/* RX_BYTE_CODE */
typedef struct S1121 T1121;

/* RX_CHARACTER_SET */
typedef struct S1122 T1122;

/* RX_CASE_MAPPING */
typedef struct S1123 T1123;

/* [attached] ARRAY [[attached] RX_CHARACTER_SET] */
typedef struct S1125 T1125;

/* [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
typedef struct S1126 T1126;

/* TYPED_POINTER [[attached] ANY] */
typedef struct S1127 T1127;
extern T0* GE_boxed1127(T1127 a1);
typedef struct Sb1127 Tb1127;

/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1128 T1128;

/* [attached] ARRAY [[attached] BOOLEAN] */
typedef struct S1129 T1129;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1132 T1132;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
typedef struct S1134 T1134;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1135 T1135;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1136 T1136;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
typedef struct S1137 T1137;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1138 T1138;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1139 T1139;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
typedef struct S1140 T1140;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1141 T1141;

/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
typedef struct S1142 T1142;

/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1143 T1143;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
typedef struct S1144 T1144;

/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1145 T1145;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1146 T1146;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
typedef struct S1147 T1147;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1148 T1148;

/* ET_NAMED_OBJECT_TEST */
typedef struct S1151 T1151;

/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1152 T1152;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1153 T1153;

/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1154 T1154;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
typedef struct S1155 T1155;

/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1158 T1158;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1159 T1159;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1160 T1160;

/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1162 T1162;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1163 T1163;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
typedef struct S1164 T1164;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
typedef struct S1165 T1165;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
typedef struct S1166 T1166;

/* [attached] SPECIAL [[attached] ET_ASSERTIONS] */
typedef struct S1167 T1167;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
typedef struct S1169 T1169;

/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S1170 T1170;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S1171 T1171;

/* UC_UNICODE_ROUTINES */
typedef struct S1173 T1173;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S1174 T1174;

/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S1175 T1175;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S1177 T1177;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S1178 T1178;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S1179 T1179;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S1180 T1180;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S1181 T1181;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S1182 T1182;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S1183 T1183;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S1184 T1184;

/* UT_TRISTATE */
typedef struct S1187 T1187;

/* [attached] KL_AGENT_ROUTINES [[attached] ANY] */
typedef struct S1188 T1188;

/* [attached] TUPLE [UT_TRISTATE] */
typedef struct S1189 T1189;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
typedef struct S1190 T1190;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
typedef struct S1191 T1191;

/* [attached] PREDICATE [[attached] TUPLE] */
typedef struct S1192 T1192;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1194 T1194;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
typedef struct S1195 T1195;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
typedef struct S1196 T1196;

/* ET_ECF_NOTE_ELEMENT */
typedef struct S1197 T1197;

/* ET_ECF_CLUSTERS */
typedef struct S1198 T1198;

/* ET_ECF_ADAPTED_LIBRARIES */
typedef struct S1199 T1199;

/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
typedef struct S1200 T1200;

/* ET_ECF_FILE_RULES */
typedef struct S1201 T1201;

/* ET_ECF_EXTERNAL_CFLAGS */
typedef struct S1202 T1202;

/* ET_ECF_EXTERNAL_INCLUDES */
typedef struct S1203 T1203;

/* ET_ECF_EXTERNAL_LIBRARIES */
typedef struct S1204 T1204;

/* ET_ECF_EXTERNAL_LINKER_FLAGS */
typedef struct S1205 T1205;

/* ET_ECF_EXTERNAL_MAKES */
typedef struct S1206 T1206;

/* ET_ECF_EXTERNAL_OBJECTS */
typedef struct S1207 T1207;

/* ET_ECF_EXTERNAL_RESOURCES */
typedef struct S1208 T1208;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
typedef struct S1209 T1209;

/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
typedef struct S1210 T1210;

/* ET_ECF_VERSION */
typedef struct S1212 T1212;

/* ET_ECF_CLUSTER */
typedef struct S1213 T1213;

/* ET_ECF_EXTERNAL_CFLAG */
typedef struct S1214 T1214;

/* ET_ECF_EXTERNAL_INCLUDE */
typedef struct S1215 T1215;

/* ET_ECF_EXTERNAL_LIBRARY */
typedef struct S1216 T1216;

/* ET_ECF_EXTERNAL_LINKER_FLAG */
typedef struct S1217 T1217;

/* ET_ECF_EXTERNAL_MAKE */
typedef struct S1218 T1218;

/* ET_ECF_EXTERNAL_OBJECT */
typedef struct S1219 T1219;

/* ET_ECF_EXTERNAL_RESOURCE */
typedef struct S1220 T1220;

/* ET_ECF_FILE_RULE */
typedef struct S1221 T1221;

/* ET_ECF_ACTION */
typedef struct S1222 T1222;

/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S1223 T1223;

/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1224 T1224;

/* [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
typedef struct S1225 T1225;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
typedef struct S1226 T1226;

/* [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
typedef struct S1227 T1227;

/* ET_ECF_ROOT_CLASS */
typedef struct S1228 T1228;

/* ET_ECF_ROOT_ALL_CLASSES */
typedef struct S1229 T1229;

/* ET_ECF_ORED_CONDITIONS */
typedef struct S1230 T1230;

/* ET_ECF_ANDED_CONDITIONS */
typedef struct S1231 T1231;

/* ET_ECF_VISIBLE_CLASS */
typedef struct S1232 T1232;

/* ET_ECF_BUILD_CONDITION */
typedef struct S1234 T1234;

/* ET_ECF_CONCURRENCY_CONDITION */
typedef struct S1235 T1235;

/* ET_ECF_CUSTOM_CONDITION */
typedef struct S1236 T1236;

/* ET_ECF_DOTNET_CONDITION */
typedef struct S1237 T1237;

/* ET_ECF_DYNAMIC_RUNTIME_CONDITION */
typedef struct S1238 T1238;

/* ET_ECF_PLATFORM_CONDITION */
typedef struct S1239 T1239;

/* ET_ECF_COMPILER_VERSION_CONDITION */
typedef struct S1241 T1241;

/* ET_ECF_MSIL_CLR_VERSION_CONDITION */
typedef struct S1242 T1242;

/* [attached] TUPLE [ET_ECF_SYSTEM] */
typedef struct S1244 T1244;

/* [attached] TUPLE [ET_LACE_SYSTEM] */
typedef struct S1245 T1245;

/* ET_PARENTHESIS_EXPRESSION */
typedef struct S1246 T1246;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S1250 T1250;

/* ET_INFIX_FREE_NAME */
typedef struct S1251 T1251;

/* TYPED_POINTER [[attached] NATURAL_8] */
typedef struct S1253 T1253;
extern T0* GE_boxed1253(T1253 a1);
typedef struct Sb1253 Tb1253;

/* EXCEPTIONS */
typedef struct S1254 T1254;

/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
typedef struct S1255 T1255;

/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
typedef struct S1257 T1257;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1261 T1261;

/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1262 T1262;

/* [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
typedef struct S1263 T1263;

/* UC_UTF8_ROUTINES */
typedef struct S1264 T1264;

/* UC_UTF8_STRING */
typedef struct S1265 T1265;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S1266 T1266;

/* [attached] TYPE [[attached] INTEGER_32] */
#define T1269 EIF_TYPE_OBJ

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
typedef struct S1270 T1270;

/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S1271 T1271;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1272 T1272;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1274 T1274;

/* KL_CHARACTER_BUFFER */
typedef struct S1276 T1276;

/* [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
typedef struct S1277 T1277;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1278 T1278;

/* KL_STRING_INPUT_STREAM */
typedef struct S1279 T1279;

/* ET_TEXT_GROUP */
typedef struct S1280 T1280;

/* ET_OBJECT_TEST_LIST */
typedef struct S1283 T1283;

/* ET_ACROSS_COMPONENT_LIST */
typedef struct S1284 T1284;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S1285 T1285;

/* ET_VERBATIM_STRING */
typedef struct S1286 T1286;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S1287 T1287;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S1288 T1288;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S1289 T1289;

/* ET_OCTAL_INTEGER_CONSTANT */
typedef struct S1290 T1290;

/* ET_BINARY_INTEGER_CONSTANT */
typedef struct S1291 T1291;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S1292 T1292;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S1293 T1293;

/* ET_TRUE_CONSTANT */
typedef struct S1295 T1295;

/* ET_FALSE_CONSTANT */
typedef struct S1296 T1296;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S1297 T1297;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S1298 T1298;

/* ET_TAGGED_INDEXING */
typedef struct S1300 T1300;

/* ET_INDEXING */
typedef struct S1301 T1301;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S1302 T1302;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S1303 T1303;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S1304 T1304;

/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
typedef struct S1305 T1305;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S1306 T1306;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1307 T1307;

/* ET_RENAME */
typedef struct S1308 T1308;

/* ET_ALL_EXPORT */
typedef struct S1309 T1309;

/* ET_CONVERT_FUNCTION */
typedef struct S1311 T1311;

/* ET_CONVERT_PROCEDURE */
typedef struct S1312 T1312;

/* ET_DO_FUNCTION */
typedef struct S1314 T1314;

/* ET_ONCE_FUNCTION */
typedef struct S1315 T1315;

/* ET_DEFERRED_FUNCTION */
typedef struct S1316 T1316;

/* ET_ONCE_PROCEDURE */
typedef struct S1318 T1318;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S1319 T1319;

/* ET_PREFIX_NAME */
typedef struct S1320 T1320;

/* ET_PREFIX_FREE_NAME */
typedef struct S1321 T1321;

/* ET_INFIX_NAME */
typedef struct S1322 T1322;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S1323 T1323;

/* ET_ALIAS_FREE_NAME */
typedef struct S1324 T1324;

/* ET_CLASS_ASSERTION */
typedef struct S1327 T1327;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S1328 T1328;

/* ET_LIKE_FEATURE */
typedef struct S1330 T1330;

/* ET_QUALIFIED_LIKE_BRACED_TYPE */
typedef struct S1331 T1331;

/* ET_QUALIFIED_LIKE_TYPE */
typedef struct S1332 T1332;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S1333 T1333;

/* ET_ASSIGNMENT */
typedef struct S1334 T1334;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S1335 T1335;

/* ET_LOOP_INSTRUCTION */
typedef struct S1336 T1336;

/* ET_NULL_INSTRUCTION */
typedef struct S1337 T1337;

/* ET_BANG_INSTRUCTION */
typedef struct S1338 T1338;

/* ET_CREATE_INSTRUCTION */
typedef struct S1339 T1339;

/* ET_CHOICE_RANGE */
typedef struct S1340 T1340;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S1341 T1341;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S1343 T1343;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S1344 T1344;

/* ET_FEATURE_ADDRESS */
typedef struct S1345 T1345;

/* ET_CURRENT_ADDRESS */
typedef struct S1346 T1346;

/* ET_RESULT_ADDRESS */
typedef struct S1347 T1347;

/* ET_EXPRESSION_ADDRESS */
typedef struct S1348 T1348;

/* ET_INFIX_EXPRESSION */
typedef struct S1349 T1349;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S1350 T1350;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S1351 T1351;

/* ET_MANIFEST_TYPE */
typedef struct S1352 T1352;

/* ET_PREFIX_EXPRESSION */
typedef struct S1353 T1353;

/* ET_OLD_EXPRESSION */
typedef struct S1354 T1354;

/* ET_OLD_OBJECT_TEST */
typedef struct S1355 T1355;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S1356 T1356;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S1357 T1357;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S1358 T1358;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1359 T1359;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1360 T1360;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1361 T1361;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1362 T1362;

/* ET_AGENT_OPEN_TARGET */
typedef struct S1363 T1363;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1364 T1364;

/* ET_TAGGED_ASSERTION */
typedef struct S1366 T1366;

/* ET_FILE_POSITION */
typedef struct S1368 T1368;

/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
typedef struct S1369 T1369;

/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
typedef struct S1370 T1370;

/* ET_REDECLARED_FEATURE */
typedef struct S1372 T1372;

/* ET_FEATURE_IDS */
typedef struct S1373 T1373;

/* CONSOLE */
typedef struct S1379 T1379;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
typedef struct S1380 T1380;

/* ET_LIKE_N */
typedef struct S1382 T1382;

/* [attached] SPECIAL [[attached] ET_BASE_TYPE] */
typedef struct S1383 T1383;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
typedef struct S1384 T1384;

/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
typedef struct S1385 T1385;

/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
typedef struct S1386 T1386;

/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
typedef struct S1387 T1387;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
typedef struct S1388 T1388;

/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
typedef struct S1389 T1389;

/* detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S1390 T1390;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1391 T1391;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1392 T1392;

/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1393 T1393;

/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1395 T1395;

/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1396 T1396;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1397 T1397;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1398 T1398;

/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
typedef struct S1399 T1399;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
typedef struct S1400 T1400;

/* [attached] SPECIAL [[attached] ET_UNIVERSE] */
typedef struct S1401 T1401;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1403 T1403;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1404 T1404;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1406 T1406;

/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
typedef struct S1407 T1407;

/* ET_CLASS_TYPE_STATUS_CHECKER1 */
typedef struct S1408 T1408;

/* ET_CLASS_TYPE_STATUS_CHECKER2 */
typedef struct S1409 T1409;

/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
typedef struct S1410 T1410;

/* ET_CLASS_TYPE_STATUS_CHECKER3 */
typedef struct S1411 T1411;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
typedef struct S1412 T1412;

/* ET_BRACED_TYPE_LIST */
typedef struct S1414 T1414;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S1415 T1415;

/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S1416 T1416;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
typedef struct S1417 T1417;

/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
typedef struct S1418 T1418;

/* UT_SYNTAX_ERROR */
typedef struct S1419 T1419;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1420 T1420;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1422 T1422;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1423 T1423;

/* [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
typedef struct S1425 T1425;

/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
typedef struct S1426 T1426;

/* [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
typedef struct S1427 T1427;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
typedef struct S1428 T1428;

/* [attached] SPECIAL [[attached] XM_NAMESPACE] */
typedef struct S1429 T1429;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1430 T1430;

/* detachable DS_BILINKABLE [[attached] XM_POSITION] */
typedef struct S1431 T1431;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
typedef struct S1432 T1432;

/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
typedef struct S1433 T1433;

/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1434 T1434;

/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
typedef struct S1437 T1437;

/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
typedef struct S1438 T1438;

/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1440 T1440;

/* [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
typedef struct S1441 T1441;

/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1442 T1442;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1443 T1443;

/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1444 T1444;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
typedef struct S1445 T1445;

/* detachable DS_BILINKABLE [[attached] STRING_8] */
typedef struct S1446 T1446;

/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
typedef struct S1447 T1447;

/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1448 T1448;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1449 T1449;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
typedef struct S1450 T1450;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
typedef struct S1451 T1451;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
typedef struct S1452 T1452;

/* [attached] SPECIAL [[attached] ET_LIBRARY] */
typedef struct S1453 T1453;

/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1454 T1454;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1455 T1455;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1456 T1456;

/* [attached] SPECIAL [[attached] NATIVE_STRING] */
typedef struct S1457 T1457;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
typedef struct S1458 T1458;

/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1459 T1459;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
typedef struct S1460 T1460;

/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1461 T1461;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
typedef struct S1462 T1462;

/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
typedef struct S1463 T1463;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
typedef struct S1464 T1464;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
typedef struct S1465 T1465;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
typedef struct S1466 T1466;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1467 T1467;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
typedef struct S1468 T1468;

/* [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
typedef struct S1469 T1469;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
typedef struct S1471 T1471;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S1473 T1473;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
typedef struct S1474 T1474;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
typedef struct S1477 T1477;

/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
typedef struct S1478 T1478;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1479 T1479;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
typedef struct S1480 T1480;

/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1481 T1481;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
typedef struct S1484 T1484;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
typedef struct S1486 T1486;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
typedef struct S1487 T1487;

/* [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
typedef struct S1488 T1488;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
typedef struct S1489 T1489;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1491 T1491;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
typedef struct S1492 T1492;

/* [attached] SPECIAL [[attached] ET_CLIENT] */
typedef struct S1493 T1493;

/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S1494 T1494;

/* ET_CALL_NAME_TESTER */
typedef struct S1495 T1495;

/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
typedef struct S1497 T1497;

/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S1498 T1498;

/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S1499 T1499;

/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S1500 T1500;

/* ET_REPLICATED_FEATURE */
typedef struct S1502 T1502;

/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1503 T1503;

/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1504 T1504;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1505 T1505;

/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
typedef struct S1506 T1506;

/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S1508 T1508;

/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
typedef struct S1510 T1510;

/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
typedef struct S1511 T1511;

/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
typedef struct S1512 T1512;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S1513 T1513;

/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
typedef struct S1514 T1514;

/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S1515 T1515;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
typedef struct S1516 T1516;

/* [attached] TYPE [[attached] ET_FEATURE] */
#define T1517 EIF_TYPE_OBJ

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
typedef struct S1519 T1519;

/* [attached] TYPE [[attached] ET_CLASS] */
#define T1520 EIF_TYPE_OBJ

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
typedef struct S1521 T1521;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
typedef struct S1522 T1522;

/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1523 T1523;

/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1524 T1524;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
typedef struct S1525 T1525;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
typedef struct S1527 T1527;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
typedef struct S1528 T1528;

/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
typedef struct S1531 T1531;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
typedef struct S1532 T1532;

/* STRING_8_SEARCHER */
typedef struct S1533 T1533;

/* detachable ARRAYED_LIST [[attached] INTEGER_32] */
typedef struct S1534 T1534;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1536 T1536;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1538 T1538;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
typedef struct S1539 T1539;

/* [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1540 T1540;

/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
typedef struct S1541 T1541;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
typedef struct S1542 T1542;

/* [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
typedef struct S1543 T1543;

/* [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
typedef struct S1544 T1544;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S1547 T1547;

/* TYPED_POINTER [[attached] NATURAL_16] */
typedef struct S1548 T1548;
extern T0* GE_boxed1548(T1548 a1);
typedef struct Sb1548 Tb1548;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
typedef struct S1549 T1549;

/* XM_COMMENT */
typedef struct S1550 T1550;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1551 T1551;

/* XM_CHARACTER_DATA */
typedef struct S1552 T1552;

/* detachable DS_CELL [detachable ET_CLASS] */
typedef struct S1555 T1555;

/* [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
typedef struct S1556 T1556;

/* [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
typedef struct S1558 T1558;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S1562 T1562;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1563 T1563;

/* ET_UNQUALIFIED_CALL_INSTRUCTION */
typedef struct S1564 T1564;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1567 T1567;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1570 T1570;

/* [attached] TUPLE [ET_CLIENT_LIST] */
typedef struct S1574 T1574;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1576 T1576;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1577 T1577;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1578 T1578;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1580 T1580;

/* ET_CLUSTER_ERROR */
typedef struct S1582 T1582;

/* ET_SYNTAX_ERROR */
typedef struct S1583 T1583;

/* [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
typedef struct S1590 T1590;

/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
typedef struct S1596 T1596;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1600 T1600;

/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1610 T1610;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1617 T1617;

/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
typedef struct S1618 T1618;

/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
typedef struct S1619 T1619;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S1620 T1620;

/* detachable DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
typedef struct S1621 T1621;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
typedef struct S1622 T1622;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1623 T1623;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1624 T1624;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
typedef struct S1625 T1625;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1626 T1626;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1627 T1627;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1628 T1628;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1629 T1629;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1630 T1630;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1631 T1631;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1632 T1632;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
typedef struct S1633 T1633;

/* [attached] SPECIAL [[attached] ET_ECF_ACTION] */
typedef struct S1634 T1634;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
typedef struct S1635 T1635;

/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1636 T1636;

/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
typedef struct S1637 T1637;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
typedef struct S1640 T1640;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
typedef struct S1641 T1641;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1642 T1642;

/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1643 T1643;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
typedef struct S1644 T1644;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1645 T1645;

/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1646 T1646;

/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
typedef struct S1648 T1648;

/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
typedef struct S1653 T1653;

/* UC_UTF16_ROUTINES */
typedef struct S1654 T1654;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
typedef struct S1655 T1655;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
typedef struct S1657 T1657;

/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1658 T1658;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1659 T1659;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
typedef struct S1660 T1660;

/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1661 T1661;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1662 T1662;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
typedef struct S1663 T1663;

/* LX_DFA_WILDCARD */
typedef struct S1664 T1664;

/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S1665 T1665;

/* ET_STANDARD_ONCE_KEYS */
typedef struct S1667 T1667;

/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
typedef struct S1670 T1670;

/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
typedef struct S1673 T1673;

/* [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
typedef struct S1674 T1674;

/* [attached] SPECIAL [[attached] ET_XACE_TARGET] */
typedef struct S1675 T1675;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
typedef struct S1676 T1676;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
typedef struct S1677 T1677;

/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
typedef struct S1678 T1678;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
typedef struct S1679 T1679;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
typedef struct S1680 T1680;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S1681 T1681;

/* detachable DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
typedef struct S1682 T1682;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
typedef struct S1683 T1683;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
typedef struct S1684 T1684;

/* [attached] SPECIAL [[attached] YY_BUFFER] */
typedef struct S1686 T1686;

/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
typedef struct S1687 T1687;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
typedef struct S1688 T1688;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
typedef struct S1689 T1689;

/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1691 T1691;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1692 T1692;

/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1693 T1693;

/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
typedef struct S1694 T1694;

/* [attached] SPECIAL [[attached] ET_CLUSTER] */
typedef struct S1695 T1695;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
typedef struct S1696 T1696;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
typedef struct S1697 T1697;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
typedef struct S1698 T1698;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
typedef struct S1699 T1699;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
typedef struct S1700 T1700;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
typedef struct S1701 T1701;

/* [attached] SPECIAL [[attached] ET_RENAME] */
typedef struct S1702 T1702;

/* [attached] TYPE [[attached] ET_RENAME] */
#define T1705 EIF_TYPE_OBJ

/* [attached] TYPE [[attached] ET_CALL_NAME] */
#define T1706 EIF_TYPE_OBJ

/* [attached] SPECIAL [[attached] ET_CALL_NAME] */
typedef struct S1707 T1707;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
typedef struct S1708 T1708;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
typedef struct S1709 T1709;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
typedef struct S1710 T1710;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
typedef struct S1711 T1711;

/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
typedef struct S1714 T1714;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
typedef struct S1715 T1715;

/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S1716 T1716;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
typedef struct S1718 T1718;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1719 T1719;

/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
typedef struct S1720 T1720;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
typedef struct S1721 T1721;

/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
typedef struct S1722 T1722;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
typedef struct S1723 T1723;

/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
typedef struct S1724 T1724;

/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S1725 T1725;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
typedef struct S1726 T1726;

/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S1727 T1727;

/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
typedef struct S1730 T1730;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
typedef struct S1731 T1731;

/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
typedef struct S1732 T1732;

/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
typedef struct S1733 T1733;

/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S1734 T1734;

/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
typedef struct S1735 T1735;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
typedef struct S1736 T1736;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
typedef struct S1737 T1737;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
typedef struct S1739 T1739;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S1740 T1740;

/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S1741 T1741;

/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
typedef struct S1742 T1742;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1743 T1743;

/* [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1744 T1744;

/* [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1745 T1745;

/* [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S1746 T1746;

/* KL_CHARACTER_ROUTINES */
typedef struct S1754 T1754;

/* [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1755 T1755;

/* ET_ACTUAL_PARAMETER_SUBLIST */
typedef struct S1756 T1756;

/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
typedef struct S1757 T1757;

/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S1759 T1759;

/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S1763 T1763;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
typedef struct S1764 T1764;

/* ET_PARENTHESIS_INSTRUCTION */
typedef struct S1765 T1765;

/* ET_PARENTHESIS_SYMBOL */
typedef struct S1769 T1769;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1775 T1775;

/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
typedef struct S1787 T1787;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1788 T1788;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1789 T1789;

/* [attached] TYPE [[attached] ET_NESTED_TYPE_CONTEXT] */
#define T1792 EIF_TYPE_OBJ

/* [attached] TYPE [[attached] ET_ACROSS_COMPONENT] */
#define T1793 EIF_TYPE_OBJ

/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
typedef struct S1795 T1795;

/* [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
typedef struct S1796 T1796;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1801 T1801;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
typedef struct S1802 T1802;

/* [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
typedef struct S1803 T1803;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1804 T1804;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
typedef struct S1805 T1805;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1806 T1806;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
typedef struct S1807 T1807;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1808 T1808;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
typedef struct S1809 T1809;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1810 T1810;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
typedef struct S1811 T1811;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1812 T1812;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
typedef struct S1813 T1813;

/* [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1814 T1814;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
typedef struct S1815 T1815;

/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
typedef struct S1816 T1816;

/* [attached] TUPLE [[attached] LX_WILDCARD] */
typedef struct S1817 T1817;

/* [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
typedef struct S1818 T1818;

/* [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
typedef struct S1819 T1819;

/* [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S1821 T1821;

/* [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
typedef struct S1822 T1822;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
typedef struct S1828 T1828;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
typedef struct S1830 T1830;

/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
typedef struct S1831 T1831;

/* [attached] SPECIAL [[attached] NATURAL_64] */
typedef struct S1833 T1833;

/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
typedef struct S1834 T1834;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
typedef struct S1835 T1835;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
typedef struct S1836 T1836;

/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1837 T1837;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1838 T1838;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
typedef struct S1839 T1839;

/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1840 T1840;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1841 T1841;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
typedef struct S1842 T1842;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
typedef struct S1843 T1843;

/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
typedef struct S1844 T1844;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
typedef struct S1845 T1845;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1846 T1846;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1847 T1847;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
typedef struct S1848 T1848;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1849 T1849;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1850 T1850;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
typedef struct S1851 T1851;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1852 T1852;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1853 T1853;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
typedef struct S1854 T1854;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1855 T1855;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1856 T1856;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
typedef struct S1857 T1857;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1858 T1858;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1859 T1859;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
typedef struct S1860 T1860;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1861 T1861;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1862 T1862;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
typedef struct S1863 T1863;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1864 T1864;

/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1865 T1865;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
typedef struct S1866 T1866;

/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1867 T1867;

/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1868 T1868;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S1869 T1869;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1870 T1870;

/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1871 T1871;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
typedef struct S1872 T1872;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1873 T1873;

/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1874 T1874;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
typedef struct S1875 T1875;

/* detachable DS_LINKABLE [[attached] CHARACTER_8] */
typedef struct S1876 T1876;

/* LX_WILDCARD_PARSER */
typedef struct S1877 T1877;

/* LX_DESCRIPTION */
typedef struct S1878 T1878;

/* LX_FULL_DFA */
typedef struct S1879 T1879;

/* [attached] SPECIAL [[attached] LX_WILDCARD] */
typedef struct S1881 T1881;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
typedef struct S1884 T1884;

/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
typedef struct S1885 T1885;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
typedef struct S1887 T1887;

/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
typedef struct S1889 T1889;

/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S1890 T1890;

/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
typedef struct S1893 T1893;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
typedef struct S1894 T1894;

/* CHARACTER_PROPERTY */
typedef struct S1895 T1895;

/* [attached] TUPLE [ET_GROUP] */
typedef struct S1896 T1896;

/* [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
typedef struct S1897 T1897;

/* AP_OPTION_COMPARATOR */
typedef struct S1898 T1898;

/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
typedef struct S1899 T1899;

/* ET_DYNAMIC_EQUALITY_EXPRESSION */
typedef struct S1906 T1906;

/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
typedef struct S1907 T1907;

/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1908 T1908;

/* ET_UNIVERSE_ERROR */
typedef struct S1909 T1909;

/* ET_CONVERT_BUILTIN_EXPRESSION */
typedef struct S1913 T1913;

/* ET_CONVERT_FROM_EXPRESSION */
typedef struct S1914 T1914;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1915 T1915;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
typedef struct S1921 T1921;

/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S1924 T1924;

/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
typedef struct S1927 T1927;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
typedef struct S1928 T1928;

/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1929 T1929;

/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1930 T1930;

/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
typedef struct S1931 T1931;

/* LX_START_CONDITIONS */
typedef struct S1932 T1932;

/* LX_ACTION_FACTORY */
typedef struct S1933 T1933;

/* LX_SYMBOL_CLASS */
typedef struct S1934 T1934;

/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S1935 T1935;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
typedef struct S1936 T1936;

/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
typedef struct S1937 T1937;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
typedef struct S1938 T1938;

/* LX_NFA */
typedef struct S1939 T1939;

/* [attached] SPECIAL [[attached] LX_NFA] */
typedef struct S1940 T1940;

/* LX_EQUIVALENCE_CLASSES */
typedef struct S1941 T1941;

/* LX_RULE */
typedef struct S1942 T1942;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
typedef struct S1943 T1943;

/* LX_UNRECOGNIZED_RULE_ERROR */
typedef struct S1944 T1944;

/* LX_MISSING_QUOTE_ERROR */
typedef struct S1945 T1945;

/* LX_BAD_CHARACTER_CLASS_ERROR */
typedef struct S1946 T1946;

/* LX_BAD_CHARACTER_ERROR */
typedef struct S1947 T1947;

/* LX_FULL_AND_META_ERROR */
typedef struct S1948 T1948;

/* LX_FULL_AND_REJECT_ERROR */
typedef struct S1949 T1949;

/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
typedef struct S1950 T1950;

/* LX_CHARACTER_OUT_OF_RANGE_ERROR */
typedef struct S1951 T1951;

/* [attached] ARRAY [[attached] LX_RULE] */
typedef struct S1952 T1952;

/* [attached] SPECIAL [[attached] LX_RULE] */
typedef struct S1953 T1953;

/* LX_DFA_STATE */
typedef struct S1954 T1954;

/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
typedef struct S1955 T1955;

/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
typedef struct S1956 T1956;

/* LX_SYMBOL_PARTITIONS */
typedef struct S1957 T1957;

/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
typedef struct S1958 T1958;

/* LX_START_CONDITION */
typedef struct S1959 T1959;

/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
typedef struct S1960 T1960;

/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
typedef struct S1961 T1961;

/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S1962 T1962;

/* LX_NFA_STATE */
typedef struct S1963 T1963;

/* [attached] TYPE [detachable DEVELOPER_EXCEPTION] */
#define T1965 EIF_TYPE_OBJ

/* [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
typedef struct S1969 T1969;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
typedef struct S1970 T1970;

/* [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
typedef struct S1971 T1971;

/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
typedef struct S1972 T1972;

/* ET_AST_NULL_LEAF */
typedef struct S1974 T1974;

/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
typedef struct S1975 T1975;

/* [attached] SPECIAL [[attached] NATURAL_16] */
typedef struct S1976 T1976;

/* [attached] SPECIAL [[attached] NATURAL_32] */
typedef struct S1977 T1977;

/* [attached] ARRAY [[attached] NATURAL_16] */
typedef struct S1978 T1978;

/* [attached] ARRAY [[attached] NATURAL_32] */
typedef struct S1979 T1979;

/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1980 T1980;

/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1981 T1981;

/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1982 T1982;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
typedef struct S1983 T1983;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
typedef struct S1984 T1984;

/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
typedef struct S1985 T1985;

/* [attached] SPECIAL [[attached] LX_START_CONDITION] */
typedef struct S1986 T1986;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
typedef struct S1987 T1987;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
typedef struct S1988 T1988;

/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S1991 T1991;

/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S1993 T1993;

/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
typedef struct S1995 T1995;

/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S1996 T1996;

/* [attached] DS_BILINKABLE [[attached] INTEGER_32] */
typedef struct S1997 T1997;

/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
typedef struct S1998 T1998;

/* LX_ACTION */
typedef struct S2000 T2000;

/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
typedef struct S2001 T2001;

/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
typedef struct S2003 T2003;

/* [attached] SPECIAL [[attached] LX_NFA_STATE] */
typedef struct S2005 T2005;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
typedef struct S2007 T2007;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
typedef struct S2008 T2008;

/* [attached] SPECIAL [[attached] LX_DFA_STATE] */
typedef struct S2010 T2010;

/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
typedef struct S2011 T2011;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
typedef struct S2012 T2012;

/* [attached] KL_ARRAY [[attached] LX_RULE] */
typedef struct S2013 T2013;

/* [attached] ARRAY [detachable LX_DFA_STATE] */
typedef struct S2014 T2014;

/* [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
typedef struct S2015 T2015;

/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
typedef struct S2016 T2016;

/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
typedef struct S2018 T2018;

/* [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2019 T2019;

/* [attached] TUPLE [ET_ECF_LIBRARY] */
typedef struct S2020 T2020;

/* [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2021 T2021;

/* [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2022 T2022;

/* [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2023 T2023;

/* [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2024 T2024;

/* [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
typedef struct S2025 T2025;

/* [attached] TYPE [[attached] BOOLEAN] */
#define T2027 EIF_TYPE_OBJ

/* [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
typedef struct S2028 T2028;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S2029 T2029;

/* [attached] TUPLE [ET_ECF_FILE_RULES] */
typedef struct S2030 T2030;

/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
typedef struct S2031 T2031;

/* [attached] TUPLE [ET_ECF_STATE] */
typedef struct S2032 T2032;

/* [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
typedef struct S2034 T2034;

/* [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
typedef struct S2035 T2035;

/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
typedef struct S2037 T2037;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
typedef struct S2038 T2038;

/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
typedef struct S2041 T2041;

/* [attached] KL_ARRAY [[attached] STRING_8] */
typedef struct S2044 T2044;

/* [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
typedef struct S2045 T2045;

/* [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
typedef struct S2046 T2046;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 z1; /* item */
};

/* Struct for type UTF_CONVERTER */
struct S565 {
	char dummy;
};

/* Struct for boxed version of type UTF_CONVERTER */
struct Sb565 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T565 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_16] */
struct S1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_16] */
struct Sb1548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1548 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] NATURAL_8] */
struct S1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] NATURAL_8] */
struct Sb1253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1253 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] ANY] */
struct S1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] ANY] */
struct Sb1127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1127 z1; /* item */
};

/* Struct for type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct S572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* to_pointer */
};

/* Struct for boxed version of type TYPED_POINTER [[attached] SPECIAL [[attached] NATURAL_8]] */
struct Sb572 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T572 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T2 z2[1]; /* item */
};

/* Struct for type SPECIAL [CHARACTER_32] */
struct S16 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T3 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type STRING_32 */
struct S18 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
};

/* Struct for type IMMUTABLE_STRING_32 */
struct S19 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* area_lower */
};

/* Struct for type ISE_EXCEPTION_MANAGER */
struct S20 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type GEC */
struct S24 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* gelint_flag */
	T0* a6; /* catcall_option */
	T0* a7; /* c_compile_option */
	T0* a8; /* split_option */
	T0* a9; /* split_size_option */
	T0* a10; /* new_instance_types_option */
	T0* a11; /* gc_option */
	T0* a12; /* silent_flag */
	T0* a13; /* verbose_flag */
	T0* a14; /* version_flag */
	T6 a15; /* split_size */
	T1 a16; /* ecf_gelint_option */
};

/* Struct for type [attached] CELL [detachable EXCEPTION] */
struct S25 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
struct S26 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T6 a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T6 a14; /* ht_deleted_item */
	T6 a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
struct S27 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] CELL [[attached] NO_MORE_MEMORY] */
struct S28 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type C_STRING */
struct S29 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* count */
};

/* Struct for type [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
struct S30 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
	T6 z2;
	T6 z3;
	T0* z4;
	T0* z5;
	T0* z6;
	T0* z7;
	T0* z8;
	T0* z9;
	T6 z10;
	T1 z11;
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S31 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T0* a2; /* last_string */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* character_buffer */
	T2 a6; /* last_character */
	T14 a7; /* file_pointer */
	T1 a8; /* descriptor_available */
	T0* a9; /* internal_name */
	T0* a10; /* internal_detachable_name_pointer */
};

/* Struct for type KL_ARGUMENTS */
struct S32 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* program_name */
};

/* Struct for type ET_ISE_VARIABLES */
struct S33 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ERROR_HANDLER */
struct S34 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T0* a3; /* mutex */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_ge */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S35 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* master_class_mutex */
	T0* a3; /* master_classes */
	T0* a4; /* register_class_mutex */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* external_library_pathnames */
	T0* a8; /* external_make_pathnames */
	T0* a9; /* external_resource_pathnames */
	T0* a10; /* external_cflags */
	T0* a11; /* external_linker_flags */
	T1 a12; /* console_application_mode */
	T1 a13; /* alias_transition_mode */
	T1 a14; /* attachment_type_conformance_mode */
	T1 a15; /* scoop_mode */
	T0* a16; /* universe */
	T0* a17; /* name */
	T0* a18; /* libraries */
	T0* a19; /* clusters */
	T0* a20; /* dotnet_assemblies */
	T0* a21; /* system_name */
	T0* a22; /* any_type */
	T0* a23; /* detachable_any_type */
	T0* a24; /* detachable_separate_any_type */
	T0* a25; /* separate_any_type */
	T0* a26; /* any_parent */
	T0* a27; /* any_parents */
	T0* a28; /* any_clients */
	T0* a29; /* tuple_type */
	T0* a30; /* detachable_tuple_type */
	T0* a31; /* tuple_like_current_type */
	T0* a32; /* unfolded_empty_tuple_actual_parameters */
	T0* a33; /* array_any_type */
	T0* a34; /* array_detachable_any_type */
	T0* a35; /* array_none_type */
	T0* a36; /* array_like_current_type */
	T0* a37; /* boolean_type */
	T0* a38; /* character_type */
	T0* a39; /* character_8_type */
	T0* a40; /* character_8_convert_feature */
	T0* a41; /* character_32_type */
	T0* a42; /* character_32_convert_feature */
	T0* a43; /* double_type */
	T0* a44; /* exception_type */
	T0* a45; /* detachable_exception_type */
	T0* a46; /* exception_manager_type */
	T0* a47; /* function_type */
	T0* a48; /* immutable_string_32_type */
	T0* a49; /* integer_type */
	T0* a50; /* integer_8_type */
	T0* a51; /* integer_8_convert_feature */
	T0* a52; /* integer_16_type */
	T0* a53; /* integer_16_convert_feature */
	T0* a54; /* integer_32_type */
	T0* a55; /* integer_32_convert_feature */
	T0* a56; /* integer_64_type */
	T0* a57; /* integer_64_convert_feature */
	T0* a58; /* ise_exception_manager_type */
	T0* a59; /* iterable_detachable_any_type */
	T0* a60; /* natural_type */
	T0* a61; /* natural_8_type */
	T0* a62; /* natural_8_convert_feature */
	T0* a63; /* natural_16_type */
	T0* a64; /* natural_16_convert_feature */
	T0* a65; /* natural_32_type */
	T0* a66; /* natural_32_convert_feature */
	T0* a67; /* natural_64_type */
	T0* a68; /* natural_64_convert_feature */
	T0* a69; /* none_type */
	T0* a70; /* detachable_none_type */
	T0* a71; /* pointer_type */
	T0* a72; /* predicate_like_current_type */
	T0* a73; /* procedure_like_current_type */
	T0* a74; /* real_type */
	T0* a75; /* real_32_type */
	T0* a76; /* real_32_convert_feature */
	T0* a77; /* real_64_type */
	T0* a78; /* real_64_convert_feature */
	T0* a79; /* routine_type */
	T0* a80; /* special_any_type */
	T0* a81; /* special_detachable_any_type */
	T0* a82; /* string_type */
	T0* a83; /* detachable_string_type */
	T0* a84; /* string_8_type */
	T0* a85; /* string_8_convert_feature */
	T0* a86; /* string_32_type */
	T0* a87; /* string_32_convert_feature */
	T0* a88; /* system_object_type */
	T0* a89; /* system_object_parents */
	T0* a90; /* system_string_type */
	T0* a91; /* type_any_type */
	T0* a92; /* type_type_any_type */
	T0* a93; /* type_detachable_any_type */
	T0* a94; /* type_detachable_like_current_type */
	T0* a95; /* detachable_type_exception_type */
	T0* a96; /* type_detachable_exception_type */
	T0* a97; /* detachable_type_detachable_any_type */
	T0* a98; /* type_like_current_type */
	T0* a99; /* typed_pointer_any_type */
	T0* a100; /* typed_pointer_like_current_type */
	T0* a101; /* wide_character_type */
	T1 a102; /* is_read_only */
	T6 a103; /* registered_class_count */
	T0* a104; /* implicit_attachment_type_mark */
	T6 a105; /* default_create_seed */
	T6 a106; /* copy_seed */
	T6 a107; /* is_equal_seed */
	T6 a108; /* routine_call_seed */
	T6 a109; /* function_item_seed */
	T6 a110; /* dispose_seed */
	T6 a111; /* iterable_new_cursor_seed */
	T6 a112; /* iteration_cursor_after_seed */
	T6 a113; /* iteration_cursor_forth_seed */
	T1 a114; /* is_dotnet */
	T1 a115; /* target_type_attachment_mode */
	T1 a116; /* obsolete_routine_type_mode */
};

/* Struct for type KL_STRING_ROUTINES */
struct S36 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_EXCEPTIONS */
struct S38 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type AP_PARSER */
struct S39 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* error_handler */
	T0* a6; /* parameters_description */
	T0* a7; /* application_description */
	T0* a8; /* current_options */
	T1 a9; /* is_first_option */
	T0* a10; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S40 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S41 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S42 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S44 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* possible_values */
	T0* a5; /* parameter_description */
	T1 a6; /* needs_parameter */
	T0* a7; /* long_form */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T2 a11; /* short_form */
	T1 a12; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S45 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T1 a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S46 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T6 a2; /* default_parameter */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T0* a5; /* description */
	T0* a6; /* parameter_description */
	T1 a7; /* needs_parameter */
	T1 a8; /* is_mandatory */
	T6 a9; /* maximum_occurrences */
	T1 a10; /* has_short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_STRING_OPTION */
struct S47 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
	T0* a2; /* default_parameter */
	T0* a3; /* description */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S51 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S53 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T6 a10; /* new_name_count */
	T1 a11; /* is_shallow */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S54 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
struct S55 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* item_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S56 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S58 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
struct S59 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_SYSTEM */
struct S62 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* master_classes */
	T0* a2; /* root_type */
	T0* a3; /* none_type */
	T0* a4; /* any_type */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T0* a32; /* system_name */
	T0* a33; /* external_cflags */
	T0* a34; /* external_include_pathnames */
	T0* a35; /* external_library_pathnames */
	T0* a36; /* options */
	T0* a37; /* targets */
	T0* a38; /* name */
	T0* a39; /* selected_target */
	T0* a40; /* clusters */
	T0* a41; /* mounted_libraries */
	T0* a42; /* root_class_name */
	T0* a43; /* dotnet_assemblies */
	T0* a44; /* libraries */
	T1 a45; /* console_application_mode */
	T1 a46; /* exception_trace_mode */
	T1 a47; /* trace_mode */
	T1 a48; /* use_boehm_gc */
	T1 a49; /* multithreaded_mode */
	T0* a50; /* register_class_mutex */
	T0* a51; /* external_object_pathnames */
	T0* a52; /* external_make_pathnames */
	T0* a53; /* external_resource_pathnames */
	T0* a54; /* external_linker_flags */
	T1 a55; /* alias_transition_mode */
	T0* a56; /* current_system */
	T0* a57; /* tuple_type */
	T0* a58; /* integer_type */
	T0* a59; /* detachable_exception_type */
	T0* a60; /* exception_type */
	T0* a61; /* string_type */
	T1 a62; /* is_preparsed */
	T1 a63; /* is_read_only */
	T0* a64; /* creation_procedure_name */
	T0* a65; /* master_class_mutex */
	T0* a66; /* detachable_any_type */
	T0* a67; /* detachable_separate_any_type */
	T0* a68; /* separate_any_type */
	T0* a69; /* any_parent */
	T0* a70; /* any_parents */
	T0* a71; /* any_clients */
	T0* a72; /* tuple_like_current_type */
	T0* a73; /* unfolded_empty_tuple_actual_parameters */
	T0* a74; /* array_detachable_any_type */
	T0* a75; /* array_none_type */
	T0* a76; /* array_like_current_type */
	T0* a77; /* character_type */
	T0* a78; /* character_8_convert_feature */
	T0* a79; /* character_32_convert_feature */
	T0* a80; /* double_type */
	T0* a81; /* exception_manager_type */
	T0* a82; /* function_type */
	T0* a83; /* integer_8_convert_feature */
	T0* a84; /* integer_16_convert_feature */
	T0* a85; /* integer_32_convert_feature */
	T0* a86; /* integer_64_convert_feature */
	T0* a87; /* iterable_detachable_any_type */
	T0* a88; /* natural_type */
	T0* a89; /* natural_8_convert_feature */
	T0* a90; /* natural_16_convert_feature */
	T0* a91; /* natural_32_convert_feature */
	T0* a92; /* natural_64_convert_feature */
	T0* a93; /* predicate_like_current_type */
	T0* a94; /* procedure_like_current_type */
	T0* a95; /* real_type */
	T0* a96; /* real_32_convert_feature */
	T0* a97; /* real_64_convert_feature */
	T0* a98; /* special_detachable_any_type */
	T0* a99; /* detachable_string_type */
	T0* a100; /* string_8_convert_feature */
	T0* a101; /* string_32_convert_feature */
	T0* a102; /* system_object_type */
	T0* a103; /* system_object_parents */
	T0* a104; /* system_string_type */
	T0* a105; /* type_any_type */
	T0* a106; /* type_type_any_type */
	T0* a107; /* type_detachable_any_type */
	T0* a108; /* type_detachable_like_current_type */
	T0* a109; /* detachable_type_exception_type */
	T0* a110; /* type_detachable_exception_type */
	T0* a111; /* detachable_type_detachable_any_type */
	T0* a112; /* type_like_current_type */
	T0* a113; /* typed_pointer_like_current_type */
	T0* a114; /* wide_character_type */
	T0* a115; /* scm_read_mapping_builder */
	T0* a116; /* scm_write_mapping_builder */
	T6 a117; /* registered_class_count */
	T6 a118; /* routine_call_seed */
	T6 a119; /* function_item_seed */
	T6 a120; /* is_equal_seed */
	T6 a121; /* dispose_seed */
	T1 a122; /* attachment_type_conformance_mode */
	T1 a123; /* scoop_mode */
	T0* a124; /* implicit_attachment_type_mark */
	T6 a125; /* copy_seed */
	T6 a126; /* iterable_new_cursor_seed */
	T6 a127; /* iteration_cursor_after_seed */
	T6 a128; /* iteration_cursor_forth_seed */
	T1 a129; /* target_type_attachment_mode */
	T1 a130; /* obsolete_routine_type_mode */
	T1 a131; /* is_dotnet */
};

/* Struct for type ET_ECF_SYSTEM_PARSER */
struct S63 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T1 a3; /* finalize_mode */
	T0* a4; /* parsed_libraries */
	T0* a5; /* parsed_dotnet_assemblies */
	T0* a6; /* redirected_locations */
	T0* a7; /* xml_parser */
	T0* a8; /* tree_pipe */
	T0* a9; /* error_handler */
	T0* a10; /* ise_version */
};

/* Struct for type ET_ECF_ERROR_HANDLER */
struct S64 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_ECF_SYSTEM */
struct S65 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
	T0* a2; /* filename */
	T0* a3; /* library_target */
	T0* a4; /* libraries */
	T0* a5; /* selected_target */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* root_type */
	T0* a9; /* none_type */
	T0* a10; /* any_type */
	T0* a11; /* root_creation */
	T6 a12; /* default_create_seed */
	T0* a13; /* boolean_type */
	T0* a14; /* character_8_type */
	T0* a15; /* character_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* special_any_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* immutable_string_32_type */
	T0* a31; /* array_any_type */
	T0* a32; /* typed_pointer_any_type */
	T0* a33; /* routine_type */
	T0* a34; /* detachable_tuple_type */
	T0* a35; /* universe */
	T0* a36; /* ise_exception_manager_type */
	T0* a37; /* detachable_none_type */
	T1 a38; /* use_boehm_gc */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_cflags */
	T0* a41; /* external_linker_flags */
	T0* a42; /* external_library_pathnames */
	T0* a43; /* external_object_pathnames */
	T0* a44; /* character_type */
	T0* a45; /* wide_character_type */
	T0* a46; /* integer_type */
	T0* a47; /* natural_type */
	T0* a48; /* real_type */
	T0* a49; /* double_type */
	T0* a50; /* external_make_pathnames */
	T0* a51; /* external_resource_pathnames */
	T6 a52; /* routine_call_seed */
	T6 a53; /* function_item_seed */
	T6 a54; /* is_equal_seed */
	T6 a55; /* dispose_seed */
	T1 a56; /* attachment_type_conformance_mode */
	T1 a57; /* trace_mode */
	T1 a58; /* exception_trace_mode */
	T1 a59; /* multithreaded_mode */
	T1 a60; /* console_application_mode */
	T0* a61; /* system_name */
	T0* a62; /* name */
	T0* a63; /* ecf_namespace */
	T0* a64; /* ecf_version */
	T0* a65; /* description */
	T0* a66; /* notes */
	T1 a67; /* is_read_only */
	T0* a68; /* uuid */
	T0* a69; /* register_class_mutex */
	T1 a70; /* alias_transition_mode */
	T0* a71; /* current_system */
	T0* a72; /* tuple_type */
	T0* a73; /* detachable_exception_type */
	T0* a74; /* exception_type */
	T0* a75; /* string_type */
	T1 a76; /* is_preparsed */
	T0* a77; /* clusters */
	T0* a78; /* master_class_mutex */
	T0* a79; /* detachable_any_type */
	T0* a80; /* detachable_separate_any_type */
	T0* a81; /* separate_any_type */
	T0* a82; /* any_parent */
	T0* a83; /* any_parents */
	T0* a84; /* any_clients */
	T0* a85; /* tuple_like_current_type */
	T0* a86; /* unfolded_empty_tuple_actual_parameters */
	T0* a87; /* array_detachable_any_type */
	T0* a88; /* array_none_type */
	T0* a89; /* array_like_current_type */
	T0* a90; /* character_8_convert_feature */
	T0* a91; /* character_32_convert_feature */
	T0* a92; /* exception_manager_type */
	T0* a93; /* function_type */
	T0* a94; /* integer_8_convert_feature */
	T0* a95; /* integer_16_convert_feature */
	T0* a96; /* integer_32_convert_feature */
	T0* a97; /* integer_64_convert_feature */
	T0* a98; /* iterable_detachable_any_type */
	T0* a99; /* natural_8_convert_feature */
	T0* a100; /* natural_16_convert_feature */
	T0* a101; /* natural_32_convert_feature */
	T0* a102; /* natural_64_convert_feature */
	T0* a103; /* predicate_like_current_type */
	T0* a104; /* procedure_like_current_type */
	T0* a105; /* real_32_convert_feature */
	T0* a106; /* real_64_convert_feature */
	T0* a107; /* special_detachable_any_type */
	T0* a108; /* detachable_string_type */
	T0* a109; /* string_8_convert_feature */
	T0* a110; /* string_32_convert_feature */
	T0* a111; /* system_object_type */
	T0* a112; /* system_object_parents */
	T0* a113; /* system_string_type */
	T0* a114; /* type_any_type */
	T0* a115; /* type_type_any_type */
	T0* a116; /* type_detachable_any_type */
	T0* a117; /* type_detachable_like_current_type */
	T0* a118; /* detachable_type_exception_type */
	T0* a119; /* type_detachable_exception_type */
	T0* a120; /* detachable_type_detachable_any_type */
	T0* a121; /* type_like_current_type */
	T0* a122; /* typed_pointer_like_current_type */
	T0* a123; /* scm_read_mapping_builder */
	T0* a124; /* scm_write_mapping_builder */
	T6 a125; /* registered_class_count */
	T1 a126; /* scoop_mode */
	T0* a127; /* implicit_attachment_type_mark */
	T6 a128; /* copy_seed */
	T6 a129; /* iterable_new_cursor_seed */
	T6 a130; /* iteration_cursor_after_seed */
	T6 a131; /* iteration_cursor_forth_seed */
	T1 a132; /* target_type_attachment_mode */
	T1 a133; /* obsolete_routine_type_mode */
	T1 a134; /* is_dotnet */
};

/* Struct for type ET_ECF_TARGET */
struct S66 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* settings */
	T0* a2; /* capabilities */
	T0* a3; /* options */
	T0* a4; /* system_config */
	T0* a5; /* root */
	T0* a6; /* variables */
	T0* a7; /* name */
	T0* a8; /* parent */
	T0* a9; /* description */
	T0* a10; /* precompiled_library */
	T0* a11; /* version */
	T1 a12; /* is_abstract */
	T0* a13; /* clusters */
	T0* a14; /* libraries */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* file_rules */
	T0* a17; /* class_mappings */
	T0* a18; /* external_cflags */
	T0* a19; /* external_includes */
	T0* a20; /* external_libraries */
	T0* a21; /* external_linker_flags */
	T0* a22; /* external_makes */
	T0* a23; /* external_objects */
	T0* a24; /* external_resources */
	T0* a25; /* pre_compile_actions */
	T0* a26; /* post_compile_actions */
	T0* a27; /* notes */
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S67 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_VARIABLES */
struct S68 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_variables */
	T0* a2; /* secondary_variables */
};

/* Struct for type ET_LACE_PARSER */
struct S69 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T0* a43; /* last_et_identifier_value */
	T1 a44; /* yy_rejected */
	T6 a45; /* yy_state_count */
	T6 a46; /* yy_full_match */
	T6 a47; /* yy_lp */
	T6 a48; /* yy_looking_for_trail_begin */
	T6 a49; /* yy_full_lp */
	T6 a50; /* yy_full_state */
	T6 a51; /* pushed_start_condition_count */
	T6 a52; /* yy_start_state */
	T6 a53; /* yy_start */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T1 a57; /* yy_more_flag */
	T6 a58; /* yy_more_len */
	T6 a59; /* yy_last_accepting_state */
	T6 a60; /* yy_last_accepting_cpos */
	T6 a61; /* yyvsp1 */
	T6 a62; /* yyvsp2 */
	T6 a63; /* yyvsp3 */
	T6 a64; /* yyvsp4 */
	T6 a65; /* yyvsp5 */
	T6 a66; /* yyvsp6 */
	T6 a67; /* yyvsp7 */
	T6 a68; /* yyvsp8 */
	T6 a69; /* yyvsp9 */
	T6 a70; /* yyvsp10 */
	T6 a71; /* yyvsp11 */
	T6 a72; /* yyvsp12 */
	T0* a73; /* yy_state_stack */
	T0* a74; /* yy_content_area */
	T0* a75; /* yy_ec */
	T0* a76; /* yy_content */
	T0* a77; /* yy_accept */
	T0* a78; /* yy_chk */
	T0* a79; /* yy_base */
	T0* a80; /* yy_def */
	T0* a81; /* yy_meta */
	T0* a82; /* yy_nxt */
	T0* a83; /* yy_acclist */
	T0* a84; /* yytypes2 */
	T6 a85; /* yyvsc1 */
	T0* a86; /* yyvs1 */
	T0* a87; /* yyspecial_routines1 */
	T0* a88; /* last_detachable_any_value */
	T6 a89; /* yyvsc2 */
	T0* a90; /* yyvs2 */
	T0* a91; /* yyspecial_routines2 */
	T0* a92; /* yyvs10 */
	T0* a93; /* yyvs5 */
	T0* a94; /* yyvs12 */
	T0* a95; /* yyvs8 */
	T0* a96; /* yyspecial_routines10 */
	T6 a97; /* yyvsc10 */
	T6 a98; /* yyvsc8 */
	T0* a99; /* yyspecial_routines8 */
	T6 a100; /* yyvsc5 */
	T0* a101; /* yyspecial_routines5 */
	T0* a102; /* yyvs4 */
	T0* a103; /* yyvs3 */
	T6 a104; /* yyvsc4 */
	T0* a105; /* yyspecial_routines4 */
	T0* a106; /* yyspecial_routines3 */
	T0* a107; /* yyvs7 */
	T6 a108; /* yyvsc3 */
	T6 a109; /* yyvsc7 */
	T0* a110; /* yyspecial_routines7 */
	T0* a111; /* yyvs6 */
	T6 a112; /* yyvsc6 */
	T0* a113; /* yyspecial_routines6 */
	T6 a114; /* yyvsc12 */
	T0* a115; /* yyspecial_routines12 */
	T0* a116; /* yyvs11 */
	T0* a117; /* yyvs9 */
	T6 a118; /* yyvsc11 */
	T0* a119; /* yyspecial_routines11 */
	T6 a120; /* yyvsc9 */
	T0* a121; /* yyspecial_routines9 */
	T0* a122; /* yytypes1 */
	T0* a123; /* yy_pushed_start_conditions */
	T6 a124; /* code_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S70 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S71 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* master_classes */
	T0* a2; /* root_type */
	T0* a3; /* none_type */
	T0* a4; /* any_type */
	T0* a5; /* root_creation */
	T6 a6; /* default_create_seed */
	T0* a7; /* boolean_type */
	T0* a8; /* character_8_type */
	T0* a9; /* character_32_type */
	T0* a10; /* integer_8_type */
	T0* a11; /* integer_16_type */
	T0* a12; /* integer_32_type */
	T0* a13; /* integer_64_type */
	T0* a14; /* natural_8_type */
	T0* a15; /* natural_16_type */
	T0* a16; /* natural_32_type */
	T0* a17; /* natural_64_type */
	T0* a18; /* real_32_type */
	T0* a19; /* real_64_type */
	T0* a20; /* pointer_type */
	T0* a21; /* special_any_type */
	T0* a22; /* string_8_type */
	T0* a23; /* string_32_type */
	T0* a24; /* immutable_string_32_type */
	T0* a25; /* array_any_type */
	T0* a26; /* typed_pointer_any_type */
	T0* a27; /* routine_type */
	T0* a28; /* detachable_tuple_type */
	T0* a29; /* universe */
	T0* a30; /* ise_exception_manager_type */
	T0* a31; /* detachable_none_type */
	T1 a32; /* use_boehm_gc */
	T0* a33; /* external_include_pathnames */
	T0* a34; /* external_cflags */
	T0* a35; /* external_linker_flags */
	T0* a36; /* external_library_pathnames */
	T0* a37; /* external_object_pathnames */
	T0* a38; /* character_type */
	T0* a39; /* wide_character_type */
	T0* a40; /* integer_type */
	T0* a41; /* natural_type */
	T0* a42; /* real_type */
	T0* a43; /* double_type */
	T0* a44; /* external_make_pathnames */
	T0* a45; /* external_resource_pathnames */
	T6 a46; /* routine_call_seed */
	T6 a47; /* function_item_seed */
	T6 a48; /* is_equal_seed */
	T6 a49; /* dispose_seed */
	T1 a50; /* attachment_type_conformance_mode */
	T1 a51; /* trace_mode */
	T1 a52; /* exception_trace_mode */
	T1 a53; /* multithreaded_mode */
	T1 a54; /* console_application_mode */
	T0* a55; /* system_name */
	T0* a56; /* master_class_mutex */
	T0* a57; /* register_class_mutex */
	T1 a58; /* alias_transition_mode */
	T0* a59; /* current_system */
	T0* a60; /* tuple_type */
	T0* a61; /* detachable_exception_type */
	T0* a62; /* exception_type */
	T0* a63; /* string_type */
	T0* a64; /* name */
	T0* a65; /* clusters */
	T0* a66; /* dotnet_assemblies */
	T0* a67; /* libraries */
	T0* a68; /* detachable_any_type */
	T0* a69; /* detachable_separate_any_type */
	T0* a70; /* separate_any_type */
	T0* a71; /* any_parent */
	T0* a72; /* any_parents */
	T0* a73; /* any_clients */
	T0* a74; /* tuple_like_current_type */
	T0* a75; /* unfolded_empty_tuple_actual_parameters */
	T0* a76; /* array_detachable_any_type */
	T0* a77; /* array_none_type */
	T0* a78; /* array_like_current_type */
	T0* a79; /* character_8_convert_feature */
	T0* a80; /* character_32_convert_feature */
	T0* a81; /* exception_manager_type */
	T0* a82; /* function_type */
	T0* a83; /* integer_8_convert_feature */
	T0* a84; /* integer_16_convert_feature */
	T0* a85; /* integer_32_convert_feature */
	T0* a86; /* integer_64_convert_feature */
	T0* a87; /* iterable_detachable_any_type */
	T0* a88; /* natural_8_convert_feature */
	T0* a89; /* natural_16_convert_feature */
	T0* a90; /* natural_32_convert_feature */
	T0* a91; /* natural_64_convert_feature */
	T0* a92; /* predicate_like_current_type */
	T0* a93; /* procedure_like_current_type */
	T0* a94; /* real_32_convert_feature */
	T0* a95; /* real_64_convert_feature */
	T0* a96; /* special_detachable_any_type */
	T0* a97; /* detachable_string_type */
	T0* a98; /* string_8_convert_feature */
	T0* a99; /* string_32_convert_feature */
	T0* a100; /* system_object_type */
	T0* a101; /* system_object_parents */
	T0* a102; /* system_string_type */
	T0* a103; /* type_any_type */
	T0* a104; /* type_type_any_type */
	T0* a105; /* type_detachable_any_type */
	T0* a106; /* type_detachable_like_current_type */
	T0* a107; /* detachable_type_exception_type */
	T0* a108; /* type_detachable_exception_type */
	T0* a109; /* detachable_type_detachable_any_type */
	T0* a110; /* type_like_current_type */
	T0* a111; /* typed_pointer_like_current_type */
	T1 a112; /* is_read_only */
	T1 a113; /* is_preparsed */
	T0* a114; /* scm_read_mapping_builder */
	T0* a115; /* scm_write_mapping_builder */
	T6 a116; /* registered_class_count */
	T1 a117; /* scoop_mode */
	T0* a118; /* implicit_attachment_type_mark */
	T6 a119; /* copy_seed */
	T6 a120; /* iterable_new_cursor_seed */
	T6 a121; /* iteration_cursor_after_seed */
	T6 a122; /* iteration_cursor_forth_seed */
	T1 a123; /* is_dotnet */
	T1 a124; /* target_type_attachment_mode */
	T1 a125; /* obsolete_routine_type_mode */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S72 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* system_processor */
	T0* a5; /* dynamic_types */
	T0* a6; /* null_dynamic_type_set_builder */
	T1 a7; /* full_class_checking */
	T1 a8; /* catcall_warning_mode */
	T0* a9; /* new_instance_types */
	T0* a10; /* dynamic_type_set_builder */
	T0* a11; /* unknown_type */
	T0* a12; /* boolean_type */
	T0* a13; /* character_8_type */
	T0* a14; /* character_32_type */
	T0* a15; /* immutable_string_32_type */
	T0* a16; /* integer_8_type */
	T0* a17; /* integer_16_type */
	T0* a18; /* integer_32_type */
	T0* a19; /* integer_64_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_8_type */
	T0* a28; /* string_32_type */
	T0* a29; /* special_character_8_type */
	T0* a30; /* special_character_32_type */
	T0* a31; /* ise_exception_manager_type */
	T0* a32; /* any_type */
	T0* a33; /* none_type */
	T0* a34; /* root_type */
	T0* a35; /* root_creation_procedure */
	T0* a36; /* special_count_feature */
	T0* a37; /* special_capacity_feature */
	T0* a38; /* array_area_feature */
	T0* a39; /* array_lower_feature */
	T0* a40; /* array_upper_feature */
	T0* a41; /* typed_pointer_to_pointer_feature */
	T0* a42; /* routine_closed_operands_feature */
	T0* a43; /* routine_rout_disp_feature */
	T0* a44; /* routine_set_rout_disp_final_feature */
	T0* a45; /* ise_exception_manager_init_exception_manager_feature */
	T0* a46; /* ise_exception_manager_last_exception_feature */
	T0* a47; /* ise_exception_manager_once_raise_feature */
	T0* a48; /* ise_exception_manager_set_exception_data_feature */
	T0* a49; /* ise_runtime_type_conforms_to_feature */
	T1 a50; /* in_dynamic_type */
	T0* a51; /* ise_runtime_new_type_instance_of_feature */
	T1 a52; /* in_create_meta_type */
	T1 a53; /* all_attributes_used */
	T0* a54; /* ise_runtime_reference_field_feature */
	T0* a55; /* ise_runtime_set_reference_field_feature */
};

/* Struct for type ET_SYSTEM_PROCESSOR */
struct S73 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* stop_request */
	T0* a2; /* eiffel_parser */
	T0* a3; /* interface_checker */
	T1 a4; /* benchmark_shown */
	T0* a5; /* ise_version */
	T0* a6; /* eiffel_preparser */
	T0* a7; /* master_class_checker */
	T0* a8; /* provider_checker */
	T0* a9; /* ancestor_builder */
	T0* a10; /* feature_flattener */
	T0* a11; /* implementation_checker */
	T0* a12; /* error_handler */
	T0* a13; /* processed_class_count_stack */
	T0* a14; /* ast_factory */
	T0* a15; /* dotnet_assembly_consumer */
	T0* a16; /* ecma_version */
	T1 a17; /* flat_mode */
	T1 a18; /* flat_dbc_mode */
	T1 a19; /* metrics_shown */
	T1 a20; /* preparse_shallow_mode */
	T1 a21; /* preparse_single_mode */
	T1 a22; /* preparse_multiple_mode */
	T1 a23; /* unknown_builtin_reported */
	T1 a24; /* qualified_anchored_types_cycle_detection_enabled */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_note_keyword */
	T1 a27; /* use_reference_keyword */
	T1 a28; /* use_attached_keyword */
	T1 a29; /* use_detachable_keyword */
	T1 a30; /* cluster_dependence_enabled */
	T6 a31; /* postponed_class_count */
	T6 a32; /* processed_class_count */
	T1 a33; /* nested_benchmark_shown */
	T1 a34; /* preparse_readonly_mode */
	T1 a35; /* preparse_override_mode */
	T1 a36; /* use_cluster_dependence_pathnames */
	T1 a37; /* providers_enabled */
	T1 a38; /* suppliers_enabled */
};

/* Struct for type ET_C_GENERATOR */
struct S76 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* system_processor */
	T0* a5; /* current_dynamic_system */
	T0* a6; /* dynamic_types */
	T1 a7; /* short_names */
	T1 a8; /* split_mode */
	T6 a9; /* split_threshold */
	T1 a10; /* use_boehm_gc */
	T0* a11; /* system_name */
	T0* a12; /* current_file */
	T0* a13; /* header_file */
	T0* a14; /* current_type */
	T0* a15; /* current_feature */
	T0* a16; /* extra_dynamic_type_sets */
	T0* a17; /* current_dynamic_type_sets */
	T0* a18; /* current_function_header_buffer */
	T0* a19; /* current_function_body_buffer */
	T0* a20; /* temp_variables */
	T0* a21; /* used_temp_variables */
	T0* a22; /* free_temp_variables */
	T0* a23; /* frozen_temp_variables */
	T0* a24; /* conforming_types */
	T0* a25; /* conforming_type_set */
	T0* a26; /* non_conforming_types */
	T0* a27; /* equality_type_set */
	T0* a28; /* equality_common_types */
	T0* a29; /* operand_stack */
	T0* a30; /* call_operands */
	T0* a31; /* attachment_dynamic_type_ids */
	T0* a32; /* target_dynamic_type_ids */
	T0* a33; /* target_dynamic_types */
	T0* a34; /* standalone_type_sets */
	T0* a35; /* deep_twin_types */
	T0* a36; /* deep_equal_types */
	T0* a37; /* deep_feature_target_type_sets */
	T0* a38; /* current_object_tests */
	T0* a39; /* current_object_equalities */
	T0* a40; /* current_equalities */
	T0* a41; /* current_agents */
	T0* a42; /* agent_open_operands */
	T0* a43; /* agent_closed_operands */
	T0* a44; /* agent_target */
	T0* a45; /* agent_arguments */
	T0* a46; /* agent_instruction */
	T0* a47; /* agent_expression */
	T0* a48; /* agent_closed_operands_type */
	T0* a49; /* wrapper_expression */
	T0* a50; /* agent_tuple_item_expressions */
	T0* a51; /* agent_manifest_tuple */
	T0* a52; /* formal_arguments */
	T0* a53; /* manifest_array_types */
	T0* a54; /* big_manifest_array_types */
	T0* a55; /* manifest_tuple_types */
	T0* a56; /* once_features */
	T0* a57; /* once_per_process_counts */
	T0* a58; /* once_per_thread_counts */
	T0* a59; /* constant_features */
	T0* a60; /* inline_constants */
	T0* a61; /* dispose_procedures */
	T0* a62; /* dynamic_type_id_set_names */
	T0* a63; /* called_features */
	T0* a64; /* called_static_features */
	T0* a65; /* included_header_filenames */
	T0* a66; /* included_runtime_header_files */
	T0* a67; /* included_runtime_c_files */
	T0* a68; /* c_filenames */
	T1 a69; /* finalize_mode */
	T0* a70; /* locals_written_in_body */
	T0* a71; /* locals_written_in_rescue */
	T0* a72; /* locals_written */
	T0* a73; /* locals_read_in_body */
	T0* a74; /* locals_read_in_rescue */
	T0* a75; /* locals_read */
	T0* a76; /* external_c_regexp */
	T0* a77; /* external_c_macro_regexp */
	T0* a78; /* external_c_struct_regexp */
	T0* a79; /* external_c_inline_regexp */
	T0* a80; /* old_external_c_regexp */
	T0* a81; /* old_external_c_macro_regexp */
	T0* a82; /* old_external_c_struct_regexp */
	T0* a83; /* external_cpp_regexp */
	T0* a84; /* external_cpp_inline_regexp */
	T0* a85; /* external_dllwin_regexp */
	T0* a86; /* old_external_dllwin32_regexp */
	T1 a87; /* in_static_feature */
	T1 a88; /* type_info_ancestors_used */
	T1 a89; /* type_info_attributes_used */
	T1 a90; /* type_info_attribute_name_used */
	T1 a91; /* type_info_attribute_type_id_used */
	T1 a92; /* type_info_attribute_offset_used */
	T1 a93; /* type_info_generator_used */
	T1 a94; /* type_info_name_used */
	T1 a95; /* type_info_generic_parameters_used */
	T1 a96; /* type_info_object_size_used */
	T0* a97; /* c_file */
	T6 a98; /* c_file_size */
	T0* a99; /* cpp_file */
	T6 a100; /* cpp_file_size */
	T6 a101; /* indentation */
	T0* a102; /* assignment_target */
	T1 a103; /* in_operand */
	T0* a104; /* call_target_type */
	T0* a105; /* current_agent */
	T1 a106; /* call_target_check_void */
	T1 a107; /* has_rescue */
	T1 a108; /* result_written */
	T1 a109; /* result_read */
	T1 a110; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S77 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type [attached] DS_HASH_SET [[attached] STRING_8] */
struct S78 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* hash_function */
};

/* Struct for type UT_VERSION */
struct S79 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S80 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* feature_checker */
	T0* a4; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a6; /* dynamic_type_sets */
	T0* a7; /* object_id_dynamic_type_set */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* constant_indexes */
	T0* a11; /* none_index */
	T1 a12; /* catcall_error_mode */
	T1 a13; /* catcall_warning_mode */
	T1 a14; /* no_debug */
	T1 a15; /* no_assertion */
	T1 a16; /* is_built */
	T0* a17; /* alive_conforming_descendants_per_type */
	T0* a18; /* type_checker */
	T0* a19; /* current_type */
	T0* a20; /* current_class */
	T0* a21; /* current_feature */
	T0* a22; /* current_feature_impl */
	T0* a23; /* current_class_impl */
	T0* a24; /* enclosing_inline_agents */
	T0* a25; /* unused_overloaded_procedures_list */
	T0* a26; /* unused_overloaded_queries_list */
	T0* a27; /* unused_overloaded_features_list */
	T0* a28; /* unused_contexts */
	T0* a29; /* current_context */
	T0* a30; /* current_target_type */
	T0* a31; /* current_object_test_types */
	T0* a32; /* current_object_test_scope */
	T0* a33; /* object_test_scope_builder */
	T0* a34; /* current_across_cursor_types */
	T0* a35; /* current_across_cursor_scope */
	T0* a36; /* current_initialization_scope */
	T0* a37; /* current_attachment_scope */
	T0* a38; /* attachment_scope_builder */
	T0* a39; /* unused_attachment_scopes */
	T0* a40; /* common_ancestor_type_list */
	T0* a41; /* indexing_term_list */
	T0* a42; /* default_creation_call_name */
	T0* a43; /* default_creation_call */
	T0* a44; /* system_processor */
	T1 a45; /* in_precursor */
	T1 a46; /* in_static_feature */
	T0* a47; /* supplier_handler */
	T1 a48; /* in_rescue */
	T0* a49; /* current_inline_agent */
	T1 a50; /* in_invariant */
	T1 a51; /* in_precondition */
	T1 a52; /* in_postcondition */
	T1 a53; /* in_check_instruction */
	T0* a54; /* precursor_procedures */
	T0* a55; /* precursor_queries */
};

/* Struct for type ET_CLASS_TYPE */
struct S81 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
	T0* a4; /* named_base_class */
	T1 a5; /* tuple_actual_parameters_unfolded_2 */
	T1 a6; /* tuple_actual_parameters_unfolded_1 */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S82 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLASS */
struct S83 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* group */
	T0* a2; /* status_mutex */
	T1 a3; /* unprotected_is_parsed */
	T1 a4; /* unprotected_has_syntax_error */
	T1 a5; /* unprotected_ancestors_built */
	T1 a6; /* unprotected_has_ancestors_error */
	T1 a7; /* unprotected_features_flattened */
	T1 a8; /* unprotected_has_flattening_error */
	T1 a9; /* unprotected_interface_checked */
	T1 a10; /* unprotected_has_interface_error */
	T1 a11; /* unprotected_implementation_checked */
	T1 a12; /* unprotected_has_implementation_error */
	T0* a13; /* name */
	T6 a14; /* id */
	T0* a15; /* ancestors */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* queries */
	T0* a18; /* procedures */
	T0* a19; /* class_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* processing_mutex */
	T0* a22; /* formal_parameter_types_mutex */
	T0* a23; /* named_base_class */
	T6 a24; /* time_stamp */
	T8 a25; /* class_code */
	T1 a26; /* tuple_actual_parameters_unfolded_1 */
	T1 a27; /* tuple_actual_parameters_unfolded_2 */
	T1 a28; /* is_checking_implementation */
	T0* a29; /* formal_parameters */
	T6 a30; /* index */
	T1 a31; /* redeclared_signatures_checked */
	T0* a32; /* parent_clauses */
	T0* a33; /* creators */
	T0* a34; /* class_mark */
	T0* a35; /* filename */
	T0* a36; /* convert_features */
	T0* a37; /* suppliers */
	T0* a38; /* invariants */
	T1 a39; /* is_ignored */
	T1 a40; /* is_interface */
	T1 a41; /* has_deferred_features */
	T6 a42; /* registered_feature_count */
	T1 a43; /* unprotected_is_marked */
	T0* a44; /* external_keyword */
	T0* a45; /* frozen_keyword */
	T0* a46; /* feature_clauses */
	T0* a47; /* first_indexing */
	T0* a48; /* second_indexing */
	T6 a49; /* tuple_constraint_position */
	T0* a50; /* obsolete_message */
	T6 a51; /* registered_inline_constant_count */
	T0* a52; /* leading_break */
	T0* a53; /* providers */
	T0* a54; /* formal_parameter_types */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S85 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S87 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S88 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type VOID_TARGET */
struct S89 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ROUTINE_FAILURE */
struct S91 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* routine_name */
	T0* a2; /* class_name */
	T0* a3; /* throwing_exception */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OLD_VIOLATION */
struct S93 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type NO_MORE_MEMORY */
struct S95 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_trace */
	T6 a2; /* internal_code */
	T0* a3; /* throwing_exception */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type INVARIANT_VIOLATION */
struct S96 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T1 a2; /* is_entry */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_SIGNAL_FAILURE */
struct S97 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* signal_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type IO_FAILURE */
struct S98 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T6 a3; /* error_code */
	T0* a4; /* internal_trace */
	T0* a5; /* c_description */
	T0* a6; /* recipient_name */
	T0* a7; /* type_name */
};

/* Struct for type OPERATING_SYSTEM_FAILURE */
struct S99 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* error_code */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type COM_FAILURE */
struct S100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T6 a2; /* hresult_code */
	T0* a3; /* exception_information */
	T6 a4; /* hresult */
	T0* a5; /* internal_trace */
	T0* a6; /* c_description */
	T0* a7; /* recipient_name */
	T0* a8; /* type_name */
};

/* Struct for type EIFFEL_RUNTIME_PANIC */
struct S101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_code */
	T0* a2; /* throwing_exception */
	T0* a3; /* internal_trace */
	T0* a4; /* c_description */
	T0* a5; /* recipient_name */
	T0* a6; /* type_name */
};

/* Struct for type PRECONDITION_VIOLATION */
struct S104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type POSTCONDITION_VIOLATION */
struct S105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type FLOATING_POINT_FAILURE */
struct S106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CHECK_VIOLATION */
struct S107 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type BAD_INSPECT_VALUE */
struct S108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VARIANT_VIOLATION */
struct S109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type LOOP_INVARIANT_VIOLATION */
struct S110 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESCUE_FAILURE */
struct S111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type RESUMPTION_FAILURE */
struct S112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type CREATE_ON_DEFERRED */
struct S113 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXTERNAL_FAILURE */
struct S114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type VOID_ASSIGNED_TO_EXPANDED */
struct S115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
struct S116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type MISMATCH_FAILURE */
struct S117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type DEVELOPER_EXCEPTION */
struct S118 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type ADDRESS_APPLIED_TO_MELTED_FEATURE */
struct S119 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type SERIALIZATION_FAILURE */
struct S120 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* throwing_exception */
	T0* a2; /* internal_trace */
	T0* a3; /* c_description */
	T0* a4; /* recipient_name */
	T0* a5; /* type_name */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PRIMES */
struct S123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] INTEGER_32] */
struct S124 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] BOOLEAN] */
struct S125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T1 z2[1]; /* item */
};

/* Struct for type detachable KL_LINKABLE [[attached] CHARACTER_8] */
struct S127 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type MANAGED_POINTER */
struct S129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type FILE_INFO */
struct S130 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* buffered_file_info */
	T1 a2; /* is_following_symlinks */
	T1 a3; /* exists */
	T0* a4; /* internal_file_name */
	T0* a5; /* internal_name_pointer */
};

/* Struct for type MUTEX */
struct S131 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* mutex_pointer */
	T14 a2; /* owner_thread_id */
};

/* Struct for type UT_ERROR_HANDLER */
struct S132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type KL_STANDARD_FILES */
struct S133 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDERR_FILE */
struct S134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_STDOUT_FILE */
struct S135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_STRING */
struct S136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* internal_case_insensitive_hash_code */
	T0* a5; /* area */
	T6 a6; /* last_byte_index_input */
	T6 a7; /* last_byte_index_result */
};

/* Struct for type KL_ANY_ROUTINES */
struct S137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
struct S140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
struct S142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type AP_ERROR_HANDLER */
struct S143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
struct S144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type [attached] ARRAY [[attached] STRING_8] */
struct S145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] STRING_8] */
struct S146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] STRING_8] */
struct S147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
struct S151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
struct S154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DOCUMENT */
struct S156 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_element */
	T0* a2; /* children */
};

/* Struct for type XM_ELEMENT */
struct S157 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* parent */
	T0* a4; /* children */
};

/* Struct for type XM_POSITION_TABLE */
struct S158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S161 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* source_parser */
	T0* a4; /* current_element */
	T0* a5; /* namespace_cache */
	T0* a6; /* next */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
struct S165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER */
struct S167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* dtd_callbacks */
	T0* a14; /* last_string_value */
	T0* a15; /* yyss */
	T0* a16; /* yyspecial_routines1 */
	T6 a17; /* yyvsc1 */
	T0* a18; /* yyvs1 */
	T0* a19; /* yyspecial_routines2 */
	T6 a20; /* yyvsc2 */
	T0* a21; /* yyvs2 */
	T0* a22; /* yyspecial_routines3 */
	T6 a23; /* yyvsc3 */
	T0* a24; /* yyvs3 */
	T0* a25; /* yyspecial_routines4 */
	T6 a26; /* yyvsc4 */
	T0* a27; /* yyvs4 */
	T0* a28; /* yyspecial_routines5 */
	T6 a29; /* yyvsc5 */
	T0* a30; /* yyvs5 */
	T0* a31; /* yyspecial_routines6 */
	T6 a32; /* yyvsc6 */
	T0* a33; /* yyvs6 */
	T0* a34; /* yyspecial_routines7 */
	T6 a35; /* yyvsc7 */
	T0* a36; /* yyvs7 */
	T0* a37; /* yyspecial_routines8 */
	T6 a38; /* yyvsc8 */
	T0* a39; /* yyvs8 */
	T0* a40; /* yyspecial_routines9 */
	T6 a41; /* yyvsc9 */
	T0* a42; /* yyvs9 */
	T0* a43; /* yyspecial_routines10 */
	T6 a44; /* yyvsc10 */
	T0* a45; /* yyvs10 */
	T0* a46; /* yyspecial_routines11 */
	T6 a47; /* yyvsc11 */
	T0* a48; /* yyvs11 */
	T0* a49; /* yytranslate */
	T0* a50; /* yyr1 */
	T0* a51; /* yytypes1 */
	T0* a52; /* yytypes2 */
	T0* a53; /* yydefact */
	T0* a54; /* yydefgoto */
	T0* a55; /* yypact */
	T0* a56; /* yypgoto */
	T0* a57; /* yytable */
	T0* a58; /* yycheck */
	T6 a59; /* yy_parsing_status */
	T6 a60; /* yy_suspended_yystacksize */
	T6 a61; /* yy_suspended_yystate */
	T6 a62; /* yy_suspended_yyn */
	T6 a63; /* yy_suspended_yychar1 */
	T6 a64; /* yy_suspended_index */
	T6 a65; /* yy_suspended_yyss_top */
	T6 a66; /* yy_suspended_yy_goto */
	T6 a67; /* yyssp */
	T6 a68; /* error_count */
	T1 a69; /* yy_lookahead_needed */
	T6 a70; /* yyerrstatus */
	T6 a71; /* last_token */
	T6 a72; /* yyvsp1 */
	T6 a73; /* yyvsp2 */
	T6 a74; /* yyvsp3 */
	T6 a75; /* yyvsp4 */
	T6 a76; /* yyvsp5 */
	T6 a77; /* yyvsp6 */
	T6 a78; /* yyvsp7 */
	T6 a79; /* yyvsp8 */
	T6 a80; /* yyvsp9 */
	T6 a81; /* yyvsp10 */
	T6 a82; /* yyvsp11 */
	T0* a83; /* last_detachable_any_value */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* xml_preprocessor */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_parser */
	T0* a7; /* tree_pipe */
	T0* a8; /* library_parser */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T6 a11; /* new_name_count */
};

/* Struct for type UT_MESSAGE */
struct S171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
struct S173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
struct S174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
struct S175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
struct S176 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type [attached] DS_HASH_SET [[attached] INTEGER_32] */
struct S177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_ECF_AST_FACTORY */
struct S178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
struct S179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
struct S180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
struct S181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable TUPLE */
struct S182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, BOOLEAN, [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
struct S183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T1 z2;
	T0* z3;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S185 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S186 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ECF_STATE */
struct S188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* ise_version */
	T1 a3; /* finalize_mode */
	T1 a4; /* is_dotnet */
	T1 a5; /* is_multithreaded */
	T1 a6; /* is_scoop */
};

/* Struct for type ET_ECF_TARGETS */
struct S189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type ET_ECF_LIBRARY */
struct S191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* ecf_namespace */
	T0* a4; /* ecf_version */
	T0* a5; /* description */
	T0* a6; /* notes */
	T0* a7; /* targets */
	T1 a8; /* is_read_only */
	T0* a9; /* uuid */
	T0* a10; /* library_target */
	T0* a11; /* current_system */
	T0* a12; /* library */
	T0* a13; /* libraries */
	T0* a14; /* clusters */
	T0* a15; /* dotnet_assemblies */
	T0* a16; /* master_classes */
	T0* a17; /* master_class_mutex */
	T0* a18; /* any_type */
	T0* a19; /* detachable_any_type */
	T0* a20; /* detachable_separate_any_type */
	T0* a21; /* separate_any_type */
	T0* a22; /* any_parent */
	T0* a23; /* any_parents */
	T0* a24; /* any_clients */
	T0* a25; /* tuple_type */
	T0* a26; /* detachable_tuple_type */
	T0* a27; /* tuple_like_current_type */
	T0* a28; /* unfolded_empty_tuple_actual_parameters */
	T0* a29; /* array_any_type */
	T0* a30; /* array_detachable_any_type */
	T0* a31; /* array_none_type */
	T0* a32; /* array_like_current_type */
	T0* a33; /* boolean_type */
	T0* a34; /* character_type */
	T0* a35; /* character_8_type */
	T0* a36; /* character_8_convert_feature */
	T0* a37; /* character_32_type */
	T0* a38; /* character_32_convert_feature */
	T0* a39; /* double_type */
	T0* a40; /* exception_type */
	T0* a41; /* detachable_exception_type */
	T0* a42; /* exception_manager_type */
	T0* a43; /* function_type */
	T0* a44; /* immutable_string_32_type */
	T0* a45; /* integer_type */
	T0* a46; /* integer_8_type */
	T0* a47; /* integer_8_convert_feature */
	T0* a48; /* integer_16_type */
	T0* a49; /* integer_16_convert_feature */
	T0* a50; /* integer_32_type */
	T0* a51; /* integer_32_convert_feature */
	T0* a52; /* integer_64_type */
	T0* a53; /* integer_64_convert_feature */
	T0* a54; /* ise_exception_manager_type */
	T0* a55; /* iterable_detachable_any_type */
	T0* a56; /* natural_type */
	T0* a57; /* natural_8_type */
	T0* a58; /* natural_8_convert_feature */
	T0* a59; /* natural_16_type */
	T0* a60; /* natural_16_convert_feature */
	T0* a61; /* natural_32_type */
	T0* a62; /* natural_32_convert_feature */
	T0* a63; /* natural_64_type */
	T0* a64; /* natural_64_convert_feature */
	T0* a65; /* none_type */
	T0* a66; /* detachable_none_type */
	T0* a67; /* pointer_type */
	T0* a68; /* predicate_like_current_type */
	T0* a69; /* procedure_like_current_type */
	T0* a70; /* real_type */
	T0* a71; /* real_32_type */
	T0* a72; /* real_32_convert_feature */
	T0* a73; /* real_64_type */
	T0* a74; /* real_64_convert_feature */
	T0* a75; /* routine_type */
	T0* a76; /* special_any_type */
	T0* a77; /* special_detachable_any_type */
	T0* a78; /* string_type */
	T0* a79; /* detachable_string_type */
	T0* a80; /* string_8_type */
	T0* a81; /* string_8_convert_feature */
	T0* a82; /* string_32_type */
	T0* a83; /* string_32_convert_feature */
	T0* a84; /* system_object_type */
	T0* a85; /* system_object_parents */
	T0* a86; /* system_string_type */
	T0* a87; /* type_any_type */
	T0* a88; /* type_type_any_type */
	T0* a89; /* type_detachable_any_type */
	T0* a90; /* type_detachable_like_current_type */
	T0* a91; /* detachable_type_exception_type */
	T0* a92; /* type_detachable_exception_type */
	T0* a93; /* detachable_type_detachable_any_type */
	T0* a94; /* type_like_current_type */
	T0* a95; /* typed_pointer_any_type */
	T0* a96; /* typed_pointer_like_current_type */
	T0* a97; /* wide_character_type */
	T0* a98; /* selected_target */
	T0* a99; /* implicit_attachment_type_mark */
	T1 a100; /* obsolete_routine_type_mode */
	T1 a101; /* is_preparsed */
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
struct S194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
struct S195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type XM_ATTRIBUTE */
struct S198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type ET_IDENTIFIER */
struct S199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* index */
	T0* a3; /* name */
	T2 a4; /* status_code */
	T6 a5; /* compressed_position */
	T6 a6; /* hash_code */
};

/* Struct for type ET_ECF_SYSTEM_CONFIG */
struct S200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* filename */
	T0* a3; /* universe */
	T0* a4; /* ecf_namespace */
	T0* a5; /* ecf_version */
	T0* a6; /* description */
	T0* a7; /* notes */
	T0* a8; /* targets */
	T1 a9; /* is_read_only */
	T0* a10; /* uuid */
	T0* a11; /* library_target */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* special_key_routines */
	T0* a15; /* key_storage */
	T0* a16; /* equality_tester */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* position */
	T0* a3; /* internal_cursor */
	T0* a4; /* key_storage */
	T0* a5; /* item_storage */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* equality_tester */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_ECF_TARGET_PARENT */
struct S204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* location_id */
	T0* a3; /* target */
};

/* Struct for type ET_ECF_CAPABILITIES */
struct S205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_use_capabilities */
	T0* a2; /* primary_support_capabilities */
	T0* a3; /* secondary_capabilities */
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
struct S206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
struct S207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* hash_function */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
struct S209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
struct S210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARY */
struct S211 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* classname_prefix */
	T1 a7; /* is_read_only */
	T1 a8; /* use_application_options */
	T0* a9; /* options */
	T0* a10; /* class_options */
	T0* a11; /* class_renamings */
	T0* a12; /* visible_classes */
	T0* a13; /* conditions */
	T0* a14; /* notes */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
struct S212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ADAPTED_DOTNET_ASSEMBLIES */
struct S214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_DOTNET_ASSEMBLY */
struct S215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_like_current_type */
	T0* a59; /* procedure_like_current_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* string_type */
	T0* a69; /* detachable_string_type */
	T0* a70; /* string_8_type */
	T0* a71; /* string_8_convert_feature */
	T0* a72; /* string_32_type */
	T0* a73; /* string_32_convert_feature */
	T0* a74; /* system_object_type */
	T0* a75; /* system_object_parents */
	T0* a76; /* system_string_type */
	T0* a77; /* type_any_type */
	T0* a78; /* type_type_any_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* type_detachable_like_current_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* detachable_type_detachable_any_type */
	T0* a84; /* type_like_current_type */
	T0* a85; /* typed_pointer_any_type */
	T0* a86; /* typed_pointer_like_current_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
struct S217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* assembly_culture */
	T0* a7; /* assembly_key */
	T0* a8; /* assembly_name */
	T0* a9; /* assembly_version */
	T0* a10; /* classname_prefix */
	T1 a11; /* is_read_only */
	T0* a12; /* options */
	T0* a13; /* class_options */
	T0* a14; /* class_renamings */
	T0* a15; /* conditions */
	T0* a16; /* notes */
	T0* a17; /* name */
	T0* a18; /* dotnet_assembly */
};

/* Struct for type ET_ECF_ERROR */
struct S218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* system_config */
	T0* a4; /* position */
	T0* a5; /* code */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* return_code */
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
struct S221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
struct S224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] SPECIAL [detachable ANY] */
struct S227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
struct S228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_IDENTIFIER] */
struct S229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
struct S230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T1 a11; /* scm_mapping_constraint_enabled */
	T0* a12; /* parent */
	T1 a13; /* is_override */
	T0* a14; /* provider_constraint */
	T0* a15; /* dependant_constraint */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_preparsed */
	T1 a19; /* is_implicit */
	T1 a20; /* use_obsolete_syntax */
	T0* a21; /* cached_absolute_pathname */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S233 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* pathname */
	T0* a5; /* referenced_assemblies */
	T0* a6; /* classname_prefix */
	T0* a7; /* current_system */
	T0* a8; /* dotnet_assembly */
	T0* a9; /* name */
	T0* a10; /* master_classes */
	T0* a11; /* master_class_mutex */
	T0* a12; /* any_type */
	T0* a13; /* detachable_any_type */
	T0* a14; /* detachable_separate_any_type */
	T0* a15; /* separate_any_type */
	T0* a16; /* any_parent */
	T0* a17; /* any_parents */
	T0* a18; /* any_clients */
	T0* a19; /* tuple_type */
	T0* a20; /* detachable_tuple_type */
	T0* a21; /* tuple_like_current_type */
	T0* a22; /* unfolded_empty_tuple_actual_parameters */
	T0* a23; /* array_any_type */
	T0* a24; /* array_detachable_any_type */
	T0* a25; /* array_none_type */
	T0* a26; /* array_like_current_type */
	T0* a27; /* boolean_type */
	T0* a28; /* character_type */
	T0* a29; /* character_8_type */
	T0* a30; /* character_8_convert_feature */
	T0* a31; /* character_32_type */
	T0* a32; /* character_32_convert_feature */
	T0* a33; /* double_type */
	T0* a34; /* exception_type */
	T0* a35; /* detachable_exception_type */
	T0* a36; /* exception_manager_type */
	T0* a37; /* function_type */
	T0* a38; /* immutable_string_32_type */
	T0* a39; /* integer_type */
	T0* a40; /* integer_8_type */
	T0* a41; /* integer_8_convert_feature */
	T0* a42; /* integer_16_type */
	T0* a43; /* integer_16_convert_feature */
	T0* a44; /* integer_32_type */
	T0* a45; /* integer_32_convert_feature */
	T0* a46; /* integer_64_type */
	T0* a47; /* integer_64_convert_feature */
	T0* a48; /* ise_exception_manager_type */
	T0* a49; /* iterable_detachable_any_type */
	T0* a50; /* natural_type */
	T0* a51; /* natural_8_type */
	T0* a52; /* natural_8_convert_feature */
	T0* a53; /* natural_16_type */
	T0* a54; /* natural_16_convert_feature */
	T0* a55; /* natural_32_type */
	T0* a56; /* natural_32_convert_feature */
	T0* a57; /* natural_64_type */
	T0* a58; /* natural_64_convert_feature */
	T0* a59; /* none_type */
	T0* a60; /* detachable_none_type */
	T0* a61; /* pointer_type */
	T0* a62; /* predicate_like_current_type */
	T0* a63; /* procedure_like_current_type */
	T0* a64; /* real_type */
	T0* a65; /* real_32_type */
	T0* a66; /* real_32_convert_feature */
	T0* a67; /* real_64_type */
	T0* a68; /* real_64_convert_feature */
	T0* a69; /* routine_type */
	T0* a70; /* special_any_type */
	T0* a71; /* special_detachable_any_type */
	T0* a72; /* string_type */
	T0* a73; /* detachable_string_type */
	T0* a74; /* string_8_type */
	T0* a75; /* string_8_convert_feature */
	T0* a76; /* string_32_type */
	T0* a77; /* string_32_convert_feature */
	T0* a78; /* system_object_type */
	T0* a79; /* system_object_parents */
	T0* a80; /* system_string_type */
	T0* a81; /* type_any_type */
	T0* a82; /* type_type_any_type */
	T0* a83; /* type_detachable_any_type */
	T0* a84; /* type_detachable_like_current_type */
	T0* a85; /* detachable_type_exception_type */
	T0* a86; /* type_detachable_exception_type */
	T0* a87; /* detachable_type_detachable_any_type */
	T0* a88; /* type_like_current_type */
	T0* a89; /* typed_pointer_any_type */
	T0* a90; /* typed_pointer_like_current_type */
	T0* a91; /* wide_character_type */
	T1 a92; /* is_read_only */
	T1 a93; /* is_preparsed */
	T0* a94; /* class_renamings */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
struct S235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
struct S236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
struct S238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
struct S239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
struct S240 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
struct S241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
struct S242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
struct S243 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
struct S244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
struct S245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
struct S246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S247 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
	T0* a7; /* assembly_name */
	T0* a8; /* classname_prefix */
	T0* a9; /* assembly_version */
	T0* a10; /* assembly_culture */
	T0* a11; /* assembly_public_key_token */
	T0* a12; /* pathname */
	T0* a13; /* referenced_assemblies */
	T0* a14; /* current_system */
	T0* a15; /* dotnet_assembly */
	T0* a16; /* name */
	T0* a17; /* master_classes */
	T0* a18; /* master_class_mutex */
	T0* a19; /* any_type */
	T0* a20; /* detachable_any_type */
	T0* a21; /* detachable_separate_any_type */
	T0* a22; /* separate_any_type */
	T0* a23; /* any_parent */
	T0* a24; /* any_parents */
	T0* a25; /* any_clients */
	T0* a26; /* tuple_type */
	T0* a27; /* detachable_tuple_type */
	T0* a28; /* tuple_like_current_type */
	T0* a29; /* unfolded_empty_tuple_actual_parameters */
	T0* a30; /* array_any_type */
	T0* a31; /* array_detachable_any_type */
	T0* a32; /* array_none_type */
	T0* a33; /* array_like_current_type */
	T0* a34; /* boolean_type */
	T0* a35; /* character_type */
	T0* a36; /* character_8_type */
	T0* a37; /* character_8_convert_feature */
	T0* a38; /* character_32_type */
	T0* a39; /* character_32_convert_feature */
	T0* a40; /* double_type */
	T0* a41; /* exception_type */
	T0* a42; /* detachable_exception_type */
	T0* a43; /* exception_manager_type */
	T0* a44; /* function_type */
	T0* a45; /* immutable_string_32_type */
	T0* a46; /* integer_type */
	T0* a47; /* integer_8_type */
	T0* a48; /* integer_8_convert_feature */
	T0* a49; /* integer_16_type */
	T0* a50; /* integer_16_convert_feature */
	T0* a51; /* integer_32_type */
	T0* a52; /* integer_32_convert_feature */
	T0* a53; /* integer_64_type */
	T0* a54; /* integer_64_convert_feature */
	T0* a55; /* ise_exception_manager_type */
	T0* a56; /* iterable_detachable_any_type */
	T0* a57; /* natural_type */
	T0* a58; /* natural_8_type */
	T0* a59; /* natural_8_convert_feature */
	T0* a60; /* natural_16_type */
	T0* a61; /* natural_16_convert_feature */
	T0* a62; /* natural_32_type */
	T0* a63; /* natural_32_convert_feature */
	T0* a64; /* natural_64_type */
	T0* a65; /* natural_64_convert_feature */
	T0* a66; /* none_type */
	T0* a67; /* detachable_none_type */
	T0* a68; /* pointer_type */
	T0* a69; /* predicate_like_current_type */
	T0* a70; /* procedure_like_current_type */
	T0* a71; /* real_type */
	T0* a72; /* real_32_type */
	T0* a73; /* real_32_convert_feature */
	T0* a74; /* real_64_type */
	T0* a75; /* real_64_convert_feature */
	T0* a76; /* routine_type */
	T0* a77; /* special_any_type */
	T0* a78; /* special_detachable_any_type */
	T0* a79; /* string_type */
	T0* a80; /* detachable_string_type */
	T0* a81; /* string_8_type */
	T0* a82; /* string_8_convert_feature */
	T0* a83; /* string_32_type */
	T0* a84; /* string_32_convert_feature */
	T0* a85; /* system_object_type */
	T0* a86; /* system_object_parents */
	T0* a87; /* system_string_type */
	T0* a88; /* type_any_type */
	T0* a89; /* type_type_any_type */
	T0* a90; /* type_detachable_any_type */
	T0* a91; /* type_detachable_like_current_type */
	T0* a92; /* detachable_type_exception_type */
	T0* a93; /* type_detachable_exception_type */
	T0* a94; /* detachable_type_detachable_any_type */
	T0* a95; /* type_like_current_type */
	T0* a96; /* typed_pointer_any_type */
	T0* a97; /* typed_pointer_like_current_type */
	T0* a98; /* wide_character_type */
	T1 a99; /* is_read_only */
	T1 a100; /* is_preparsed */
	T0* a101; /* class_renamings */
};

/* Struct for type KL_PLATFORM */
struct S248 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S249 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* last_position */
	T0* a5; /* equality_tester */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* special_key_routines */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* internal_cursor */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
struct S251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [[attached] ET_CLASS] */
struct S252 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S253 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [INTEGER_32] */
struct S254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 z1;
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
	T0* a7; /* alive_conforming_descendants_per_type */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S256 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* base_type */
	T6 a2; /* attribute_count */
	T0* a3; /* queries */
	T1 a4; /* is_alive */
	T6 a5; /* id */
	T0* a6; /* base_class */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T6 a9; /* hash_code */
	T0* a10; /* conforming_ancestors */
	T0* a11; /* conforming_descendants */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* query_calls */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
	T0* a19; /* equality_expressions */
	T0* a20; /* object_equality_expressions */
};

/* Struct for type DT_DATE_TIME */
struct S257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
struct S258 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* result_type_set */
	T0* a6; /* target_type */
	T8 a7; /* builtin_class_code */
	T8 a8; /* builtin_feature_code */
	T1 a9; /* is_regular */
	T0* a10; /* first_precursor */
	T1 a11; /* is_creation */
	T0* a12; /* other_precursors */
	T1 a13; /* is_built */
	T1 a14; /* is_current_type_needed */
	T1 a15; /* is_address */
	T1 a16; /* is_static_generated */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S267 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S275 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T8 a11; /* builtin_class_code */
	T8 a12; /* builtin_feature_code */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* declared_type */
	T0* a16; /* language */
	T0* a17; /* obsolete_message */
	T0* a18; /* alias_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T0* a27; /* other_seeds */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type ET_TUPLE_TYPE */
struct S276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* tuple_keyword */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type [attached] ARRAY [[attached] ET_TYPE] */
struct S278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] ET_TYPE] */
struct S279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_QUERY_LIST */
struct S281 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S282 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T0* a8; /* local_clock */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* system_processor */
	T6 a3; /* last_text_count */
	T6 a4; /* last_literal_start */
	T0* a5; /* filename */
	T0* a6; /* group */
	T0* a7; /* verbatim_marker */
	T0* a8; /* verbatim_open_white_characters */
	T0* a9; /* verbatim_close_white_characters */
	T0* a10; /* yy_pushed_start_conditions */
	T0* a11; /* input_buffer */
	T0* a12; /* yy_state_stack */
	T6 a13; /* yy_start_state */
	T6 a14; /* yy_line */
	T6 a15; /* yy_column */
	T6 a16; /* yy_position */
	T6 a17; /* yy_start */
	T6 a18; /* yy_end */
	T6 a19; /* line */
	T6 a20; /* column */
	T6 a21; /* position */
	T0* a22; /* yy_nxt */
	T0* a23; /* yy_chk */
	T0* a24; /* yy_base */
	T0* a25; /* yy_def */
	T0* a26; /* yy_ec */
	T0* a27; /* yy_meta */
	T0* a28; /* yy_accept */
	T0* a29; /* yy_acclist */
	T0* a30; /* yy_content */
	T0* a31; /* yy_content_area */
	T0* a32; /* last_classname */
	T1 a33; /* class_keyword_found */
	T6 a34; /* last_token */
	T1 a35; /* yy_more_flag */
	T6 a36; /* yy_more_len */
	T6 a37; /* yy_state_count */
	T6 a38; /* yy_last_accepting_state */
	T6 a39; /* yy_last_accepting_cpos */
	T6 a40; /* yy_lp */
	T6 a41; /* yy_looking_for_trail_begin */
	T6 a42; /* yy_full_match */
	T6 a43; /* yy_full_state */
	T6 a44; /* yy_full_lp */
	T1 a45; /* yy_rejected */
	T6 a46; /* last_literal_end */
	T6 a47; /* pushed_start_condition_count */
	T6 a48; /* ms_column */
	T6 a49; /* ms_line */
	T6 a50; /* last_break_end */
	T6 a51; /* last_comment_end */
};

/* Struct for type ET_MASTER_CLASS_CHECKER */
struct S286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* eiffel_buffer */
	T0* a2; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a4; /* last_local_variables_stack */
	T0* a5; /* last_keywords */
	T0* a6; /* last_symbols */
	T0* a7; /* last_object_tests_stack */
	T0* a8; /* last_object_tests_pool */
	T0* a9; /* last_across_components_stack */
	T0* a10; /* last_across_components_pool */
	T0* a11; /* assertions */
	T0* a12; /* assertion_counters */
	T0* a13; /* assertion_kinds */
	T6 a14; /* assertion_kind */
	T0* a15; /* queries */
	T0* a16; /* procedures */
	T0* a17; /* constraints */
	T0* a18; /* providers */
	T0* a19; /* current_class */
	T0* a20; /* system_processor */
	T6 a21; /* last_text_count */
	T6 a22; /* last_literal_start */
	T0* a23; /* filename */
	T0* a24; /* group */
	T0* a25; /* verbatim_marker */
	T0* a26; /* verbatim_open_white_characters */
	T0* a27; /* verbatim_close_white_characters */
	T0* a28; /* yyss */
	T0* a29; /* yy_pushed_start_conditions */
	T0* a30; /* input_buffer */
	T0* a31; /* yyspecial_routines1 */
	T6 a32; /* yyvsc1 */
	T0* a33; /* yyvs1 */
	T0* a34; /* yyspecial_routines2 */
	T6 a35; /* yyvsc2 */
	T0* a36; /* yyvs2 */
	T0* a37; /* yyspecial_routines3 */
	T6 a38; /* yyvsc3 */
	T0* a39; /* yyvs3 */
	T0* a40; /* yyspecial_routines4 */
	T6 a41; /* yyvsc4 */
	T0* a42; /* yyvs4 */
	T0* a43; /* yyspecial_routines5 */
	T6 a44; /* yyvsc5 */
	T0* a45; /* yyvs5 */
	T0* a46; /* yyspecial_routines6 */
	T6 a47; /* yyvsc6 */
	T0* a48; /* yyvs6 */
	T0* a49; /* yyspecial_routines7 */
	T6 a50; /* yyvsc7 */
	T0* a51; /* yyvs7 */
	T0* a52; /* yyspecial_routines8 */
	T6 a53; /* yyvsc8 */
	T0* a54; /* yyvs8 */
	T0* a55; /* yyspecial_routines9 */
	T6 a56; /* yyvsc9 */
	T0* a57; /* yyvs9 */
	T0* a58; /* yyspecial_routines10 */
	T6 a59; /* yyvsc10 */
	T0* a60; /* yyvs10 */
	T0* a61; /* yyspecial_routines11 */
	T6 a62; /* yyvsc11 */
	T0* a63; /* yyvs11 */
	T0* a64; /* yyspecial_routines12 */
	T6 a65; /* yyvsc12 */
	T0* a66; /* yyvs12 */
	T0* a67; /* yyspecial_routines13 */
	T6 a68; /* yyvsc13 */
	T0* a69; /* yyvs13 */
	T0* a70; /* yyspecial_routines14 */
	T6 a71; /* yyvsc14 */
	T0* a72; /* yyvs14 */
	T0* a73; /* yyspecial_routines15 */
	T6 a74; /* yyvsc15 */
	T0* a75; /* yyvs15 */
	T0* a76; /* yyspecial_routines16 */
	T6 a77; /* yyvsc16 */
	T0* a78; /* yyvs16 */
	T0* a79; /* yyspecial_routines17 */
	T6 a80; /* yyvsc17 */
	T0* a81; /* yyvs17 */
	T0* a82; /* yyspecial_routines18 */
	T6 a83; /* yyvsc18 */
	T0* a84; /* yyvs18 */
	T0* a85; /* yyspecial_routines19 */
	T6 a86; /* yyvsc19 */
	T0* a87; /* yyvs19 */
	T0* a88; /* yyspecial_routines20 */
	T6 a89; /* yyvsc20 */
	T0* a90; /* yyvs20 */
	T0* a91; /* yyspecial_routines21 */
	T6 a92; /* yyvsc21 */
	T0* a93; /* yyvs21 */
	T0* a94; /* yyspecial_routines22 */
	T6 a95; /* yyvsc22 */
	T0* a96; /* yyvs22 */
	T0* a97; /* yyspecial_routines23 */
	T6 a98; /* yyvsc23 */
	T0* a99; /* yyvs23 */
	T0* a100; /* yyspecial_routines24 */
	T6 a101; /* yyvsc24 */
	T0* a102; /* yyvs24 */
	T0* a103; /* yyspecial_routines25 */
	T6 a104; /* yyvsc25 */
	T0* a105; /* yyvs25 */
	T0* a106; /* yyspecial_routines26 */
	T6 a107; /* yyvsc26 */
	T0* a108; /* yyvs26 */
	T0* a109; /* yyspecial_routines27 */
	T6 a110; /* yyvsc27 */
	T0* a111; /* yyvs27 */
	T0* a112; /* yyspecial_routines28 */
	T6 a113; /* yyvsc28 */
	T0* a114; /* yyvs28 */
	T0* a115; /* yyspecial_routines29 */
	T6 a116; /* yyvsc29 */
	T0* a117; /* yyvs29 */
	T0* a118; /* yyspecial_routines30 */
	T6 a119; /* yyvsc30 */
	T0* a120; /* yyvs30 */
	T0* a121; /* yyspecial_routines31 */
	T6 a122; /* yyvsc31 */
	T0* a123; /* yyvs31 */
	T0* a124; /* yyspecial_routines32 */
	T6 a125; /* yyvsc32 */
	T0* a126; /* yyvs32 */
	T0* a127; /* yyspecial_routines33 */
	T6 a128; /* yyvsc33 */
	T0* a129; /* yyvs33 */
	T0* a130; /* yyspecial_routines34 */
	T6 a131; /* yyvsc34 */
	T0* a132; /* yyvs34 */
	T0* a133; /* yyspecial_routines35 */
	T6 a134; /* yyvsc35 */
	T0* a135; /* yyvs35 */
	T0* a136; /* yyspecial_routines36 */
	T6 a137; /* yyvsc36 */
	T0* a138; /* yyvs36 */
	T0* a139; /* yyspecial_routines37 */
	T6 a140; /* yyvsc37 */
	T0* a141; /* yyvs37 */
	T0* a142; /* yyspecial_routines38 */
	T6 a143; /* yyvsc38 */
	T0* a144; /* yyvs38 */
	T0* a145; /* yyspecial_routines39 */
	T6 a146; /* yyvsc39 */
	T0* a147; /* yyvs39 */
	T0* a148; /* yyspecial_routines40 */
	T6 a149; /* yyvsc40 */
	T0* a150; /* yyvs40 */
	T0* a151; /* yyspecial_routines41 */
	T6 a152; /* yyvsc41 */
	T0* a153; /* yyvs41 */
	T0* a154; /* yyspecial_routines42 */
	T6 a155; /* yyvsc42 */
	T0* a156; /* yyvs42 */
	T0* a157; /* yyspecial_routines43 */
	T6 a158; /* yyvsc43 */
	T0* a159; /* yyvs43 */
	T0* a160; /* yyspecial_routines44 */
	T6 a161; /* yyvsc44 */
	T0* a162; /* yyvs44 */
	T0* a163; /* yyspecial_routines45 */
	T6 a164; /* yyvsc45 */
	T0* a165; /* yyvs45 */
	T0* a166; /* yyspecial_routines46 */
	T6 a167; /* yyvsc46 */
	T0* a168; /* yyvs46 */
	T0* a169; /* yyspecial_routines47 */
	T6 a170; /* yyvsc47 */
	T0* a171; /* yyvs47 */
	T0* a172; /* yyspecial_routines48 */
	T6 a173; /* yyvsc48 */
	T0* a174; /* yyvs48 */
	T0* a175; /* yyspecial_routines49 */
	T6 a176; /* yyvsc49 */
	T0* a177; /* yyvs49 */
	T0* a178; /* yyspecial_routines50 */
	T6 a179; /* yyvsc50 */
	T0* a180; /* yyvs50 */
	T0* a181; /* yyspecial_routines51 */
	T6 a182; /* yyvsc51 */
	T0* a183; /* yyvs51 */
	T0* a184; /* yyspecial_routines52 */
	T6 a185; /* yyvsc52 */
	T0* a186; /* yyvs52 */
	T0* a187; /* yyspecial_routines53 */
	T6 a188; /* yyvsc53 */
	T0* a189; /* yyvs53 */
	T0* a190; /* yyspecial_routines54 */
	T6 a191; /* yyvsc54 */
	T0* a192; /* yyvs54 */
	T0* a193; /* yyspecial_routines55 */
	T6 a194; /* yyvsc55 */
	T0* a195; /* yyvs55 */
	T0* a196; /* yyspecial_routines56 */
	T6 a197; /* yyvsc56 */
	T0* a198; /* yyvs56 */
	T0* a199; /* yyspecial_routines57 */
	T6 a200; /* yyvsc57 */
	T0* a201; /* yyvs57 */
	T0* a202; /* yyspecial_routines58 */
	T6 a203; /* yyvsc58 */
	T0* a204; /* yyvs58 */
	T0* a205; /* yyspecial_routines59 */
	T6 a206; /* yyvsc59 */
	T0* a207; /* yyvs59 */
	T0* a208; /* yyspecial_routines60 */
	T6 a209; /* yyvsc60 */
	T0* a210; /* yyvs60 */
	T0* a211; /* yyspecial_routines61 */
	T6 a212; /* yyvsc61 */
	T0* a213; /* yyvs61 */
	T0* a214; /* yyspecial_routines62 */
	T6 a215; /* yyvsc62 */
	T0* a216; /* yyvs62 */
	T0* a217; /* yyspecial_routines63 */
	T6 a218; /* yyvsc63 */
	T0* a219; /* yyvs63 */
	T0* a220; /* yyspecial_routines64 */
	T6 a221; /* yyvsc64 */
	T0* a222; /* yyvs64 */
	T0* a223; /* yyspecial_routines65 */
	T6 a224; /* yyvsc65 */
	T0* a225; /* yyvs65 */
	T0* a226; /* yyspecial_routines66 */
	T6 a227; /* yyvsc66 */
	T0* a228; /* yyvs66 */
	T0* a229; /* yyspecial_routines67 */
	T6 a230; /* yyvsc67 */
	T0* a231; /* yyvs67 */
	T0* a232; /* yyspecial_routines68 */
	T6 a233; /* yyvsc68 */
	T0* a234; /* yyvs68 */
	T0* a235; /* yyspecial_routines69 */
	T6 a236; /* yyvsc69 */
	T0* a237; /* yyvs69 */
	T0* a238; /* yyspecial_routines70 */
	T6 a239; /* yyvsc70 */
	T0* a240; /* yyvs70 */
	T0* a241; /* yyspecial_routines71 */
	T6 a242; /* yyvsc71 */
	T0* a243; /* yyvs71 */
	T0* a244; /* yyspecial_routines72 */
	T6 a245; /* yyvsc72 */
	T0* a246; /* yyvs72 */
	T0* a247; /* yyspecial_routines73 */
	T6 a248; /* yyvsc73 */
	T0* a249; /* yyvs73 */
	T0* a250; /* yyspecial_routines74 */
	T6 a251; /* yyvsc74 */
	T0* a252; /* yyvs74 */
	T0* a253; /* yyspecial_routines75 */
	T6 a254; /* yyvsc75 */
	T0* a255; /* yyvs75 */
	T0* a256; /* yyspecial_routines76 */
	T6 a257; /* yyvsc76 */
	T0* a258; /* yyvs76 */
	T0* a259; /* yyspecial_routines77 */
	T6 a260; /* yyvsc77 */
	T0* a261; /* yyvs77 */
	T0* a262; /* yyspecial_routines78 */
	T6 a263; /* yyvsc78 */
	T0* a264; /* yyvs78 */
	T0* a265; /* yyspecial_routines79 */
	T6 a266; /* yyvsc79 */
	T0* a267; /* yyvs79 */
	T0* a268; /* yyspecial_routines80 */
	T6 a269; /* yyvsc80 */
	T0* a270; /* yyvs80 */
	T0* a271; /* yyspecial_routines81 */
	T6 a272; /* yyvsc81 */
	T0* a273; /* yyvs81 */
	T0* a274; /* yyspecial_routines82 */
	T6 a275; /* yyvsc82 */
	T0* a276; /* yyvs82 */
	T0* a277; /* yyspecial_routines83 */
	T6 a278; /* yyvsc83 */
	T0* a279; /* yyvs83 */
	T0* a280; /* yyspecial_routines84 */
	T6 a281; /* yyvsc84 */
	T0* a282; /* yyvs84 */
	T0* a283; /* yyspecial_routines85 */
	T6 a284; /* yyvsc85 */
	T0* a285; /* yyvs85 */
	T0* a286; /* yyspecial_routines86 */
	T6 a287; /* yyvsc86 */
	T0* a288; /* yyvs86 */
	T0* a289; /* yyspecial_routines87 */
	T6 a290; /* yyvsc87 */
	T0* a291; /* yyvs87 */
	T0* a292; /* yyspecial_routines88 */
	T6 a293; /* yyvsc88 */
	T0* a294; /* yyvs88 */
	T0* a295; /* yyspecial_routines89 */
	T6 a296; /* yyvsc89 */
	T0* a297; /* yyvs89 */
	T0* a298; /* yyspecial_routines90 */
	T6 a299; /* yyvsc90 */
	T0* a300; /* yyvs90 */
	T0* a301; /* yyspecial_routines91 */
	T6 a302; /* yyvsc91 */
	T0* a303; /* yyvs91 */
	T0* a304; /* yyspecial_routines92 */
	T6 a305; /* yyvsc92 */
	T0* a306; /* yyvs92 */
	T0* a307; /* yyspecial_routines93 */
	T6 a308; /* yyvsc93 */
	T0* a309; /* yyvs93 */
	T0* a310; /* yyspecial_routines94 */
	T6 a311; /* yyvsc94 */
	T0* a312; /* yyvs94 */
	T0* a313; /* yyspecial_routines95 */
	T6 a314; /* yyvsc95 */
	T0* a315; /* yyvs95 */
	T0* a316; /* yyspecial_routines96 */
	T6 a317; /* yyvsc96 */
	T0* a318; /* yyvs96 */
	T0* a319; /* yyspecial_routines97 */
	T6 a320; /* yyvsc97 */
	T0* a321; /* yyvs97 */
	T0* a322; /* yyspecial_routines98 */
	T6 a323; /* yyvsc98 */
	T0* a324; /* yyvs98 */
	T0* a325; /* yyspecial_routines99 */
	T6 a326; /* yyvsc99 */
	T0* a327; /* yyvs99 */
	T0* a328; /* yyspecial_routines100 */
	T6 a329; /* yyvsc100 */
	T0* a330; /* yyvs100 */
	T0* a331; /* yyspecial_routines101 */
	T6 a332; /* yyvsc101 */
	T0* a333; /* yyvs101 */
	T0* a334; /* yyspecial_routines102 */
	T6 a335; /* yyvsc102 */
	T0* a336; /* yyvs102 */
	T0* a337; /* yyspecial_routines103 */
	T6 a338; /* yyvsc103 */
	T0* a339; /* yyvs103 */
	T0* a340; /* yyspecial_routines104 */
	T6 a341; /* yyvsc104 */
	T0* a342; /* yyvs104 */
	T0* a343; /* yyspecial_routines105 */
	T6 a344; /* yyvsc105 */
	T0* a345; /* yyvs105 */
	T0* a346; /* yyspecial_routines106 */
	T6 a347; /* yyvsc106 */
	T0* a348; /* yyvs106 */
	T0* a349; /* yyspecial_routines107 */
	T6 a350; /* yyvsc107 */
	T0* a351; /* yyvs107 */
	T0* a352; /* yyspecial_routines108 */
	T6 a353; /* yyvsc108 */
	T0* a354; /* yyvs108 */
	T0* a355; /* yyspecial_routines109 */
	T6 a356; /* yyvsc109 */
	T0* a357; /* yyvs109 */
	T0* a358; /* yyspecial_routines110 */
	T6 a359; /* yyvsc110 */
	T0* a360; /* yyvs110 */
	T0* a361; /* yyspecial_routines111 */
	T6 a362; /* yyvsc111 */
	T0* a363; /* yyvs111 */
	T0* a364; /* yyspecial_routines112 */
	T6 a365; /* yyvsc112 */
	T0* a366; /* yyvs112 */
	T0* a367; /* yyspecial_routines113 */
	T6 a368; /* yyvsc113 */
	T0* a369; /* yyvs113 */
	T0* a370; /* yyspecial_routines114 */
	T6 a371; /* yyvsc114 */
	T0* a372; /* yyvs114 */
	T0* a373; /* yyspecial_routines115 */
	T6 a374; /* yyvsc115 */
	T0* a375; /* yyvs115 */
	T0* a376; /* yyspecial_routines116 */
	T6 a377; /* yyvsc116 */
	T0* a378; /* yyvs116 */
	T0* a379; /* yyspecial_routines117 */
	T6 a380; /* yyvsc117 */
	T0* a381; /* yyvs117 */
	T0* a382; /* yyspecial_routines118 */
	T6 a383; /* yyvsc118 */
	T0* a384; /* yyvs118 */
	T0* a385; /* yyspecial_routines119 */
	T6 a386; /* yyvsc119 */
	T0* a387; /* yyvs119 */
	T0* a388; /* yyspecial_routines120 */
	T6 a389; /* yyvsc120 */
	T0* a390; /* yyvs120 */
	T0* a391; /* yyspecial_routines121 */
	T6 a392; /* yyvsc121 */
	T0* a393; /* yyvs121 */
	T0* a394; /* yyspecial_routines122 */
	T6 a395; /* yyvsc122 */
	T0* a396; /* yyvs122 */
	T0* a397; /* yyspecial_routines123 */
	T6 a398; /* yyvsc123 */
	T0* a399; /* yyvs123 */
	T0* a400; /* yyspecial_routines124 */
	T6 a401; /* yyvsc124 */
	T0* a402; /* yyvs124 */
	T0* a403; /* yytranslate */
	T0* a404; /* yyr1 */
	T0* a405; /* yytypes1 */
	T0* a406; /* yytypes2 */
	T0* a407; /* yydefact */
	T0* a408; /* yydefgoto */
	T0* a409; /* yypact */
	T0* a410; /* yypgoto */
	T0* a411; /* yytable */
	T0* a412; /* yycheck */
	T0* a413; /* yy_state_stack */
	T6 a414; /* yy_start_state */
	T6 a415; /* yy_line */
	T6 a416; /* yy_column */
	T6 a417; /* yy_position */
	T6 a418; /* yy_start */
	T6 a419; /* yy_end */
	T6 a420; /* line */
	T6 a421; /* column */
	T6 a422; /* position */
	T0* a423; /* yy_nxt */
	T0* a424; /* yy_chk */
	T0* a425; /* yy_base */
	T0* a426; /* yy_def */
	T0* a427; /* yy_ec */
	T0* a428; /* yy_meta */
	T0* a429; /* yy_accept */
	T0* a430; /* yy_acclist */
	T0* a431; /* yy_content */
	T0* a432; /* yy_content_area */
	T6 a433; /* time_stamp */
	T0* a434; /* last_class */
	T6 a435; /* yy_parsing_status */
	T6 a436; /* yy_suspended_yystacksize */
	T6 a437; /* yy_suspended_yystate */
	T6 a438; /* yy_suspended_yyn */
	T6 a439; /* yy_suspended_yychar1 */
	T6 a440; /* yy_suspended_index */
	T6 a441; /* yy_suspended_yyss_top */
	T6 a442; /* yy_suspended_yy_goto */
	T6 a443; /* yyssp */
	T6 a444; /* error_count */
	T1 a445; /* yy_lookahead_needed */
	T6 a446; /* yyerrstatus */
	T6 a447; /* last_token */
	T0* a448; /* last_clients */
	T0* a449; /* last_export_clients */
	T0* a450; /* last_feature_clause */
	T6 a451; /* last_literal_end */
	T1 a452; /* yy_rejected */
	T6 a453; /* yy_state_count */
	T6 a454; /* yy_full_match */
	T6 a455; /* yy_lp */
	T6 a456; /* yy_looking_for_trail_begin */
	T6 a457; /* yy_full_lp */
	T6 a458; /* yy_full_state */
	T6 a459; /* pushed_start_condition_count */
	T1 a460; /* yy_more_flag */
	T6 a461; /* yy_more_len */
	T6 a462; /* yy_last_accepting_state */
	T6 a463; /* yy_last_accepting_cpos */
	T6 a464; /* yyvsp1 */
	T6 a465; /* yyvsp2 */
	T6 a466; /* yyvsp3 */
	T6 a467; /* yyvsp4 */
	T6 a468; /* yyvsp5 */
	T6 a469; /* yyvsp6 */
	T6 a470; /* yyvsp7 */
	T6 a471; /* yyvsp8 */
	T6 a472; /* yyvsp9 */
	T6 a473; /* yyvsp10 */
	T6 a474; /* yyvsp11 */
	T6 a475; /* yyvsp12 */
	T6 a476; /* yyvsp13 */
	T6 a477; /* yyvsp14 */
	T6 a478; /* yyvsp15 */
	T6 a479; /* yyvsp16 */
	T6 a480; /* yyvsp17 */
	T6 a481; /* yyvsp18 */
	T6 a482; /* yyvsp19 */
	T6 a483; /* yyvsp20 */
	T6 a484; /* yyvsp21 */
	T6 a485; /* yyvsp22 */
	T6 a486; /* yyvsp23 */
	T6 a487; /* yyvsp24 */
	T6 a488; /* yyvsp25 */
	T6 a489; /* yyvsp26 */
	T6 a490; /* yyvsp27 */
	T6 a491; /* yyvsp28 */
	T6 a492; /* yyvsp29 */
	T6 a493; /* yyvsp30 */
	T6 a494; /* yyvsp31 */
	T6 a495; /* yyvsp32 */
	T6 a496; /* yyvsp33 */
	T6 a497; /* yyvsp34 */
	T6 a498; /* yyvsp35 */
	T6 a499; /* yyvsp36 */
	T6 a500; /* yyvsp37 */
	T6 a501; /* yyvsp38 */
	T6 a502; /* yyvsp39 */
	T6 a503; /* yyvsp40 */
	T6 a504; /* yyvsp41 */
	T6 a505; /* yyvsp42 */
	T6 a506; /* yyvsp43 */
	T6 a507; /* yyvsp44 */
	T6 a508; /* yyvsp45 */
	T6 a509; /* yyvsp46 */
	T6 a510; /* yyvsp47 */
	T6 a511; /* yyvsp48 */
	T6 a512; /* yyvsp49 */
	T6 a513; /* yyvsp50 */
	T6 a514; /* yyvsp51 */
	T6 a515; /* yyvsp52 */
	T6 a516; /* yyvsp53 */
	T6 a517; /* yyvsp54 */
	T6 a518; /* yyvsp55 */
	T6 a519; /* yyvsp56 */
	T6 a520; /* yyvsp57 */
	T6 a521; /* yyvsp58 */
	T6 a522; /* yyvsp59 */
	T6 a523; /* yyvsp60 */
	T6 a524; /* yyvsp61 */
	T6 a525; /* yyvsp62 */
	T6 a526; /* yyvsp63 */
	T6 a527; /* yyvsp64 */
	T6 a528; /* yyvsp65 */
	T6 a529; /* yyvsp66 */
	T6 a530; /* yyvsp67 */
	T6 a531; /* yyvsp68 */
	T6 a532; /* yyvsp69 */
	T6 a533; /* yyvsp70 */
	T6 a534; /* yyvsp71 */
	T6 a535; /* yyvsp72 */
	T6 a536; /* yyvsp73 */
	T6 a537; /* yyvsp74 */
	T6 a538; /* yyvsp75 */
	T6 a539; /* yyvsp76 */
	T6 a540; /* yyvsp77 */
	T6 a541; /* yyvsp78 */
	T6 a542; /* yyvsp79 */
	T6 a543; /* yyvsp80 */
	T6 a544; /* yyvsp81 */
	T6 a545; /* yyvsp82 */
	T6 a546; /* yyvsp83 */
	T6 a547; /* yyvsp84 */
	T6 a548; /* yyvsp85 */
	T6 a549; /* yyvsp86 */
	T6 a550; /* yyvsp87 */
	T6 a551; /* yyvsp88 */
	T6 a552; /* yyvsp89 */
	T6 a553; /* yyvsp90 */
	T6 a554; /* yyvsp91 */
	T6 a555; /* yyvsp92 */
	T6 a556; /* yyvsp93 */
	T6 a557; /* yyvsp94 */
	T6 a558; /* yyvsp95 */
	T6 a559; /* yyvsp96 */
	T6 a560; /* yyvsp97 */
	T6 a561; /* yyvsp98 */
	T6 a562; /* yyvsp99 */
	T6 a563; /* yyvsp100 */
	T6 a564; /* yyvsp101 */
	T6 a565; /* yyvsp102 */
	T6 a566; /* yyvsp103 */
	T6 a567; /* yyvsp104 */
	T6 a568; /* yyvsp105 */
	T6 a569; /* yyvsp106 */
	T6 a570; /* yyvsp107 */
	T6 a571; /* yyvsp108 */
	T6 a572; /* yyvsp109 */
	T6 a573; /* yyvsp110 */
	T6 a574; /* yyvsp111 */
	T6 a575; /* yyvsp112 */
	T6 a576; /* yyvsp113 */
	T6 a577; /* yyvsp114 */
	T6 a578; /* yyvsp115 */
	T6 a579; /* yyvsp116 */
	T6 a580; /* yyvsp117 */
	T6 a581; /* yyvsp118 */
	T6 a582; /* yyvsp119 */
	T6 a583; /* yyvsp120 */
	T6 a584; /* yyvsp121 */
	T6 a585; /* yyvsp122 */
	T6 a586; /* yyvsp123 */
	T6 a587; /* yyvsp124 */
	T0* a588; /* last_detachable_any_value */
	T0* a589; /* last_detachable_et_keyword_value */
	T0* a590; /* last_detachable_et_agent_keyword_value */
	T0* a591; /* last_detachable_et_precursor_keyword_value */
	T0* a592; /* last_detachable_et_symbol_value */
	T0* a593; /* last_detachable_et_position_value */
	T0* a594; /* last_detachable_et_boolean_constant_value */
	T0* a595; /* last_detachable_et_break_value */
	T0* a596; /* last_detachable_et_character_constant_value */
	T0* a597; /* last_detachable_et_current_value */
	T0* a598; /* last_detachable_et_free_operator_value */
	T0* a599; /* last_detachable_et_identifier_value */
	T0* a600; /* last_detachable_et_integer_constant_value */
	T0* a601; /* last_detachable_et_keyword_operator_value */
	T0* a602; /* last_detachable_et_manifest_string_value */
	T0* a603; /* last_detachable_et_real_constant_value */
	T0* a604; /* last_detachable_et_result_value */
	T0* a605; /* last_detachable_et_retry_instruction_value */
	T0* a606; /* last_detachable_et_symbol_operator_value */
	T0* a607; /* last_detachable_et_void_value */
	T0* a608; /* last_detachable_et_semicolon_symbol_value */
	T0* a609; /* last_detachable_et_bracket_symbol_value */
	T0* a610; /* last_detachable_et_question_mark_symbol_value */
	T0* a611; /* last_formal_arguments */
	T0* a612; /* last_local_variables */
	T0* a613; /* last_object_tests */
	T0* a614; /* last_across_components */
	T6 a615; /* last_break_end */
	T6 a616; /* last_comment_end */
	T6 a617; /* ms_column */
	T6 a618; /* ms_line */
	T6 a619; /* break_kind */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* conforming_ancestors */
	T0* a4; /* parent_checker */
	T0* a5; /* formal_parameter_checker */
	T0* a6; /* parent_context */
	T0* a7; /* current_class */
	T0* a8; /* system_processor */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* unfolded_tuple_actual_parameters_resolver */
	T0* a11; /* anchored_type_checker */
	T0* a12; /* signature_checker */
	T0* a13; /* parent_checker */
	T0* a14; /* formal_parameter_checker */
	T0* a15; /* builtin_feature_checker */
	T0* a16; /* precursor_checker */
	T0* a17; /* precursors */
	T0* a18; /* current_class */
	T0* a19; /* system_processor */
	T1 a20; /* has_signature_error */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* classes_to_be_processed */
	T0* a2; /* parent_checker3 */
	T0* a3; /* qualified_anchored_type_checker */
	T0* a4; /* named_features */
	T0* a5; /* feature_adaptation_resolver */
	T0* a6; /* dotnet_feature_adaptation_resolver */
	T0* a7; /* signature_checker */
	T0* a8; /* unfolded_tuple_actual_parameters_resolver */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_checker */
	T0* a2; /* precursor_procedures */
	T0* a3; /* precursor_queries */
	T0* a4; /* supplier_builder */
	T0* a5; /* current_class */
	T0* a6; /* no_suppliers */
	T0* a7; /* system_processor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
struct S293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
struct S294 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
struct S296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_AST_FACTORY */
struct S297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* info_file */
	T0* a2; /* mutex */
	T0* a3; /* error_file */
	T0* a4; /* warning_file */
	T1 a5; /* is_ise */
	T1 a6; /* is_ge */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_error */
	T1 a9; /* has_internal_error */
	T1 a10; /* is_verbose */
	T1 a11; /* is_pedantic */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* string */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
struct S305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_HASH_LIST */
struct S306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* clashes */
	T0* a4; /* slots */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
struct S308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
struct S309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
struct S310 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* capacity */
	T6 a5; /* count */
	T6 a6; /* free_slot */
	T6 a7; /* slots_position */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
struct S312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S313 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
struct S314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
struct S316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
struct S317 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_EXPRESSION */
struct S318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CURRENT */
struct S319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_QUALIFIED_CALL_INSTRUCTION */
struct S321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* parenthesis_call */
};

/* Struct for type ET_QUALIFIED_CALL_EXPRESSION */
struct S324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_UNQUALIFIED_CALL_EXPRESSION */
struct S325 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T6 a3; /* index */
	T0* a4; /* parenthesis_call */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S326 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S329 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* slots_position */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* capacity */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] ARRAY [[attached] INTEGER_32] */
struct S330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
struct S333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
struct S334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
struct S335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
struct S337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T6 a4; /* match_count */
	T0* a5; /* offset_vector */
	T6 a6; /* offset_vector_count */
	T6 a7; /* brastart_capacity */
	T0* a8; /* brastart_vector */
	T6 a9; /* brastart_lower */
	T6 a10; /* brastart_count */
	T6 a11; /* eptr_capacity */
	T0* a12; /* eptr_vector */
	T6 a13; /* eptr_lower */
	T6 a14; /* eptr_upper */
	T0* a15; /* byte_code */
	T0* a16; /* internal_start_bits */
	T0* a17; /* pattern_buffer */
	T6 a18; /* subexpression_count */
	T0* a19; /* pattern */
	T6 a20; /* pattern_count */
	T6 a21; /* pattern_position */
	T6 a22; /* code_index */
	T6 a23; /* maxbackrefs */
	T6 a24; /* optchanged */
	T6 a25; /* first_character */
	T6 a26; /* required_character */
	T6 a27; /* regexp_countlits */
	T0* a28; /* start_bits */
	T0* a29; /* error_message */
	T1 a30; /* is_anchored */
	T0* a31; /* character_case_mapping */
	T0* a32; /* word_set */
	T6 a33; /* subject_next_start */
	T6 a34; /* error_code */
	T6 a35; /* error_position */
	T1 a36; /* is_startline */
	T1 a37; /* is_caseless */
	T1 a38; /* is_bol */
	T1 a39; /* is_eol */
	T1 a40; /* is_multiline */
	T1 a41; /* is_dotall */
	T1 a42; /* is_extended */
	T1 a43; /* is_empty_allowed */
	T1 a44; /* is_dollar_endonly */
	T1 a45; /* is_greedy */
	T1 a46; /* is_strict */
	T1 a47; /* is_ichanged */
	T6 a48; /* first_matched_index */
	T6 a49; /* eptr */
	T6 a50; /* offset_top */
	T1 a51; /* is_matching_caseless */
	T1 a52; /* is_matching_multiline */
	T1 a53; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* mode */
	T14 a3; /* file_pointer */
	T1 a4; /* descriptor_available */
	T0* a5; /* last_string */
	T0* a6; /* internal_name */
	T0* a7; /* internal_detachable_name_pointer */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_sets */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S342 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_static_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T1 a4; /* is_generated */
	T0* a5; /* target_type */
	T0* a6; /* static_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* result_type_set */
	T1 a9; /* is_regular */
	T1 a10; /* is_creation */
	T1 a11; /* is_address */
	T8 a12; /* builtin_class_code */
	T8 a13; /* builtin_feature_code */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T1 a16; /* is_built */
	T0* a17; /* parent_type */
	T1 a18; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
struct S345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_OBJECT_TEST */
struct S353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* attached_keyword */
	T0* a3; /* declared_type */
	T0* a4; /* expression */
};

/* Struct for type ET_OBJECT_EQUALITY_EXPRESSION */
struct S354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T0* a8; /* procedures */
	T0* a9; /* item_type_set */
	T1 a10; /* has_reference_attributes */
	T1 a11; /* has_generic_expanded_attributes */
	T0* a12; /* alive_conforming_descendants */
	T6 a13; /* hash_code */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T0* a16; /* conforming_ancestors */
	T0* a17; /* conforming_descendants */
	T1 a18; /* has_static */
	T0* a19; /* procedure_calls */
	T0* a20; /* equality_expressions */
	T0* a21; /* object_equality_expressions */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
struct S359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
struct S360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* creation_call */
	T0* a3; /* creation_type */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S365 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arguments */
	T0* a2; /* qualified_name */
};

/* Struct for type KL_DIRECTORY */
struct S369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* entry_buffer */
	T1 a6; /* old_end_of_input */
	T14 a7; /* directory_pointer */
	T14 a8; /* last_entry_pointer */
	T0* a9; /* lastentry */
	T0* a10; /* internal_name */
	T0* a11; /* internal_detachable_name_pointer */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_EXTENDED_ATTRIBUTE */
struct S371 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* assigner */
	T0* a9; /* postconditions */
	T0* a10; /* compound */
	T0* a11; /* locals */
	T0* a12; /* rescue_clause */
	T0* a13; /* frozen_keyword */
	T0* a14; /* extended_name */
	T0* a15; /* declared_type */
	T0* a16; /* obsolete_message */
	T0* a17; /* clients */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_COMPOUND */
struct S372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* keyword */
	T0* a3; /* storage */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* local_keyword */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
struct S377 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_IMPLICIT_TYPE_MARK */
struct S384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* is_expanded_mark */
	T1 a2; /* is_reference_mark */
	T1 a3; /* is_attached_mark */
	T1 a4; /* is_separate_mark */
	T1 a5; /* is_detachable_mark */
};

/* Struct for type ET_SYMBOL */
struct S385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE] */
struct S386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type STD_FILES */
struct S394 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_output */
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T6 a5; /* hash_code */
	T6 a6; /* first_seed */
	T0* a7; /* assigner */
	T0* a8; /* constant */
	T0* a9; /* extended_name */
	T0* a10; /* frozen_keyword */
	T0* a11; /* declared_type */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* object_tests */
	T0* a18; /* across_components */
	T0* a19; /* other_seeds */
	T1 a20; /* validity_checked */
	T1 a21; /* has_validity_error */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S402 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constant */
	T6 a2; /* id */
	T0* a3; /* implementation_feature */
	T0* a4; /* implementation_class */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T6 a7; /* hash_code */
	T6 a8; /* first_seed */
	T0* a9; /* assigner */
	T0* a10; /* declared_type */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* clients */
	T0* a14; /* is_keyword */
	T0* a15; /* unique_keyword */
	T0* a16; /* semicolon */
	T0* a17; /* feature_clause */
	T0* a18; /* first_indexing */
	T0* a19; /* object_tests */
	T0* a20; /* across_components */
	T0* a21; /* other_seeds */
	T1 a22; /* validity_checked */
	T1 a23; /* has_validity_error */
	T6 a24; /* version */
	T0* a25; /* synonym */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T11 a3; /* value */
	T0* a4; /* literal */
	T0* a5; /* cast_type */
	T6 a6; /* compressed_position */
	T1 a7; /* has_overflow */
	T0* a8; /* type */
};

/* Struct for type ET_ATTRIBUTE */
struct S404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T6 a5; /* hash_code */
	T6 a6; /* first_seed */
	T0* a7; /* assigner */
	T0* a8; /* declared_type */
	T0* a9; /* extended_name */
	T0* a10; /* frozen_keyword */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* object_tests */
	T0* a16; /* across_components */
	T0* a17; /* other_seeds */
	T1 a18; /* validity_checked */
	T1 a19; /* has_validity_error */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* synonym */
};

/* Struct for type NATIVE_STRING */
struct S406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* managed_data */
	T6 a2; /* unit_count */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
struct S407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_processor */
	T0* a2; /* type_checker */
	T0* a3; /* current_type */
	T0* a4; /* current_class */
	T0* a5; /* current_feature */
	T0* a6; /* current_feature_impl */
	T0* a7; /* current_class_impl */
	T0* a8; /* enclosing_inline_agents */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* unused_overloaded_queries_list */
	T0* a11; /* unused_overloaded_features_list */
	T0* a12; /* unused_contexts */
	T0* a13; /* current_context */
	T0* a14; /* current_target_type */
	T0* a15; /* current_object_test_types */
	T0* a16; /* current_object_test_scope */
	T0* a17; /* object_test_scope_builder */
	T0* a18; /* current_across_cursor_types */
	T0* a19; /* current_across_cursor_scope */
	T0* a20; /* current_initialization_scope */
	T0* a21; /* current_attachment_scope */
	T0* a22; /* attachment_scope_builder */
	T0* a23; /* unused_attachment_scopes */
	T0* a24; /* common_ancestor_type_list */
	T0* a25; /* indexing_term_list */
	T0* a26; /* default_creation_call_name */
	T0* a27; /* default_creation_call */
	T1 a28; /* has_fatal_error */
	T1 a29; /* in_static_feature */
	T1 a30; /* in_precondition */
	T0* a31; /* supplier_handler */
	T1 a32; /* in_invariant */
	T0* a33; /* precursor_queries */
	T0* a34; /* precursor_procedures */
	T1 a35; /* in_postcondition */
	T1 a36; /* in_precursor */
	T1 a37; /* in_rescue */
	T0* a38; /* current_inline_agent */
	T1 a39; /* in_check_instruction */
};

/* Struct for type [attached] DS_CELL [[attached] INTEGER_32] */
struct S410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* count */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* key_equality_tester */
	T0* a11; /* equality_tester */
	T6 a12; /* capacity */
	T6 a13; /* free_slot */
	T0* a14; /* special_item_routines */
	T0* a15; /* special_key_routines */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T6 a18; /* count */
	T0* a19; /* hash_function */
};

/* Struct for type ET_TYPE_CHECKER */
struct S414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_context */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* constraint_context */
	T0* a5; /* current_class */
	T0* a6; /* system_processor */
	T0* a7; /* supplier_handler */
	T1 a8; /* has_fatal_error */
	T1 a9; /* class_interface_error_only */
	T1 a10; /* in_qualified_anchored_type */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
struct S416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S421 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type ET_OBJECT_TEST_SCOPE */
struct S423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* object_tests */
	T6 a2; /* hidden_count */
};

/* Struct for type ET_OBJECT_TEST_SCOPE_BUILDER */
struct S424 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* scope */
	T1 a5; /* is_negated */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T6 a9; /* found_position */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T6 a17; /* slots_position */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ACROSS_CURSOR_SCOPE */
struct S426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hidden_count */
	T0* a2; /* across_components */
};

/* Struct for type ET_ATTACHMENT_SCOPE */
struct S427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* locals_attached */
	T0* a2; /* arguments_attached */
	T0* a3; /* attributes_attached */
	T1 a4; /* result_attached */
	T1 a5; /* is_code_unreachable */
};

/* Struct for type ET_ATTACHMENT_SCOPE_BUILDER */
struct S428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* scope */
	T1 a2; /* is_negated */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
struct S429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
struct S430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_PRECONDITIONS */
struct S431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T1 a2; /* validity_checked */
	T1 a3; /* has_validity_error */
	T0* a4; /* storage */
	T0* a5; /* require_keyword */
	T0* a6; /* else_keyword */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* hash_function */
};

/* Struct for type ET_FEATURE_LIST */
struct S434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S436 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T1 a2; /* use_obsolete_syntax */
	T0* a3; /* cached_absolute_pathname */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_KEYWORD */
struct S439 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_CLASS_CODES */
struct S440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type PATH */
struct S441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_name */
	T0* a2; /* storage */
	T1 a3; /* is_normalized */
};

/* Struct for type ARGUMENTS_32 */
struct S443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INTERNAL_ERROR */
struct S444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ST_WORD_WRAPPER */
struct S445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_EXTERNALS */
struct S447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_options */
	T0* a2; /* secondary_options */
	T0* a3; /* primary_multivalue_options */
};

/* Struct for type ET_XACE_TARGET */
struct S449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* options */
	T0* a3; /* clusters */
	T0* a4; /* root_class_name */
	T0* a5; /* creation_procedure_name */
	T0* a6; /* libraries */
};

/* Struct for type ET_XACE_TARGETS */
struct S452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
	T6 a2; /* root_count */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
};

/* Struct for type ET_XACE_CLUSTER */
struct S458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_abstract */
	T0* a4; /* options */
	T0* a5; /* subclusters */
	T0* a6; /* libraries */
	T1 a7; /* is_relative */
	T0* a8; /* universe */
	T0* a9; /* library_prefix */
	T0* a10; /* cluster_prefix */
	T0* a11; /* class_options */
	T1 a12; /* is_recursive */
	T1 a13; /* is_read_only */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* scm_mapping_constraint_enabled */
	T0* a16; /* scm_read_mapping */
	T0* a17; /* scm_write_mapping */
	T1 a18; /* is_implicit */
	T1 a19; /* use_obsolete_syntax */
	T1 a20; /* is_override */
	T0* a21; /* parent */
	T1 a22; /* is_preparsed */
	T0* a23; /* provider_constraint */
	T0* a24; /* dependant_constraint */
	T1 a25; /* is_mounted */
	T0* a26; /* cached_absolute_pathname */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
struct S459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_COUNTER */
struct S466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
struct S467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_COUNTER] */
struct S468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
struct S469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] ET_UNIVERSE] */
struct S470 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S472 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
struct S474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T0* a13; /* internal_cursor */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_DOTNET_ASSEMBLIES */
struct S475 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_DOTNET_ASSEMBLY */
struct S476 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* referenced_assemblies */
	T0* a3; /* current_system */
	T0* a4; /* dotnet_assembly */
	T0* a5; /* name */
	T0* a6; /* master_classes */
	T0* a7; /* master_class_mutex */
	T0* a8; /* any_type */
	T0* a9; /* detachable_any_type */
	T0* a10; /* detachable_separate_any_type */
	T0* a11; /* separate_any_type */
	T0* a12; /* any_parent */
	T0* a13; /* any_parents */
	T0* a14; /* any_clients */
	T0* a15; /* tuple_type */
	T0* a16; /* detachable_tuple_type */
	T0* a17; /* tuple_like_current_type */
	T0* a18; /* unfolded_empty_tuple_actual_parameters */
	T0* a19; /* array_any_type */
	T0* a20; /* array_detachable_any_type */
	T0* a21; /* array_none_type */
	T0* a22; /* array_like_current_type */
	T0* a23; /* boolean_type */
	T0* a24; /* character_type */
	T0* a25; /* character_8_type */
	T0* a26; /* character_8_convert_feature */
	T0* a27; /* character_32_type */
	T0* a28; /* character_32_convert_feature */
	T0* a29; /* double_type */
	T0* a30; /* exception_type */
	T0* a31; /* detachable_exception_type */
	T0* a32; /* exception_manager_type */
	T0* a33; /* function_type */
	T0* a34; /* immutable_string_32_type */
	T0* a35; /* integer_type */
	T0* a36; /* integer_8_type */
	T0* a37; /* integer_8_convert_feature */
	T0* a38; /* integer_16_type */
	T0* a39; /* integer_16_convert_feature */
	T0* a40; /* integer_32_type */
	T0* a41; /* integer_32_convert_feature */
	T0* a42; /* integer_64_type */
	T0* a43; /* integer_64_convert_feature */
	T0* a44; /* ise_exception_manager_type */
	T0* a45; /* iterable_detachable_any_type */
	T0* a46; /* natural_type */
	T0* a47; /* natural_8_type */
	T0* a48; /* natural_8_convert_feature */
	T0* a49; /* natural_16_type */
	T0* a50; /* natural_16_convert_feature */
	T0* a51; /* natural_32_type */
	T0* a52; /* natural_32_convert_feature */
	T0* a53; /* natural_64_type */
	T0* a54; /* natural_64_convert_feature */
	T0* a55; /* none_type */
	T0* a56; /* detachable_none_type */
	T0* a57; /* pointer_type */
	T0* a58; /* predicate_like_current_type */
	T0* a59; /* procedure_like_current_type */
	T0* a60; /* real_type */
	T0* a61; /* real_32_type */
	T0* a62; /* real_32_convert_feature */
	T0* a63; /* real_64_type */
	T0* a64; /* real_64_convert_feature */
	T0* a65; /* routine_type */
	T0* a66; /* special_any_type */
	T0* a67; /* special_detachable_any_type */
	T0* a68; /* string_type */
	T0* a69; /* detachable_string_type */
	T0* a70; /* string_8_type */
	T0* a71; /* string_8_convert_feature */
	T0* a72; /* string_32_type */
	T0* a73; /* string_32_convert_feature */
	T0* a74; /* system_object_type */
	T0* a75; /* system_object_parents */
	T0* a76; /* system_string_type */
	T0* a77; /* type_any_type */
	T0* a78; /* type_type_any_type */
	T0* a79; /* type_detachable_any_type */
	T0* a80; /* type_detachable_like_current_type */
	T0* a81; /* detachable_type_exception_type */
	T0* a82; /* type_detachable_exception_type */
	T0* a83; /* detachable_type_detachable_any_type */
	T0* a84; /* type_like_current_type */
	T0* a85; /* typed_pointer_any_type */
	T0* a86; /* typed_pointer_like_current_type */
	T0* a87; /* wide_character_type */
	T1 a88; /* is_read_only */
	T1 a89; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
struct S477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
struct S479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
struct S480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
struct S481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
struct S482 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
struct S483 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
struct S484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
struct S485 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_LIBRARY */
struct S486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_system */
	T0* a2; /* library */
	T0* a3; /* name */
	T0* a4; /* libraries */
	T0* a5; /* clusters */
	T0* a6; /* dotnet_assemblies */
	T0* a7; /* master_classes */
	T0* a8; /* master_class_mutex */
	T0* a9; /* any_type */
	T0* a10; /* detachable_any_type */
	T0* a11; /* detachable_separate_any_type */
	T0* a12; /* separate_any_type */
	T0* a13; /* any_parent */
	T0* a14; /* any_parents */
	T0* a15; /* any_clients */
	T0* a16; /* tuple_type */
	T0* a17; /* detachable_tuple_type */
	T0* a18; /* tuple_like_current_type */
	T0* a19; /* unfolded_empty_tuple_actual_parameters */
	T0* a20; /* array_any_type */
	T0* a21; /* array_detachable_any_type */
	T0* a22; /* array_none_type */
	T0* a23; /* array_like_current_type */
	T0* a24; /* boolean_type */
	T0* a25; /* character_type */
	T0* a26; /* character_8_type */
	T0* a27; /* character_8_convert_feature */
	T0* a28; /* character_32_type */
	T0* a29; /* character_32_convert_feature */
	T0* a30; /* double_type */
	T0* a31; /* exception_type */
	T0* a32; /* detachable_exception_type */
	T0* a33; /* exception_manager_type */
	T0* a34; /* function_type */
	T0* a35; /* immutable_string_32_type */
	T0* a36; /* integer_type */
	T0* a37; /* integer_8_type */
	T0* a38; /* integer_8_convert_feature */
	T0* a39; /* integer_16_type */
	T0* a40; /* integer_16_convert_feature */
	T0* a41; /* integer_32_type */
	T0* a42; /* integer_32_convert_feature */
	T0* a43; /* integer_64_type */
	T0* a44; /* integer_64_convert_feature */
	T0* a45; /* ise_exception_manager_type */
	T0* a46; /* iterable_detachable_any_type */
	T0* a47; /* natural_type */
	T0* a48; /* natural_8_type */
	T0* a49; /* natural_8_convert_feature */
	T0* a50; /* natural_16_type */
	T0* a51; /* natural_16_convert_feature */
	T0* a52; /* natural_32_type */
	T0* a53; /* natural_32_convert_feature */
	T0* a54; /* natural_64_type */
	T0* a55; /* natural_64_convert_feature */
	T0* a56; /* none_type */
	T0* a57; /* detachable_none_type */
	T0* a58; /* pointer_type */
	T0* a59; /* predicate_like_current_type */
	T0* a60; /* procedure_like_current_type */
	T0* a61; /* real_type */
	T0* a62; /* real_32_type */
	T0* a63; /* real_32_convert_feature */
	T0* a64; /* real_64_type */
	T0* a65; /* real_64_convert_feature */
	T0* a66; /* routine_type */
	T0* a67; /* special_any_type */
	T0* a68; /* special_detachable_any_type */
	T0* a69; /* string_type */
	T0* a70; /* detachable_string_type */
	T0* a71; /* string_8_type */
	T0* a72; /* string_8_convert_feature */
	T0* a73; /* string_32_type */
	T0* a74; /* string_32_convert_feature */
	T0* a75; /* system_object_type */
	T0* a76; /* system_object_parents */
	T0* a77; /* system_string_type */
	T0* a78; /* type_any_type */
	T0* a79; /* type_type_any_type */
	T0* a80; /* type_detachable_any_type */
	T0* a81; /* type_detachable_like_current_type */
	T0* a82; /* detachable_type_exception_type */
	T0* a83; /* type_detachable_exception_type */
	T0* a84; /* detachable_type_detachable_any_type */
	T0* a85; /* type_like_current_type */
	T0* a86; /* typed_pointer_any_type */
	T0* a87; /* typed_pointer_like_current_type */
	T0* a88; /* wide_character_type */
	T1 a89; /* is_read_only */
	T1 a90; /* is_preparsed */
};

/* Struct for type [attached] TUPLE [[attached] ET_LIBRARY] */
struct S487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
struct S488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* targets */
	T0* a2; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* selected_target */
	T0* a5; /* options */
	T0* a6; /* clusters */
	T0* a7; /* libraries */
};

/* Struct for type [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
struct S493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
struct S494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_CLUSTERS] */
struct S495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_MASTER_CLASS */
struct S496 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* mapped_class */
	T0* a3; /* first_overriding_class */
	T0* a4; /* intrinsic_class */
	T0* a5; /* universe */
	T0* a6; /* other_local_override_classes */
	T0* a7; /* other_local_non_override_classes */
	T0* a8; /* other_local_ignored_classes */
	T0* a9; /* other_local_hidden_classes */
	T0* a10; /* other_imported_classes */
	T0* a11; /* other_overriding_classes */
	T0* a12; /* status_mutex */
	T0* a13; /* processing_mutex */
	T1 a14; /* unprotected_is_marked */
	T1 a15; /* is_modified */
	T0* a16; /* first_imported_class */
	T0* a17; /* first_local_ignored_class */
	T0* a18; /* first_local_override_class */
	T0* a19; /* first_local_non_override_class */
	T0* a20; /* first_local_hidden_class */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
struct S497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [[attached] ET_CLUSTER] */
struct S498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
struct S499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM] */
struct S500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
struct S501 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* clashes_previous_position */
	T0* a9; /* special_item_routines */
	T0* a10; /* item_storage */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T0* a14; /* internal_cursor */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] TUPLE [ET_AST_PROCESSOR] */
struct S502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] ET_MASTER_CLASS] */
struct S503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
struct S506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S507 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S509 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* qualified_anchored_type_checker */
	T0* a2; /* class_type_checker */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_class */
	T0* a2; /* system_processor */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
struct S511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
struct S513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
struct S514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
struct S515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
struct S516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [BOOLEAN] */
struct S517 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 z1;
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S518 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT */
struct S520 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* renames */
	T0* a3; /* exports */
	T0* a4; /* undefines */
	T0* a5; /* redefines */
	T0* a6; /* selects */
	T0* a7; /* end_keyword */
};

/* Struct for type ET_PARENT_LIST */
struct S521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* clients_clause */
	T0* a3; /* storage */
	T0* a4; /* inherit_keyword */
};

/* Struct for type ET_CLIENT_LIST */
struct S522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
struct S524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
struct S527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
struct S531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
struct S532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
struct S533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_CLIENT */
struct S534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* named_base_class */
};

/* Struct for type ET_ATTACHMENT_SEPARATE_KEYWORDS */
struct S535 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_keyword */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S537 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_NONE_GROUP */
struct S541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* universe */
	T0* a2; /* name */
	T1 a3; /* use_obsolete_syntax */
	T0* a4; /* cached_absolute_pathname */
};

/* Struct for type ET_LIKE_CURRENT */
struct S542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
struct S543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tuple_type */
};

/* Struct for type [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
struct S545 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* hash_agent */
};

/* Struct for type [attached] TUPLE [[attached] STRING_8] */
struct S546 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
struct S547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES] */
struct S548 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_ECF_SETTINGS */
struct S550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_settings */
	T0* a2; /* secondary_settings */
};

/* Struct for type ET_ECF_OPTIONS */
struct S551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* primary_assertions */
	T0* a2; /* primary_debugs */
	T0* a3; /* primary_warnings */
	T0* a4; /* primary_options */
	T0* a5; /* description */
	T0* a6; /* secondary_options */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
struct S552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_NAMESPACE */
struct S553 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
struct S554 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* open_operand_type_sets */
	T0* a12; /* alive_conforming_descendants */
	T0* a13; /* next_type */
	T0* a14; /* query_calls */
	T1 a15; /* has_reference_attributes */
	T1 a16; /* has_generic_expanded_attributes */
	T0* a17; /* conforming_ancestors */
	T0* a18; /* conforming_descendants */
	T1 a19; /* has_static */
	T0* a20; /* procedure_calls */
	T0* a21; /* equality_expressions */
	T0* a22; /* object_equality_expressions */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* base_class */
	T0* a3; /* base_type */
	T1 a4; /* is_alive */
	T6 a5; /* attribute_count */
	T0* a6; /* queries */
	T0* a7; /* meta_type */
	T6 a8; /* hash_code */
	T0* a9; /* procedures */
	T0* a10; /* set_rout_disp_final_feature */
	T0* a11; /* result_type_set */
	T0* a12; /* open_operand_type_sets */
	T0* a13; /* alive_conforming_descendants */
	T0* a14; /* next_type */
	T0* a15; /* query_calls */
	T1 a16; /* has_reference_attributes */
	T1 a17; /* has_generic_expanded_attributes */
	T0* a18; /* conforming_ancestors */
	T0* a19; /* conforming_descendants */
	T1 a20; /* has_static */
	T0* a21; /* procedure_calls */
	T0* a22; /* equality_expressions */
	T0* a23; /* object_equality_expressions */
};

/* Struct for type ET_DO_PROCEDURE */
struct S557 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* first_seed */
	T0* a3; /* arguments */
	T0* a4; /* implementation_feature */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* compound */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* postconditions */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* locals */
	T0* a19; /* rescue_clause */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type UT_CONFIG_PARSER */
struct S559 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T0* a7; /* last_string_value */
	T6 a8; /* line_nb */
	T0* a9; /* yyss */
	T0* a10; /* input_buffer */
	T6 a11; /* yy_end */
	T6 a12; /* yy_position */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_parsing_status */
	T6 a16; /* yy_suspended_yystacksize */
	T6 a17; /* yy_suspended_yystate */
	T6 a18; /* yy_suspended_yyn */
	T6 a19; /* yy_suspended_yychar1 */
	T6 a20; /* yy_suspended_index */
	T6 a21; /* yy_suspended_yyss_top */
	T6 a22; /* yy_suspended_yy_goto */
	T0* a23; /* yyr1 */
	T6 a24; /* yyssp */
	T0* a25; /* yypgoto */
	T0* a26; /* yycheck */
	T0* a27; /* yytable */
	T0* a28; /* yydefgoto */
	T6 a29; /* error_count */
	T1 a30; /* yy_lookahead_needed */
	T6 a31; /* yyerrstatus */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yydefact */
	T0* a36; /* yy_pushed_start_conditions */
	T0* a37; /* yyspecial_routines1 */
	T6 a38; /* yyvsc1 */
	T0* a39; /* yyvs1 */
	T0* a40; /* yyspecial_routines2 */
	T6 a41; /* yyvsc2 */
	T0* a42; /* yyvs2 */
	T0* a43; /* yyspecial_routines3 */
	T6 a44; /* yyvsc3 */
	T0* a45; /* yyvs3 */
	T0* a46; /* yytypes1 */
	T0* a47; /* yytypes2 */
	T6 a48; /* yy_start */
	T6 a49; /* yyvsp1 */
	T6 a50; /* yyvsp2 */
	T6 a51; /* yyvsp3 */
	T1 a52; /* yy_more_flag */
	T6 a53; /* yy_more_len */
	T6 a54; /* line */
	T6 a55; /* column */
	T6 a56; /* position */
	T6 a57; /* yy_start_state */
	T0* a58; /* yy_state_stack */
	T6 a59; /* yy_state_count */
	T0* a60; /* yy_content_area */
	T0* a61; /* yy_ec */
	T0* a62; /* yy_content */
	T0* a63; /* yy_accept */
	T6 a64; /* yy_last_accepting_state */
	T6 a65; /* yy_last_accepting_cpos */
	T0* a66; /* yy_chk */
	T0* a67; /* yy_base */
	T0* a68; /* yy_def */
	T0* a69; /* yy_meta */
	T0* a70; /* yy_nxt */
	T6 a71; /* yy_lp */
	T0* a72; /* yy_acclist */
	T6 a73; /* yy_looking_for_trail_begin */
	T6 a74; /* yy_full_match */
	T6 a75; /* yy_full_state */
	T6 a76; /* yy_full_lp */
	T1 a77; /* yy_rejected */
	T0* a78; /* last_detachable_any_value */
	T6 a79; /* if_level */
	T6 a80; /* ignored_level */
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
struct S560 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T6 a3; /* count */
	T0* a4; /* targets */
	T0* a5; /* dynamic_types */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T6 a3; /* first_seed */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T0* a6; /* deferred_keyword */
	T6 a7; /* hash_code */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T1 a10; /* validity_checked */
	T1 a11; /* has_validity_error */
	T0* a12; /* preconditions */
	T0* a13; /* first_precursor */
	T0* a14; /* other_precursors */
	T0* a15; /* postconditions */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* is_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* synonym */
};

/* Struct for type [attached] CELL [[attached] INTEGER_32] */
struct S566 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
};

/* Struct for type KL_PATHNAME */
struct S568 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* drive */
	T0* a3; /* hostname */
	T0* a4; /* sharename */
	T1 a5; /* is_relative */
	T0* a6; /* components */
};

/* Struct for type READABLE_STRING_32 */
struct S570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_8] */
struct S571 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T8 z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
struct S573 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] AP_OPTION] */
struct S575 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
struct S576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
struct S579 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
struct S580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_LINKABLE [[attached] STRING_8] */
struct S581 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type detachable DS_LINKABLE [[attached] BOOLEAN] */
struct S582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
struct S583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] INTEGER_32] */
struct S584 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
struct S585 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S586 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* element_local_part */
	T0* a3; /* element_prefix */
	T0* a4; /* context */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
struct S587 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
struct S588 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S589 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
struct S590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
struct S596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
struct S597 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
struct S598 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S599 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_content_area */
	T0* a23; /* yy_ec */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* yy_pushed_start_conditions */
	T0* a41; /* last_string_value */
	T0* a42; /* last_error */
	T6 a43; /* pushed_start_condition_count */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* row */
	T6 a2; /* column */
	T0* a3; /* source_name */
	T6 a4; /* byte_index */
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
struct S602 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
struct S603 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S604 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* equality_tester */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S606 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S608 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
struct S609 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
struct S611 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S612 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
struct S613 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* found_position */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* internal_cursor */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
struct S614 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
struct S615 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S616 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
struct S617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
struct S623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* default_value */
	T2 a3; /* type */
	T1 a4; /* is_list_type */
	T0* a5; /* enumeration_list */
	T2 a6; /* value */
};

/* Struct for type [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] STRING_8] */
struct S628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* equality_tester */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
struct S629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
struct S630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
struct S631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* encoding */
	T0* a2; /* version */
	T1 a3; /* stand_alone */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
struct S633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T0* a35; /* yy_nxt */
	T0* a36; /* yy_chk */
	T0* a37; /* yy_base */
	T0* a38; /* yy_def */
	T0* a39; /* yy_ec */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_accept */
	T0* a42; /* yy_content */
	T0* a43; /* yy_content_area */
	T6 a44; /* last_token */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_content_area */
	T0* a25; /* yy_ec */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* yy_pushed_start_conditions */
	T0* a43; /* last_string_value */
	T0* a44; /* last_error */
	T6 a45; /* pushed_start_condition_count */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S639 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* yy_pushed_start_conditions */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_value */
	T0* a11; /* last_string_value */
	T0* a12; /* last_error */
	T1 a13; /* yy_rejected */
	T6 a14; /* yy_state_count */
	T6 a15; /* yy_full_match */
	T6 a16; /* yy_lp */
	T6 a17; /* yy_looking_for_trail_begin */
	T6 a18; /* yy_full_lp */
	T6 a19; /* yy_full_state */
	T6 a20; /* pushed_start_condition_count */
	T6 a21; /* yy_start_state */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_position */
	T6 a25; /* yy_start */
	T6 a26; /* yy_end */
	T6 a27; /* line */
	T6 a28; /* column */
	T6 a29; /* position */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T0* a34; /* yy_state_stack */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a38; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a40; /* yy_def */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_meta */
	T0* a43; /* yy_accept */
	T0* a44; /* yy_content */
	T0* a45; /* yy_content_area */
	T6 a46; /* last_token */
	T0* a47; /* input_filter */
	T0* a48; /* input_stream */
	T0* a49; /* input_resolver */
	T0* a50; /* yy_acclist */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
struct S640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
struct S641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
struct S642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
struct S643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
struct S646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S647 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
struct S650 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
struct S651 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLUSTERS */
struct S652 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
struct S653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
struct S654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* special_item_routines */
	T0* a7; /* item_storage */
	T0* a8; /* clashes */
	T0* a9; /* slots */
	T6 a10; /* found_position */
	T0* a11; /* internal_cursor */
	T6 a12; /* slots_position */
	T6 a13; /* count */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
struct S655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S656 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
struct S658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
struct S659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
struct S660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_TARGET] */
struct S661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
struct S663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
struct S666 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
struct S667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S668 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
struct S669 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T0* a2; /* content */
	T0* a3; /* keys */
	T0* a4; /* deleted_marks */
	T0* a5; /* indexes_map */
	T6 a6; /* iteration_position */
	T6 a7; /* count */
	T6 a8; /* deleted_item_position */
	T6 a9; /* control */
	T0* a10; /* found_item */
	T1 a11; /* has_default */
	T6 a12; /* item_position */
	T6 a13; /* ht_lowest_deleted_position */
	T0* a14; /* ht_deleted_item */
	T0* a15; /* ht_deleted_key */
	T1 a16; /* object_comparison */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
struct S671 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
struct S672 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
struct S674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
struct S677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
struct S678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
struct S679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
struct S680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLASS_NAME] */
struct S681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
struct S682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
struct S683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
struct S684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
struct S694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type C_DATE */
struct S695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* millisecond_now */
	T0* a2; /* internal_item */
	T1 a3; /* is_utc */
};

/* Struct for type KL_STDIN_FILE */
struct S696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_file */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* character_buffer */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
struct S698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
struct S700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
struct S701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
struct S702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
struct S703 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
struct S704 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
struct S705 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
struct S706 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
struct S707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
struct S708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
struct S709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
struct S710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD] */
struct S711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
struct S712 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S713 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
struct S714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
struct S715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
struct S717 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
struct S718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_SYMBOL] */
struct S719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
struct S720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_POSITION] */
struct S721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
struct S722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
struct S724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
struct S725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BREAK] */
struct S727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
struct S728 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
struct S730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
struct S731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CURRENT] */
struct S732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
struct S733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FREE_OPERATOR */
struct S734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* operator_name */
	T6 a5; /* seed */
};

/* Struct for type [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
struct S735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
struct S736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
struct S738 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
struct S739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
struct S741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
struct S742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
struct S743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
struct S744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
struct S746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
struct S747 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RESULT] */
struct S748 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
struct S749 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S750 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
struct S751 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
struct S752 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S753 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
struct S754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
struct S755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VOID */
struct S756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type [attached] SPECIAL [detachable ET_VOID] */
struct S757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
struct S758 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
struct S760 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
struct S761 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
struct S762 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
struct S763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
struct S765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
struct S766 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_EXPRESSION */
struct S767 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cursor_name */
	T0* a3; /* across_keyword */
	T0* a4; /* iterable_expression */
	T0* a5; /* as_keyword */
	T0* a6; /* until_conditional */
	T0* a7; /* iteration_conditional */
	T0* a8; /* end_keyword */
	T1 a9; /* is_all */
	T0* a10; /* invariant_part */
	T0* a11; /* variant_part */
	T0* a12; /* new_cursor_expression */
	T0* a13; /* cursor_after_expression */
	T0* a14; /* cursor_forth_instruction */
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
struct S768 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
struct S769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ACROSS_INSTRUCTION */
struct S770 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cursor_name */
	T0* a2; /* across_keyword */
	T0* a3; /* iterable_expression */
	T0* a4; /* as_keyword */
	T0* a5; /* from_compound */
	T0* a6; /* until_conditional */
	T0* a7; /* loop_compound */
	T0* a8; /* end_keyword */
	T0* a9; /* invariant_part */
	T0* a10; /* variant_part */
	T0* a11; /* new_cursor_expression */
	T0* a12; /* cursor_after_expression */
	T0* a13; /* cursor_forth_instruction */
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
struct S771 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S772 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
struct S773 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S774 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
struct S775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S776 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
struct S777 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S778 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S780 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S781 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S782 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S783 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
struct S784 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_AGENT_TARGET] */
struct S785 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
struct S786 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ALIAS_NAME */
struct S787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type [attached] SPECIAL [detachable ET_ALIAS_NAME] */
struct S788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
struct S789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ASSIGNER] */
struct S791 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
struct S792 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S793 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* target */
	T0* a3; /* name */
	T0* a4; /* arguments */
};

/* Struct for type [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
struct S794 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
struct S795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CALL_AGENT */
struct S796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T0* a6; /* implicit_result */
};

/* Struct for type [attached] SPECIAL [detachable ET_CALL_AGENT] */
struct S797 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S798 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S799 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
struct S800 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* then_compound */
};

/* Struct for type [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
struct S802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
struct S803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE] */
struct S805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
struct S806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
struct S808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
struct S809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
struct S811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
struct S812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CHOICE_LIST */
struct S813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_CHOICE_LIST] */
struct S814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
struct S815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CLASS] */
struct S816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
struct S817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
struct S818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
struct S819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CLIENTS */
struct S820 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_CLIENTS] */
struct S821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
struct S822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_COMPOUND] */
struct S823 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
struct S824 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONDITIONAL] */
struct S826 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
struct S827 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTANT] */
struct S828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S829 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S832 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
struct S835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
struct S837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
struct S838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
struct S840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
struct S841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
struct S843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
struct S844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
struct S846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
struct S847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
struct S849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
struct S850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
struct S851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
struct S852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATION_REGION */
struct S853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATION_REGION] */
struct S854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
struct S855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR */
struct S856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATOR] */
struct S857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
struct S858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_CREATOR_LIST */
struct S859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_CREATOR_LIST] */
struct S860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
struct S861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
struct S863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
struct S864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION */
struct S865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_keyword */
	T0* a3; /* then_expression */
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
struct S866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_EXPRESSION_LIST */
struct S868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
struct S869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
struct S870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART */
struct S871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_PART] */
struct S872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
struct S873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
struct S875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
struct S876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPORT] */
struct S878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
struct S879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPORT_LIST] */
struct S880 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
struct S881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPRESSION] */
struct S882 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
struct S883 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
struct S884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
struct S885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
struct S886 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
struct S887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
struct S889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
struct S890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S891 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
struct S892 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
struct S893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
struct S895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
struct S896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
struct S898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
struct S899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_NAME] */
struct S900 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
struct S901 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
struct S903 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
struct S904 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
struct S905 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
struct S908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
struct S910 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
struct S911 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S912 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* implementation_class */
	T0* a4; /* type_mark */
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
struct S913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
struct S916 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
struct S917 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
struct S918 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
struct S919 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_EXPRESSION */
struct S920 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* conditional */
	T0* a3; /* then_keyword */
	T0* a4; /* then_expression */
	T0* a5; /* else_keyword */
	T0* a6; /* else_expression */
	T0* a7; /* end_keyword */
	T0* a8; /* elseif_parts */
};

/* Struct for type [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
struct S921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
struct S922 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_IF_INSTRUCTION */
struct S923 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
struct S924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
struct S925 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INDEXING_LIST */
struct S926 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* indexing_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_LIST] */
struct S927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
struct S928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
struct S930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
struct S931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM] */
struct S933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
struct S934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
struct S936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
struct S937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INDEXING_TERM_LIST */
struct S938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
struct S939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
struct S940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INLINE_AGENT] */
struct S942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
struct S943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
struct S945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
struct S946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_INSTRUCTION] */
struct S948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
struct S949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_INVARIANTS */
struct S950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T0* a5; /* object_tests */
	T0* a6; /* across_components */
	T1 a7; /* validity_checked */
	T1 a8; /* has_validity_error */
};

/* Struct for type [attached] SPECIAL [detachable ET_INVARIANTS] */
struct S951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
struct S953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
struct S954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LIKE_TYPE] */
struct S956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
struct S957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
struct S959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
struct S962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
struct S963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
struct S964 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
struct S965 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S966 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
struct S967 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
struct S968 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T0* a6; /* cast_type */
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
struct S970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
struct S971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
struct S973 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
struct S974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
struct S976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
struct S977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
struct S978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
struct S979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_OBSOLETE] */
struct S981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
struct S984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
struct S985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT] */
struct S986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
struct S987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENT_CLAUSE_LIST */
struct S988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
struct S989 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
struct S990 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_ITEM] */
struct S991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
struct S992 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PARENT_LIST] */
struct S993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
struct S994 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_POSTCONDITIONS */
struct S995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* validity_checked */
	T1 a2; /* has_validity_error */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* ensure_keyword */
	T0* a6; /* then_keyword */
};

/* Struct for type [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
struct S996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
struct S997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PRECONDITIONS] */
struct S998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
struct S999 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_PROCEDURE] */
struct S1000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
struct S1003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
struct S1004 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_QUERY] */
struct S1005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
struct S1006 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RENAME_ITEM] */
struct S1008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
struct S1009 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_RENAME_LIST] */
struct S1010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S1012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* static_type */
	T0* a3; /* feature_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* arguments */
	T0* a6; /* parenthesis_call */
};

/* Struct for type [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
struct S1013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
struct S1014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S1015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
struct S1016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
struct S1017 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
struct S1018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_TYPE_ITEM] */
struct S1020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
struct S1021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_TYPE_LIST] */
struct S1023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
struct S1024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_VARIANT */
struct S1025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type [attached] SPECIAL [detachable ET_VARIANT] */
struct S1026 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
struct S1027 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART */
struct S1028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type [attached] SPECIAL [detachable ET_WHEN_PART] */
struct S1029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
struct S1030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S1031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
struct S1032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
struct S1033 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_WRITABLE] */
struct S1034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
struct S1035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1036 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* current_formal */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1039 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T6 a4; /* position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1040 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1042 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* count */
	T6 a9; /* free_slot */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1043 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
struct S1045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* count */
	T0* a17; /* internal_keys */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1047 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* rename_table */
	T0* a3; /* export_table */
	T0* a4; /* undefine_table */
	T0* a5; /* redefine_table */
	T0* a6; /* select_table */
	T0* a7; /* alias_mapping */
	T0* a8; /* replicable_features */
	T0* a9; /* current_class */
	T0* a10; /* system_processor */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1048 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* dotnet_features */
	T0* a3; /* other_dotnet_features */
	T0* a4; /* current_class */
	T0* a5; /* system_processor */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1049 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
	T0* a4; /* current_feature */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
struct S1050 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1051 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1052 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* parent_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T6 a5; /* processing_mode */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1053 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1054 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* constraint_context */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_BUILTIN_FEATURE_CHECKER */
struct S1055 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* builtin_features */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1056 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_feature */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1057 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T6 a8; /* free_slot */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_keys */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_CLASS] */
struct S1058 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T6 a5; /* capacity */
	T6 a6; /* modulus */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* special_item_routines */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1059 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
struct S1060 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_class */
	T0* a4; /* system_processor */
	T1 a5; /* in_qualified_anchored_type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
struct S1061 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* constraint_context */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1063 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1064 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
struct S1065 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_QUERY] */
struct S1066 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1067 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* supplier_classes */
	T0* a2; /* current_class */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
struct S1068 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
struct S1069 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S1071 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S1072 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* ise_reported */
	T1 a2; /* ge_reported */
	T0* a3; /* default_template */
	T0* a4; /* parameters */
	T0* a5; /* current_class */
	T0* a6; /* class_impl */
	T0* a7; /* position */
	T0* a8; /* code */
	T0* a9; /* etl_code */
	T1 a10; /* ise_fatal */
	T1 a11; /* ge_fatal */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
struct S1074 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
struct S1075 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
struct S1076 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
struct S1077 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
struct S1079 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1080 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1081 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
struct S1082 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S1083 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
struct S1085 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
struct S1086 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
struct S1087 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1088 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1089 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
struct S1090 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
struct S1091 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
struct S1092 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
struct S1093 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_AGENT] */
struct S1094 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
struct S1095 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
struct S1096 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
struct S1098 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1099 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1100 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
struct S1101 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
struct S1103 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FEATURE] */
struct S1104 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
struct S1105 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
struct S1106 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
struct S1108 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
struct S1109 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
struct S1111 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
struct S1112 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
struct S1114 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
struct S1115 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
struct S1116 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
struct S1117 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type RX_BYTE_CODE */
struct S1121 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CHARACTER_SET */
struct S1122 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* set */
};

/* Struct for type RX_CASE_MAPPING */
struct S1123 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type [attached] ARRAY [[attached] RX_CHARACTER_SET] */
struct S1125 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
struct S1126 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1128 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] ARRAY [[attached] BOOLEAN] */
struct S1129 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
struct S1132 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
struct S1134 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1135 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1136 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
struct S1137 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1138 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1139 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
struct S1140 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1141 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
struct S1142 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1143 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
struct S1144 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1145 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1146 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
struct S1147 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
struct S1148 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NAMED_OBJECT_TEST */
struct S1151 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* as_keyword */
	T0* a4; /* expression */
	T0* a5; /* attached_keyword */
	T0* a6; /* declared_type */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
struct S1152 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
struct S1153 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
struct S1154 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* special_routines */
	T0* a3; /* storage */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
struct S1155 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
struct S1158 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
struct S1159 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
struct S1160 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
struct S1162 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
struct S1163 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
struct S1164 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
struct S1165 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
struct S1166 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ASSERTIONS] */
struct S1167 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
struct S1169 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S1170 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S1171 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1173 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S1174 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S1175 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S1177 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S1178 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S1179 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S1180 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S1181 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S1182 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S1183 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S1184 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TRISTATE */
struct S1187 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* value */
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ANY] */
struct S1188 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [UT_TRISTATE] */
struct S1189 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
struct S1190 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
struct S1191 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE] */
struct S1192 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1194 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
struct S1195 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
struct S1196 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type ET_ECF_NOTE_ELEMENT */
struct S1197 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* attributes */
	T0* a3; /* elements */
	T0* a4; /* content */
};

/* Struct for type ET_ECF_CLUSTERS */
struct S1198 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clusters */
};

/* Struct for type ET_ECF_ADAPTED_LIBRARIES */
struct S1199 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* libraries */
};

/* Struct for type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
struct S1200 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* dotnet_assemblies */
};

/* Struct for type ET_ECF_FILE_RULES */
struct S1201 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* file_rules */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAGS */
struct S1202 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDES */
struct S1203 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARIES */
struct S1204 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAGS */
struct S1205 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_MAKES */
struct S1206 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECTS */
struct S1207 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCES */
struct S1208 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* external_values */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
struct S1209 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
struct S1210 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_id */
	T0* a2; /* filename_id */
	T0* a3; /* universe */
	T0* a4; /* target */
	T0* a5; /* description */
	T0* a6; /* eifgens_location */
	T0* a7; /* classname_prefix */
	T1 a8; /* is_read_only */
	T1 a9; /* use_application_options */
	T0* a10; /* options */
	T0* a11; /* class_options */
	T0* a12; /* class_renamings */
	T0* a13; /* visible_classes */
	T0* a14; /* conditions */
	T0* a15; /* name */
	T0* a16; /* library */
};

/* Struct for type ET_ECF_VERSION */
struct S1212 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_release */
	T6 a4; /* internal_build */
	T0* a5; /* product */
	T0* a6; /* company */
	T0* a7; /* copyright */
};

/* Struct for type ET_ECF_CLUSTER */
struct S1213 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* target */
	T0* a6; /* description */
	T1 a7; /* is_hidden */
	T0* a8; /* classname_prefix */
	T1 a9; /* is_read_only */
	T1 a10; /* is_recursive */
	T0* a11; /* conditioned_subclusters */
	T0* a12; /* conditioned_file_rules */
	T0* a13; /* options */
	T0* a14; /* class_options */
	T0* a15; /* class_renamings */
	T0* a16; /* class_mappings */
	T0* a17; /* visible_classes */
	T0* a18; /* provider_groups */
	T0* a19; /* conditions */
	T0* a20; /* notes */
	T1 a21; /* is_override */
	T0* a22; /* overridden_group */
	T1 a23; /* overridden_constraint_enabled */
	T1 a24; /* scm_mapping_constraint_enabled */
	T0* a25; /* subclusters */
	T1 a26; /* use_obsolete_syntax */
	T0* a27; /* scm_read_mapping */
	T0* a28; /* scm_write_mapping */
	T1 a29; /* is_implicit */
	T0* a30; /* parent */
	T1 a31; /* is_preparsed */
	T1 a32; /* is_abstract */
	T0* a33; /* file_rules */
	T0* a34; /* provider_constraint */
	T0* a35; /* dependant_constraint */
	T0* a36; /* cached_absolute_pathname */
};

/* Struct for type ET_ECF_EXTERNAL_CFLAG */
struct S1214 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_INCLUDE */
struct S1215 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LIBRARY */
struct S1216 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_LINKER_FLAG */
struct S1217 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* flag */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_MAKE */
struct S1218 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_OBJECT */
struct S1219 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_EXTERNAL_RESOURCE */
struct S1220 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pathname */
	T0* a2; /* description */
	T0* a3; /* conditions */
};

/* Struct for type ET_ECF_FILE_RULE */
struct S1221 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* exclude */
	T0* a2; /* include */
	T0* a3; /* exclude_regexp */
	T0* a4; /* include_regexp */
	T0* a5; /* conditions */
	T0* a6; /* description */
};

/* Struct for type ET_ECF_ACTION */
struct S1222 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* command_name */
	T0* a2; /* description */
	T1 a3; /* must_succeed */
	T0* a4; /* working_directory */
	T0* a5; /* conditions */
};

/* Struct for type detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S1223 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* last_position */
	T6 a4; /* position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1224 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
struct S1225 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
struct S1226 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
struct S1227 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_ECF_ROOT_CLASS */
struct S1228 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* creation_procedure_name */
	T0* a3; /* cluster_name */
};

/* Struct for type ET_ECF_ROOT_ALL_CLASSES */
struct S1229 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_ECF_ORED_CONDITIONS */
struct S1230 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_ANDED_CONDITIONS */
struct S1231 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* conditions */
};

/* Struct for type ET_ECF_VISIBLE_CLASS */
struct S1232 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_name */
	T0* a2; /* feature_name */
	T0* a3; /* new_class_name */
	T0* a4; /* new_feature_name */
};

/* Struct for type ET_ECF_BUILD_CONDITION */
struct S1234 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CONCURRENCY_CONDITION */
struct S1235 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_CUSTOM_CONDITION */
struct S1236 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* value */
	T0* a3; /* match */
	T1 a4; /* is_excluded */
};

/* Struct for type ET_ECF_DOTNET_CONDITION */
struct S1237 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
struct S1238 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* value */
};

/* Struct for type ET_ECF_PLATFORM_CONDITION */
struct S1239 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T1 a2; /* is_excluded */
};

/* Struct for type ET_ECF_COMPILER_VERSION_CONDITION */
struct S1241 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type ET_ECF_MSIL_CLR_VERSION_CONDITION */
struct S1242 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* min_value */
	T0* a2; /* max_value */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM] */
struct S1244 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM] */
struct S1245 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_PARENTHESIS_EXPRESSION */
struct S1246 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S1250 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S1251 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_string */
	T2 a5; /* code */
};

/* Struct for type EXCEPTIONS */
struct S1254 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
struct S1255 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
struct S1257 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1261 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1262 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
struct S1263 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S1264 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type UC_UTF8_STRING */
struct S1265 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T6 a7; /* internal_case_insensitive_hash_code */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S1266 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
struct S1270 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S1271 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T0* a5; /* hash_function */
	T6 a6; /* position */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
struct S1272 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
struct S1274 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S1276 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
struct S1277 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1278 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* current_cluster */
	T0* a2; /* pathname_buffer */
	T0* a3; /* group_names */
	T0* a4; /* group_pathnames */
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1279 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* last_string */
	T0* a4; /* string */
	T6 a5; /* location */
};

/* Struct for type ET_TEXT_GROUP */
struct S1280 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_OBJECT_TEST_LIST */
struct S1283 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_ACROSS_COMPONENT_LIST */
struct S1284 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S1285 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* cast_type */
	T3 a3; /* value */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S1286 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* marker */
	T0* a7; /* open_white_characters */
	T0* a8; /* close_white_characters */
	T1 a9; /* is_left_aligned */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S1287 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* value */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* literal */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S1288 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S1289 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_OCTAL_INTEGER_CONSTANT */
struct S1290 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_BINARY_INTEGER_CONSTANT */
struct S1291 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* cast_type */
	T11 a4; /* value */
	T1 a5; /* has_overflow */
	T0* a6; /* literal */
	T6 a7; /* compressed_position */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S1292 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S1293 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* sign */
	T6 a2; /* index */
	T0* a3; /* literal */
	T0* a4; /* cast_type */
	T6 a5; /* compressed_position */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S1295 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S1296 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T2 a2; /* code */
	T6 a3; /* compressed_position */
	T0* a4; /* text */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S1297 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S1298 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T3 a2; /* value */
	T0* a3; /* cast_type */
	T6 a4; /* compressed_position */
	T0* a5; /* type */
};

/* Struct for type ET_TAGGED_INDEXING */
struct S1300 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* terms */
};

/* Struct for type ET_INDEXING */
struct S1301 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* terms */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S1302 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S1303 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T6 a5; /* index */
	T0* a6; /* name */
	T0* a7; /* implementation_class */
	T0* a8; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S1304 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
struct S1305 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* attachment_symbol */
	T0* a2; /* separateness_keyword */
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S1306 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1307 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type ET_RENAME */
struct S1308 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type ET_ALL_EXPORT */
struct S1309 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S1311 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S1312 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type ET_DO_FUNCTION */
struct S1314 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* declared_type */
	T0* a12; /* extended_name */
	T0* a13; /* frozen_keyword */
	T0* a14; /* obsolete_message */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* rescue_clause */
	T0* a18; /* clients */
	T0* a19; /* is_keyword */
	T0* a20; /* end_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* object_tests */
	T0* a25; /* across_components */
	T0* a26; /* other_seeds */
	T1 a27; /* validity_checked */
	T1 a28; /* has_validity_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S1315 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* declared_type */
	T0* a12; /* extended_name */
	T0* a13; /* frozen_keyword */
	T0* a14; /* keys */
	T0* a15; /* obsolete_message */
	T0* a16; /* locals */
	T0* a17; /* compound */
	T0* a18; /* rescue_clause */
	T0* a19; /* clients */
	T0* a20; /* is_keyword */
	T0* a21; /* end_keyword */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* first_indexing */
	T0* a25; /* object_tests */
	T0* a26; /* across_components */
	T0* a27; /* other_seeds */
	T1 a28; /* validity_checked */
	T1 a29; /* has_validity_error */
	T6 a30; /* id */
	T6 a31; /* version */
	T0* a32; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S1316 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* assigner */
	T0* a10; /* postconditions */
	T0* a11; /* declared_type */
	T0* a12; /* extended_name */
	T0* a13; /* frozen_keyword */
	T0* a14; /* obsolete_message */
	T0* a15; /* clients */
	T0* a16; /* is_keyword */
	T0* a17; /* deferred_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T1 a25; /* validity_checked */
	T1 a26; /* has_validity_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S1318 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T0* a10; /* compound */
	T0* a11; /* extended_name */
	T0* a12; /* frozen_keyword */
	T0* a13; /* obsolete_message */
	T0* a14; /* locals */
	T0* a15; /* rescue_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* object_tests */
	T0* a23; /* across_components */
	T0* a24; /* other_seeds */
	T0* a25; /* keys */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S1319 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_feature */
	T0* a2; /* implementation_class */
	T0* a3; /* first_precursor */
	T0* a4; /* other_precursors */
	T0* a5; /* preconditions */
	T6 a6; /* hash_code */
	T6 a7; /* first_seed */
	T0* a8; /* arguments */
	T0* a9; /* postconditions */
	T8 a10; /* builtin_class_code */
	T8 a11; /* builtin_feature_code */
	T0* a12; /* extended_name */
	T0* a13; /* frozen_keyword */
	T0* a14; /* language */
	T0* a15; /* obsolete_message */
	T0* a16; /* alias_clause */
	T0* a17; /* clients */
	T0* a18; /* is_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* object_tests */
	T0* a24; /* across_components */
	T0* a25; /* other_seeds */
	T1 a26; /* validity_checked */
	T1 a27; /* has_validity_error */
	T6 a28; /* id */
	T6 a29; /* version */
	T0* a30; /* synonym */
};

/* Struct for type ET_PREFIX_NAME */
struct S1320 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* prefix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S1321 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T6 a2; /* seed */
	T0* a3; /* operator_string */
	T0* a4; /* prefix_keyword */
	T2 a5; /* code */
};

/* Struct for type ET_INFIX_NAME */
struct S1322 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T2 a2; /* code */
	T0* a3; /* infix_keyword */
	T0* a4; /* operator_string */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S1323 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S1324 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* hash_code */
	T2 a2; /* code */
	T0* a3; /* alias_string */
	T0* a4; /* alias_keyword */
	T6 a5; /* seed */
};

/* Struct for type ET_CLASS_ASSERTION */
struct S1327 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* class_keyword */
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S1328 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S1330 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* name */
	T1 a5; /* is_procedure */
};

/* Struct for type ET_QUALIFIED_LIKE_BRACED_TYPE */
struct S1331 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* like_keyword */
	T0* a4; /* qualified_name */
	T0* a5; /* left_brace */
	T0* a6; /* right_brace */
};

/* Struct for type ET_QUALIFIED_LIKE_TYPE */
struct S1332 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type */
	T0* a2; /* type_mark */
	T0* a3; /* qualified_name */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S1333 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type ET_ASSIGNMENT */
struct S1334 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S1335 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S1336 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
	T1 a7; /* has_old_variant_syntax */
};

/* Struct for type ET_NULL_INSTRUCTION */
struct S1337 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S1338 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S1339 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
	T0* a5; /* creation_region */
};

/* Struct for type ET_CHOICE_RANGE */
struct S1340 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S1341 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parenthesis_call */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S1343 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* parenthesis_call */
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S1344 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* parent_name */
	T0* a3; /* arguments */
	T0* a4; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parenthesis_call */
	T0* a7; /* parent_type */
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S1345 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S1346 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S1347 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S1348 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S1349 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
	T1 a5; /* is_boolean_operator */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S1350 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S1351 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_MANIFEST_TYPE */
struct S1352 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* type */
	T0* a3; /* left_brace */
	T0* a4; /* right_brace */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S1353 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
	T1 a4; /* is_boolean_operator */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S1354 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_OBJECT_TEST */
struct S1355 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* attached_keyword */
	T0* a4; /* as_keyword */
	T0* a5; /* left_brace */
	T0* a6; /* colon */
	T0* a7; /* declared_type */
	T0* a8; /* right_brace */
	T0* a9; /* expression */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S1356 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S1357 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* across_components */
	T0* a8; /* actual_arguments */
	T0* a9; /* agent_keyword */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* target */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S1358 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* object_tests */
	T0* a7; /* across_components */
	T0* a8; /* actual_arguments */
	T0* a9; /* agent_keyword */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* keys */
	T0* a13; /* compound */
	T0* a14; /* postconditions */
	T0* a15; /* rescue_clause */
	T0* a16; /* target */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1359 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* across_components */
	T0* a5; /* actual_arguments */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* declared_type */
	T0* a12; /* end_keyword */
	T0* a13; /* implicit_result */
	T0* a14; /* target */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1360 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* compound */
	T0* a11; /* postconditions */
	T0* a12; /* rescue_clause */
	T0* a13; /* target */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1361 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* object_tests */
	T0* a5; /* across_components */
	T0* a6; /* actual_arguments */
	T0* a7; /* agent_keyword */
	T0* a8; /* preconditions */
	T0* a9; /* locals */
	T0* a10; /* keys */
	T0* a11; /* compound */
	T0* a12; /* postconditions */
	T0* a13; /* rescue_clause */
	T0* a14; /* target */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1362 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* object_tests */
	T0* a4; /* across_components */
	T0* a5; /* actual_arguments */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* alias_clause */
	T0* a9; /* postconditions */
	T0* a10; /* formal_arguments */
	T0* a11; /* end_keyword */
	T0* a12; /* target */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S1363 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1364 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1366 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* tag */
	T0* a2; /* untagged_assertion */
};

/* Struct for type ET_FILE_POSITION */
struct S1368 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
	T0* a2; /* filename */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
struct S1369 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
struct S1370 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1372 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_FEATURE_IDS */
struct S1373 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type CONSOLE */
struct S1379 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* file_pointer */
	T6 a2; /* mode */
	T0* a3; /* last_string */
	T0* a4; /* internal_name */
	T0* a5; /* internal_detachable_name_pointer */
	T2 a6; /* last_character */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
struct S1380 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_LIKE_N */
struct S1382 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* previous */
	T0* a3; /* type_mark */
	T0* a4; /* like_keyword */
};

/* Struct for type [attached] SPECIAL [[attached] ET_BASE_TYPE] */
struct S1383 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
struct S1384 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
struct S1385 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
	T1 a4; /* object_comparison */
};

/* Struct for type [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
struct S1386 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
struct S1387 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
struct S1388 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
struct S1389 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
struct S1390 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S1391 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
struct S1392 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
struct S1393 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
struct S1395 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T0* a6; /* equality_tester */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1396 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1397 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
struct S1398 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
struct S1399 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* equality_tester */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
struct S1400 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_UNIVERSE] */
struct S1401 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
struct S1403 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
struct S1404 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
struct S1406 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
struct S1407 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER1 */
struct S1408 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER2 */
struct S1409 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
struct S1410 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* system_processor */
};

/* Struct for type ET_CLASS_TYPE_STATUS_CHECKER3 */
struct S1411 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* has_fatal_error */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
struct S1412 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1414 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
struct S1415 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
struct S1416 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
struct S1417 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
struct S1418 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1419 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1420 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1422 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1423 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* context */
};

/* Struct for type [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
struct S1425 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
struct S1426 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
struct S1427 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
struct S1428 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] XM_NAMESPACE] */
struct S1429 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1430 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* code */
};

/* Struct for type detachable DS_BILINKABLE [[attached] XM_POSITION] */
struct S1431 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
struct S1432 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
struct S1433 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1434 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
struct S1437 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
struct S1438 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1440 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
struct S1441 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1442 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1443 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
struct S1444 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
struct S1445 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_BILINKABLE [[attached] STRING_8] */
struct S1446 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
struct S1447 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
struct S1448 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
struct S1449 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
struct S1450 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
struct S1451 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
struct S1452 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_LIBRARY] */
struct S1453 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1454 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1455 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
struct S1456 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] NATIVE_STRING] */
struct S1457 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
struct S1458 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
struct S1459 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
struct S1460 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1461 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
struct S1462 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
struct S1463 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
struct S1464 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
struct S1465 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
struct S1466 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
struct S1467 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
struct S1468 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
struct S1469 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
struct S1471 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S1473 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
struct S1474 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
struct S1477 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
struct S1478 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1479 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* implementation_class */
	T6 a2; /* index */
	T0* a3; /* type_mark */
	T0* a4; /* name */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
struct S1480 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
struct S1481 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
struct S1484 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
struct S1486 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
struct S1487 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
struct S1488 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
struct S1489 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1491 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
struct S1492 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLIENT] */
struct S1493 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S1494 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T0* a12; /* equality_tester */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_CALL_NAME_TESTER */
struct S1495 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
struct S1497 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S1498 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* special_item_routines */
	T0* a17; /* clashes */
	T0* a18; /* slots */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S1499 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S1500 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T0* a19; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1502 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
struct S1503 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1504 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1505 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
struct S1506 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* internal_cursor */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S1508 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
struct S1510 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
struct S1511 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
struct S1512 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S1513 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
struct S1514 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* last_cell */
	T6 a2; /* count */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S1515 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* special_key_routines */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* internal_cursor */
	T6 a16; /* slots_position */
	T6 a17; /* count */
	T6 a18; /* clashes_previous_position */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
struct S1516 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
struct S1519 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
struct S1521 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
struct S1522 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1523 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1524 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
struct S1525 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
struct S1527 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
struct S1528 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
struct S1531 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
struct S1532 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type STRING_8_SEARCHER */
struct S1533 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* deltas */
};

/* Struct for type detachable ARRAYED_LIST [[attached] INTEGER_32] */
struct S1534 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area_v2 */
	T6 a2; /* index */
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1536 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1538 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* last_position */
	T6 a3; /* capacity */
	T6 a4; /* slots_position */
	T6 a5; /* count */
	T6 a6; /* modulus */
	T6 a7; /* clashes_previous_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* equality_tester */
	T6 a10; /* found_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T6 a17; /* free_slot */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
struct S1539 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1540 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
struct S1541 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
struct S1542 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
struct S1543 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
struct S1544 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S1547 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T0* a5; /* agent_type */
	T1 a6; /* is_dynamic_types_readonly */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
struct S1549 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type XM_COMMENT */
struct S1550 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1551 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1552 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type detachable DS_CELL [detachable ET_CLASS] */
struct S1555 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
};

/* Struct for type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
struct S1556 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
struct S1558 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
struct S1562 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* position */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* hash_function */
	T6 a12; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1563 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_UNQUALIFIED_CALL_INSTRUCTION */
struct S1564 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T0* a2; /* arguments */
	T0* a3; /* parenthesis_call */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1567 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1570 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_CLIENT_LIST] */
struct S1574 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1576 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1577 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* name_item */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1578 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1580 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* expression */
	T0* a2; /* keyword */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1582 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1583 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* ge_reported */
	T1 a10; /* ge_fatal */
};

/* Struct for type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
struct S1590 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
struct S1596 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* last_state */
	T1 a2; /* internal_overflowed */
	T11 a3; /* part1 */
	T11 a4; /* part2 */
	T0* a5; /* leading_separators */
	T0* a6; /* trailing_separators */
	T6 a7; /* sign */
	T6 a8; /* conversion_type */
	T2 a9; /* internal_lookahead */
	T1 a10; /* leading_separators_acceptable */
	T1 a11; /* trailing_separators_acceptable */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1600 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1610 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1617 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
struct S1618 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
struct S1619 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S1620 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
struct S1621 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
struct S1622 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1623 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1624 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
struct S1625 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1626 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1627 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1628 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1629 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1630 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1631 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1632 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
struct S1633 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ACTION] */
struct S1634 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
struct S1635 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1636 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
struct S1637 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
struct S1640 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
struct S1641 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1642 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1643 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
struct S1644 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1645 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
struct S1646 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T6 a4; /* count */
	T0* a5; /* internal_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
struct S1648 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
struct S1653 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1654 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
struct S1655 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
struct S1657 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
struct S1658 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
struct S1659 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
struct S1660 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
struct S1661 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
struct S1662 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
struct S1663 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type LX_DFA_WILDCARD */
struct S1664 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* pattern */
	T1 a2; /* is_case_insensitive */
	T0* a3; /* yy_nxt */
	T0* a4; /* yy_accept */
	T6 a5; /* yyNb_rows */
	T6 a6; /* match_count */
	T6 a7; /* subject_start */
	T6 a8; /* subject_end */
	T0* a9; /* subject */
	T6 a10; /* matched_start */
	T6 a11; /* matched_end */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S1665 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T0* a3; /* clashes */
	T0* a4; /* item_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T6 a11; /* found_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type ET_STANDARD_ONCE_KEYS */
struct S1667 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
struct S1670 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
struct S1673 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
struct S1674 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_TARGET] */
struct S1675 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
struct S1676 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
struct S1677 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
struct S1678 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
struct S1679 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
struct S1680 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
struct S1681 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
struct S1682 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
struct S1683 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
struct S1684 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] YY_BUFFER] */
struct S1686 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
struct S1687 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
struct S1688 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
struct S1689 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1691 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T0* a4; /* internal_cursor */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1692 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1693 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
struct S1694 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CLUSTER] */
struct S1695 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
struct S1696 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
struct S1697 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
struct S1698 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
struct S1699 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_cursor */
	T6 a8; /* found_position */
	T0* a9; /* item_storage */
	T0* a10; /* key_storage */
	T0* a11; /* clashes */
	T6 a12; /* modulus */
	T0* a13; /* slots */
	T6 a14; /* capacity */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
struct S1700 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
struct S1701 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_RENAME] */
struct S1702 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_CALL_NAME] */
struct S1707 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
struct S1708 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
struct S1709 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
struct S1710 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
struct S1711 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
struct S1714 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
struct S1715 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
struct S1716 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
struct S1718 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
struct S1719 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
struct S1720 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
struct S1721 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
struct S1722 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
struct S1723 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
struct S1724 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S1725 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
struct S1726 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S1727 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
struct S1730 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
struct S1731 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
struct S1732 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
struct S1733 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S1734 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T0* a7; /* equality_tester */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a11; /* item_storage */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* special_key_routines */
	T0* a17; /* hash_function */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
struct S1735 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
struct S1736 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
struct S1737 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
struct S1739 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S1740 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S1741 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T0* a10; /* equality_tester */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T6 a18; /* free_slot */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
struct S1742 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1743 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1744 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1745 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S1746 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S1754 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1755 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_ACTUAL_PARAMETER_SUBLIST */
struct S1756 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* actual_parameters */
	T6 a2; /* upper */
	T6 a3; /* lower */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
struct S1757 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* actual_parameters */
	T6 a3; /* tuple_position */
	T0* a4; /* tuple_type */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S1759 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* position */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T0* a6; /* hash_function */
	T6 a7; /* last_position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* count */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T6 a19; /* free_slot */
	T0* a20; /* internal_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
struct S1763 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
struct S1764 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type ET_PARENTHESIS_INSTRUCTION */
struct S1765 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
};

/* Struct for type ET_PARENTHESIS_SYMBOL */
struct S1769 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* seed */
	T6 a2; /* compressed_position */
	T2 a3; /* code */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1775 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
struct S1787 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* left_symbol */
	T0* a3; /* actual_arguments */
	T0* a4; /* storage */
	T0* a5; /* right_symbol */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1788 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1789 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
struct S1795 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
struct S1796 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T8 z3;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1801 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
struct S1802 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
struct S1803 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1804 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
struct S1805 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1806 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
struct S1807 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1808 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
struct S1809 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1810 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
struct S1811 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1812 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
struct S1813 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1814 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
struct S1815 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
struct S1816 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type [attached] TUPLE [[attached] LX_WILDCARD] */
struct S1817 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
struct S1818 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
struct S1819 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
struct S1821 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
struct S1822 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
struct S1828 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
struct S1830 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
struct S1831 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* table_cursor */
	T0* a2; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_64] */
struct S1833 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T11 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
struct S1834 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
struct S1835 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
struct S1836 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1837 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1838 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
struct S1839 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1840 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1841 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
struct S1842 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
struct S1843 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
struct S1844 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
struct S1845 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1846 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1847 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
struct S1848 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1849 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1850 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
struct S1851 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1852 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1853 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
struct S1854 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1855 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1856 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
struct S1857 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1858 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1859 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
struct S1860 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1861 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1862 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
struct S1863 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1864 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1865 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
struct S1866 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1867 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1868 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S1869 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1870 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1871 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
struct S1872 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
struct S1873 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
struct S1874 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
struct S1875 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type detachable DS_LINKABLE [[attached] CHARACTER_8] */
struct S1876 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type LX_WILDCARD_PARSER */
struct S1877 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* successful */
	T0* a2; /* pending_rules */
	T0* a3; /* start_condition_stack */
	T0* a4; /* action_factory */
	T0* a5; /* old_singleton_lines */
	T0* a6; /* old_singleton_columns */
	T0* a7; /* old_singleton_counts */
	T0* a8; /* old_regexp_lines */
	T0* a9; /* old_regexp_columns */
	T0* a10; /* old_regexp_counts */
	T0* a11; /* description */
	T0* a12; /* last_string_value */
	T0* a13; /* last_lx_symbol_class_value */
	T0* a14; /* error_handler */
	T0* a15; /* name_definitions */
	T0* a16; /* character_classes */
	T6 a17; /* line_nb */
	T0* a18; /* yyss */
	T0* a19; /* input_buffer */
	T6 a20; /* yy_end */
	T6 a21; /* yy_position */
	T6 a22; /* yy_line */
	T6 a23; /* yy_column */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T0* a32; /* yyr1 */
	T6 a33; /* yyssp */
	T0* a34; /* yypgoto */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefgoto */
	T6 a38; /* error_count */
	T1 a39; /* yy_lookahead_needed */
	T6 a40; /* yyerrstatus */
	T0* a41; /* yypact */
	T6 a42; /* last_token */
	T0* a43; /* yytranslate */
	T0* a44; /* yydefact */
	T0* a45; /* yy_pushed_start_conditions */
	T0* a46; /* yyspecial_routines1 */
	T6 a47; /* yyvsc1 */
	T0* a48; /* yyvs1 */
	T0* a49; /* yyspecial_routines2 */
	T6 a50; /* yyvsc2 */
	T0* a51; /* yyvs2 */
	T0* a52; /* yyspecial_routines3 */
	T6 a53; /* yyvsc3 */
	T0* a54; /* yyvs3 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc4 */
	T0* a57; /* yyvs4 */
	T0* a58; /* yyspecial_routines5 */
	T6 a59; /* yyvsc5 */
	T0* a60; /* yyvs5 */
	T0* a61; /* yytypes1 */
	T0* a62; /* yytypes2 */
	T6 a63; /* yy_start */
	T6 a64; /* yyvsp1 */
	T6 a65; /* yyvsp2 */
	T6 a66; /* yyvsp3 */
	T6 a67; /* yyvsp4 */
	T6 a68; /* yyvsp5 */
	T1 a69; /* yy_more_flag */
	T6 a70; /* yy_more_len */
	T6 a71; /* line */
	T6 a72; /* column */
	T6 a73; /* position */
	T6 a74; /* yy_start_state */
	T0* a75; /* yy_state_stack */
	T6 a76; /* yy_state_count */
	T0* a77; /* yy_content_area */
	T0* a78; /* yy_ec */
	T0* a79; /* yy_content */
	T0* a80; /* yy_accept */
	T6 a81; /* yy_last_accepting_state */
	T6 a82; /* yy_last_accepting_cpos */
	T0* a83; /* yy_chk */
	T0* a84; /* yy_base */
	T0* a85; /* yy_def */
	T0* a86; /* yy_meta */
	T0* a87; /* yy_nxt */
	T6 a88; /* yy_lp */
	T0* a89; /* yy_acclist */
	T6 a90; /* yy_looking_for_trail_begin */
	T6 a91; /* yy_full_match */
	T6 a92; /* yy_full_state */
	T6 a93; /* yy_full_lp */
	T1 a94; /* yy_rejected */
	T0* a95; /* last_detachable_any_value */
	T6 a96; /* last_integer_value */
	T1 a97; /* in_trail_context */
	T0* a98; /* rule */
	T1 a99; /* has_trail_context */
	T6 a100; /* head_count */
	T6 a101; /* head_line */
	T6 a102; /* head_column */
	T6 a103; /* trail_count */
	T6 a104; /* rule_line_nb */
};

/* Struct for type LX_DESCRIPTION */
struct S1878 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* equiv_classes */
	T1 a2; /* equiv_classes_used */
	T1 a3; /* full_table */
	T1 a4; /* meta_equiv_classes_used */
	T1 a5; /* reject_used */
	T1 a6; /* variable_trail_context */
	T0* a7; /* rules */
	T0* a8; /* start_conditions */
	T6 a9; /* characters_count */
	T6 a10; /* array_size */
	T1 a11; /* line_pragma */
	T1 a12; /* inspect_used */
	T0* a13; /* eof_rules */
	T0* a14; /* eiffel_header */
	T1 a15; /* case_insensitive */
	T0* a16; /* input_filename */
	T1 a17; /* actions_separated */
	T0* a18; /* eiffel_code */
	T1 a19; /* bol_needed */
	T1 a20; /* pre_action_used */
	T1 a21; /* post_action_used */
	T1 a22; /* pre_eof_action_used */
	T1 a23; /* post_eof_action_used */
	T1 a24; /* line_used */
	T1 a25; /* position_used */
};

/* Struct for type LX_FULL_DFA */
struct S1879 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* yy_nxt */
	T0* a2; /* yy_accept */
	T6 a3; /* yyNb_rows */
	T0* a4; /* input_filename */
	T6 a5; /* characters_count */
	T6 a6; /* array_size */
	T1 a7; /* inspect_used */
	T1 a8; /* actions_separated */
	T0* a9; /* eiffel_code */
	T0* a10; /* eiffel_header */
	T1 a11; /* bol_needed */
	T1 a12; /* pre_action_used */
	T1 a13; /* post_action_used */
	T1 a14; /* pre_eof_action_used */
	T1 a15; /* post_eof_action_used */
	T1 a16; /* line_pragma */
	T0* a17; /* yy_start_conditions */
	T0* a18; /* yy_ec */
	T6 a19; /* yyNull_equiv_class */
	T6 a20; /* yyNb_rules */
	T0* a21; /* yy_rules */
	T6 a22; /* yyEnd_of_buffer */
	T1 a23; /* yyLine_used */
	T1 a24; /* yyPosition_used */
	T6 a25; /* minimum_symbol */
	T6 a26; /* maximum_symbol */
	T0* a27; /* states */
	T6 a28; /* backing_up_count */
	T0* a29; /* partitions */
	T6 a30; /* start_states_count */
	T1 a31; /* yyBacking_up */
	T0* a32; /* yy_eof_rules */
};

/* Struct for type [attached] SPECIAL [[attached] LX_WILDCARD] */
struct S1881 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
struct S1884 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
struct S1885 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
struct S1887 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
struct S1889 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S1890 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
struct S1893 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
struct S1894 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type CHARACTER_PROPERTY */
struct S1895 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] TUPLE [ET_GROUP] */
struct S1896 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
struct S1897 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1898 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
struct S1899 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_EQUALITY_EXPRESSION */
struct S1906 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
struct S1907 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target_type_set */
	T0* a2; /* static_equality */
	T0* a3; /* current_feature */
	T0* a4; /* current_type */
	T0* a5; /* next */
};

/* Struct for type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1908 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_UNIVERSE_ERROR */
struct S1909 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* universe */
};

/* Struct for type ET_CONVERT_BUILTIN_EXPRESSION */
struct S1913 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_FROM_EXPRESSION */
struct S1914 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1915 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
struct S1921 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S1924 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
struct S1927 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
struct S1928 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1929 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1930 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
struct S1931 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_START_CONDITIONS */
struct S1932 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_ACTION_FACTORY */
struct S1933 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_SYMBOL_CLASS */
struct S1934 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T1 a4; /* sort_needed */
	T1 a5; /* negated */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S1935 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* count */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* free_slot */
	T6 a10; /* last_position */
	T6 a11; /* modulus */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* special_item_routines */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_key_routines */
	T0* a18; /* key_storage */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
struct S1936 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
struct S1937 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
struct S1938 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_NFA */
struct S1939 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* states */
};

/* Struct for type [attached] SPECIAL [[attached] LX_NFA] */
struct S1940 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_EQUIVALENCE_CLASSES */
struct S1941 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type LX_RULE */
struct S1942 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* id */
	T0* a2; /* pattern */
	T0* a3; /* action */
	T6 a4; /* head_count */
	T6 a5; /* trail_count */
	T6 a6; /* line_count */
	T6 a7; /* column_count */
	T6 a8; /* line_nb */
	T1 a9; /* has_trail_context */
	T1 a10; /* is_useful */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
struct S1943 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* container */
	T0* a3; /* next_cursor */
};

/* Struct for type LX_UNRECOGNIZED_RULE_ERROR */
struct S1944 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_MISSING_QUOTE_ERROR */
struct S1945 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_CLASS_ERROR */
struct S1946 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_BAD_CHARACTER_ERROR */
struct S1947 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_META_ERROR */
struct S1948 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_REJECT_ERROR */
struct S1949 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
struct S1950 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type LX_CHARACTER_OUT_OF_RANGE_ERROR */
struct S1951 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] ARRAY [[attached] LX_RULE] */
struct S1952 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [[attached] LX_RULE] */
struct S1953 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_DFA_STATE */
struct S1954 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* accepted_rules */
	T0* a2; /* states */
	T0* a3; /* transitions */
	T0* a4; /* accepted_head_rules */
	T6 a5; /* code */
	T6 a6; /* id */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
struct S1955 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* equality_tester */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
struct S1956 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type LX_SYMBOL_PARTITIONS */
struct S1957 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* symbols */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
struct S1958 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type LX_START_CONDITION */
struct S1959 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* name */
	T6 a2; /* id */
	T1 a3; /* is_exclusive */
	T0* a4; /* patterns */
	T0* a5; /* bol_patterns */
};

/* Struct for type [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
struct S1960 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* storage */
	T0* a2; /* array_routines */
	T6 a3; /* count */
};

/* Struct for type [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
struct S1961 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
struct S1962 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* equality_tester */
	T6 a12; /* found_position */
	T0* a13; /* special_item_routines */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* special_key_routines */
	T0* a17; /* key_storage */
	T0* a18; /* internal_cursor */
	T0* a19; /* hash_function */
};

/* Struct for type LX_NFA_STATE */
struct S1963 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T1 a1; /* in_trail_context */
	T0* a2; /* transition */
	T0* a3; /* epsilon_transition */
	T6 a4; /* id */
	T0* a5; /* accepted_rule */
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
struct S1969 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
struct S1970 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
struct S1971 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
};

/* Struct for type detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
struct S1972 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_AST_NULL_LEAF */
struct S1974 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* compressed_position */
};

/* Struct for type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
struct S1975 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* parameters */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_16] */
struct S1976 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T9 z2[1]; /* item */
};

/* Struct for type [attached] SPECIAL [[attached] NATURAL_32] */
struct S1977 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T10 z2[1]; /* item */
};

/* Struct for type [attached] ARRAY [[attached] NATURAL_16] */
struct S1978 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] ARRAY [[attached] NATURAL_32] */
struct S1979 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1980 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1981 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
struct S1982 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
struct S1983 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
struct S1984 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
struct S1985 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] SPECIAL [[attached] LX_START_CONDITION] */
struct S1986 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
struct S1987 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
struct S1988 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
struct S1991 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* label */
	T0* a2; /* target */
};

/* Struct for type [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
struct S1993 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* target */
};

/* Struct for type [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
struct S1995 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* label */
	T0* a2; /* target */
};

/* Struct for type [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S1996 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] DS_BILINKABLE [[attached] INTEGER_32] */
struct S1997 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
struct S1998 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type LX_ACTION */
struct S2000 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* text */
};

/* Struct for type [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
struct S2001 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
struct S2003 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] SPECIAL [[attached] LX_NFA_STATE] */
struct S2005 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
struct S2007 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
struct S2008 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type [attached] SPECIAL [[attached] LX_DFA_STATE] */
struct S2010 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	uint32_t offset;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* z2[1]; /* item */
};

/* Struct for type [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
struct S2011 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
struct S2012 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] KL_ARRAY [[attached] LX_RULE] */
struct S2013 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] ARRAY [detachable LX_DFA_STATE] */
struct S2014 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
struct S2015 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
struct S2016 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
struct S2018 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2019 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_ECF_LIBRARY] */
struct S2020 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2021 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2022 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2023 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2024 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
struct S2025 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
	T0* z2;
	T6 z3;
};

/* Struct for type [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
struct S2028 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S2029 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_FILE_RULES] */
struct S2030 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
struct S2031 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [ET_ECF_STATE] */
struct S2032 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
struct S2034 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};

/* Struct for type [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
struct S2035 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
struct S2037 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* comparator */
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
struct S2038 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
struct S2041 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
};

/* Struct for type [attached] KL_ARRAY [[attached] STRING_8] */
struct S2044 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
struct S2045 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T0* z1;
};

/* Struct for type [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
struct S2046 {
	EIF_TYPE_INDEX id;
	uint16_t flags;
	T14 a1; /* rout_disp */
	T0* a2; /* closed_operands */
	T14 a3; /* encaps_rout_disp */
	T14 a4; /* calc_rout_addr */
	T1 a5; /* is_target_closed */
	T6 a6; /* open_count */
};


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T16 GE_default16;
extern T17 GE_default17;
extern T18 GE_default18;
extern T19 GE_default19;
extern T20 GE_default20;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T27 GE_default27;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T34 GE_default34;
extern T35 GE_default35;
extern T36 GE_default36;
extern T38 GE_default38;
extern T39 GE_default39;
extern T40 GE_default40;
extern T41 GE_default41;
extern T42 GE_default42;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T47 GE_default47;
extern T51 GE_default51;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T58 GE_default58;
extern T59 GE_default59;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T65 GE_default65;
extern T66 GE_default66;
extern T67 GE_default67;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T73 GE_default73;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T85 GE_default85;
extern T87 GE_default87;
extern T88 GE_default88;
extern T89 GE_default89;
extern T91 GE_default91;
extern T93 GE_default93;
extern T95 GE_default95;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T112 GE_default112;
extern T113 GE_default113;
extern T114 GE_default114;
extern T115 GE_default115;
extern T116 GE_default116;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T127 GE_default127;
extern T129 GE_default129;
extern T130 GE_default130;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T151 GE_default151;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T160 GE_default160;
extern T161 GE_default161;
extern T162 GE_default162;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T167 GE_default167;
extern T170 GE_default170;
extern T171 GE_default171;
extern T173 GE_default173;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T178 GE_default178;
extern T179 GE_default179;
extern T180 GE_default180;
extern T181 GE_default181;
extern T182 GE_default182;
extern T183 GE_default183;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T191 GE_default191;
extern T192 GE_default192;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T198 GE_default198;
extern T199 GE_default199;
extern T200 GE_default200;
extern T202 GE_default202;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T214 GE_default214;
extern T215 GE_default215;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T232 GE_default232;
extern T233 GE_default233;
extern T234 GE_default234;
extern T235 GE_default235;
extern T236 GE_default236;
extern T237 GE_default237;
extern T238 GE_default238;
extern T239 GE_default239;
extern T240 GE_default240;
extern T241 GE_default241;
extern T242 GE_default242;
extern T243 GE_default243;
extern T244 GE_default244;
extern T245 GE_default245;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T249 GE_default249;
extern T250 GE_default250;
extern T251 GE_default251;
extern T252 GE_default252;
extern T253 GE_default253;
extern T254 GE_default254;
extern T255 GE_default255;
extern T256 GE_default256;
extern T257 GE_default257;
extern T258 GE_default258;
extern T263 GE_default263;
extern T267 GE_default267;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T289 GE_default289;
extern T290 GE_default290;
extern T291 GE_default291;
extern T292 GE_default292;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T300 GE_default300;
extern T301 GE_default301;
extern T302 GE_default302;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T331 GE_default331;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T335 GE_default335;
extern T336 GE_default336;
extern T337 GE_default337;
extern T338 GE_default338;
extern T339 GE_default339;
extern T340 GE_default340;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T351 GE_default351;
extern T353 GE_default353;
extern T354 GE_default354;
extern T355 GE_default355;
extern T356 GE_default356;
extern T359 GE_default359;
extern T360 GE_default360;
extern T364 GE_default364;
extern T365 GE_default365;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T377 GE_default377;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T387 GE_default387;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T394 GE_default394;
extern T396 GE_default396;
extern T398 GE_default398;
extern T399 GE_default399;
extern T400 GE_default400;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T406 GE_default406;
extern T407 GE_default407;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T414 GE_default414;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T420 GE_default420;
extern T421 GE_default421;
extern T422 GE_default422;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T431 GE_default431;
extern T432 GE_default432;
extern T434 GE_default434;
extern T436 GE_default436;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T441 GE_default441;
extern T443 GE_default443;
extern T444 GE_default444;
extern T445 GE_default445;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T452 GE_default452;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T458 GE_default458;
extern T459 GE_default459;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T466 GE_default466;
extern T467 GE_default467;
extern T468 GE_default468;
extern T469 GE_default469;
extern T470 GE_default470;
extern T471 GE_default471;
extern T472 GE_default472;
extern T474 GE_default474;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T520 GE_default520;
extern T521 GE_default521;
extern T522 GE_default522;
extern T523 GE_default523;
extern T524 GE_default524;
extern T527 GE_default527;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T536 GE_default536;
extern T537 GE_default537;
extern T538 GE_default538;
extern T541 GE_default541;
extern T542 GE_default542;
extern T543 GE_default543;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T559 GE_default559;
extern T560 GE_default560;
extern T563 GE_default563;
extern T564 GE_default564;
extern T565 GE_default565;
extern T566 GE_default566;
extern T568 GE_default568;
extern T570 GE_default570;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T602 GE_default602;
extern T603 GE_default603;
extern T604 GE_default604;
extern T606 GE_default606;
extern T608 GE_default608;
extern T609 GE_default609;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T617 GE_default617;
extern T618 GE_default618;
extern T619 GE_default619;
extern T620 GE_default620;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T633 GE_default633;
extern T636 GE_default636;
extern T637 GE_default637;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T642 GE_default642;
extern T643 GE_default643;
extern T646 GE_default646;
extern T647 GE_default647;
extern T650 GE_default650;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T663 GE_default663;
extern T666 GE_default666;
extern T667 GE_default667;
extern T668 GE_default668;
extern T669 GE_default669;
extern T671 GE_default671;
extern T672 GE_default672;
extern T674 GE_default674;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T687 GE_default687;
extern T691 GE_default691;
extern T692 GE_default692;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T719 GE_default719;
extern T720 GE_default720;
extern T721 GE_default721;
extern T722 GE_default722;
extern T724 GE_default724;
extern T725 GE_default725;
extern T727 GE_default727;
extern T728 GE_default728;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T742 GE_default742;
extern T743 GE_default743;
extern T744 GE_default744;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T771 GE_default771;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T805 GE_default805;
extern T806 GE_default806;
extern T808 GE_default808;
extern T809 GE_default809;
extern T811 GE_default811;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T835 GE_default835;
extern T836 GE_default836;
extern T837 GE_default837;
extern T838 GE_default838;
extern T840 GE_default840;
extern T841 GE_default841;
extern T843 GE_default843;
extern T844 GE_default844;
extern T846 GE_default846;
extern T847 GE_default847;
extern T848 GE_default848;
extern T849 GE_default849;
extern T850 GE_default850;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T868 GE_default868;
extern T869 GE_default869;
extern T870 GE_default870;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T874 GE_default874;
extern T875 GE_default875;
extern T876 GE_default876;
extern T878 GE_default878;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T897 GE_default897;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T930 GE_default930;
extern T931 GE_default931;
extern T933 GE_default933;
extern T934 GE_default934;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T939 GE_default939;
extern T940 GE_default940;
extern T942 GE_default942;
extern T943 GE_default943;
extern T944 GE_default944;
extern T945 GE_default945;
extern T946 GE_default946;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T959 GE_default959;
extern T960 GE_default960;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1012 GE_default1012;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1023 GE_default1023;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1035 GE_default1035;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1103 GE_default1103;
extern T1104 GE_default1104;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1132 GE_default1132;
extern T1134 GE_default1134;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1257 GE_default1257;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1274 GE_default1274;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1283 GE_default1283;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1295 GE_default1295;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1306 GE_default1306;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1314 GE_default1314;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1321 GE_default1321;
extern T1322 GE_default1322;
extern T1323 GE_default1323;
extern T1324 GE_default1324;
extern T1327 GE_default1327;
extern T1328 GE_default1328;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1346 GE_default1346;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1361 GE_default1361;
extern T1362 GE_default1362;
extern T1363 GE_default1363;
extern T1364 GE_default1364;
extern T1366 GE_default1366;
extern T1368 GE_default1368;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1372 GE_default1372;
extern T1373 GE_default1373;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1403 GE_default1403;
extern T1404 GE_default1404;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1409 GE_default1409;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1422 GE_default1422;
extern T1423 GE_default1423;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1432 GE_default1432;
extern T1433 GE_default1433;
extern T1434 GE_default1434;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1440 GE_default1440;
extern T1441 GE_default1441;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1445 GE_default1445;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1456 GE_default1456;
extern T1457 GE_default1457;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1467 GE_default1467;
extern T1468 GE_default1468;
extern T1469 GE_default1469;
extern T1471 GE_default1471;
extern T1473 GE_default1473;
extern T1474 GE_default1474;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1479 GE_default1479;
extern T1480 GE_default1480;
extern T1481 GE_default1481;
extern T1484 GE_default1484;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1491 GE_default1491;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1500 GE_default1500;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1504 GE_default1504;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1508 GE_default1508;
extern T1510 GE_default1510;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1514 GE_default1514;
extern T1515 GE_default1515;
extern T1516 GE_default1516;
extern T1519 GE_default1519;
extern T1521 GE_default1521;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1531 GE_default1531;
extern T1532 GE_default1532;
extern T1533 GE_default1533;
extern T1534 GE_default1534;
extern T1536 GE_default1536;
extern T1538 GE_default1538;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1541 GE_default1541;
extern T1542 GE_default1542;
extern T1543 GE_default1543;
extern T1544 GE_default1544;
extern T1547 GE_default1547;
extern T1548 GE_default1548;
extern T1549 GE_default1549;
extern T1550 GE_default1550;
extern T1551 GE_default1551;
extern T1552 GE_default1552;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1558 GE_default1558;
extern T1562 GE_default1562;
extern T1563 GE_default1563;
extern T1564 GE_default1564;
extern T1567 GE_default1567;
extern T1570 GE_default1570;
extern T1574 GE_default1574;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1578 GE_default1578;
extern T1580 GE_default1580;
extern T1582 GE_default1582;
extern T1583 GE_default1583;
extern T1590 GE_default1590;
extern T1596 GE_default1596;
extern T1600 GE_default1600;
extern T1610 GE_default1610;
extern T1617 GE_default1617;
extern T1618 GE_default1618;
extern T1619 GE_default1619;
extern T1620 GE_default1620;
extern T1621 GE_default1621;
extern T1622 GE_default1622;
extern T1623 GE_default1623;
extern T1624 GE_default1624;
extern T1625 GE_default1625;
extern T1626 GE_default1626;
extern T1627 GE_default1627;
extern T1628 GE_default1628;
extern T1629 GE_default1629;
extern T1630 GE_default1630;
extern T1631 GE_default1631;
extern T1632 GE_default1632;
extern T1633 GE_default1633;
extern T1634 GE_default1634;
extern T1635 GE_default1635;
extern T1636 GE_default1636;
extern T1637 GE_default1637;
extern T1640 GE_default1640;
extern T1641 GE_default1641;
extern T1642 GE_default1642;
extern T1643 GE_default1643;
extern T1644 GE_default1644;
extern T1645 GE_default1645;
extern T1646 GE_default1646;
extern T1648 GE_default1648;
extern T1653 GE_default1653;
extern T1654 GE_default1654;
extern T1655 GE_default1655;
extern T1657 GE_default1657;
extern T1658 GE_default1658;
extern T1659 GE_default1659;
extern T1660 GE_default1660;
extern T1661 GE_default1661;
extern T1662 GE_default1662;
extern T1663 GE_default1663;
extern T1664 GE_default1664;
extern T1665 GE_default1665;
extern T1667 GE_default1667;
extern T1670 GE_default1670;
extern T1673 GE_default1673;
extern T1674 GE_default1674;
extern T1675 GE_default1675;
extern T1676 GE_default1676;
extern T1677 GE_default1677;
extern T1678 GE_default1678;
extern T1679 GE_default1679;
extern T1680 GE_default1680;
extern T1681 GE_default1681;
extern T1682 GE_default1682;
extern T1683 GE_default1683;
extern T1684 GE_default1684;
extern T1686 GE_default1686;
extern T1687 GE_default1687;
extern T1688 GE_default1688;
extern T1689 GE_default1689;
extern T1691 GE_default1691;
extern T1692 GE_default1692;
extern T1693 GE_default1693;
extern T1694 GE_default1694;
extern T1695 GE_default1695;
extern T1696 GE_default1696;
extern T1697 GE_default1697;
extern T1698 GE_default1698;
extern T1699 GE_default1699;
extern T1700 GE_default1700;
extern T1701 GE_default1701;
extern T1702 GE_default1702;
extern T1707 GE_default1707;
extern T1708 GE_default1708;
extern T1709 GE_default1709;
extern T1710 GE_default1710;
extern T1711 GE_default1711;
extern T1714 GE_default1714;
extern T1715 GE_default1715;
extern T1716 GE_default1716;
extern T1718 GE_default1718;
extern T1719 GE_default1719;
extern T1720 GE_default1720;
extern T1721 GE_default1721;
extern T1722 GE_default1722;
extern T1723 GE_default1723;
extern T1724 GE_default1724;
extern T1725 GE_default1725;
extern T1726 GE_default1726;
extern T1727 GE_default1727;
extern T1730 GE_default1730;
extern T1731 GE_default1731;
extern T1732 GE_default1732;
extern T1733 GE_default1733;
extern T1734 GE_default1734;
extern T1735 GE_default1735;
extern T1736 GE_default1736;
extern T1737 GE_default1737;
extern T1739 GE_default1739;
extern T1740 GE_default1740;
extern T1741 GE_default1741;
extern T1742 GE_default1742;
extern T1743 GE_default1743;
extern T1744 GE_default1744;
extern T1745 GE_default1745;
extern T1746 GE_default1746;
extern T1754 GE_default1754;
extern T1755 GE_default1755;
extern T1756 GE_default1756;
extern T1757 GE_default1757;
extern T1759 GE_default1759;
extern T1763 GE_default1763;
extern T1764 GE_default1764;
extern T1765 GE_default1765;
extern T1769 GE_default1769;
extern T1775 GE_default1775;
extern T1787 GE_default1787;
extern T1788 GE_default1788;
extern T1789 GE_default1789;
extern T1795 GE_default1795;
extern T1796 GE_default1796;
extern T1801 GE_default1801;
extern T1802 GE_default1802;
extern T1803 GE_default1803;
extern T1804 GE_default1804;
extern T1805 GE_default1805;
extern T1806 GE_default1806;
extern T1807 GE_default1807;
extern T1808 GE_default1808;
extern T1809 GE_default1809;
extern T1810 GE_default1810;
extern T1811 GE_default1811;
extern T1812 GE_default1812;
extern T1813 GE_default1813;
extern T1814 GE_default1814;
extern T1815 GE_default1815;
extern T1816 GE_default1816;
extern T1817 GE_default1817;
extern T1818 GE_default1818;
extern T1819 GE_default1819;
extern T1821 GE_default1821;
extern T1822 GE_default1822;
extern T1828 GE_default1828;
extern T1830 GE_default1830;
extern T1831 GE_default1831;
extern T1833 GE_default1833;
extern T1834 GE_default1834;
extern T1835 GE_default1835;
extern T1836 GE_default1836;
extern T1837 GE_default1837;
extern T1838 GE_default1838;
extern T1839 GE_default1839;
extern T1840 GE_default1840;
extern T1841 GE_default1841;
extern T1842 GE_default1842;
extern T1843 GE_default1843;
extern T1844 GE_default1844;
extern T1845 GE_default1845;
extern T1846 GE_default1846;
extern T1847 GE_default1847;
extern T1848 GE_default1848;
extern T1849 GE_default1849;
extern T1850 GE_default1850;
extern T1851 GE_default1851;
extern T1852 GE_default1852;
extern T1853 GE_default1853;
extern T1854 GE_default1854;
extern T1855 GE_default1855;
extern T1856 GE_default1856;
extern T1857 GE_default1857;
extern T1858 GE_default1858;
extern T1859 GE_default1859;
extern T1860 GE_default1860;
extern T1861 GE_default1861;
extern T1862 GE_default1862;
extern T1863 GE_default1863;
extern T1864 GE_default1864;
extern T1865 GE_default1865;
extern T1866 GE_default1866;
extern T1867 GE_default1867;
extern T1868 GE_default1868;
extern T1869 GE_default1869;
extern T1870 GE_default1870;
extern T1871 GE_default1871;
extern T1872 GE_default1872;
extern T1873 GE_default1873;
extern T1874 GE_default1874;
extern T1875 GE_default1875;
extern T1876 GE_default1876;
extern T1877 GE_default1877;
extern T1878 GE_default1878;
extern T1879 GE_default1879;
extern T1881 GE_default1881;
extern T1884 GE_default1884;
extern T1885 GE_default1885;
extern T1887 GE_default1887;
extern T1889 GE_default1889;
extern T1890 GE_default1890;
extern T1893 GE_default1893;
extern T1894 GE_default1894;
extern T1895 GE_default1895;
extern T1896 GE_default1896;
extern T1897 GE_default1897;
extern T1898 GE_default1898;
extern T1899 GE_default1899;
extern T1906 GE_default1906;
extern T1907 GE_default1907;
extern T1908 GE_default1908;
extern T1909 GE_default1909;
extern T1913 GE_default1913;
extern T1914 GE_default1914;
extern T1915 GE_default1915;
extern T1921 GE_default1921;
extern T1924 GE_default1924;
extern T1927 GE_default1927;
extern T1928 GE_default1928;
extern T1929 GE_default1929;
extern T1930 GE_default1930;
extern T1931 GE_default1931;
extern T1932 GE_default1932;
extern T1933 GE_default1933;
extern T1934 GE_default1934;
extern T1935 GE_default1935;
extern T1936 GE_default1936;
extern T1937 GE_default1937;
extern T1938 GE_default1938;
extern T1939 GE_default1939;
extern T1940 GE_default1940;
extern T1941 GE_default1941;
extern T1942 GE_default1942;
extern T1943 GE_default1943;
extern T1944 GE_default1944;
extern T1945 GE_default1945;
extern T1946 GE_default1946;
extern T1947 GE_default1947;
extern T1948 GE_default1948;
extern T1949 GE_default1949;
extern T1950 GE_default1950;
extern T1951 GE_default1951;
extern T1952 GE_default1952;
extern T1953 GE_default1953;
extern T1954 GE_default1954;
extern T1955 GE_default1955;
extern T1956 GE_default1956;
extern T1957 GE_default1957;
extern T1958 GE_default1958;
extern T1959 GE_default1959;
extern T1960 GE_default1960;
extern T1961 GE_default1961;
extern T1962 GE_default1962;
extern T1963 GE_default1963;
extern T1969 GE_default1969;
extern T1970 GE_default1970;
extern T1971 GE_default1971;
extern T1972 GE_default1972;
extern T1974 GE_default1974;
extern T1975 GE_default1975;
extern T1976 GE_default1976;
extern T1977 GE_default1977;
extern T1978 GE_default1978;
extern T1979 GE_default1979;
extern T1980 GE_default1980;
extern T1981 GE_default1981;
extern T1982 GE_default1982;
extern T1983 GE_default1983;
extern T1984 GE_default1984;
extern T1985 GE_default1985;
extern T1986 GE_default1986;
extern T1987 GE_default1987;
extern T1988 GE_default1988;
extern T1991 GE_default1991;
extern T1993 GE_default1993;
extern T1995 GE_default1995;
extern T1996 GE_default1996;
extern T1997 GE_default1997;
extern T1998 GE_default1998;
extern T2000 GE_default2000;
extern T2001 GE_default2001;
extern T2003 GE_default2003;
extern T2005 GE_default2005;
extern T2007 GE_default2007;
extern T2008 GE_default2008;
extern T2010 GE_default2010;
extern T2011 GE_default2011;
extern T2012 GE_default2012;
extern T2013 GE_default2013;
extern T2014 GE_default2014;
extern T2015 GE_default2015;
extern T2016 GE_default2016;
extern T2018 GE_default2018;
extern T2019 GE_default2019;
extern T2020 GE_default2020;
extern T2021 GE_default2021;
extern T2022 GE_default2022;
extern T2023 GE_default2023;
extern T2024 GE_default2024;
extern T2025 GE_default2025;
extern T2028 GE_default2028;
extern T2029 GE_default2029;
extern T2030 GE_default2030;
extern T2031 GE_default2031;
extern T2032 GE_default2032;
extern T2034 GE_default2034;
extern T2035 GE_default2035;
extern T2037 GE_default2037;
extern T2038 GE_default2038;
extern T2041 GE_default2041;
extern T2044 GE_default2044;
extern T2045 GE_default2045;
extern T2046 GE_default2046;

extern T0* GE_new_str8(T6 c);
extern T0* GE_new_str32(T6 c);
extern T0* GE_new_istr32(T6 c);
/* Call to ANY.same_type */
extern T1 T22x49156T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.is_equal_seed */
extern T6 T35x20004871(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.attachment_type_conformance_mode */
extern T1 T35x20004883(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T35x20004869(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_any_type */
extern T0* T35x20037664(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T35x20004865(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.target_type_attachment_mode */
extern T1 T35x20004884(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T35x20037663(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_like_current_type */
extern T0* T35x20037673(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T35x20037696(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T35x20037670(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_none_type */
extern T0* T35x20037672(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.array_detachable_any_type */
extern T0* T35x20037671(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_none_type */
extern T0* T35x20037697(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T35x20004870(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_forth_seed */
extern T6 T35x20004877(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iteration_cursor_after_seed */
extern T6 T35x20004876(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.iterable_new_cursor_seed */
extern T6 T35x20004875(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_call_seed */
extern T6 T35x20004873(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_32_type */
extern T0* T35x20037677(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T35x20037669(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_32_type */
extern T0* T35x20037702(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_32_type */
extern T0* T35x20037710(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.string_8_type */
extern T0* T35x20037709(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.function_item_seed */
extern T6 T35x20004874(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T35x20037667(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.alias_transition_mode */
extern T1 T35x20004887(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.scoop_mode */
extern T1 T35x20004882(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T35x20037712(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T35x20037668(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.type_any_type */
extern T0* T35x20037718(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T35x20004872(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.console_application_mode */
extern T1 T35x20004880(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.multithreaded_mode */
extern T1 T35x20004881(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.exception_trace_mode */
extern T1 T35x20004885(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.trace_mode */
extern T1 T35x20004886(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_resource_pathnames */
extern T0* T35x20004894(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_make_pathnames */
extern T0* T35x20004893(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_object_pathnames */
extern T0* T35x20004891(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_library_pathnames */
extern T0* T35x20004892(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_linker_flags */
extern T0* T35x20004896(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_cflags */
extern T0* T35x20004895(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.external_include_pathnames */
extern T0* T35x20004890(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.use_boehm_gc */
extern T1 T35x20004888(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.class_count_recursive */
extern T6 T35x20037660(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.universe */
extern T0* T35x19677190(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.ise_exception_manager_type */
extern T0* T35x20037689(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.pointer_type */
extern T0* T35x20037698(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.detachable_tuple_type */
extern T0* T35x20037715(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.routine_type */
extern T0* T35x20037704(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.typed_pointer_any_type */
extern T0* T35x20037726(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.special_any_type */
extern T0* T35x20037705(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.immutable_string_32_type */
extern T0* T35x20037683(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.character_8_type */
extern T0* T35x20037676(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.real_64_type */
extern T0* T35x20037703(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_64_type */
extern T0* T35x20037695(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_32_type */
extern T0* T35x20037694(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_16_type */
extern T0* T35x20037693(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.natural_8_type */
extern T0* T35x20037692(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_64_type */
extern T0* T35x20037688(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_32_type */
extern T0* T35x20037687(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_16_type */
extern T0* T35x20037686(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.integer_8_type */
extern T0* T35x20037685(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.boolean_type */
extern T0* T35x20037674(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_creation */
extern T0* T35x20004867(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.root_type */
extern T0* T35x20004866(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.master_classes */
extern T0* T35x20037638(GE_context* ac, T0* C);
/* Call to ET_SYSTEM.system_name */
extern T0* T35x20004889(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T37x5849095(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T37x5734401T0T6T6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T37x5849090(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T37x5849093(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T37x5849096(GE_context* ac, T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T48x5275656(GE_context* ac, T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T48x5275651(GE_context* ac, T0* C);
/* Call to AP_OPTION.description */
extern T0* T48x5275649(GE_context* ac, T0* C);
/* Call to AP_OPTION.names */
extern T0* T48x5275653(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T48x5275660(GE_context* ac, T0* C);
/* Call to AP_OPTION.example */
extern T0* T48x5275650(GE_context* ac, T0* C);
/* Call to AP_OPTION.name */
extern T0* T48x5275652(GE_context* ac, T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T48x5275662(GE_context* ac, T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T48x5275659(GE_context* ac, T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T48x5275657(GE_context* ac, T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T48x5275655(GE_context* ac, T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T48x5275654(GE_context* ac, T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T48x5275664(GE_context* ac, T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T48x5275661(GE_context* ac, T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T52x11403267(GE_context* ac, T0* C);
/* Call to detachable KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T59x7225345T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_base_type_with_type_marks */
extern T1 T75x22970413T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T75x22970426T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_type_reference_with_type_mark */
extern T1 T75x22970395T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T75x22970429T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T75x22970421T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T75x22429700(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T75x22970438(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.type_with_type_mark */
extern T0* T75x22970386T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T75x23003139(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T75x22970379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T75x22970377T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.shallow_base_type_with_type_mark */
extern T0* T75x22970376T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_type_attached_with_type_mark */
extern T1 T75x22970397T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.named_base_class */
extern T0* T75x23003140(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T75x22429708(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.index_of_label */
extern T6 T75x22429705T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_type_detachable_with_type_mark */
extern T1 T75x22970399T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T75x22970430T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T75x22970428T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T75x22970425T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_base_class_type_with_type_marks */
extern T1 T75x22970423T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.conforms_to_type_with_type_marks */
extern T1 T75x22970427T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_BASE_TYPE.is_type_expanded_with_type_mark */
extern T1 T75x22970393T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T75x22970422T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.same_named_class_type_with_type_marks */
extern T1 T75x22970420T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T75x22970439(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.shallow_named_type_with_type_mark */
extern T0* T75x22970383T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_with_type_mark */
extern T0* T75x22970374T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.base_type_actual_count */
extern T6 T75x22970388T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_BASE_TYPE.named_type_with_type_mark */
extern T0* T75x22970381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.same_named_type_with_type_marks */
extern T1 T75x22970411T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T75x22429712(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_as_base_class */
extern T1 T75x22429717(GE_context* ac, T0* C);
/* Call to ET_BASE_TYPE.same_named_type */
extern T1 T75x22970410T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to READABLE_STRING_GENERAL.code */
extern T10 T103x2031617T6(GE_context* ac, T0* C, T6 a1);
/* Call to READABLE_STRING_GENERAL.count */
extern T6 T103x2031655(GE_context* ac, T0* C);
/* Call to READABLE_STRING_GENERAL.substring */
extern T0* T103x2031696T6T6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* Call to READABLE_STRING_GENERAL.item */
extern T3 T103x2031618T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.filename */
extern T0* T200x15073283(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.universe */
extern T0* T200x15073291(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.library_target */
extern T0* T200x15073288(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.targets */
extern T0* T200x15073287(GE_context* ac, T0* C);
/* Call to ET_POSITION.column */
extern T6 T201x21151746(GE_context* ac, T0* C);
/* Call to ET_POSITION.line */
extern T6 T201x21151745(GE_context* ac, T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T201x21151751(GE_context* ac, T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T201x21151747(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T216x19677190(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T256x24608781T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T256x24608802T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_basic */
extern T1 T256x24608777(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T256x24707073(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T256x24608782(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T256x24608783(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T256x24608774(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T256x24608803T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T256x24608800T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T256x24608801T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T256x24608798(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T256x24608794(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T256x24608792(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T256x24608775(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T256x24608804T0T8T8(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T256x24608784(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T256x24608796(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T256x458753(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T256x24608773(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T256x24608769(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T256x24608810(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T256x24608806(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T256x24608805(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T256x24608799(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T256x24707077(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.conforming_ancestors */
extern T0* T256x24608788(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.is_tuple */
extern T1 T256x24608776(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T256x24608778(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T260x20922373(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T260x21512193(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T260x21512201(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T260x20922369(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T260x21512195(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T260x458753(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T260x21512194(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T260x21643267T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T260x20922372(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.across_cursor_name */
extern T0* T260x21512237(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_across_cursor */
extern T1 T260x21512199(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.object_test_local_name */
extern T0* T260x21512236(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_object_test_local */
extern T1 T260x21512198(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T260x21512234(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T260x21512197(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T260x21512235(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T260x21512200(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T260x21512223(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T260x21512203(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T261x458753(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_static */
extern T1 T261x18808869(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T261x18808886T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T261x18890763(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T261x18808888T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T261x18808885(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T261x18890762(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T261x18808839(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T261x18808835(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T261x18808838(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T261x18890760(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T261x18890758T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T261x18808892T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.implementation_class */
extern T0* T261x19513349(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.postconditions */
extern T0* T261x18399242(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.preconditions */
extern T0* T261x18399241(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_parenthesisable */
extern T1 T261x18808876(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T261x18808859(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T261x18808860(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T262x18808863(GE_context* ac, T0* C);
/* Call to ET_QUERY.type */
extern T0* T262x18890761(GE_context* ac, T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T262x19513347(GE_context* ac, T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T262x458753(GE_context* ac, T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T262x18890763(GE_context* ac, T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T262x19316739(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T262x18808886T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T262x18808839(GE_context* ac, T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T262x18808835(GE_context* ac, T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T262x18808838(GE_context* ac, T0* C);
/* Call to ET_QUERY.name */
extern T0* T262x18890760(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T262x18890762(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_static */
extern T1 T262x18808869(GE_context* ac, T0* C);
/* Call to ET_QUERY.arguments_count */
extern T6 T262x18808885(GE_context* ac, T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T262x18890758T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T262x18399245(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T262x18808865(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T262x18808864(GE_context* ac, T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T262x18808892T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.implementation_class */
extern T0* T262x19513349(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T262x18808874(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T262x18808873(GE_context* ac, T0* C);
/* Call to ET_QUERY.postconditions */
extern T0* T262x18399242(GE_context* ac, T0* C);
/* Call to ET_QUERY.preconditions */
extern T0* T262x18399241(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once_per_object */
extern T1 T262x18399236(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T262x18399233(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_parenthesisable */
extern T1 T262x18808876(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T262x18808875(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T262x18808859(GE_context* ac, T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T262x18808860(GE_context* ac, T0* C);
/* Call to ET_TYPE.to_text */
extern T0* T265x22970438(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_base_type_with_type_marks */
extern T1 T265x22970413T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.base_class */
extern T0* T265x22970371T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T265x22970380T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T265x22970408T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T265x22970431T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_identifier_anchored_type */
extern T1 T265x22970401(GE_context* ac, T0* C);
/* Call to ET_TYPE.depends_on_qualified_anchored_type */
extern T1 T265x22970402T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T265x22970403T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T265x22970400(GE_context* ac, T0* C);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T265x22970426T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_type */
extern T1 T265x22970410T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.type_with_type_mark */
extern T0* T265x22970386T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T265x22970416T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T265x22970419T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T265x22970414T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_type_with_type_marks */
extern T1 T265x22970411T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.position */
extern T0* T265x20922369(GE_context* ac, T0* C);
/* Call to ET_TYPE.last_leaf */
extern T0* T265x20922373(GE_context* ac, T0* C);
/* Call to ET_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T265x22970418T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T265x22970417T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T265x22970415T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_syntactical_type_with_type_marks */
extern T1 T265x22970409T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_reference_with_type_mark */
extern T1 T265x22970395T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T265x22970429T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T265x22970421T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_detachable */
extern T1 T265x22970398T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_like_current */
extern T1 T265x22970389(GE_context* ac, T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T265x22970382T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T265x22970391(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_attached */
extern T1 T265x22970396T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_named_type */
extern T1 T265x22970390(GE_context* ac, T0* C);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T265x22970392T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T265x22970375T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type_with_type_mark */
extern T0* T265x22970376T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T265x22970379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_actual */
extern T0* T265x22970377T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.is_type_attached_with_type_mark */
extern T1 T265x22970397T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.base_type_with_type_mark */
extern T0* T265x22970374T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.shallow_named_type_with_type_mark */
extern T0* T265x22970383T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_type_with_type_mark */
extern T0* T265x22970381T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_to_type_with_type_marks */
extern T1 T265x22970427T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.is_type_expanded_with_type_mark */
extern T1 T265x22970393T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.named_base_class */
extern T0* T265x22970372T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.is_type_detachable_with_type_mark */
extern T1 T265x22970399T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T265x22970422T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_named_class_type_with_type_marks */
extern T1 T265x22970420T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T265x22970430T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T265x22970428T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T265x22970388T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T265x22970425T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.same_base_class_type_with_type_marks */
extern T1 T265x22970423T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE.is_type_reference */
extern T1 T265x22970394T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.base_type */
extern T0* T265x22970373T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.type */
extern T0* T265x23019521(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T266x23003137(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.as_nested_type_context */
extern T0* T266x23003183(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_root_context */
extern T1 T266x23003150(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T266x23003143T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T266x23003148(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T266x23003139(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.to_nested_type_context */
extern T0* T266x23003184(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T266x23003162(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T266x23003169T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.scoop_mode */
extern T1 T266x23003163(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T266x23003146(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T266x23003155T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T266x23003157T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T266x23003181T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T266x23003171T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T266x23003177T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T266x23003159T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T266x23003142T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T266x23003153T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T266x23003182T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T266x23003180T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T266x23003172T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T266x23003170T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T266x23003175T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T266x23003173T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_base_class */
extern T0* T266x23003140(GE_context* ac, T0* C);
/* Call to ET_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T266x23003147T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T266x23003165T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_UNIVERSE.adapted_universe */
extern T0* T268x20037650T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.shortest_path */
extern T0* T268x20037651T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.full_lower_name */
extern T0* T268x20037655T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.kind_name */
extern T0* T268x20037657(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_convert_feature */
extern T0* T268x20037742(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_64_type */
extern T0* T268x20037703(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_convert_feature */
extern T0* T268x20037741(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_32_type */
extern T0* T268x20037702(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_convert_feature */
extern T0* T268x20037740(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_64_type */
extern T0* T268x20037695(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_convert_feature */
extern T0* T268x20037739(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_32_type */
extern T0* T268x20037694(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_convert_feature */
extern T0* T268x20037738(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_16_type */
extern T0* T268x20037693(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_convert_feature */
extern T0* T268x20037737(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_8_type */
extern T0* T268x20037692(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_convert_feature */
extern T0* T268x20037736(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_64_type */
extern T0* T268x20037688(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_convert_feature */
extern T0* T268x20037735(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_32_type */
extern T0* T268x20037687(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_convert_feature */
extern T0* T268x20037734(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_16_type */
extern T0* T268x20037686(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_convert_feature */
extern T0* T268x20037733(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_8_type */
extern T0* T268x20037685(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.master_class */
extern T0* T268x20037639T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.hash_code */
extern T6 T268x458753(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_convert_feature */
extern T0* T268x20037732(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_32_type */
extern T0* T268x20037677(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_convert_feature */
extern T0* T268x20037731(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_8_type */
extern T0* T268x20037676(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_convert_feature */
extern T0* T268x20037744(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_32_type */
extern T0* T268x20037710(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_convert_feature */
extern T0* T268x20037743(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_8_type */
extern T0* T268x20037709(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.has_master_class */
extern T1 T268x20037633T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.relative_name */
extern T0* T268x20037652T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.boolean_type */
extern T0* T268x20037674(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.implicit_attachment_type_mark */
extern T0* T268x20037729(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_type */
extern T0* T268x20037714(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.function_type */
extern T0* T268x20037682(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.predicate_like_current_type */
extern T0* T268x20037699(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.procedure_like_current_type */
extern T0* T268x20037700(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_tuple_type */
extern T0* T268x20037715(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.pointer_type */
extern T0* T268x20037698(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.typed_pointer_like_current_type */
extern T0* T268x20037727(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_like_current_type */
extern T0* T268x20037725(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.tuple_like_current_type */
extern T0* T268x20037716(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_type */
extern T0* T268x20037663(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T268x20037684(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.immutable_string_32_type */
extern T0* T268x20037683(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_any_type */
extern T0* T268x20037664(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.iterable_detachable_any_type */
extern T0* T268x20037690(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T268x20037707(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_separate_any_type */
extern T0* T268x20037665(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T268x20037678(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T268x20037701(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_string_type */
extern T0* T268x20037708(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_any_type */
extern T0* T268x20037705(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_any_type */
extern T0* T268x20037720(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.special_detachable_any_type */
extern T0* T268x20037706(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_manager_type */
extern T0* T268x20037681(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_exception_type */
extern T0* T268x20037724(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.exception_type */
extern T0* T268x20037679(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_type_exception_type */
extern T0* T268x20037723(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.detachable_exception_type */
extern T0* T268x20037680(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.type_detachable_like_current_type */
extern T0* T268x20037722(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.relative_lower_name */
extern T0* T268x20037653T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_UNIVERSE.unfolded_empty_tuple_actual_parameters */
extern T0* T268x20037717(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.obsolete_routine_type_mode */
extern T1 T268x20037730(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_string_type */
extern T0* T268x20037713(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.current_system */
extern T0* T268x20037649(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.full_name */
extern T0* T268x20037654T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_UNIVERSE.classes_in_group */
extern T0* T268x20037644T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.system_object_parents */
extern T0* T268x20037712(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.any_parents */
extern T0* T268x20037668(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.system_object_type */
extern T0* T268x20037711(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.natural_type */
extern T0* T268x20037691(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.wide_character_type */
extern T0* T268x20037728(GE_context* ac, T0* C);
/* Call to ET_UNIVERSE.character_type */
extern T0* T268x20037675(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T269x22380549T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T269x22380546(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T269x22380545(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.position */
extern T0* T271x20922369(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_detachable_mark */
extern T1 T271x21364744(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attached_mark */
extern T1 T271x21364743(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_attachment_mark */
extern T1 T271x21364742(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_separateness_mark */
extern T1 T271x21364740(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expanded_mark */
extern T1 T271x21364738(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_expandedness_mark */
extern T1 T271x21364737(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_implicit_mark */
extern T1 T271x21364745(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.text */
extern T0* T271x21364754(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.overridden_type_mark */
extern T0* T271x21364753T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE_MARK.is_separate_mark */
extern T1 T271x21364741(GE_context* ac, T0* C);
/* Call to ET_TYPE_MARK.is_reference_mark */
extern T1 T271x21364739(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.last_leaf */
extern T0* T272x20922373(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.count */
extern T6 T272x22347777(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T272x22347778T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.type */
extern T0* T272x22347779T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_PARAMETERS.is_empty */
extern T1 T272x22347783(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T272x22347789T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T272x22347794T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T272x22347785(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.index_of_label */
extern T6 T272x22347781T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T272x22347786T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T272x22347787T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T272x22347784(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.same_named_types */
extern T1 T272x22347790T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T272x22347791T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_ACTUAL_PARAMETERS.named_types */
extern T0* T272x22347780T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T274x24707077(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T274x24707073(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T274x24707074(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.can_be_void */
extern T1 T274x24707075(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T274x24625153T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T274x24625156(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T274x24625160(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T274x24707079(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T274x24625157(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T274x24625154(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T274x24625158T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T318x20922373(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T318x20922369(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T318x17383428(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T318x18038787(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T318x17661963T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.unparenthesized_expression */
extern T0* T318x17661956(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_false */
extern T1 T318x17661959(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_instance_free */
extern T1 T318x18038786(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T318x17661958(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.is_never_void */
extern T1 T318x17661957(GE_context* ac, T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T322x19513347(GE_context* ac, T0* C);
/* Call to ET_FEATURE.name */
extern T0* T322x18890760(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T322x18890758T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.arguments */
extern T0* T322x18890762(GE_context* ac, T0* C);
/* Call to ET_FEATURE.version */
extern T6 T322x18808844(GE_context* ac, T0* C);
/* Call to ET_FEATURE.are_postconditions_instance_free_recursive */
extern T1 T322x18808878(GE_context* ac, T0* C);
/* Call to ET_FEATURE.are_preconditions_instance_free_recursive */
extern T1 T322x18808877(GE_context* ac, T0* C);
/* Call to ET_FEATURE.extended_name */
extern T0* T322x18808836(GE_context* ac, T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T322x18808835(GE_context* ac, T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T322x19513351(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T322x18808860(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T322x18890763(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T322x18808886T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.is_static */
extern T1 T322x18808869(GE_context* ac, T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T322x18808885(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T322x18399245(GE_context* ac, T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T322x19513349(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T322x18808867(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T322x18890764(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T322x18808865(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T322x18808864(GE_context* ac, T0* C);
/* Call to ET_FEATURE.type */
extern T0* T322x18890761(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once_per_process */
extern T1 T322x18399234(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T322x18808863(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_class_postcondition_recursive */
extern T1 T322x18808879(GE_context* ac, T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T322x458753(GE_context* ac, T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T322x18399241(GE_context* ac, T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T322x18808846(GE_context* ac, T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T322x19513348(GE_context* ac, T0* C);
/* Call to ET_FEATURE.has_validity_error */
extern T1 T322x19513353(GE_context* ac, T0* C);
/* Call to ET_FEATURE.validity_checked */
extern T1 T322x19513352(GE_context* ac, T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T322x18399242(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T322x18808859(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T322x18808873(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T322x18808874(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_parenthesisable */
extern T1 T322x18808876(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T322x18808875(GE_context* ac, T0* C);
/* Call to ET_FEATURE.id */
extern T6 T322x18808843(GE_context* ac, T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T322x18808893T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T322x18808894T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T322x18808891T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T322x18890757(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T322x18808866(GE_context* ac, T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T322x18399233(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T323x20922373(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T323x22118401(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T348x17432578(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T348x17432579(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T348x20922369(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T348x17432581(GE_context* ac, T0* C);
/* Call to ET_CALL_COMPONENT.is_call_agent */
extern T1 T348x17432582(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T349x21512195(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T349x21512201(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T349x20922369(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T349x21512194(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.name */
extern T0* T349x21512193(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T349x21512217(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T349x21512211(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T349x21512205(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T349x21512233(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T349x21512231(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.hash_code */
extern T6 T349x458753(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T349x21512227(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T349x21512225(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T349x21512224(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T349x21512222(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T349x21512221(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T349x21512220(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T349x21512219(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T349x21512218(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T349x21512216(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T349x21512215(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T349x21512214(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T349x21512213(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T349x21512212(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T349x21512210(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T349x21512209(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T349x21512207(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T349x21512206(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T349x21512204(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_parenthesis */
extern T1 T349x21512229(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T349x21512228(GE_context* ac, T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T349x21512232T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.feature_name */
extern T0* T349x21512238(GE_context* ac, T0* C);
/* Call to ET_AGENT.target */
extern T0* T352x15368194(GE_context* ac, T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T352x15368195(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T352x15368202(GE_context* ac, T0* C);
/* Call to ET_AGENT.position */
extern T0* T352x20922369(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T352x15368200(GE_context* ac, T0* C);
/* Call to ET_AGENT.index */
extern T6 T352x18038787(GE_context* ac, T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T352x15368197(GE_context* ac, T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T352x15368196(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.expression */
extern T0* T353x17989636(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.index */
extern T6 T353x18038787(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.type */
extern T0* T353x17989635(GE_context* ac, T0* C);
/* Call to ET_OBJECT_TEST.name */
extern T0* T353x17989637(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T358x17006595(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T358x17006594(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T358x17006597(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T358x17006593(GE_context* ac, T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T358x18038787(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T366x22937601(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T366x20922369(GE_context* ac, T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T366x20922373(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T374x17383429T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T374x17383430(GE_context* ac, T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T374x17383426(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T376x17727489(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T376x20922369(GE_context* ac, T0* C);
/* Call to ET_OPERAND.index */
extern T6 T379x18038787(GE_context* ac, T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T379x18038785(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T380x18038787(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_instance_free */
extern T1 T380x18038786(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T380x20922369(GE_context* ac, T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T380x18038785(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_instance_free */
extern T1 T382x18038786(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T382x18038785(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T382x18038787(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.position */
extern T0* T385x20922369(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_question_mark */
extern T1 T385x21364751(GE_context* ac, T0* C);
/* Call to ET_SYMBOL.is_bang */
extern T1 T385x21364752(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T393x17383429T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T393x17383430(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T393x17383426(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T395x24625153T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T395x24625156(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPES.index_of */
extern T6 T395x24625155T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPES.has_type */
extern T1 T395x24625158T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T401x17088517(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T401x20922369(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T401x18038787(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T401x17088515(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_validity_error */
extern T1 T415x19513353(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T415x18399245(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.postconditions */
extern T0* T415x18399242(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.preconditions */
extern T0* T415x18399241(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_invariants */
extern T0* T415x19513355(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_invariants */
extern T1 T415x19513346(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T415x19513354(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T415x19513345(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T415x19513348(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T415x18399240(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T415x18399238(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T415x18399237(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T415x19513351(GE_context* ac, T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T415x19513349(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T435x15843330(GE_context* ac, T0* C);
/* Call to ET_ASSERTION.is_class_assertion */
extern T1 T435x15843329(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.relative_lower_name */
extern T0* T437x19890196T0T2(GE_context* ac, T0* C, T0* a1, T2 a2);
/* Call to ET_PRIMARY_GROUP.kind_name */
extern T0* T437x19890202(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.full_lower_name */
extern T0* T437x19890198T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_PRIMARY_GROUP.use_obsolete_syntax */
extern T1 T437x19890186(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.current_system */
extern T0* T437x19890192(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.universe */
extern T0* T437x19890191(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_cluster */
extern T1 T437x19890179(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.cluster */
extern T0* T437x19890215(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_override */
extern T1 T437x19890184(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.dotnet_assembly */
extern T0* T437x19890217(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_dotnet_assembly */
extern T1 T437x19890181(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_unknown */
extern T1 T437x19890183(GE_context* ac, T0* C);
/* Call to ET_PRIMARY_GROUP.is_none */
extern T1 T437x19890182(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_lower_name */
extern T0* T457x19890198T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_CLUSTER.scm_write_mapping_recursive */
extern T0* T457x19709992(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.absolute_pathname */
extern T0* T457x19890201(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_abstract */
extern T1 T457x19709954(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_read_only */
extern T1 T457x19890185(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_override */
extern T1 T457x19890184(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.dependant_constraint */
extern T0* T457x19709986(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.overridden_constraint_enabled */
extern T1 T457x19709987(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_mapping_constraint_enabled */
extern T1 T457x19709988(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.provider_constraint */
extern T0* T457x19709985(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.full_pathname */
extern T0* T457x19890199(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_implicit */
extern T1 T457x19709962(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_preparsed */
extern T1 T457x19890187(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.parent */
extern T0* T457x19890218(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.universe */
extern T0* T457x19890191(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.subclusters */
extern T0* T457x19709984(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_directory_name */
extern T1 T457x19709968T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.is_recursive */
extern T1 T457x19709956(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.is_valid_eiffel_filename */
extern T1 T457x19709967T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.scm_write_mapping */
extern T0* T457x19709990(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.scm_read_mapping */
extern T0* T457x19709989(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_UNIVERSE.hash_code */
extern T6 T473x458753(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.dotnet_assembly */
extern T0* T476x19677190(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T476x19890198T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T476x458753(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T476x19857427(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T558x21610498(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T558x21610497(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_call_name */
extern T1 T558x21610500T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T558x20922369(GE_context* ac, T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T558x21610499T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T599x12124165(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T599x27721732T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T599x12124171(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T599x27721741(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T599x12124161(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T599x27721739(GE_context* ac, T0* C);
/* Call to ET_CLUSTERS.clusters */
extern T0* T652x19726346(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.last_leaf */
extern T0* T689x20922373(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T689x22331396T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T689x22380546(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.label */
extern T0* T689x22380547(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETER.position */
extern T0* T689x20922369(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T690x22970416T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T690x22970419T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T690x22970414T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_type_with_type_marks */
extern T1 T690x22970413T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T690x22970418T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T690x22970417T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T690x22970438(GE_context* ac, T0* C);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T690x22970415T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T690x22970409T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T690x22970379T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T690x22970377T6T0(GE_context* ac, T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.type_with_type_mark */
extern T0* T690x22970386T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T690x22970403T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference_with_type_mark */
extern T1 T690x22970395T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type_with_type_marks */
extern T1 T690x22970427T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.is_type_expanded_with_type_mark */
extern T1 T690x22970393T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.named_base_class */
extern T0* T690x22970372T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_named_type_with_type_marks */
extern T1 T690x22970411T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.is_type_detachable_with_type_mark */
extern T1 T690x22970399T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_attached_with_type_mark */
extern T1 T690x22970397T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T690x22970421T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T690x22970422T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_named_class_type_with_type_marks */
extern T1 T690x22970420T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T690x22970429T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T690x22970430T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T690x22970428T0T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* Call to ET_NAMED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T690x22970425T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.same_base_class_type_with_type_marks */
extern T1 T690x22970423T0T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T690x22970371T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T729x16990212(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T729x18038787(GE_context* ac, T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T3 T729x16990211(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.cast_type */
extern T0* T737x17072140(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T737x18038787(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T737x17072147(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T11 T737x17072130(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.to_integer_32 */
extern T6 T737x17072133(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T737x17072129(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T737x17072139(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.value_position */
extern T0* T737x17072144(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_64 */
extern T1 T737x17072159(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_binary */
extern T1 T737x17072150(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T737x17072149(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_64 */
extern T1 T737x17072155(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_32 */
extern T1 T737x17072154(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_32 */
extern T1 T737x17072158(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_16 */
extern T1 T737x17072157(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_natural_8 */
extern T1 T737x17072156(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_16 */
extern T1 T737x17072153(GE_context* ac, T0* C);
/* Call to ET_INTEGER_CONSTANT.is_integer_8 */
extern T1 T737x17072152(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T779x15433729(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T787x21512232T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T787x21430315T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T787x21512214(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T787x21512218(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T787x21512224(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T787x21512225(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T787x458753(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.alias_lower_name */
extern T0* T787x21430305(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T787x21430300(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T787x21430301(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T787x21512203(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_parenthesis */
extern T1 T787x21512229(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T787x21512228(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T787x21512223(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T790x18350081(GE_context* ac, T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T804x20234243(GE_context* ac, T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T804x20234241(GE_context* ac, T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T804x20234242(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T807x20922369(GE_context* ac, T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T810x20283393(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T825x17465345(GE_context* ac, T0* C);
/* Call to ET_CONDITIONAL.position */
extern T0* T825x20922369(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T830x22560772T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T830x22560770(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T830x22560771(GE_context* ac, T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T839x22675458T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T842x16220163(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T842x16220162(GE_context* ac, T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T842x16220161(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T888x18710529(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T902x21610497(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T902x20922369(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.indexing_term_value */
extern T0* T932x16613378(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.position */
extern T0* T932x20922369(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM.has_indexing_term_value */
extern T1 T932x16613379T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INDEXING_TERM_ITEM.indexing_term */
extern T0* T935x16613377(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.position */
extern T0* T935x20922369(GE_context* ac, T0* C);
/* Call to ET_INDEXING_TERM_ITEM.has_indexing_term_value */
extern T1 T935x16613379T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.position */
extern T0* T941x20922369(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T941x15368196(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T941x18399238(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T941x15368195(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T941x15368194(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T941x18399240(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T941x18399237(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.to_text */
extern T0* T955x22970438(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.position */
extern T0* T955x20922369(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.resolved_formal_parameters */
extern T0* T955x22970431T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_LIKE_TYPE.like_keyword */
extern T0* T955x22839298(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.has_formal_types */
extern T1 T955x22970403T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING_ITEM.manifest_string */
extern T0* T972x17907713(GE_context* ac, T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T1019x23019521(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1062x18890769(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1062x18890756(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1062x18890767(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1062x18890754(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1062x18890768(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1062x18890755(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1062x18890753(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1062x18890765(GE_context* ac, T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1062x18890766(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T1133x18399237(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T1133x18399240(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T1133x18399238(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.across_components */
extern T0* T1133x18399244(GE_context* ac, T0* C);
/* Call to ET_CLOSURE.object_tests */
extern T0* T1133x18399243(GE_context* ac, T0* C);
/* Call to ET_ECF_CONDITION_ITEM.is_enabled */
extern T1 T1233x14270465T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_supported */
extern T1 T1233x14270466T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_ECF_CONDITION_ITEM.is_capability_aware */
extern T1 T1233x14319617T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.name */
extern T0* T1247x17432578(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.target */
extern T0* T1247x17432577(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T1247x20185091(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.parenthesis_call */
extern T0* T1247x20463619(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1247x17432579(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.index */
extern T6 T1247x18038787(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_call_agent */
extern T1 T1247x17432582(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T1247x17432581(GE_context* ac, T0* C);
/* Call to XM_DOCUMENT_NODE.parent */
extern T0* T1256x28639233(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.lower_name */
extern T0* T1273x19677187(GE_context* ac, T0* C);
/* Call to ET_ADAPTED_UNIVERSE.name */
extern T0* T1273x19677186(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.last_leaf */
extern T0* T1313x20922373(GE_context* ac, T0* C);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T1313x22691841(GE_context* ac, T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T1317x18743297(GE_context* ac, T0* C);
/* Call to ET_UNTAGGED_ASSERTION.is_class_assertion */
extern T1 T1365x15843329(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1367x20922369(GE_context* ac, T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1367x15876097(GE_context* ac, T0* C);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].item */
extern T0* T1447x9093122T6(GE_context* ac, T0* C, T6 a1);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].count */
extern T6 T1447x9027585(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.implementation_class */
extern T0* T1479x22708228(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1479x22708227(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.name */
extern T0* T1479x22855681(GE_context* ac, T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1479x22970399T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1479x22970397T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1479x22970370T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1479x23019521(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1501x19365891(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1501x19365890(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1501x19365889(GE_context* ac, T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1501x19365892(GE_context* ac, T0* C);
/* Call to XM_ELEMENT_NODE.parent */
extern T0* T1553x28639233(GE_context* ac, T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1560x20922371(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1561x20922369(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1561x21512201(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_prefix_not */
extern T1 T1561x21512227(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and_then */
extern T1 T1561x21512205(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_and */
extern T1 T1561x21512204(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_implies */
extern T1 T1561x21512211(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or_else */
extern T1 T1561x21512217(GE_context* ac, T0* C);
/* Call to ET_OPERATOR.is_infix_or */
extern T1 T1561x21512216(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T1565x19890198T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.kind_lower_name */
extern T0* T1565x19890203(GE_context* ac, T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T1565x19890179(GE_context* ac, T0* C);
/* Call to ET_GROUP.absolute_pathname */
extern T0* T1565x19890201(GE_context* ac, T0* C);
/* Call to ET_GROUP.universe */
extern T0* T1565x19890191(GE_context* ac, T0* C);
/* Call to ET_GROUP.parent */
extern T0* T1565x19890218(GE_context* ac, T0* C);
/* Call to ET_GROUP.full_name */
extern T0* T1565x19890197T2(GE_context* ac, T0* C, T2 a1);
/* Call to ET_GROUP.cluster */
extern T0* T1565x19890215(GE_context* ac, T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1615x20922369(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.operator_name */
extern T0* T1647x21757954(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1647x458753(GE_context* ac, T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1647x21512208(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1669x18399245(GE_context* ac, T0* C);
/* Call to ET_ROUTINE.arguments */
extern T0* T1669x18890762(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.target */
extern T0* T1748x17432577(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.name */
extern T0* T1748x17432578(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_call_agent */
extern T1 T1748x17432582(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.is_tuple_label */
extern T1 T1748x17432581(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL_INSTRUCTION.arguments */
extern T0* T1748x17432579(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1751x15368196(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1752x18399245(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once_per_process */
extern T1 T1752x18399234(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1752x18399233(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.lower_name */
extern T0* T1752x19513347(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1752x19070979(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1752x19070977(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1752x18890762(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1753x18399240(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1753x19070977(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.is_once_per_process */
extern T1 T1753x18399234(GE_context* ac, T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1753x19070979(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.target */
extern T0* T1768x17432577(GE_context* ac, T0* C);
/* Call to ET_QUALIFIED_FEATURE_CALL.name */
extern T0* T1768x17432578(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.parenthesis_call */
extern T0* T1770x20463619(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.name */
extern T0* T1770x17432578(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.target */
extern T0* T1770x17432577(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.arguments */
extern T0* T1770x17432579(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.expression */
extern T0* T1774x17498113(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.convert_feature */
extern T0* T1774x17498114(GE_context* ac, T0* C);
/* Call to ET_CONVERT_EXPRESSION.index */
extern T6 T1774x18038787(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1778x18399237(GE_context* ac, T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1778x18399238(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1781x18399238(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.arguments */
extern T0* T1782x20185090(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENTS.name */
extern T0* T1782x20185089(GE_context* ac, T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T1783x17432579(GE_context* ac, T0* C);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.arguments */
extern T0* T1786x20185090(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.name */
extern T0* T1791x22806529(GE_context* ac, T0* C);
/* Call to ET_LIKE_IDENTIFIER.to_text */
extern T0* T1791x22970438(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].target */
extern T0* T1992x12402689(GE_context* ac, T0* C);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T1992x12402690T6(GE_context* ac, T0* C, T6 a1);
/* Call to EXCEPTION.set_type_name */
extern void T21x1556504T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_recipient_name */
extern void T21x1556507T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_description */
extern void T21x1556509T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_exception_trace */
extern void T21x1556503T0(GE_context* ac, T0* C, T0* a1);
/* Call to EXCEPTION.set_throwing_exception */
extern void T21x1556508T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.register_class */
extern void T35x20004929T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T35x20004930T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T35x20004931T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T35x20004932T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T35x20004935T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T35x20004933T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T35x20004934T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_is_equal_seed */
extern void T35x20004936T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T35x20004937T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T35x20004938T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_SYSTEM.master_classes_do_recursive_until */
extern void T35x20037770T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_SYSTEM.preparse_recursive */
extern void T35x20037756T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive */
extern void T35x20037780T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_SYSTEM.classes_do_recursive_until */
extern void T35x20037779T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T37x5849098(GE_context* ac, T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T37x5849100(GE_context* ac, T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T48x5275666T0(GE_context* ac, T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T48x5275665(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T84x5750798T6(GE_context* ac, T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T84x5881862T2(GE_context* ac, T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T84x5963778(GE_context* ac, T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T84x5750800T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T84x5881861T0(GE_context* ac, T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T84x5963779T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T168x26771458T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T169x26705933T0T0T1(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T169x26705932T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T169x26705927(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T169x26705934(GE_context* ac, T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T169x26705928T0T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T169x26705926T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T169x26705929T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T169x26705925T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T169x26705931T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T169x26705930T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T169x26705935(GE_context* ac, T0* C);
/* Call to ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T200x15073297T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T200x15073296T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T200x15073300T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T200x15073298T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T200x15073292T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_description */
extern void T200x15073293T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T200x15073294T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T200x15073295T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T216x19677192T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T256x24608821T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T256x24608820T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T256x24707082T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T256x24608818T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_equality_expression */
extern void T256x24608819T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T256x24608828T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.use_all_attributes */
extern void T256x24608823T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T256x24608827T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T256x24608830(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE.set_attribute_position */
extern void T256x24608824T0T6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T256x24608815T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_hash_code */
extern void T256x24608825T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T256x24608826T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T260x21512240(GE_context* ac, T0* C);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T260x21512239T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_PROCEDURE.reset_after_interface_checked */
extern void T261x18808917(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T261x18808918(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T261x18808919(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.reset_validity_checked */
extern void T261x19513357(GE_context* ac, T0* C);
/* Call to ET_PROCEDURE.set_across_components */
extern void T261x18399246T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_object_tests */
extern void T261x18399247T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T261x18808904T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.reset_after_interface_checked */
extern void T262x18808917(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T262x18808918(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset */
extern void T262x18808919(GE_context* ac, T0* C);
/* Call to ET_QUERY.reset_validity_checked */
extern void T262x19513357(GE_context* ac, T0* C);
/* Call to ET_QUERY.set_across_components */
extern void T262x18399246T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_object_tests */
extern void T262x18399247T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T262x18808904T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T264x25264289T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_from_expression */
extern void T264x25264291T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_builtin_expression */
extern void T264x25264295T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T264x25264227T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_instruction */
extern void T264x25264136T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T264x25264152T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T264x25264175T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T264x25264287T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T264x25264321T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T264x25264204T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T264x25264326T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T264x25264327T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T264x25264328T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T264x25264297T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T264x25264154T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T264x25264134T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T264x25264312T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T264x25264221T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T264x25264234T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T264x25264244T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T264x25264280T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T264x25264310T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_instruction */
extern void T264x25264346T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T264x25264156T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_instruction */
extern void T264x25264168T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T264x25264145T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T264x25264258T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T264x25264304T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T264x25264241T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_n */
extern void T264x25264209T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T264x25264255T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T264x25264187T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T264x25264274T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T264x25264257T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T264x25264190T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T264x25264276T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T264x25264189T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_object_test */
extern void T264x25264192T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T264x25264193T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T264x25264173T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T264x25264198T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T264x25264225T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T264x25264262T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T264x25264157T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T264x25264282T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T264x25264253T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T264x25264176T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_type */
extern void T264x25264166T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_like_braced_type */
extern void T264x25264167T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T264x25264210T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T264x25264256T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T264x25264188T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T264x25264279T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T264x25264191T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T264x25264277T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T264x25264313T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T264x25264314T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T264x25264254T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T264x25264146T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T264x25264142T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T264x25264162T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_binary_integer_constant */
extern void T264x25264320T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_octal_integer_constant */
extern void T264x25264194T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T264x25264239T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T264x25264143T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T264x25264163T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_named_object_test */
extern void T264x25264197T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T264x25264151T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T264x25264153T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T264x25264179T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T264x25264202T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_expression */
extern void T264x25264235T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T264x25264311T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T264x25264316T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_across_expression */
extern void T264x25264347T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T264x25264133T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T264x25264278T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T264x25264275T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T264x25264211T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T264x25264322T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T264x25264164T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T264x25264138T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T264x25264298T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_extended_attribute */
extern void T264x25264260T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T264x25264288T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T264x25264264T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_equality_expression */
extern void T264x25264196T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_object_test */
extern void T264x25264195T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T264x25264199T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unqualified_call_expression */
extern void T264x25264137T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T264x25264158T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_qualified_call_expression */
extern void T264x25264169T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T264x25264283T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T264x25264238T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T264x25264306T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.reset_qualified_anchored_types */
extern void T265x22970443(GE_context* ac, T0* C);
/* Call to ET_TYPE.reset */
extern void T265x22970444(GE_context* ac, T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T265x22970442T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T265x22970441T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T265x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.universes_do_if */
extern void T268x20037766T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.universes_do_all */
extern void T268x20037767T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_if_until */
extern void T268x20037772T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_UNIVERSE.master_classes_do_if */
extern void T268x20037773T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_if */
extern void T268x20037783T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.master_classes_do_all */
extern void T268x20037775T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNIVERSE.master_classes_do_until */
extern void T268x20037774T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_until */
extern void T268x20037784T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_UNIVERSE.classes_do_all */
extern void T268x20037785T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T272x22347797(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.reset */
extern void T272x22347798(GE_context* ac, T0* C);
/* Call to ET_ACTUAL_PARAMETERS.append_to_string */
extern void T272x22347796T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T272x22347795T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T274x24707082T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T274x24707083(GE_context* ac, T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T274x24526849T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_type_from_type_set */
extern void T274x24526851T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_EXPRESSION.process */
extern void T318x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T318x15843332(GE_context* ac, T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T318x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_id */
extern void T322x18808914T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T322x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_validity_error */
extern void T322x19513358(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_validity_checked */
extern void T322x19513359(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T322x18808907T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T322x18808908T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T322x18808915T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T322x18808911T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T322x18808905T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T322x18808906T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T322x18808900(GE_context* ac, T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T322x18808901(GE_context* ac, T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T322x18808910T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T322x18808909T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T349x21512239T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T352x15368204T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T352x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T358x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T358x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T379x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T380x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T380x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T380x18038789(GE_context* ac, T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T382x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T382x18038789(GE_context* ac, T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T401x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T401x17088524T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_cast_type */
extern void T401x17088525T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.process */
extern void T435x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T435x15843332(GE_context* ac, T0* C);
/* Call to ET_CLUSTER.process */
extern void T457x19710003T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_dependant_constraint */
extern void T457x19710014T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_provider_constraint */
extern void T457x19710015T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.add_recursive_cluster */
extern void T457x19710010T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_preparsed */
extern void T457x19710020T1(GE_context* ac, T0* C, T1 a1);
/* Call to ET_CLUSTER.set_scm_write_mapping */
extern void T457x19710012T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CLUSTER.set_scm_read_mapping */
extern void T457x19710013T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.clusters_do_explicit */
extern void T473x19922986T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTERNAL_UNIVERSE.dotnet_assemblies_do_if */
extern void T473x19922979T0T0(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Call to ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T476x19857433T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T476x20037761T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.import_classes */
extern void T476x20037753(GE_context* ac, T0* C);
/* Call to ET_DOTNET_ASSEMBLY.preparse */
extern void T476x20037757T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DOTNET_ASSEMBLY.consume */
extern void T476x19857428T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T558x21610501(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T599x27721751(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T599x27721752T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T599x27721750T0(GE_context* ac, T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T599x27721755(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T599x12124201(GE_context* ac, T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T599x27721753T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T729x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_cast_type */
extern void T729x16990219T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T729x16990218T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T737x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T737x17072167T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T737x17072166T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T737x17072168T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.reset */
extern void T787x21512240(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T787x21430320(GE_context* ac, T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T787x21430319(GE_context* ac, T0* C);
/* Call to ET_ASSIGNER.reset */
extern void T790x18350082(GE_context* ac, T0* C);
/* Call to ET_CHOICE.reset */
extern void T804x20234245(GE_context* ac, T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T807x20234245(GE_context* ac, T0* C);
/* Call to ET_INLINE_AGENT.set_across_components */
extern void T941x18399246T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_object_tests */
extern void T941x18399247T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INLINE_AGENT.set_actual_arguments */
extern void T941x15368204T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.process */
extern void T947x20922378T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T947x20529154(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset_qualified_anchored_types */
extern void T955x22970443(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.reset */
extern void T955x22970444(GE_context* ac, T0* C);
/* Call to ET_LIKE_TYPE.append_to_string */
extern void T955x22970442T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_QUALIFIED_FEATURE_CALL_EXPRESSION.set_index */
extern void T1247x18038788T6(GE_context* ac, T0* C, T6 a1);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1249x24526849T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1249x24526851T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_DOCUMENT_NODE.node_set_parent */
extern void T1256x28491778T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_UNTAGGED_ASSERTION.reset */
extern void T1365x15843332(GE_context* ac, T0* C);
/* Call to [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].remove */
extern void T1447x9093138T6(GE_context* ac, T0* C, T6 a1);
/* Call to XM_ELEMENT_NODE.node_set_parent */
extern void T1553x28491778T0(GE_context* ac, T0* C, T0* a1);
/* Call to ET_OPERATOR.reset */
extern void T1561x21512240(GE_context* ac, T0* C);
/* Call to ET_REGULAR_FEATURE_CALL.set_parenthesis_call */
extern void T1770x20742146T0T0T0(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CALL_WITH_ACTUAL_ARGUMENT_LIST.set_arguments */
extern void T1786x20201474T0(GE_context* ac, T0* C, T0* a1);
/* Call to detachable LX_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T1992x12402692T0(GE_context* ac, T0* C, T0* a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type SPECIAL [CHARACTER_32] */
extern T0* GE_new16(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type STRING_32 */
extern T0* GE_new18(T1 initialize);
/* New instance of type IMMUTABLE_STRING_32 */
extern T0* GE_new19(T1 initialize);
/* New instance of type ISE_EXCEPTION_MANAGER */
extern T0* GE_new20(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new24(T1 initialize);
/* New instance of type [attached] CELL [detachable EXCEPTION] */
extern T0* GE_new25(T1 initialize);
/* New instance of type [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32] */
extern T0* GE_new26(T1 initialize);
/* New instance of type [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]] */
extern T0* GE_new27(T1 initialize);
/* New instance of type [attached] CELL [[attached] NO_MORE_MEMORY] */
extern T0* GE_new28(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new29(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN] */
extern T0* GE_new30(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new31(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new32(T1 initialize);
/* New instance of type ET_ISE_VARIABLES */
extern T0* GE_new33(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new34(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new35(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new36(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new38(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new39(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new40(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new41(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new42(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new44(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new45(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new46(T1 initialize);
/* New instance of type AP_STRING_OPTION */
extern T0* GE_new47(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new51(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new53(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new54(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new55(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new56(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new58(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] STRING_8] */
extern T0* GE_new59(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new62(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_PARSER */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_ECF_ERROR_HANDLER */
extern T0* GE_new64(T1 initialize);
/* New instance of type ET_ECF_SYSTEM */
extern T0* GE_new65(T1 initialize);
/* New instance of type ET_ECF_TARGET */
extern T0* GE_new66(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new67(T1 initialize);
/* New instance of type ET_ECF_VARIABLES */
extern T0* GE_new68(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new69(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new70(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new72(T1 initialize);
/* New instance of type ET_SYSTEM_PROCESSOR */
extern T0* GE_new73(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new76(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new77(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] STRING_8] */
extern T0* GE_new78(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new79(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new80(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new81(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new82(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new83(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new85(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new87(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new88(T1 initialize);
/* New instance of type VOID_TARGET */
extern T0* GE_new89(T1 initialize);
/* New instance of type ROUTINE_FAILURE */
extern T0* GE_new91(T1 initialize);
/* New instance of type OLD_VIOLATION */
extern T0* GE_new93(T1 initialize);
/* New instance of type NO_MORE_MEMORY */
extern T0* GE_new95(T1 initialize);
/* New instance of type INVARIANT_VIOLATION */
extern T0* GE_new96(T1 initialize);
/* New instance of type OPERATING_SYSTEM_SIGNAL_FAILURE */
extern T0* GE_new97(T1 initialize);
/* New instance of type IO_FAILURE */
extern T0* GE_new98(T1 initialize);
/* New instance of type OPERATING_SYSTEM_FAILURE */
extern T0* GE_new99(T1 initialize);
/* New instance of type COM_FAILURE */
extern T0* GE_new100(T1 initialize);
/* New instance of type EIFFEL_RUNTIME_PANIC */
extern T0* GE_new101(T1 initialize);
/* New instance of type PRECONDITION_VIOLATION */
extern T0* GE_new104(T1 initialize);
/* New instance of type POSTCONDITION_VIOLATION */
extern T0* GE_new105(T1 initialize);
/* New instance of type FLOATING_POINT_FAILURE */
extern T0* GE_new106(T1 initialize);
/* New instance of type CHECK_VIOLATION */
extern T0* GE_new107(T1 initialize);
/* New instance of type BAD_INSPECT_VALUE */
extern T0* GE_new108(T1 initialize);
/* New instance of type VARIANT_VIOLATION */
extern T0* GE_new109(T1 initialize);
/* New instance of type LOOP_INVARIANT_VIOLATION */
extern T0* GE_new110(T1 initialize);
/* New instance of type RESCUE_FAILURE */
extern T0* GE_new111(T1 initialize);
/* New instance of type RESUMPTION_FAILURE */
extern T0* GE_new112(T1 initialize);
/* New instance of type CREATE_ON_DEFERRED */
extern T0* GE_new113(T1 initialize);
/* New instance of type EXTERNAL_FAILURE */
extern T0* GE_new114(T1 initialize);
/* New instance of type VOID_ASSIGNED_TO_EXPANDED */
extern T0* GE_new115(T1 initialize);
/* New instance of type EXCEPTION_IN_SIGNAL_HANDLER_FAILURE */
extern T0* GE_new116(T1 initialize);
/* New instance of type MISMATCH_FAILURE */
extern T0* GE_new117(T1 initialize);
/* New instance of type DEVELOPER_EXCEPTION */
extern T0* GE_new118(T1 initialize);
/* New instance of type ADDRESS_APPLIED_TO_MELTED_FEATURE */
extern T0* GE_new119(T1 initialize);
/* New instance of type SERIALIZATION_FAILURE */
extern T0* GE_new120(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new121(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new122(T1 initialize);
/* New instance of type PRIMES */
extern T0* GE_new123(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] INTEGER_32] */
extern T0* GE_new124(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] BOOLEAN] */
extern T0* GE_new125(T6 a1, T1 initialize);
/* New instance of type detachable KL_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new127(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new129(T1 initialize);
/* New instance of type FILE_INFO */
extern T0* GE_new130(T1 initialize);
/* New instance of type MUTEX */
extern T0* GE_new131(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new132(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new133(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new134(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new135(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new136(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new137(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] AP_OPTION] */
extern T0* GE_new140(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new141(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] STRING_8] */
extern T0* GE_new142(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new143(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new144(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] STRING_8] */
extern T0* GE_new145(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] STRING_8] */
extern T0* GE_new146(T6 a1, T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] STRING_8] */
extern T0* GE_new147(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new148(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] BOOLEAN] */
extern T0* GE_new151(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] INTEGER_32] */
extern T0* GE_new154(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new155(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new156(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new157(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new158(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new160(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new161(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new162(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new163(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new164(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
extern T0* GE_new165(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new166(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new167(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new170(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new171(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8] */
extern T0* GE_new173(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8] */
extern T0* GE_new174(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new175(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new176(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] INTEGER_32] */
extern T0* GE_new177(T1 initialize);
/* New instance of type ET_ECF_AST_FACTORY */
extern T0* GE_new178(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_SYSTEM] */
extern T0* GE_new179(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8] */
extern T0* GE_new180(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]] */
extern T0* GE_new181(T1 initialize);
/* New instance of type detachable TUPLE */
extern T0* GE_new182(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, BOOLEAN, [attached] DS_CELL [detachable ET_ECF_SYSTEM]] */
extern T0* GE_new183(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new185(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new186(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new187(T1 initialize);
/* New instance of type ET_ECF_STATE */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_ECF_TARGETS */
extern T0* GE_new189(T1 initialize);
/* New instance of type ET_ECF_LIBRARY */
extern T0* GE_new191(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new192(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new194(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]] */
extern T0* GE_new195(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new196(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new198(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new199(T1 initialize);
/* New instance of type ET_ECF_SYSTEM_CONFIG */
extern T0* GE_new200(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new202(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new203(T1 initialize);
/* New instance of type ET_ECF_TARGET_PARENT */
extern T0* GE_new204(T1 initialize);
/* New instance of type ET_ECF_CAPABILITIES */
extern T0* GE_new205(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new206(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_INTERNAL_UNIVERSE, [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG]] */
extern T0* GE_new207(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new208(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8] */
extern T0* GE_new209(T1 initialize);
/* New instance of type [attached] DS_CELL [detachable ET_ECF_LIBRARY] */
extern T0* GE_new210(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARY */
extern T0* GE_new211(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER, ET_ECF_ADAPTED_LIBRARY, [attached] DS_CELL [detachable ET_ECF_LIBRARY]] */
extern T0* GE_new212(T1 initialize);
/* New instance of type ET_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new214(T1 initialize);
/* New instance of type ET_ECF_DOTNET_ASSEMBLY */
extern T0* GE_new215(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLY */
extern T0* GE_new217(T1 initialize);
/* New instance of type ET_ECF_ERROR */
extern T0* GE_new218(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new219(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new220(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
extern T0* GE_new221(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new222(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new223(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_IDENTIFIER] */
extern T0* GE_new224(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ANY] */
extern T0* GE_new227(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ANY] */
extern T0* GE_new228(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_IDENTIFIER] */
extern T0* GE_new229(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER] */
extern T0* GE_new230(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new231(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new232(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new233(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new234(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_SYSTEM] */
extern T0* GE_new235(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new236(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new237(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM] */
extern T0* GE_new238(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS] */
extern T0* GE_new239(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new240(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new241(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new242(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE] */
extern T0* GE_new243(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES] */
extern T0* GE_new244(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new245(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new246(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new247(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new248(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new249(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new250(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new251(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_CLASS] */
extern T0* GE_new252(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new253(T1 initialize);
/* New instance of type [attached] TUPLE [INTEGER_32] */
extern T0* GE_new254(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new255(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new256(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new257(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new258(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new263(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new275(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new276(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new277(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] ET_TYPE] */
extern T0* GE_new278(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_TYPE] */
extern T0* GE_new279(T6 a1, T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new280(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new281(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new282(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new283(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new285(T1 initialize);
/* New instance of type ET_MASTER_CLASS_CHECKER */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new288(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new289(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new290(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new291(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new292(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLASS] */
extern T0* GE_new293(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_ARRAYED_LIST [[attached] ET_CLASS]] */
extern T0* GE_new294(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new295(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new296(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new297(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new298(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new300(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new301(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new302(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new303(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new304(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER] */
extern T0* GE_new305(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_HASH_LIST */
extern T0* GE_new306(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new307(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION] */
extern T0* GE_new308(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION] */
extern T0* GE_new309(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
extern T0* GE_new310(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new311(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new312(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new313(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST] */
extern T0* GE_new314(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new315(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new316(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_AGENT] */
extern T0* GE_new317(T1 initialize);
/* New instance of type ET_EXPRESSION */
extern T0* GE_new318(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new320(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL_EXPRESSION */
extern T0* GE_new324(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_EXPRESSION */
extern T0* GE_new325(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new326(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new327(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new328(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new329(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] INTEGER_32] */
extern T0* GE_new330(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new331(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new332(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new333(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new334(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new335(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new336(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER] */
extern T0* GE_new337(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new338(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new339(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new340(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new341(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new342(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new343(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new344(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new345(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new346(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new347(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new351(T1 initialize);
/* New instance of type ET_OBJECT_TEST */
extern T0* GE_new353(T1 initialize);
/* New instance of type ET_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new354(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new355(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new356(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new359(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_COMPARATOR_BY_ID */
extern T0* GE_new360(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new364(T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new365(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new369(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new370(T1 initialize);
/* New instance of type ET_EXTENDED_ATTRIBUTE */
extern T0* GE_new371(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new372(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new373(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] INTEGER_32] */
extern T0* GE_new377(T1 initialize);
/* New instance of type ET_IMPLICIT_TYPE_MARK */
extern T0* GE_new384(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new385(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE] */
extern T0* GE_new386(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_CURRENT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new387(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new388(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new389(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new390(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new391(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new394(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new396(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new398(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new399(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new400(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new402(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new403(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new404(T1 initialize);
/* New instance of type NATIVE_STRING */
extern T0* GE_new406(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] STRING_8] */
extern T0* GE_new407(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new409(T1 initialize);
/* New instance of type [attached] DS_CELL [[attached] INTEGER_32] */
extern T0* GE_new410(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new411(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new412(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new414(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT] */
extern T0* GE_new416(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new417(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new418(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new419(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new420(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new421(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new422(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE */
extern T0* GE_new423(T1 initialize);
/* New instance of type ET_OBJECT_TEST_SCOPE_BUILDER */
extern T0* GE_new424(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new425(T1 initialize);
/* New instance of type ET_ACROSS_CURSOR_SCOPE */
extern T0* GE_new426(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE */
extern T0* GE_new427(T1 initialize);
/* New instance of type ET_ATTACHMENT_SCOPE_BUILDER */
extern T0* GE_new428(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new429(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM] */
extern T0* GE_new430(T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new431(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new432(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new434(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new436(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new438(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new439(T1 initialize);
/* New instance of type ET_CLASS_CODES */
extern T0* GE_new440(T1 initialize);
/* New instance of type PATH */
extern T0* GE_new441(T1 initialize);
/* New instance of type ARGUMENTS_32 */
extern T0* GE_new443(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new444(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new445(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new447(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new448(T1 initialize);
/* New instance of type ET_XACE_TARGET */
extern T0* GE_new449(T1 initialize);
/* New instance of type ET_XACE_TARGETS */
extern T0* GE_new452(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new454(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new455(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new456(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new458(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new459(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new462(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new463(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new464(T1 initialize);
/* New instance of type UT_COUNTER */
extern T0* GE_new466(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS] */
extern T0* GE_new467(T1 initialize);
/* New instance of type [attached] TUPLE [UT_COUNTER] */
extern T0* GE_new468(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_CLASS], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new469(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_UNIVERSE] */
extern T0* GE_new470(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new471(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new472(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new474(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLIES */
extern T0* GE_new475(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY */
extern T0* GE_new476(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new477(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new478(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new479(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY]] */
extern T0* GE_new480(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new481(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new482(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]]] */
extern T0* GE_new483(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLIES] */
extern T0* GE_new484(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM_PROCESSOR] */
extern T0* GE_new485(T1 initialize);
/* New instance of type ET_LIBRARY */
extern T0* GE_new486(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_LIBRARY] */
extern T0* GE_new487(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]] */
extern T0* GE_new488(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new489(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new491(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new492(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new493(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]] */
extern T0* GE_new494(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_CLUSTERS] */
extern T0* GE_new495(T1 initialize);
/* New instance of type ET_MASTER_CLASS */
extern T0* GE_new496(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_UNIVERSE] */
extern T0* GE_new497(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_CLUSTER] */
extern T0* GE_new498(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]] */
extern T0* GE_new499(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new500(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new501(T1 initialize);
/* New instance of type [attached] TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new502(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_MASTER_CLASS] */
extern T0* GE_new503(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new504(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new505(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]] */
extern T0* GE_new506(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new507(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new508(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new509(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new510(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]] */
extern T0* GE_new511(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ANCESTORS_STATUS_CHECKER] */
extern T0* GE_new513(T1 initialize);
/* New instance of type [attached] TUPLE [ET_FLATTENING_STATUS_CHECKER] */
extern T0* GE_new514(T1 initialize);
/* New instance of type [attached] TUPLE [ET_INTERFACE_STATUS_CHECKER] */
extern T0* GE_new515(T1 initialize);
/* New instance of type [attached] TUPLE [ET_IMPLEMENTATION_STATUS_CHECKER] */
extern T0* GE_new516(T1 initialize);
/* New instance of type [attached] TUPLE [BOOLEAN] */
extern T0* GE_new517(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new518(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new520(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new521(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new522(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new523(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_UNIVERSE]] */
extern T0* GE_new524(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]]] */
extern T0* GE_new527(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE]] */
extern T0* GE_new531(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]]] */
extern T0* GE_new532(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new533(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new534(T1 initialize);
/* New instance of type ET_ATTACHMENT_SEPARATE_KEYWORDS */
extern T0* GE_new535(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new536(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new537(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new538(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new541(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new542(T1 initialize);
/* New instance of type ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new543(T1 initialize);
/* New instance of type [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8] */
extern T0* GE_new545(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] STRING_8] */
extern T0* GE_new546(T1 initialize);
/* New instance of type [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32] */
extern T0* GE_new547(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES] */
extern T0* GE_new548(T1 initialize);
/* New instance of type ET_ECF_SETTINGS */
extern T0* GE_new550(T1 initialize);
/* New instance of type ET_ECF_OPTIONS */
extern T0* GE_new551(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new552(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new553(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32] */
extern T0* GE_new554(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new555(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new556(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new557(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new559(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32] */
extern T0* GE_new560(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new563(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new564(T1 initialize);
/* New instance of type [attached] CELL [[attached] INTEGER_32] */
extern T0* GE_new566(T1 initialize);
/* New instance of type KL_PATHNAME */
extern T0* GE_new568(T1 initialize);
/* New instance of type READABLE_STRING_32 */
extern T0* GE_new570(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_8] */
extern T0* GE_new571(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION] */
extern T0* GE_new573(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] AP_OPTION] */
extern T0* GE_new575(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION] */
extern T0* GE_new576(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new577(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new578(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new579(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new580(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] STRING_8] */
extern T0* GE_new581(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] BOOLEAN] */
extern T0* GE_new582(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN] */
extern T0* GE_new583(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] INTEGER_32] */
extern T0* GE_new584(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new585(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new586(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new587(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_CALLBACKS_FILTER] */
extern T0* GE_new588(T6 a1, T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new589(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] XM_NAMESPACE] */
extern T0* GE_new590(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8] */
extern T0* GE_new596(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new597(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new598(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new599(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new600(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_POSITION] */
extern T0* GE_new602(T1 initialize);
/* New instance of type [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new603(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new604(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new606(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new608(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new609(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new610(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new611(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new612(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new613(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new614(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new615(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new616(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID] */
extern T0* GE_new617(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new618(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new619(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new620(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new621(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new622(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new623(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new624(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new625(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new626(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new627(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] STRING_8] */
extern T0* GE_new628(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]] */
extern T0* GE_new629(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN] */
extern T0* GE_new630(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new631(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new632(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION] */
extern T0* GE_new633(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new636(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new637(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new639(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new640(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] INTEGER_32] */
extern T0* GE_new641(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8] */
extern T0* GE_new642(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new643(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY] */
extern T0* GE_new646(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new647(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8] */
extern T0* GE_new650(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY] */
extern T0* GE_new651(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new652(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new653(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_LIBRARY] */
extern T0* GE_new654(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] ET_LIBRARY]] */
extern T0* GE_new655(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new656(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG] */
extern T0* GE_new658(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8] */
extern T0* GE_new659(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8] */
extern T0* GE_new660(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_TARGET] */
extern T0* GE_new661(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET] */
extern T0* GE_new663(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new666(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION] */
extern T0* GE_new667(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new668(T1 initialize);
/* New instance of type [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32] */
extern T0* GE_new669(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER] */
extern T0* GE_new671(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new672(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new674(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME] */
extern T0* GE_new677(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS] */
extern T0* GE_new678(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_MASTER_CLASS] */
extern T0* GE_new679(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME] */
extern T0* GE_new680(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLASS_NAME] */
extern T0* GE_new681(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new683(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new684(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new687(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new691(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new692(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new694(T1 initialize);
/* New instance of type C_DATE */
extern T0* GE_new695(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new696(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] INTEGER_32] */
extern T0* GE_new698(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new699(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new700(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD] */
extern T0* GE_new701(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL] */
extern T0* GE_new702(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new703(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new704(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new705(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_QUERY] */
extern T0* GE_new706(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE] */
extern T0* GE_new707(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new708(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS] */
extern T0* GE_new709(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD] */
extern T0* GE_new710(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD] */
extern T0* GE_new711(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new712(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new713(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_KEYWORD] */
extern T0* GE_new714(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new715(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new716(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD] */
extern T0* GE_new717(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL] */
extern T0* GE_new718(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SYMBOL] */
extern T0* GE_new719(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION] */
extern T0* GE_new720(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_POSITION] */
extern T0* GE_new721(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new722(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT] */
extern T0* GE_new724(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK] */
extern T0* GE_new725(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BREAK] */
extern T0* GE_new727(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new728(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT] */
extern T0* GE_new730(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT] */
extern T0* GE_new731(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CURRENT] */
extern T0* GE_new732(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR] */
extern T0* GE_new733(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new734(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FREE_OPERATOR] */
extern T0* GE_new735(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new736(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INTEGER_CONSTANT] */
extern T0* GE_new738(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new739(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new740(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR] */
extern T0* GE_new741(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING] */
extern T0* GE_new742(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING] */
extern T0* GE_new743(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT] */
extern T0* GE_new744(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_REAL_CONSTANT] */
extern T0* GE_new746(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT] */
extern T0* GE_new747(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RESULT] */
extern T0* GE_new748(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new749(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new750(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION] */
extern T0* GE_new751(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new752(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new753(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID] */
extern T0* GE_new755(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new756(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_VOID] */
extern T0* GE_new757(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new758(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new759(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL] */
extern T0* GE_new760(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new761(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BRACKET_SYMBOL] */
extern T0* GE_new762(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new763(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new764(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new765(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new766(T1 initialize);
/* New instance of type ET_ACROSS_EXPRESSION */
extern T0* GE_new767(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION] */
extern T0* GE_new768(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new769(T1 initialize);
/* New instance of type ET_ACROSS_INSTRUCTION */
extern T0* GE_new770(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION] */
extern T0* GE_new771(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new772(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new773(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new774(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new775(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new776(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new777(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new778(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new780(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new781(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new782(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new783(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET] */
extern T0* GE_new784(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_AGENT_TARGET] */
extern T0* GE_new785(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME] */
extern T0* GE_new786(T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new787(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ALIAS_NAME] */
extern T0* GE_new788(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER] */
extern T0* GE_new789(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ASSIGNER] */
extern T0* GE_new791(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new792(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new793(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION] */
extern T0* GE_new794(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT] */
extern T0* GE_new795(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new796(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CALL_AGENT] */
extern T0* GE_new797(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new798(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new799(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new800(T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new801(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION] */
extern T0* GE_new802(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE] */
extern T0* GE_new803(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE] */
extern T0* GE_new805(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new806(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_CONSTANT] */
extern T0* GE_new808(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM] */
extern T0* GE_new809(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_ITEM] */
extern T0* GE_new811(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST] */
extern T0* GE_new812(T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new813(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CHOICE_LIST] */
extern T0* GE_new814(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS] */
extern T0* GE_new815(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLASS] */
extern T0* GE_new816(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM] */
extern T0* GE_new817(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLIENT_ITEM] */
extern T0* GE_new818(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS] */
extern T0* GE_new819(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new820(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CLIENTS] */
extern T0* GE_new821(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND] */
extern T0* GE_new822(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_COMPOUND] */
extern T0* GE_new823(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL] */
extern T0* GE_new824(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONDITIONAL] */
extern T0* GE_new826(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT] */
extern T0* GE_new827(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTANT] */
extern T0* GE_new828(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new829(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new831(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new832(T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new833(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new834(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new835(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new836(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR] */
extern T0* GE_new837(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new838(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new840(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new841(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE] */
extern T0* GE_new843(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new844(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new846(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new847(T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new848(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new849(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new850(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATE_EXPRESSION] */
extern T0* GE_new851(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION] */
extern T0* GE_new852(T1 initialize);
/* New instance of type ET_CREATION_REGION */
extern T0* GE_new853(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATION_REGION] */
extern T0* GE_new854(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR] */
extern T0* GE_new855(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new856(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATOR] */
extern T0* GE_new857(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST] */
extern T0* GE_new858(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new859(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_CREATOR_LIST] */
extern T0* GE_new860(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new861(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new862(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION] */
extern T0* GE_new863(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new864(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION */
extern T0* GE_new865(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION] */
extern T0* GE_new866(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new867(T1 initialize);
/* New instance of type ET_ELSEIF_EXPRESSION_LIST */
extern T0* GE_new868(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST] */
extern T0* GE_new869(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART] */
extern T0* GE_new870(T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new871(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_PART] */
extern T0* GE_new872(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new873(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new874(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST] */
extern T0* GE_new875(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT] */
extern T0* GE_new876(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPORT] */
extern T0* GE_new878(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST] */
extern T0* GE_new879(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPORT_LIST] */
extern T0* GE_new880(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION] */
extern T0* GE_new881(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPRESSION] */
extern T0* GE_new882(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new883(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXPRESSION_ITEM] */
extern T0* GE_new884(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new885(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new886(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new887(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS] */
extern T0* GE_new889(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new890(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new891(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE] */
extern T0* GE_new892(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new893(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new894(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new895(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new896(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new897(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_EXPORT] */
extern T0* GE_new898(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME] */
extern T0* GE_new899(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_NAME] */
extern T0* GE_new900(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new901(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM] */
extern T0* GE_new903(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new904(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT] */
extern T0* GE_new905(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new906(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new908(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new909(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new910(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new911(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new912(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER] */
extern T0* GE_new913(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new914(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new916(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new917(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new918(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION] */
extern T0* GE_new919(T1 initialize);
/* New instance of type ET_IF_EXPRESSION */
extern T0* GE_new920(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_IF_EXPRESSION] */
extern T0* GE_new921(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new922(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new923(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_IF_INSTRUCTION] */
extern T0* GE_new924(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST] */
extern T0* GE_new925(T1 initialize);
/* New instance of type ET_INDEXING_LIST */
extern T0* GE_new926(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_LIST] */
extern T0* GE_new927(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM] */
extern T0* GE_new928(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_ITEM] */
extern T0* GE_new930(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM] */
extern T0* GE_new931(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM] */
extern T0* GE_new933(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new934(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new937(T1 initialize);
/* New instance of type ET_INDEXING_TERM_LIST */
extern T0* GE_new938(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST] */
extern T0* GE_new939(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT] */
extern T0* GE_new940(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INLINE_AGENT] */
extern T0* GE_new942(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new943(T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new944(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION] */
extern T0* GE_new945(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION] */
extern T0* GE_new946(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INSTRUCTION] */
extern T0* GE_new948(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS] */
extern T0* GE_new949(T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new950(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_INVARIANTS] */
extern T0* GE_new951(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new952(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new953(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE] */
extern T0* GE_new954(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LIKE_TYPE] */
extern T0* GE_new956(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new957(T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new958(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE] */
extern T0* GE_new959(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new960(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new962(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new963(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new964(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new965(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new966(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_LOOP_INVARIANTS] */
extern T0* GE_new967(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new968(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new969(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_ARRAY] */
extern T0* GE_new970(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new971(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new973(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new974(T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new975(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST] */
extern T0* GE_new976(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new977(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_MANIFEST_TUPLE] */
extern T0* GE_new978(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE] */
extern T0* GE_new979(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_OBSOLETE] */
extern T0* GE_new981(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new982(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new983(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new984(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT] */
extern T0* GE_new985(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT] */
extern T0* GE_new986(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new987(T1 initialize);
/* New instance of type ET_PARENT_CLAUSE_LIST */
extern T0* GE_new988(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST] */
extern T0* GE_new989(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM] */
extern T0* GE_new990(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_ITEM] */
extern T0* GE_new991(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST] */
extern T0* GE_new992(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PARENT_LIST] */
extern T0* GE_new993(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS] */
extern T0* GE_new994(T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new995(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_POSTCONDITIONS] */
extern T0* GE_new996(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS] */
extern T0* GE_new997(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PRECONDITIONS] */
extern T0* GE_new998(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE] */
extern T0* GE_new999(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_PROCEDURE] */
extern T0* GE_new1000(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1001(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER] */
extern T0* GE_new1003(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY] */
extern T0* GE_new1004(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_QUERY] */
extern T0* GE_new1005(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM] */
extern T0* GE_new1006(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RENAME_ITEM] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_RENAME_LIST] */
extern T0* GE_new1010(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1011(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new1012(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1013(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new1015(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_STRIP_EXPRESSION] */
extern T0* GE_new1016(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE] */
extern T0* GE_new1017(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM] */
extern T0* GE_new1018(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_TYPE_ITEM] */
extern T0* GE_new1020(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST] */
extern T0* GE_new1021(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_TYPE_LIST] */
extern T0* GE_new1023(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT] */
extern T0* GE_new1024(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new1025(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_VARIANT] */
extern T0* GE_new1026(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART] */
extern T0* GE_new1027(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new1028(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WHEN_PART] */
extern T0* GE_new1029(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1030(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new1031(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WHEN_PART_LIST] */
extern T0* GE_new1032(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE] */
extern T0* GE_new1033(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_WRITABLE] */
extern T0* GE_new1034(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS] */
extern T0* GE_new1035(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1036(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1037(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1038(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1039(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1040(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1042(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1043(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1045(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1046(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1047(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1048(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1049(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1 */
extern T0* GE_new1050(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1051(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1052(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1053(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1054(T1 initialize);
/* New instance of type ET_BUILTIN_FEATURE_CHECKER */
extern T0* GE_new1055(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1056(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1057(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_CLASS] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1059(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1060(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2 */
extern T0* GE_new1061(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1063(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1064(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_PROCEDURE] */
extern T0* GE_new1065(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_QUERY] */
extern T0* GE_new1066(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new1067(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1068(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32] */
extern T0* GE_new1069(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new1071(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new1072(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1074(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER] */
extern T0* GE_new1076(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION] */
extern T0* GE_new1077(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32] */
extern T0* GE_new1079(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1080(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1081(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1082(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1083(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1085(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1086(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST] */
extern T0* GE_new1087(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1088(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION] */
extern T0* GE_new1090(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1091(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_AGENT] */
extern T0* GE_new1094(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT] */
extern T0* GE_new1096(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION] */
extern T0* GE_new1098(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1099(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1100(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1101(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE] */
extern T0* GE_new1103(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FEATURE] */
extern T0* GE_new1104(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE] */
extern T0* GE_new1105(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE] */
extern T0* GE_new1106(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1109(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT] */
extern T0* GE_new1111(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1112(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE] */
extern T0* GE_new1116(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8] */
extern T0* GE_new1117(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new1121(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new1122(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new1123(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] RX_CHARACTER_SET] */
extern T0* GE_new1125(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] RX_CHARACTER_SET] */
extern T0* GE_new1126(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1128(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] BOOLEAN] */
extern T0* GE_new1129(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1132(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT] */
extern T0* GE_new1134(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1136(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]] */
extern T0* GE_new1137(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1138(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1139(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]] */
extern T0* GE_new1140(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1141(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE] */
extern T0* GE_new1142(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1143(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]] */
extern T0* GE_new1144(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1145(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1146(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1147(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1148(T1 initialize);
/* New instance of type ET_NAMED_OBJECT_TEST */
extern T0* GE_new1151(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1152(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1153(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1155(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1158(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1159(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1162(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1163(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE] */
extern T0* GE_new1164(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM] */
extern T0* GE_new1165(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE] */
extern T0* GE_new1166(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ASSERTIONS] */
extern T0* GE_new1167(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS] */
extern T0* GE_new1169(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new1171(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new1173(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new1174(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1175(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new1177(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new1178(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new1179(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new1180(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new1181(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new1182(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new1183(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new1184(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new1187(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ANY] */
extern T0* GE_new1188(T1 initialize);
/* New instance of type [attached] TUPLE [UT_TRISTATE] */
extern T0* GE_new1189(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ANY], [attached] PROCEDURE [[attached] TUPLE]] */
extern T0* GE_new1190(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]] */
extern T0* GE_new1191(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE] */
extern T0* GE_new1192(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1194(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN]] */
extern T0* GE_new1195(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]], [attached] FUNCTION [[attached] TUPLE [[attached] ET_MASTER_CLASS], [attached] BOOLEAN], detachable FUNCTION [[attached] TUPLE, [attached] BOOLEAN]] */
extern T0* GE_new1196(T1 initialize);
/* New instance of type ET_ECF_NOTE_ELEMENT */
extern T0* GE_new1197(T1 initialize);
/* New instance of type ET_ECF_CLUSTERS */
extern T0* GE_new1198(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_LIBRARIES */
extern T0* GE_new1199(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_DOTNET_ASSEMBLIES */
extern T0* GE_new1200(T1 initialize);
/* New instance of type ET_ECF_FILE_RULES */
extern T0* GE_new1201(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAGS */
extern T0* GE_new1202(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDES */
extern T0* GE_new1203(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARIES */
extern T0* GE_new1204(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAGS */
extern T0* GE_new1205(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKES */
extern T0* GE_new1206(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECTS */
extern T0* GE_new1207(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCES */
extern T0* GE_new1208(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION] */
extern T0* GE_new1209(T1 initialize);
/* New instance of type ET_ECF_ADAPTED_PRECOMPILED_LIBRARY */
extern T0* GE_new1210(T1 initialize);
/* New instance of type ET_ECF_VERSION */
extern T0* GE_new1212(T1 initialize);
/* New instance of type ET_ECF_CLUSTER */
extern T0* GE_new1213(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_CFLAG */
extern T0* GE_new1214(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_INCLUDE */
extern T0* GE_new1215(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LIBRARY */
extern T0* GE_new1216(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_LINKER_FLAG */
extern T0* GE_new1217(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_MAKE */
extern T0* GE_new1218(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_OBJECT */
extern T0* GE_new1219(T1 initialize);
/* New instance of type ET_ECF_EXTERNAL_RESOURCE */
extern T0* GE_new1220(T1 initialize);
/* New instance of type ET_ECF_FILE_RULE */
extern T0* GE_new1221(T1 initialize);
/* New instance of type ET_ECF_ACTION */
extern T0* GE_new1222(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new1223(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1224(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1225(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]] */
extern T0* GE_new1226(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM_PARSER] */
extern T0* GE_new1227(T1 initialize);
/* New instance of type ET_ECF_ROOT_CLASS */
extern T0* GE_new1228(T1 initialize);
/* New instance of type ET_ECF_ROOT_ALL_CLASSES */
extern T0* GE_new1229(T1 initialize);
/* New instance of type ET_ECF_ORED_CONDITIONS */
extern T0* GE_new1230(T1 initialize);
/* New instance of type ET_ECF_ANDED_CONDITIONS */
extern T0* GE_new1231(T1 initialize);
/* New instance of type ET_ECF_VISIBLE_CLASS */
extern T0* GE_new1232(T1 initialize);
/* New instance of type ET_ECF_BUILD_CONDITION */
extern T0* GE_new1234(T1 initialize);
/* New instance of type ET_ECF_CONCURRENCY_CONDITION */
extern T0* GE_new1235(T1 initialize);
/* New instance of type ET_ECF_CUSTOM_CONDITION */
extern T0* GE_new1236(T1 initialize);
/* New instance of type ET_ECF_DOTNET_CONDITION */
extern T0* GE_new1237(T1 initialize);
/* New instance of type ET_ECF_DYNAMIC_RUNTIME_CONDITION */
extern T0* GE_new1238(T1 initialize);
/* New instance of type ET_ECF_PLATFORM_CONDITION */
extern T0* GE_new1239(T1 initialize);
/* New instance of type ET_ECF_COMPILER_VERSION_CONDITION */
extern T0* GE_new1241(T1 initialize);
/* New instance of type ET_ECF_MSIL_CLR_VERSION_CONDITION */
extern T0* GE_new1242(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM] */
extern T0* GE_new1244(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new1245(T1 initialize);
/* New instance of type ET_PARENTHESIS_EXPRESSION */
extern T0* GE_new1246(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new1250(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new1251(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new1254(T1 initialize);
/* New instance of type [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new1255(T1 initialize);
/* New instance of type [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new1257(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1261(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1262(T1 initialize);
/* New instance of type [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE] */
extern T0* GE_new1263(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new1264(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new1265(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new1266(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET] */
extern T0* GE_new1270(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new1271(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1272(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1274(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new1276(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new1277(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1278(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1279(T1 initialize);
/* New instance of type ET_TEXT_GROUP */
extern T0* GE_new1280(T1 initialize);
/* New instance of type ET_OBJECT_TEST_LIST */
extern T0* GE_new1283(T1 initialize);
/* New instance of type ET_ACROSS_COMPONENT_LIST */
extern T0* GE_new1284(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new1285(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new1286(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new1287(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new1288(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new1289(T1 initialize);
/* New instance of type ET_OCTAL_INTEGER_CONSTANT */
extern T0* GE_new1290(T1 initialize);
/* New instance of type ET_BINARY_INTEGER_CONSTANT */
extern T0* GE_new1291(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new1292(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new1293(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new1295(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new1296(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new1297(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new1298(T1 initialize);
/* New instance of type ET_TAGGED_INDEXING */
extern T0* GE_new1300(T1 initialize);
/* New instance of type ET_INDEXING */
extern T0* GE_new1301(T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new1302(T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new1303(T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new1304(T1 initialize);
/* New instance of type ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD */
extern T0* GE_new1305(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1306(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1307(T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new1308(T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new1309(T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new1311(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new1312(T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new1314(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new1315(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new1316(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new1318(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new1319(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new1320(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new1321(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new1322(T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new1323(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new1324(T1 initialize);
/* New instance of type ET_CLASS_ASSERTION */
extern T0* GE_new1327(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new1328(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new1330(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_BRACED_TYPE */
extern T0* GE_new1331(T1 initialize);
/* New instance of type ET_QUALIFIED_LIKE_TYPE */
extern T0* GE_new1332(T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new1333(T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new1334(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new1335(T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new1336(T1 initialize);
/* New instance of type ET_NULL_INSTRUCTION */
extern T0* GE_new1337(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new1338(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new1339(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new1340(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new1341(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new1343(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new1344(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new1345(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new1346(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new1347(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new1348(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new1349(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new1350(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new1351(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new1352(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new1353(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new1354(T1 initialize);
/* New instance of type ET_OLD_OBJECT_TEST */
extern T0* GE_new1355(T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new1356(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new1357(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new1358(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1359(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1360(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1361(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1362(T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new1363(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1364(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1366(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1368(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_QUERY] */
extern T0* GE_new1369(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE] */
extern T0* GE_new1370(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1372(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1373(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1379(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE] */
extern T0* GE_new1380(T1 initialize);
/* New instance of type ET_LIKE_N */
extern T0* GE_new1382(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_BASE_TYPE] */
extern T0* GE_new1383(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new1385(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] IMMUTABLE_STRING_32] */
extern T0* GE_new1386(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET] */
extern T0* GE_new1388(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new1389(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1390(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1391(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1393(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1395(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1396(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1397(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1398(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS] */
extern T0* GE_new1399(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE] */
extern T0* GE_new1400(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_UNIVERSE] */
extern T0* GE_new1401(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1403(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1404(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1406(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE] */
extern T0* GE_new1407(T6 a1, T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER1 */
extern T0* GE_new1408(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER2 */
extern T0* GE_new1409(T1 initialize);
/* New instance of type ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER */
extern T0* GE_new1410(T1 initialize);
/* New instance of type ET_CLASS_TYPE_STATUS_CHECKER3 */
extern T0* GE_new1411(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1412(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1414(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1415(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1416(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT] */
extern T0* GE_new1417(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER] */
extern T0* GE_new1418(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1419(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1420(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1422(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1423(T1 initialize);
/* New instance of type [attached] DS_LINKED_QUEUE [[attached] STRING_8] */
extern T0* GE_new1425(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE] */
extern T0* GE_new1426(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE] */
extern T0* GE_new1427(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE] */
extern T0* GE_new1428(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_NAMESPACE] */
extern T0* GE_new1429(T6 a1, T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1430(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] XM_POSITION] */
extern T0* GE_new1431(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION] */
extern T0* GE_new1432(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER] */
extern T0* GE_new1433(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1434(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8] */
extern T0* GE_new1437(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1438(T1 initialize);
/* New instance of type detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1440(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1441(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1442(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1443(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1444(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8] */
extern T0* GE_new1445(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] STRING_8] */
extern T0* GE_new1446(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1448(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1449(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY] */
extern T0* GE_new1450(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY] */
extern T0* GE_new1451(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY] */
extern T0* GE_new1452(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LIBRARY] */
extern T0* GE_new1453(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1454(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1455(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1456(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATIVE_STRING] */
extern T0* GE_new1457(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER] */
extern T0* GE_new1458(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1459(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST] */
extern T0* GE_new1460(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1461(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST] */
extern T0* GE_new1462(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1463(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1464(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM] */
extern T0* GE_new1465(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1466(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1467(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE] */
extern T0* GE_new1468(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1469(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS] */
extern T0* GE_new1471(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new1473(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS] */
extern T0* GE_new1474(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1477(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1478(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1479(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME] */
extern T0* GE_new1480(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1481(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE] */
extern T0* GE_new1484(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1486(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1487(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1488(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST] */
extern T0* GE_new1489(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1491(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT] */
extern T0* GE_new1492(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLIENT] */
extern T0* GE_new1493(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type ET_CALL_NAME_TESTER */
extern T0* GE_new1495(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_CALL_NAME] */
extern T0* GE_new1497(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new1498(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1499(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1500(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1502(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1503(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1504(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1505(T1 initialize);
/* New instance of type [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1508(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1510(T1 initialize);
/* New instance of type [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1511(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1512(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1514(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new1515(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1516(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS] */
extern T0* GE_new1519(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE] */
extern T0* GE_new1521(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1523(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1524(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1525(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST] */
extern T0* GE_new1527(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8] */
extern T0* GE_new1531(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME] */
extern T0* GE_new1532(T1 initialize);
/* New instance of type STRING_8_SEARCHER */
extern T0* GE_new1533(T1 initialize);
/* New instance of type detachable ARRAYED_LIST [[attached] INTEGER_32] */
extern T0* GE_new1534(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1536(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1538(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE] */
extern T0* GE_new1539(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1540(T1 initialize);
/* New instance of type [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE] */
extern T0* GE_new1541(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]] */
extern T0* GE_new1542(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE]] */
extern T0* GE_new1543(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE], [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]]] */
extern T0* GE_new1544(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new1547(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new1549(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1550(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1551(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1552(T1 initialize);
/* New instance of type detachable DS_CELL [detachable ET_CLASS] */
extern T0* GE_new1555(T1 initialize);
/* New instance of type [attached] TUPLE [detachable DS_CELL [detachable ET_CLASS]] */
extern T0* GE_new1556(T1 initialize);
/* New instance of type [attached] TUPLE [ET_EIFFEL_PREPARSER, [attached] DS_ARRAYED_LIST [[attached] STRING_8]] */
extern T0* GE_new1558(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new1562(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1563(T1 initialize);
/* New instance of type ET_UNQUALIFIED_CALL_INSTRUCTION */
extern T0* GE_new1564(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1567(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1570(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLIENT_LIST] */
extern T0* GE_new1574(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1576(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1577(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1578(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1580(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1582(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1583(T1 initialize);
/* New instance of type [attached] TUPLE [ET_MASTER_CLASS, ET_SYSTEM_PROCESSOR] */
extern T0* GE_new1590(T1 initialize);
/* New instance of type HEXADECIMAL_STRING_TO_INTEGER_CONVERTER */
extern T0* GE_new1596(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1600(T1 initialize);
/* New instance of type detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1610(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1617(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]] */
extern T0* GE_new1618(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]] */
extern T0* GE_new1619(T6 a1, T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1620(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1621(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1622(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1623(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1624(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1625(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1626(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1627(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1628(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1629(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1630(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1631(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1632(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION] */
extern T0* GE_new1633(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ACTION] */
extern T0* GE_new1634(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION] */
extern T0* GE_new1635(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1636(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1637(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS] */
extern T0* GE_new1640(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8] */
extern T0* GE_new1641(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1642(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1643(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS] */
extern T0* GE_new1644(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1645(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1646(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE] */
extern T0* GE_new1648(T1 initialize);
/* New instance of type [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8] */
extern T0* GE_new1653(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1654(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET] */
extern T0* GE_new1655(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8] */
extern T0* GE_new1657(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1658(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1659(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE] */
extern T0* GE_new1660(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1661(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1662(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT] */
extern T0* GE_new1663(T1 initialize);
/* New instance of type LX_DFA_WILDCARD */
extern T0* GE_new1664(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new1665(T1 initialize);
/* New instance of type ET_STANDARD_ONCE_KEYS */
extern T0* GE_new1667(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new1670(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new1673(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1674(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_TARGET] */
extern T0* GE_new1675(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET] */
extern T0* GE_new1676(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET] */
extern T0* GE_new1677(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new1678(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new1679(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER] */
extern T0* GE_new1680(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1681(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1682(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY] */
extern T0* GE_new1683(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS] */
extern T0* GE_new1684(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] YY_BUFFER] */
extern T0* GE_new1686(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER] */
extern T0* GE_new1687(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new1688(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET] */
extern T0* GE_new1689(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1691(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1692(T1 initialize);
/* New instance of type [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1693(T1 initialize);
/* New instance of type attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1694(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CLUSTER] */
extern T0* GE_new1695(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER] */
extern T0* GE_new1696(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER] */
extern T0* GE_new1697(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS] */
extern T0* GE_new1698(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1699(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1700(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME] */
extern T0* GE_new1701(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_RENAME] */
extern T0* GE_new1702(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_CALL_NAME] */
extern T0* GE_new1707(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME] */
extern T0* GE_new1708(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME] */
extern T0* GE_new1709(T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME] */
extern T0* GE_new1710(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME] */
extern T0* GE_new1711(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME] */
extern T0* GE_new1714(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32] */
extern T0* GE_new1715(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new1716(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE] */
extern T0* GE_new1718(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1719(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE] */
extern T0* GE_new1720(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1721(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1722(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1723(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1724(T6 a1, T1 initialize);
/* New instance of type [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1725(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1726(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new1727(T6 a1, T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1730(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]] */
extern T0* GE_new1731(T1 initialize);
/* New instance of type [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1732(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE] */
extern T0* GE_new1733(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new1734(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1735(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1736(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE] */
extern T0* GE_new1737(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8] */
extern T0* GE_new1739(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new1740(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new1741(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]] */
extern T0* GE_new1742(T6 a1, T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1743(T1 initialize);
/* New instance of type [attached] TUPLE [ET_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1744(T1 initialize);
/* New instance of type [attached] TUPLE [ET_XACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1745(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_SYSTEM, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new1746(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new1754(T1 initialize);
/* New instance of type [attached] TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1755(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_SUBLIST */
extern T0* GE_new1756(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS */
extern T0* GE_new1757(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1759(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1763(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1764(T1 initialize);
/* New instance of type ET_PARENTHESIS_INSTRUCTION */
extern T0* GE_new1765(T1 initialize);
/* New instance of type ET_PARENTHESIS_SYMBOL */
extern T0* GE_new1769(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1775(T1 initialize);
/* New instance of type ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new1787(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1788(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1789(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE] */
extern T0* GE_new1795(T1 initialize);
/* New instance of type [attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8] */
extern T0* GE_new1796(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1801(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]] */
extern T0* GE_new1802(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_INTERNAL_UNIVERSE, ET_ECF_STATE] */
extern T0* GE_new1803(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1804(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]] */
extern T0* GE_new1805(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1806(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]] */
extern T0* GE_new1807(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1808(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]] */
extern T0* GE_new1809(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1810(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]] */
extern T0* GE_new1811(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1812(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]] */
extern T0* GE_new1813(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1814(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]] */
extern T0* GE_new1815(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]] */
extern T0* GE_new1816(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] LX_WILDCARD] */
extern T0* GE_new1817(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]] */
extern T0* GE_new1818(T1 initialize);
/* New instance of type [attached] TUPLE [ET_CLUSTER_DEPENDENCE_CONSTRAINT, ET_GROUP, STRING_8] */
extern T0* GE_new1819(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new1821(T1 initialize);
/* New instance of type [attached] TUPLE [KL_STRING_ROUTINES, STRING_8] */
extern T0* GE_new1822(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8] */
extern T0* GE_new1828(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8] */
extern T0* GE_new1830(T1 initialize);
/* New instance of type [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS] */
extern T0* GE_new1831(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_64] */
extern T0* GE_new1833(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1834(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1835(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1836(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1837(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1838(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY] */
extern T0* GE_new1839(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1840(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1841(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY] */
extern T0* GE_new1842(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1843(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1844(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new1845(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1846(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1847(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG] */
extern T0* GE_new1848(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1849(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1850(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE] */
extern T0* GE_new1851(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1852(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1853(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY] */
extern T0* GE_new1854(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1855(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1856(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG] */
extern T0* GE_new1857(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1858(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1859(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE] */
extern T0* GE_new1860(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1861(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1862(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT] */
extern T0* GE_new1863(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1864(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1865(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE] */
extern T0* GE_new1866(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1867(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1868(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new1869(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1870(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1871(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS] */
extern T0* GE_new1872(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1873(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1874(T6 a1, T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM] */
extern T0* GE_new1875(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] CHARACTER_8] */
extern T0* GE_new1876(T1 initialize);
/* New instance of type LX_WILDCARD_PARSER */
extern T0* GE_new1877(T1 initialize);
/* New instance of type LX_DESCRIPTION */
extern T0* GE_new1878(T1 initialize);
/* New instance of type LX_FULL_DFA */
extern T0* GE_new1879(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_WILDCARD] */
extern T0* GE_new1881(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD] */
extern T0* GE_new1884(T1 initialize);
/* New instance of type detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]] */
extern T0* GE_new1885(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER] */
extern T0* GE_new1887(T1 initialize);
/* New instance of type detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE] */
extern T0* GE_new1889(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new1890(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]] */
extern T0* GE_new1893(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME] */
extern T0* GE_new1894(T1 initialize);
/* New instance of type CHARACTER_PROPERTY */
extern T0* GE_new1895(T1 initialize);
/* New instance of type [attached] TUPLE [ET_GROUP] */
extern T0* GE_new1896(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]], [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]]] */
extern T0* GE_new1897(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1898(T1 initialize);
/* New instance of type [attached] DS_QUICK_SORTER [[attached] AP_OPTION] */
extern T0* GE_new1899(T1 initialize);
/* New instance of type ET_DYNAMIC_EQUALITY_EXPRESSION */
extern T0* GE_new1906(T1 initialize);
/* New instance of type ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION */
extern T0* GE_new1907(T1 initialize);
/* New instance of type detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1908(T1 initialize);
/* New instance of type ET_UNIVERSE_ERROR */
extern T0* GE_new1909(T1 initialize);
/* New instance of type ET_CONVERT_BUILTIN_EXPRESSION */
extern T0* GE_new1913(T1 initialize);
/* New instance of type ET_CONVERT_FROM_EXPRESSION */
extern T0* GE_new1914(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1915(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE] */
extern T0* GE_new1921(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new1924(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]] */
extern T0* GE_new1927(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8] */
extern T0* GE_new1928(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1929(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1930(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_RULE] */
extern T0* GE_new1931(T1 initialize);
/* New instance of type LX_START_CONDITIONS */
extern T0* GE_new1932(T1 initialize);
/* New instance of type LX_ACTION_FACTORY */
extern T0* GE_new1933(T1 initialize);
/* New instance of type LX_SYMBOL_CLASS */
extern T0* GE_new1934(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new1935(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new1936(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_SYMBOL_CLASS] */
extern T0* GE_new1937(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA] */
extern T0* GE_new1938(T1 initialize);
/* New instance of type LX_NFA */
extern T0* GE_new1939(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_NFA] */
extern T0* GE_new1940(T6 a1, T1 initialize);
/* New instance of type LX_EQUIVALENCE_CLASSES */
extern T0* GE_new1941(T1 initialize);
/* New instance of type LX_RULE */
extern T0* GE_new1942(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8] */
extern T0* GE_new1943(T1 initialize);
/* New instance of type LX_UNRECOGNIZED_RULE_ERROR */
extern T0* GE_new1944(T1 initialize);
/* New instance of type LX_MISSING_QUOTE_ERROR */
extern T0* GE_new1945(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_CLASS_ERROR */
extern T0* GE_new1946(T1 initialize);
/* New instance of type LX_BAD_CHARACTER_ERROR */
extern T0* GE_new1947(T1 initialize);
/* New instance of type LX_FULL_AND_META_ERROR */
extern T0* GE_new1948(T1 initialize);
/* New instance of type LX_FULL_AND_REJECT_ERROR */
extern T0* GE_new1949(T1 initialize);
/* New instance of type LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR */
extern T0* GE_new1950(T1 initialize);
/* New instance of type LX_CHARACTER_OUT_OF_RANGE_ERROR */
extern T0* GE_new1951(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] LX_RULE] */
extern T0* GE_new1952(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_RULE] */
extern T0* GE_new1953(T6 a1, T1 initialize);
/* New instance of type LX_DFA_STATE */
extern T0* GE_new1954(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE] */
extern T0* GE_new1955(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE] */
extern T0* GE_new1956(T1 initialize);
/* New instance of type LX_SYMBOL_PARTITIONS */
extern T0* GE_new1957(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new1958(T1 initialize);
/* New instance of type LX_START_CONDITION */
extern T0* GE_new1959(T1 initialize);
/* New instance of type [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE] */
extern T0* GE_new1960(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST [[attached] LX_NFA] */
extern T0* GE_new1961(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new1962(T1 initialize);
/* New instance of type LX_NFA_STATE */
extern T0* GE_new1963(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_CLUSTER] */
extern T0* GE_new1969(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]] */
extern T0* GE_new1970(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_TARGET, ET_ECF_STATE] */
extern T0* GE_new1971(T1 initialize);
/* New instance of type detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE] */
extern T0* GE_new1972(T1 initialize);
/* New instance of type ET_AST_NULL_LEAF */
extern T0* GE_new1974(T1 initialize);
/* New instance of type LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR */
extern T0* GE_new1975(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_16] */
extern T0* GE_new1976(T6 a1, T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] NATURAL_32] */
extern T0* GE_new1977(T6 a1, T1 initialize);
/* New instance of type [attached] ARRAY [[attached] NATURAL_16] */
extern T0* GE_new1978(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] NATURAL_32] */
extern T0* GE_new1979(T1 initialize);
/* New instance of type [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1980(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1981(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1982(T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE] */
extern T0* GE_new1983(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE] */
extern T0* GE_new1984(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [[attached] STRING_8] */
extern T0* GE_new1985(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_START_CONDITION] */
extern T0* GE_new1986(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION] */
extern T0* GE_new1987(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION] */
extern T0* GE_new1988(T1 initialize);
/* New instance of type [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new1991(T1 initialize);
/* New instance of type [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new1993(T1 initialize);
/* New instance of type [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE] */
extern T0* GE_new1995(T1 initialize);
/* New instance of type [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1996(T1 initialize);
/* New instance of type [attached] DS_BILINKABLE [[attached] INTEGER_32] */
extern T0* GE_new1997(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]] */
extern T0* GE_new1998(T6 a1, T1 initialize);
/* New instance of type LX_ACTION */
extern T0* GE_new2000(T1 initialize);
/* New instance of type [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE] */
extern T0* GE_new2001(T1 initialize);
/* New instance of type [attached] DS_BUBBLE_SORTER [[attached] LX_RULE] */
extern T0* GE_new2003(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_NFA_STATE] */
extern T0* GE_new2005(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE] */
extern T0* GE_new2007(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2008(T1 initialize);
/* New instance of type [attached] SPECIAL [[attached] LX_DFA_STATE] */
extern T0* GE_new2010(T6 a1, T1 initialize);
/* New instance of type [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE] */
extern T0* GE_new2011(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE] */
extern T0* GE_new2012(T1 initialize);
/* New instance of type [attached] KL_ARRAY [[attached] LX_RULE] */
extern T0* GE_new2013(T1 initialize);
/* New instance of type [attached] ARRAY [detachable LX_DFA_STATE] */
extern T0* GE_new2014(T1 initialize);
/* New instance of type [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE] */
extern T0* GE_new2015(T1 initialize);
/* New instance of type [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA] */
extern T0* GE_new2016(T1 initialize);
/* New instance of type [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32] */
extern T0* GE_new2018(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2019(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_LIBRARY] */
extern T0* GE_new2020(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2021(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2022(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LACE_DOTNET_GAC_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2023(T1 initialize);
/* New instance of type [attached] TUPLE [ET_DOTNET_ASSEMBLY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2024(T1 initialize);
/* New instance of type [attached] TUPLE [ET_LIBRARY, [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE], INTEGER_32] */
extern T0* GE_new2025(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] ET_ECF_FILE_RULE] */
extern T0* GE_new2028(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new2029(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_FILE_RULES] */
extern T0* GE_new2030(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]] */
extern T0* GE_new2031(T1 initialize);
/* New instance of type [attached] TUPLE [ET_ECF_STATE] */
extern T0* GE_new2032(T1 initialize);
/* New instance of type [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]] */
extern T0* GE_new2034(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] DS_HASH_SET [[attached] STRING_8]] */
extern T0* GE_new2035(T1 initialize);
/* New instance of type [attached] DS_SHELL_SORTER [[attached] INTEGER_32] */
extern T0* GE_new2037(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE] */
extern T0* GE_new2038(T1 initialize);
/* New instance of type [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE] */
extern T0* GE_new2041(T1 initialize);
/* New instance of type [attached] KL_ARRAY [[attached] STRING_8] */
extern T0* GE_new2044(T1 initialize);
/* New instance of type [attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION] */
extern T0* GE_new2045(T1 initialize);
/* New instance of type [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]] */
extern T0* GE_new2046(T1 initialize);
/* GEC.execute */
extern T0* T24c39(GE_context* ac);
/* GEC.report_cannot_read_error */
extern void T24f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T34f179(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T34f182(GE_context* ac, T0* C, T0* a1);
/* MUTEX.unlock */
extern void T131f12(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_unlock */
extern void T131f15(GE_context* ac, T0* C, T14 a1);
/* MUTEX.default_pointer */
extern T14 T131f5(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_has_error */
extern void T34f183(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T34f182p1(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T134f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T134f9(GE_context* ac, T0* C);
/* KL_STDERR_FILE.put_string */
extern void T134f7(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1379f21(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1379f26(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDERR_FILE.console */
extern T0* T134f2(GE_context* ac, T0* C);
/* STD_FILES.error */
extern T0* T394f4(GE_context* ac, T0* C);
/* CONSOLE.make_open_stderr */
extern T0* T1379c23(GE_context* ac, T0* a1);
/* CONSOLE.set_write_mode */
extern void T1379f25(GE_context* ac, T0* C);
/* CONSOLE.console_def */
extern T14 T1379f12(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.make_with_name */
extern void T1379f24(GE_context* ac, T0* C, T0* a1);
/* STRING_8.make_empty */
extern T0* T17c51(GE_context* ac);
/* STRING_8.make */
extern void T17f45(GE_context* ac, T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c45(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_8].make_filled */
extern T0* T15c13(GE_context* ac, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f15(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].extend */
extern void T15f19(GE_context* ac, T0* C, T2 a1);
/* INTEGER_32.min */
extern T6 T6f16(GE_context* ac, T6* C, T6 a1);
/* INTEGER_32.is_less_equal */
extern T1 T6f7(GE_context* ac, T6* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern void T15f18(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make_empty */
extern T0* T15c18(GE_context* ac, T6 a1);
/* CONSOLE.default_pointer */
extern T14 T1379f9(GE_context* ac, T0* C);
/* CONSOLE.set_name */
extern void T1379f28(GE_context* ac, T0* C, T0* a1);
/* FILE_INFO.file_name_to_pointer */
extern T0* T130f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* C_STRING.set_string */
extern void T29f11(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_substring */
extern void T29f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.put_natural_8 */
extern void T129f14(GE_context* ac, T0* C, T8 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f13(GE_context* ac, T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f17(GE_context* ac, T14* C, T14 a1, T14 a2, T6 a3);
/* NATURAL_32.to_natural_8 */
extern T8 T10f5(GE_context* ac, T10* C);
/* C_STRING.make_shared_from_pointer_and_count */
extern void T29f10(GE_context* ac, T0* C, T14 a1, T6 a2);
/* C_STRING.make_shared_from_pointer_and_count */
extern T0* T29c10(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T129c13(GE_context* ac, T14 a1, T6 a2);
/* MANAGED_POINTER.increment_counter */
extern void T129f15(GE_context* ac, T0* C);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_8_0_pointer */
extern void T565f14(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* [attached] CELL [[attached] INTEGER_32].put */
extern void T566f2(GE_context* ac, T0* C, T6 a1);
/* [attached] CELL [[attached] INTEGER_32].put */
extern T0* T566c2(GE_context* ac, T6 a1);
/* NATURAL_32.is_less_equal */
extern T1 T10f4(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.to_natural_32 */
extern T10 T565f10(GE_context* ac, T565* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parsed_natural_32 */
extern T10 T1596f12(GE_context* ac, T0* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_string_with_type */
extern void T1596f19(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1596f19ot1(T0* a1, T0** a2);
extern T1 T1596f19ot2(T0* a1, T0** a2);
/* NATURAL_32.is_valid_character_8_code */
extern T1 T10f18(GE_context* ac, T10* C);
/* INTEGER_32.to_natural_32 */
extern T10 T6f20(GE_context* ac, T6* C);
/* CHARACTER_32.is_character_8 */
extern T1 T3f3(GE_context* ac, T3* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.parse_character */
extern void T1596f22(GE_context* ac, T0* C, T2 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflowed */
extern T1 T1596f16(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1617f7(GE_context* ac, T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.is_greater */
extern T1 T11f11(GE_context* ac, T11* C, T11 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.overflow_checker */
extern T0* T1596f15(GE_context* ac, T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1617c13(GE_context* ac);
/* NATURAL_64.to_natural_64 */
extern T11 T11f15(GE_context* ac, T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f17(GE_context* ac, T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f14(GE_context* ac, T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f16(GE_context* ac, T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f9(GE_context* ac, T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f7(GE_context* ac, T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f7(GE_context* ac, T4* C);
/* [attached] SPECIAL [[attached] NATURAL_64].extend */
extern void T1833f5(GE_context* ac, T0* C, T11 a1);
/* [attached] SPECIAL [[attached] NATURAL_64].make_empty */
extern T0* T1833c4(GE_context* ac, T6 a1);
/* STRING_8.has */
extern T1 T17f42(GE_context* ac, T0* C, T2 a1);
/* STRING_8.area_lower */
extern T6 T17f19(GE_context* ac, T0* C);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(GE_context* ac, T6* C);
/* CHARACTER_8.is_less_equal */
extern T1 T2f7(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_less */
extern T1 T2f6(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.natural_32_code */
extern T10 T2f12(GE_context* ac, T2* C);
/* CHARACTER_8.is_greater_equal */
extern T1 T2f5(GE_context* ac, T2* C, T2 a1);
/* CHARACTER_8.is_hexa_digit */
extern T1 T2f29(GE_context* ac, T2* C);
/* NATURAL_8.is_greater */
extern T1 T8f2(GE_context* ac, T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f10(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern T0* T2f13(GE_context* ac, T2* C);
/* [attached] SPECIAL [[attached] NATURAL_8].fill_with */
extern void T571f8(GE_context* ac, T0* C, T8 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] NATURAL_8].extend */
extern void T571f7(GE_context* ac, T0* C, T8 a1);
/* [attached] SPECIAL [[attached] NATURAL_8].make_empty */
extern void T571f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] NATURAL_8].make_empty */
extern T0* T571c6(GE_context* ac, T6 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.reset */
extern void T1596f18(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.ctoi_convertor */
extern T0* T565f11(GE_context* ac, T565* C);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_trailing_separators_acceptable */
extern void T1596f21(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.set_leading_separators_acceptable */
extern void T1596f20(GE_context* ac, T0* C, T1 a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.make */
extern T0* T1596c17(GE_context* ac);
/* STRING_8.make_from_string */
extern T0* T17c66(GE_context* ac, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].force */
extern void T15f17(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f21(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UTF_CONVERTER.is_hexa_decimal */
extern T1 T565f9(GE_context* ac, T565* C, T0* a1);
/* HEXADECIMAL_STRING_TO_INTEGER_CONVERTER.is_integral_integer */
extern T1 T1596f14(GE_context* ac, T0* C);
/* INTEGER_32.is_greater_equal */
extern T1 T6f13(GE_context* ac, T6* C, T6 a1);
/* UTF_CONVERTER.utf_8_bytes_count */
extern T6 T565f6(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3);
/* INTEGER_32.do_nothing */
extern void T6f33(GE_context* ac, T6* C);
/* FILE_INFO.multi_byte_to_utf_16 */
extern T6 T130f10(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* FILE_INFO.default_pointer */
extern T14 T130f9(GE_context* ac, T0* C);
/* C_STRING.item */
extern T14 T29f4(GE_context* ac, T0* C);
/* C_STRING.make */
extern T0* T29c9(GE_context* ac, T0* a1);
/* C_STRING.make_empty */
extern void T29f7(GE_context* ac, T0* C, T6 a1);
/* C_STRING.make_empty */
extern T0* T29c7(GE_context* ac, T6 a1);
/* UTF_CONVERTER.escaped_utf_32_substring_into_utf_16_0_pointer */
extern void T565f13(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3, T0* a4, T6 a5, T0* a6);
/* MANAGED_POINTER.put_natural_16 */
extern void T129f16(GE_context* ac, T0* C, T9 a1, T6 a2);
/* NATURAL_32.to_natural_16 */
extern T9 T10f10(GE_context* ac, T10* C);
/* NATURAL_32.is_greater */
extern T1 T10f9(GE_context* ac, T10* C, T10 a1);
/* UTF_CONVERTER.utf_16_bytes_count */
extern T6 T565f7(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3);
/* MANAGED_POINTER.resize */
extern void T129f11(GE_context* ac, T0* C, T6 a1);
/* POINTER.memory_set */
extern void T14f12(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_memset */
extern void T14f16(GE_context* ac, T14* C, T14 a1, T6 a2, T6 a3);
/* EXCEPTIONS.raise */
extern void T1254f2(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.raise */
extern void T118f16(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.raise */
extern void T20f19(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.code */
extern T6 T118f8(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.default_pointer */
extern T14 T20f9(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_last_exception */
extern void T20f17(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable EXCEPTION].put */
extern void T25f2(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable EXCEPTION].put */
extern T0* T25c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception_cell */
extern T0* T20f2(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.in_rescue */
extern T1 T20f8(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.is_ignored */
extern T1 T118f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.is_ignored */
extern T1 T20f13(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].has */
extern T1 T26f34(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].same_keys */
extern T1 T26f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].hash_code_of */
extern T6 T26f25(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(GE_context* ac, T6* C);
/* ISE_EXCEPTION_MANAGER.ignored_exceptions */
extern T0* T20f3(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].make */
extern T0* T26c35(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_filled */
extern T0* T124c9(GE_context* ac, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].fill_with */
extern void T124f12(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].extend */
extern void T124f13(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_filled */
extern T0* T125c6(GE_context* ac, T1 a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].fill_with */
extern void T125f9(GE_context* ac, T0* C, T1 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] BOOLEAN].extend */
extern void T125f11(GE_context* ac, T0* C, T1 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_empty */
extern void T125f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].make_empty */
extern T0* T125c8(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_empty */
extern void T124f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].make_empty */
extern T0* T124c8(GE_context* ac, T6 a1);
/* PRIMES.higher_prime */
extern T6 T123f1(GE_context* ac, T0* C, T6 a1);
/* PRIMES.is_prime */
extern T1 T123f3(GE_context* ac, T0* C, T6 a1);
/* PRIMES.default_create */
extern T0* T123c5(GE_context* ac);
/* DEVELOPER_EXCEPTION.exception_manager */
extern T0* T118f6(GE_context* ac, T0* C);
/* DEVELOPER_EXCEPTION.default_create */
extern T0* T118c10(GE_context* ac);
/* EXCEPTIONS.default_create */
extern T0* T1254c1(GE_context* ac);
/* MANAGED_POINTER.default_pointer */
extern T14 T129f5(GE_context* ac, T0* C);
/* POINTER.memory_realloc */
extern T14 T14f4(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_realloc */
extern T14 T14f8(GE_context* ac, T14* C, T14 a1, T6 a2);
/* INTEGER_32.max */
extern T6 T6f14(GE_context* ac, T6* C, T6 a1);
/* MANAGED_POINTER.make */
extern T0* T129c9(GE_context* ac, T6 a1);
/* POINTER.memory_calloc */
extern T14 T14f3(GE_context* ac, T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f6(GE_context* ac, T14* C, T6 a1, T6 a2);
/* CONSOLE.buffered_file_info */
extern T0* T1379f10(GE_context* ac, T0* C);
/* FILE_INFO.make */
extern T0* T130c19(GE_context* ac);
/* FILE_INFO.make_filled_area */
extern void T130f21(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] SPECIAL [[attached] NATURAL_8].make_filled */
extern T0* T571c5(GE_context* ac, T8 a1, T6 a2);
/* FILE_INFO.stat_size */
extern T6 T130f7(GE_context* ac, T0* C);
/* KL_STDERR_FILE.io */
extern T0* T134f4(GE_context* ac, T0* C);
/* STD_FILES.set_output_default */
extern void T394f8(GE_context* ac, T0* C);
/* STD_FILES.output */
extern T0* T394f3(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1379c19(GE_context* ac, T0* a1);
/* STD_FILES.default_create */
extern T0* T394c6(GE_context* ac);
/* KL_STRING_ROUTINES.as_string */
extern T0* T36f6(GE_context* ac, T0* C, T0* a1);
extern T1 T36f6ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.string */
extern T0* T1265f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T1265f40(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T1264f3(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern T0* T1265f33(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T1264c36(GE_context* ac);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T249f1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern T0* T1265f47(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T249c5(GE_context* ac);
/* KL_PLATFORM.maximum_character_code */
extern T6 T248f1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.platform */
extern T0* T1265f39(GE_context* ac, T0* C);
/* KL_PLATFORM.default_create */
extern T0* T248c3(GE_context* ac);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T1265f37(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T1264f6(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T1264f4(GE_context* ac, T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f48(GE_context* ac, T0* C, T2 a1);
/* STRING_8.reset_hash_codes */
extern void T17f49(GE_context* ac, T0* C);
/* STRING_8.resize */
extern void T17f50(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area_with_default */
extern T0* T15f4(GE_context* ac, T0* C, T2 a1, T6 a2);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f5(GE_context* ac, T0* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f8(GE_context* ac, T0* C);
/* STRING_8.capacity */
extern T6 T17f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T1265f35(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T1265f52(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T1265f83(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T1265f93(GE_context* ac, T0* C);
/* STRING_8.string */
extern T0* T17f23(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string */
extern T0* T1265f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T1265f46(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T137f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern T0* T36f2(GE_context* ac, T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T137c3(GE_context* ac);
/* KL_STDERR_FILE.string_ */
extern T0* T134f1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T36c19(GE_context* ac);
/* MUTEX.lock */
extern void T131f11(GE_context* ac, T0* C);
/* MUTEX.current_thread_id */
extern T14 T131f6(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_lock */
extern void T131f14(GE_context* ac, T0* C, T14 a1);
/* ET_ERROR_HANDLER.message */
extern T0* T34f22(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T87c8(GE_context* ac, T0* a1);
/* [attached] ARRAY [[attached] STRING_8].put */
extern void T145f12(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] STRING_8].make_filled */
extern T0* T145c11(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] STRING_8].make_filled_area */
extern void T145f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].make_filled */
extern T0* T146c7(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].fill_with */
extern void T146f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].extend */
extern void T146f10(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] STRING_8].make_empty */
extern void T146f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].make_empty */
extern T0* T146c8(GE_context* ac, T6 a1);
/* GEC.process_system */
extern void T24f44(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T77f13(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern T0* T77f6(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T85c6(GE_context* ac);
/* KL_SHELL_COMMAND.system */
extern void T77f14(GE_context* ac, T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T77f9(GE_context* ac, T0* C, T14 a1);
/* NATIVE_STRING.item */
extern T14 T406f3(GE_context* ac, T0* C);
/* NATIVE_STRING.make */
extern T0* T406c9(GE_context* ac, T0* a1);
/* NATIVE_STRING.set_string */
extern void T406f12(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.set_substring */
extern void T406f13(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATIVE_STRING.unit_size */
extern T6 T406f5(GE_context* ac, T0* C);
/* NATIVE_STRING.upper_cell */
extern T0* T406f7(GE_context* ac, T0* C);
/* NATIVE_STRING.make_empty */
extern void T406f11(GE_context* ac, T0* C, T6 a1);
/* KL_SHELL_COMMAND.default_shell */
extern T0* T77f8(GE_context* ac, T0* C);
/* STRING_32.make_empty */
extern T0* T18c14(GE_context* ac);
/* STRING_32.make */
extern void T18f15(GE_context* ac, T0* C, T6 a1);
/* STRING_32.make */
extern T0* T18c15(GE_context* ac, T6 a1);
/* SPECIAL [CHARACTER_32].make_filled */
extern T0* T16c7(GE_context* ac, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].fill_with */
extern void T16f12(GE_context* ac, T0* C, T3 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].extend */
extern void T16f11(GE_context* ac, T0* C, T3 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern void T16f10(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].make_empty */
extern T0* T16c10(GE_context* ac, T6 a1);
/* KL_SHELL_COMMAND.item */
extern T0* T77f10(GE_context* ac, T0* C, T0* a1);
/* NATIVE_STRING.string */
extern T0* T406f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_0_pointer_to_escaped_string_32 */
extern T0* T565f2(GE_context* ac, T565* C, T0* a1);
/* UTF_CONVERTER.utf_8_0_pointer_into_escaped_string_32 */
extern void T565f18(GE_context* ac, T565* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_8_0_subpointer_into_escaped_string_32 */
extern void T565f23(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* UTF_CONVERTER.escape_code_into */
extern void T565f24(GE_context* ac, T565* C, T0* a1, T9 a2);
/* NATURAL_16.to_hex_string */
extern T0* T9f7(GE_context* ac, T9* C);
/* STRING_8.put */
extern void T17f64(GE_context* ac, T0* C, T2 a1, T6 a2);
/* INTEGER_32.to_hex_character */
extern T2 T6f28(GE_context* ac, T6* C);
/* CHARACTER_8.plus */
extern T2 T2f27(GE_context* ac, T2* C, T6 a1);
/* CHARACTER_8.minus */
extern T2 T2f26(GE_context* ac, T2* C, T6 a1);
/* NATURAL_16.to_integer_32 */
extern T6 T9f11(GE_context* ac, T9* C);
/* STRING_8.make_filled */
extern T0* T17c63(GE_context* ac, T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f69(GE_context* ac, T0* C, T2 a1);
/* STRING_32.append_string_general */
extern void T18f16(GE_context* ac, T0* C, T0* a1);
/* STRING_32.append */
extern void T18f16p1(GE_context* ac, T0* C, T0* a1);
/* STRING_32.reset_hash_codes */
extern void T18f22(GE_context* ac, T0* C);
/* STRING_32.set_count */
extern void T18f21(GE_context* ac, T0* C, T6 a1);
/* STRING_32.append_code */
extern void T18f20(GE_context* ac, T0* C, T10 a1);
/* STRING_32.put_code */
extern void T18f23(GE_context* ac, T0* C, T10 a1, T6 a2);
/* STRING_32.resize */
extern void T18f19(GE_context* ac, T0* C, T6 a1);
/* SPECIAL [CHARACTER_32].aliased_resized_area_with_default */
extern T0* T16f3(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].aliased_resized_area */
extern T0* T16f4(GE_context* ac, T0* C, T6 a1);
/* STRING_32.capacity */
extern T6 T18f6(GE_context* ac, T0* C);
/* STRING_32.append */
extern void T18f18(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].copy_data */
extern void T16f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_32].force */
extern void T16f14(GE_context* ac, T0* C, T3 a1, T6 a2);
/* SPECIAL [CHARACTER_32].move_data */
extern void T16f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].overlapping_move */
extern void T16f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_32].non_overlapping_move */
extern void T16f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_32.additional_space */
extern T6 T18f5(GE_context* ac, T0* C);
/* NATURAL_8.to_hex_string */
extern T0* T8f12(GE_context* ac, T8* C);
/* NATURAL_8.to_integer_32 */
extern T6 T8f8(GE_context* ac, T8* C);
/* NATURAL_16.is_less_equal */
extern T1 T9f5(GE_context* ac, T9* C, T9 a1);
/* STRING_32.append_character */
extern void T18f17(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.to_natural_16 */
extern T9 T8f10(GE_context* ac, T8* C);
/* STRING_32.extend */
extern void T18f25(GE_context* ac, T0* C, T3 a1);
/* NATURAL_8.is_less_equal */
extern T1 T8f6(GE_context* ac, T8* C, T8 a1);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T129f6(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_8].memory_copy */
extern void T1253f2(GE_context* ac, T1253* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_8].c_memcpy */
extern void T1253f3(GE_context* ac, T1253* C, T14 a1, T14 a2, T6 a3);
/* STRING_32.grow */
extern void T18f24(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_16_0_pointer_to_escaped_string_32 */
extern T0* T565f1(GE_context* ac, T565* C, T0* a1);
/* UTF_CONVERTER.utf_16_0_pointer_into_escaped_string_32 */
extern void T565f17(GE_context* ac, T565* C, T0* a1, T0* a2);
/* UTF_CONVERTER.utf_16_0_subpointer_into_escaped_string_32 */
extern void T565f22(GE_context* ac, T565* C, T0* a1, T6 a2, T6 a3, T1 a4, T0* a5);
/* NATURAL_32.is_greater_equal */
extern T1 T10f13(GE_context* ac, T10* C, T10 a1);
/* NATURAL_16.to_natural_32 */
extern T10 T9f4(GE_context* ac, T9* C);
/* MANAGED_POINTER.read_natural_16 */
extern T9 T129f7(GE_context* ac, T0* C, T6 a1);
/* TYPED_POINTER [[attached] NATURAL_16].memory_copy */
extern void T1548f2(GE_context* ac, T1548* C, T14 a1, T6 a2);
/* TYPED_POINTER [[attached] NATURAL_16].c_memcpy */
extern void T1548f3(GE_context* ac, T1548* C, T14 a1, T14 a2, T6 a3);
/* NATIVE_STRING.make_from_pointer */
extern T0* T406c10(GE_context* ac, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T129c12(GE_context* ac, T14 a1, T6 a2);
/* POINTER.memory_alloc */
extern T14 T14f5(GE_context* ac, T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f9(GE_context* ac, T14* C, T6 a1);
/* NATIVE_STRING.pointer_length_in_bytes */
extern T6 T406f4(GE_context* ac, T0* C, T14 a1);
/* NATURAL_64.to_integer_32 */
extern T6 T11f2(GE_context* ac, T11* C);
/* NATURAL_64.is_less_equal */
extern T1 T11f12(GE_context* ac, T11* C, T11 a1);
/* NATIVE_STRING.c_pointer_length_in_bytes */
extern T11 T406f8(GE_context* ac, T0* C, T14 a1);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T77f11(GE_context* ac, T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T1265f21(GE_context* ac, T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T77c12(GE_context* ac, T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T77f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T122f1(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T122f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T36f8(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f8ot1(T0* a1, T0** a2);
extern T1 T36f8ot2(T0* a1, T0** a2);
/* STRING_8.append_string */
extern void T17f52(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f57(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.area_lower */
extern T6 T1265f38(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.concat */
extern T0* T36f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f11ot1(T0* a1, T0** a2);
extern T1 T36f11ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T1265f32(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T1265f73(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T1265c73(GE_context* ac, T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T1265f81(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.reset_hash_codes */
extern void T1265f98(GE_context* ac, T0* C);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T1265f55(GE_context* ac, T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T1265f55p1(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make */
extern void T1265f73p1(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T1264f22(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
extern T1 T1264f22ot1(T0* a1, T0** a2);
extern T1 T1264f22ot2(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T1264f24(GE_context* ac, T0* C, T6 a1);
/* NATURAL_32.to_integer_32 */
extern T6 T10f19(GE_context* ac, T10* C);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T1265f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T1265f36(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern T0* T1264f27(GE_context* ac, T0* C);
/* UC_STRING.make_empty */
extern T0* T136c9(GE_context* ac);
/* UC_STRING.make */
extern void T136f10(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T136f13(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_hash_codes */
extern void T136f14(GE_context* ac, T0* C);
/* UC_STRING.set_count */
extern void T136f12(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T136f8(GE_context* ac, T0* C);
/* UC_STRING.capacity */
extern T6 T136f8p1(GE_context* ac, T0* C);
/* UC_STRING.make */
extern void T136f10p1(GE_context* ac, T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T136f11(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T1264f23(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T1264f25(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_string */
extern void T1265f69(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T1265f88(GE_context* ac, T0* C, T0* a1);
extern T1 T1265f88ot1(T0* a1, T0** a2);
extern T1 T1265f88ot2(T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern T0* T1265f59(GE_context* ac, T0* C);
/* UC_UTF8_STRING.gobo_append_substring */
extern void T1265f71(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T1265f92(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
extern T1 T1265f92ot1(T0* a1, T0** a2);
extern T1 T1265f92ot2(T0* a1, T0** a2);
extern T1 T1265f92ot3(T0* a1, T0** a2);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T1265f102(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T1265f91(GE_context* ac, T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T1265f103(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T1265f90(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T1265f89(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T1265f104(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T1265f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T1265f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.copy */
extern void T1265f79(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T1265f79p1(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].resized_area */
extern T0* T15f7(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.append */
extern void T1265f88p1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T1265f60(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_string_8 */
extern T0* T1265f19(GE_context* ac, T0* C);
/* STRING_8.put_code */
extern void T17f62(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_code */
extern void T1265f82(GE_context* ac, T0* C, T10 a1, T6 a2);
/* UC_UTF8_STRING.put_item_code */
extern void T1265f101(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_right */
extern void T1265f95(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.move_bytes_left */
extern void T1265f94(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.valid_code */
extern T1 T17f33(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.valid_code */
extern T1 T1265f45(GE_context* ac, T0* C, T10 a1);
/* STRING_8.set_count */
extern void T17f47(GE_context* ac, T0* C, T6 a1);
/* STRING_8.as_string_8 */
extern T0* T17f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.any_ */
extern T0* T1265f42(GE_context* ac, T0* C);
/* UC_UTF8_STRING.append_character */
extern void T1265f70(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T1265f15(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T1265f44(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f14(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T36f10(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T122f21(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T122f13(GE_context* ac, T0* C);
/* PATH.utf_8_name */
extern T0* T441f6(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_32_string_to_utf_8_string_8 */
extern T0* T565f3(GE_context* ac, T565* C, T0* a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_string_8 */
extern void T565f19(GE_context* ac, T565* C, T0* a1, T0* a2);
/* STRING_8.extend */
extern void T17f76(GE_context* ac, T0* C, T2 a1);
/* IMMUTABLE_STRING_32.code */
extern T10 T19f6(GE_context* ac, T0* C, T6 a1);
/* STRING_8.grow */
extern void T17f75(GE_context* ac, T0* C, T6 a1);
/* PATH.name */
extern T0* T441f4(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_8_string_8_to_escaped_string_32 */
extern T0* T565f5(GE_context* ac, T565* C, T0* a1);
/* UTF_CONVERTER.utf_8_string_8_into_escaped_string_32 */
extern void T565f21(GE_context* ac, T565* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.make_from_string */
extern T0* T19c12(GE_context* ac, T0* a1);
/* STRING_32.area_lower */
extern T6 T18f8(GE_context* ac, T0* C);
/* UTF_CONVERTER.utf_16le_string_8_to_escaped_string_32 */
extern T0* T565f4(GE_context* ac, T565* C, T0* a1);
/* UTF_CONVERTER.utf_16le_string_8_into_escaped_string_32 */
extern void T565f20(GE_context* ac, T565* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.current_working_path */
extern T0* T219f2(GE_context* ac, T0* C);
/* PATH.make_from_pointer */
extern T0* T441c17(GE_context* ac, T14 a1);
/* PATH.reset_internal_data */
extern void T441f20(GE_context* ac, T0* C);
/* PATH.normalize */
extern void T441f19(GE_context* ac, T0* C);
/* STRING_8.remove_tail */
extern void T17f56(GE_context* ac, T0* C, T6 a1);
/* PATH.directory_separator */
extern T2 T441f13(GE_context* ac, T0* C);
/* STRING_8.remove_head */
extern void T17f65(GE_context* ac, T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f70(GE_context* ac, T0* C, T6 a1);
/* PATH.root_end_position */
extern T6 T441f12(GE_context* ac, T0* C);
/* PATH.next_directory_separator */
extern T6 T441f15(GE_context* ac, T0* C, T6 a1);
/* CHARACTER_8.as_lower */
extern T2 T2f23(GE_context* ac, T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f24(GE_context* ac, T2* C);
/* STRING_8.keep_head */
extern void T17f60(GE_context* ac, T0* C, T6 a1);
/* PATH.is_character */
extern T1 T441f8(GE_context* ac, T0* C, T0* a1, T6 a2, T2 a3);
/* C_STRING.substring */
extern T0* T29f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* C_STRING.read_substring_into */
extern void T29f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* NATURAL_8.to_natural_32 */
extern T10 T8f5(GE_context* ac, T8* C);
/* PATH.unit_size */
extern T6 T441f5(GE_context* ac, T0* C);
/* PATH.pointer_length_in_bytes */
extern T6 T441f7(GE_context* ac, T0* C, T14 a1);
/* PATH.c_pointer_length_in_bytes */
extern T11 T441f14(GE_context* ac, T0* C, T14 a1);
/* PATH.make_from_string */
extern T0* T441c16(GE_context* ac, T0* a1);
/* PATH.internal_append_into */
extern void T441f18(GE_context* ac, T0* C, T0* a1, T0* a2, T2 a3);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_8_string_8 */
extern void T565f16(GE_context* ac, T565* C, T0* a1, T0* a2);
/* UTF_CONVERTER.escaped_utf_32_string_into_utf_16le_string_8 */
extern void T565f15(GE_context* ac, T565* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_dir_current */
extern T6 T219f4(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern T0* T122f23(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T219c8(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T122f12(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T121f26(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T121f15(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T121f18(GE_context* ac, T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T121f14(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T121f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T121f13(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T121f25(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T121f5(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T121f12(GE_context* ac, T0* C, T0* a1);
/* GEC.file_system */
extern T0* T24f35(GE_context* ac, T0* C);
/* GEC.unix_file_system */
extern T0* T24f38(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T122c31(GE_context* ac);
/* KL_OPERATING_SYSTEM.is_unix */
extern T1 T85f2(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T85f4(GE_context* ac, T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern T0* T85f5(GE_context* ac, T0* C);
/* STRING_8.is_equal */
extern T1 T17f38(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].same_items */
extern T1 T15f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T85f3(GE_context* ac, T0* C, T0* a1);
/* STRING_32.as_string_8 */
extern T0* T18f7(GE_context* ac, T0* C);
/* EXECUTION_ENVIRONMENT.item */
extern T0* T219f6(GE_context* ac, T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T219f3(GE_context* ac, T0* C, T14 a1);
/* GEC.windows_file_system */
extern T0* T24f37(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T121c34(GE_context* ac);
/* UC_UTF8_STRING.plus */
extern T0* T1265f12(GE_context* ac, T0* C, T0* a1);
/* STRING_8.plus */
extern T0* T17f13(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_string_general */
extern void T17f58(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append */
extern void T17f58p1(GE_context* ac, T0* C, T0* a1);
/* STRING_8.append_code */
extern void T17f61(GE_context* ac, T0* C, T10 a1);
/* STRING_8.new_string */
extern T0* T17f6(GE_context* ac, T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern T1 T85f1(GE_context* ac, T0* C);
/* GEC.operating_system */
extern T0* T24f34(GE_context* ac, T0* C);
/* GEC.no_c_compile */
extern T1 T24f33(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T45f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].last */
extern T1 T151f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].is_empty */
extern T1 T151f6(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T135f8(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T135f7(GE_context* ac, T0* C, T6 a1);
/* KL_STDOUT_FILE.put_integer_64 */
extern void T135f11(GE_context* ac, T0* C, T7 a1);
/* KL_STDOUT_FILE.put_character */
extern void T135f10(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.put_character */
extern void T1379f22(GE_context* ac, T0* C, T2 a1);
/* CONSOLE.console_pc */
extern void T1379f27(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.console */
extern T0* T135f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.io */
extern T0* T135f4(GE_context* ac, T0* C);
/* INTEGER_32.to_integer_64 */
extern T7 T6f18(GE_context* ac, T6* C);
/* KL_STDOUT_FILE.put_string */
extern void T135f6(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.string_ */
extern T0* T135f1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate */
extern void T76f505(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].wipe_out */
extern void T55f73(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_wipe_out */
extern void T55f82(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_wipe_out */
extern void T55f81(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_wipe_out */
extern void T55f80(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] STRING_8].keep_head */
extern void T146f11(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].set_count */
extern void T146f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_wipe_out */
extern void T55f79(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].unset_found_item */
extern void T55f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_all_cursors_after */
extern void T55f78(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_next_cursor */
extern void T174f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_after */
extern void T174f17(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T76f509(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.generate_compilation_makefile */
extern void T76f544(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T76f511(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T298f191(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T298f196(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_error */
extern void T298f201(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T298f196p1(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T298f17(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T76f130(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T341c8(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T76f510(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.change_mode */
extern void T339f38(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.old_change_mode */
extern void T339f46(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.file_chmod */
extern void T339f51(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.internal_name_pointer */
extern T0* T339f20(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_exists */
extern T1 T339f16(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_exists */
extern T1 T339f26(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T339f22(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_name */
extern T0* T339f14(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T339f34(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T339f40(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T339f18(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T339f48(GE_context* ac, T0* C, T14 a1);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T370f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].value */
extern T0* T55f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_item */
extern T0* T55f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].position_of_key */
extern T6 T55f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_item */
extern T6 T55f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_item */
extern T0* T55f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].hash_position */
extern T6 T55f29(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T1265f10(GE_context* ac, T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T1265f10p1(GE_context* ac, T0* C);
/* STRING_8.hash_code */
extern T6 T17f24(GE_context* ac, T0* C);
/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].hash_code */
extern T6 T545f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_item */
extern T6 T55f22(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T36f21(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T36f21ot1(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T36f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
extern T1 T36f5ot1(T0* a1, T0** a2);
extern T1 T36f5ot2(T0* a1, T0** a2);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T1265f18(GE_context* ac, T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T370f2(GE_context* ac, T0* C);
/* ET_C_GENERATOR.template_expander */
extern T0* T76f196(GE_context* ac, T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T370c3(GE_context* ac);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T339f23(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T339f19(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T339f29(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T339f17(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T339f41(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T339f41p1(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T339f21(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T339c27(GE_context* ac, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T339f39(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.make_with_name */
extern void T339f47(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.set_name */
extern void T339f52(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.buffered_file_info */
extern T0* T339f25(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T339f12(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_compilation_shell_script */
extern void T76f543(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T122f11(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T31f32(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T31f34(GE_context* ac, T0* C);
/* FILE_INFO.is_plain */
extern T1 T130f13(GE_context* ac, T0* C);
/* FILE_INFO.file_info */
extern T6 T130f14(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern T0* T31f29(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T31f73(GE_context* ac, T0* C);
/* FILE_INFO.fast_update */
extern void T130f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* FILE_INFO.eif_file_stat */
extern T6 T130f12(GE_context* ac, T0* C, T14 a1, T14 a2, T1 a3);
/* KL_TEXT_INPUT_FILE.internal_name_pointer */
extern T0* T31f23(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T31f15(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T31f30(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T31f12(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_name */
extern T0* T31f13(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.reset */
extern void T31f74(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern T0* T122f22(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T121f11(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T121f24(GE_context* ac, T0* C);
/* UC_UTF8_STRING.remove_tail */
extern void T1265f68(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_head */
extern void T1265f74(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.wipe_out */
extern void T1265f87(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T122f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T121f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T76f117(GE_context* ac, T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T76f436(GE_context* ac, T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T76f435(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T174f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_item */
extern T0* T55f38(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.operating_system */
extern T0* T76f270(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].forth */
extern void T174f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_forth */
extern void T55f84(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].add_traversing_cursor */
extern void T55f86(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_position */
extern void T174f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_traversing_cursor */
extern void T55f85(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T174f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].start */
extern void T174f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_start */
extern void T55f83(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_off */
extern T1 T55f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].off */
extern T1 T174f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].is_empty */
extern T1 T55f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].back */
extern void T174f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_back */
extern void T55f90(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].set_before */
extern void T174f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].key */
extern T0* T174f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_key */
extern T0* T55f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].is_last */
extern T1 T174f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_is_last */
extern T1 T55f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].before */
extern T1 T174f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].finish */
extern void T174f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_finish */
extern void T55f89(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_cursor */
extern T0* T55f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] STRING_8, [attached] STRING_8].make */
extern T0* T174c12(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item */
extern T0* T55f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search_position */
extern void T55f57(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.add_external_c_files */
extern void T76f542(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_DIRECTORY.close */
extern void T369f34(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_close */
extern void T369f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T369f17(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_close */
extern void T369f40(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T36f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T36f15(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* UC_UTF8_STRING.item_code */
extern T6 T1265f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f10(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_ROUTINES.platform */
extern T0* T36f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T1265f26(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1265f26ot1(T0* a1, T0** a2);
extern T1 T1265f26ot2(T0* a1, T0** a2);
/* STRING_8.substring_index */
extern T6 T17f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_8_SEARCHER.substring_index */
extern T6 T1533f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.substring_index_with_deltas */
extern T6 T1533f2(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_8_SEARCHER.internal_initialize_deltas */
extern void T1533f8(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern T0* T17f40(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.make */
extern T0* T1533c6(GE_context* ac);
/* ET_C_GENERATOR.multithreaded_mode */
extern T1 T76f265(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last */
extern void T55f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_put */
extern void T55f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].force */
extern void T173f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_put */
extern void T55f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_put */
extern void T55f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].resize */
extern void T55f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clashes_resize */
extern void T55f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T175f1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].aliased_resized_area_with_default */
extern T0* T124f4(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].aliased_resized_area */
extern T0* T124f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].special_integer_ */
extern T0* T55f28(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T175c6(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_resize */
extern void T55f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].aliased_resized_area */
extern T0* T173f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].aliased_resized_area */
extern T0* T146f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_resize */
extern void T55f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].slots_resize */
extern void T55f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_modulus */
extern T6 T55f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_capacity */
extern T6 T55f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_put */
extern void T55f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.extension */
extern T0* T122f9(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.extension */
extern T0* T121f9(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.ends_with */
extern T1 T1265f25(GE_context* ac, T0* C, T0* a1);
/* STRING_8.area_upper */
extern T6 T17f20(GE_context* ac, T0* C);
/* UC_UTF8_STRING.area_upper */
extern T6 T1265f49(GE_context* ac, T0* C);
/* STRING_8.ends_with */
extern T1 T17f31(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T369f33(GE_context* ac, T0* C);
/* KL_DIRECTORY.last_entry_8 */
extern T0* T369f15(GE_context* ac, T0* C);
/* FILE_INFO.pointer_to_file_name_8 */
extern T0* T130f15(GE_context* ac, T0* C, T14 a1);
/* C_STRING.string */
extern T0* T29f5(GE_context* ac, T0* C);
/* C_STRING.c_strlen */
extern T6 T29f6(GE_context* ac, T0* C, T14 a1);
/* C_STRING.make_shared_from_pointer */
extern T0* T29c14(GE_context* ac, T14 a1);
/* FILE_INFO.utf_16_to_multi_byte */
extern T6 T130f18(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_DIRECTORY.file_info */
extern T0* T369f24(GE_context* ac, T0* C);
/* KL_DIRECTORY.readentry */
extern void T369f38(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_next */
extern T14 T369f22(GE_context* ac, T0* C, T14 a1);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T76f610(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.is_open_read */
extern T1 T369f26(GE_context* ac, T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T369f16(GE_context* ac, T0* C);
/* KL_DIRECTORY.open_read */
extern void T369f32(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T369f37(GE_context* ac, T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T369f19(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.internal_name_pointer */
extern T0* T369f18(GE_context* ac, T0* C);
/* KL_DIRECTORY.old_is_readable */
extern T1 T369f13(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T369f28(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.old_exists */
extern T1 T369f12(GE_context* ac, T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T369f27(GE_context* ac, T0* C, T14 a1);
/* KL_DIRECTORY.make */
extern void T369f30(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T369c30(GE_context* ac, T0* a1);
/* KL_DIRECTORY.old_make */
extern void T369f35(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.make_with_name */
extern void T369f39(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.set_name */
extern void T369f41(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T369f23(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T338f57(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T338f79(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T338f70(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T338f55(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T338f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_key_equality_tester */
extern void T55f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T76f112(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T148c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern void T55f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map */
extern T0* T55c52(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_with_equality_testers */
extern void T55f55(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_sparse_container */
extern void T55f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_internal_cursor */
extern void T55f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_slots */
extern void T55f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_clashes */
extern void T55f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_key_storage */
extern void T55f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].make */
extern T0* T173f2(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] STRING_8].default_create */
extern T0* T173c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_item_storage */
extern void T55f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found_item */
extern T0* T55f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].found */
extern T1 T55f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].search */
extern void T55f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force */
extern void T55f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T67f4(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T67f3(GE_context* ac, T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern T0* T67f1(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T67f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T338f232(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T338f306(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_unbounded_substring */
extern void T338f320(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T338f318(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T338f333(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T338f150(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T338f233(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T338f297(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T338f296(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern T6 T338f59(GE_context* ac, T0* C);
/* KL_PLATFORM.maximum_integer */
extern T6 T248f2(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T338f195(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T338f295(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T1121f8(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T338f294(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T1121f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T338f293(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T338f299(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern T0* T338f151(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T1122c5(GE_context* ac, T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T1122f10(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T1122f9(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T1122f4(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T1122c4(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make_filled */
extern T0* T630f3(GE_context* ac, T0* C, T1 a1, T6 a2);
/* RX_CHARACTER_SET.special_boolean_ */
extern T0* T1122f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].default_create */
extern T0* T630c5(GE_context* ac);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern T0* T338f167(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T1122f2(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T338f331(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T338f86(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T338f85(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T338f84(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T338f340(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T338f339(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T338f292(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T1121f11(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T338f290(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T338f271(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T1121f7(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T338f54(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T1123f4(GE_context* ac, T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T1123f3(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T338f319(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.append_code */
extern void T1265f77(GE_context* ac, T0* C, T10 a1);
/* UC_UTF8_STRING.append_item_code */
extern void T1265f97(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T338f334(GE_context* ac, T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T338f228(GE_context* ac, T0* C);
/* ET_C_GENERATOR.execution_environment */
extern T0* T76f129(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T67c5(GE_context* ac);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T36f7(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T36f7ot1(T0* a1, T0** a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T1265f78(GE_context* ac, T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T1265f78p1(GE_context* ac, T0* C);
/* STRING_8.wipe_out */
extern void T17f73(GE_context* ac, T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T76f128(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T338f305(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].item */
extern T0* T142f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T76f281(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_case_insensitive */
extern void T338f304(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T338f317(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T338f303(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T338f303p1(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T338f316(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T338f231(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T338f190(GE_context* ac, T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T338f230(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T338f315(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T338f229(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T338f148(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T338f132(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T338f130(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T338f128(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T338f314(GE_context* ac, T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T1121f18(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T338f64(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T1121f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T338f332(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern T0* T338f147(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern T6 T338f146(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character */
extern void T1121f19(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T1121f25(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T1121f24(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T1121f9(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T338f141(GE_context* ac, T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T338f223(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern T0* T338f245(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T338f222(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T338f218(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T338f135(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T338f330(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T338f133(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T338f131(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T338f129(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T338f110(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T338f337(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T1121f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T1121f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T1121f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T338f338(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T338f336(GE_context* ac, T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T1121f20(GE_context* ac, T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T1121f26(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T630f4(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [attached] SPECIAL [[attached] BOOLEAN].aliased_resized_area_with_default */
extern T0* T125f5(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].aliased_resized_area */
extern T0* T125f4(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T1121f12(GE_context* ac, T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T1122f8(GE_context* ac, T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T1122f7(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] RX_CHARACTER_SET].item */
extern T0* T1125f4(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern T0* T338f159(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern T0* T338f76(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern T0* T338f244(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern T0* T338f243(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern T0* T338f242(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern T0* T338f241(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern T0* T338f240(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern T0* T338f239(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern T0* T338f238(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern T0* T338f237(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern T0* T338f235(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T338f157(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] STRING_8].item */
extern T0* T145f5(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].count */
extern T6 T145f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern T0* T338f236(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T338f155(GE_context* ac, T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T1122f6(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern T0* T338f152(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T338f88(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T338f335(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T338f61(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T1121f16(GE_context* ac, T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T1121f15(GE_context* ac, T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T338f313(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T338f312(GE_context* ac, T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T1121f14(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T338f311(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T338f311p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T338c302(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make_filled */
extern T0* T175f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T338f302p1(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T338f310(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T338f329(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T338f328(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T338f327(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T338f326(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T338f325(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T338f324(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T338f323(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T338f322(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T338f321(GE_context* ac, T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T338f309(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T338f308(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern T0* T338f75(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T1123c6(GE_context* ac, T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T1123f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T1123f7(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.clear */
extern void T1123f9(GE_context* ac, T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T1123f5(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T338f307(GE_context* ac, T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T338f307p1(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T36f20(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern_buffer */
extern T0* T338f74(GE_context* ac, T0* C);
/* RX_BYTE_CODE.make */
extern T0* T1121c13(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].twin */
extern T0* T55f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].copy */
extern void T55f91(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].copy */
extern void T55f91p1(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_clashes */
extern void T55f96(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] INTEGER_32].resized_area */
extern T0* T124f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].copy_data */
extern void T124f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [[attached] INTEGER_32].force */
extern void T124f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] SPECIAL [[attached] INTEGER_32].move_data */
extern void T124f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].overlapping_move */
extern void T124f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] INTEGER_32].non_overlapping_move */
extern void T124f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_slots */
extern void T55f95(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_key_storage */
extern void T55f94(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] STRING_8].resized_area */
extern T0* T146f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] STRING_8].copy_data */
extern void T146f12(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [[attached] STRING_8].force */
extern void T146f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] STRING_8].move_data */
extern void T146f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].overlapping_move */
extern void T146f17(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] STRING_8].non_overlapping_move */
extern void T146f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].clone_item_storage */
extern void T55f93(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].valid_cursor */
extern T1 T55f48(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T76f127(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.parse_file */
extern void T559f180(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T559f184(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T559f197(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T559f196(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].force */
extern void T228f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ANY].fill_with */
extern void T227f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ANY].extend */
extern void T227f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].aliased_resized_area */
extern T0* T228f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ANY].aliased_resized_area */
extern T0* T227f3(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T559f195(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].force */
extern void T630f6(GE_context* ac, T0* C, T0* a1, T1 a2, T6 a3);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].aliased_resized_area */
extern T0* T630f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T559f136(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].has */
extern T1 T55f50(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T559f208(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1420c8(GE_context* ac, T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(GE_context* ac, T6* C);
/* STRING_8.append_integer */
extern void T17f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].put */
extern void T1418f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].force */
extern void T1687f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] YY_BUFFER].fill_with */
extern void T1686f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] YY_BUFFER].extend */
extern void T1686f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].put */
extern void T698f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T559f162(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_full */
extern T1 T1418f5(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T559f207(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove */
extern void T55f98(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].remove_position */
extern void T55f99(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_storage_keep_head */
extern void T55f103(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_storage_keep_head */
extern void T55f102(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].move_cursors_forth */
extern void T55f101(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].internal_set_key_equality_tester */
extern void T55f100(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T559f133(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T559f194(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.accept */
extern void T559f193(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T559f191(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T559f206(GE_context* ac, T0* C, T0* a1);
extern T1 T559f206ot1(T0* a1, T0** a2);
/* UT_SYNTAX_ERROR.make */
extern T0* T1419c8(GE_context* ac, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T559f205(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T559f190(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T559f204(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T559f213(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T222f28(GE_context* ac, T0* C, T1 a1);
/* YY_BUFFER.set_beginning_of_line */
extern void T223f17(GE_context* ac, T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T559f161(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T559f155(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T1276f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T559f154(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T559f150(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T559f149(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T559f211(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T559f203(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T559f212(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T559f128(GE_context* ac, T0* C);
extern T1 T559f128ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].remove */
extern void T1418f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] YY_BUFFER].keep_head */
extern void T1686f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] YY_BUFFER].set_count */
extern void T1686f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].remove */
extern void T698f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] INTEGER_32].keep_head */
extern void T124f14(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] INTEGER_32].set_count */
extern void T124f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].item */
extern T6 T698f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].item */
extern T0* T1418f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].is_empty */
extern T1 T1418f6(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T559f202(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T559f200(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T1276f4(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.fill */
extern void T222f20(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T1276f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T1276f10(GE_context* ac, T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T222f22(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T1276f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f78(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T222f24(GE_context* ac, T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T1276f12(GE_context* ac, T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern T6 T222f13(GE_context* ac, T0* C);
/* YY_BUFFER.fill */
extern void T223f15(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T222f18(GE_context* ac, T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T223f13(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T559f127(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T559f126(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T559f201(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T171c8(GE_context* ac, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T1276f3(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].force */
extern void T175f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].aliased_resized_area */
extern T0* T175f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T559f104(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T559f189(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T559f198(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T559f209(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T559f214(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T559f215(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] BOOLEAN].keep_head */
extern void T125f12(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] BOOLEAN].set_count */
extern void T125f13(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].keep_head */
extern void T227f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].set_count */
extern void T227f8(GE_context* ac, T0* C, T6 a1);
/* UT_CONFIG_PARSER.abort */
extern void T559f192(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T559f183(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T559f188(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_position */
extern void T222f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* YY_BUFFER.set_position */
extern void T223f14(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T559f103(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T222c17(GE_context* ac, T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T222f21(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.make_with_size */
extern T0* T222c21(GE_context* ac, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T222f23(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.set_file_with_size */
extern void T222f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.flush */
extern void T222f26(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T222f15(GE_context* ac, T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T1276c9(GE_context* ac, T6 a1);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T76f438(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T559f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T559c178(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].make */
extern T0* T698c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].make */
extern T0* T175f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] YY_BUFFER].make */
extern T0* T1418c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].make */
extern T0* T1687f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] YY_BUFFER].make_empty */
extern T0* T1686c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] YY_BUFFER].default_create */
extern T0* T1687c2(GE_context* ac);
/* UT_CONFIG_PARSER.string_equality_tester */
extern T0* T559f97(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T559f182(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T559f187(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern T0* T559f82(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T559f173(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] INTEGER_32].to_special */
extern T0* T175f4(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern T0* T559f81(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern T0* T559f135(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern T0* T559f134(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern T0* T559f132(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern T0* T559f129(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern T0* T559f123(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern T0* T559f121(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern T0* T559f116(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern T0* T559f115(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yytranslate_template_2 */
extern void T559f217(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yyarray_subcopy */
extern void T559f224(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].subcopy */
extern void T554f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* [attached] ARRAY [[attached] INTEGER_32].subcopy */
extern void T330f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* UT_CONFIG_PARSER.integer_array_ */
extern T0* T559f177(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].default_create */
extern T0* T554c2(GE_context* ac);
/* UT_CONFIG_PARSER.yytranslate_template_1 */
extern void T559f216(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].make_filled */
extern T0* T330c10(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] INTEGER_32].make_filled_area */
extern void T330f12(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T559f186(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] BOOLEAN].make */
extern T0* T630f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].make */
extern T0* T228f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ANY].make_empty */
extern T0* T227c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ANY].default_create */
extern T0* T228c3(GE_context* ac);
/* UT_CONFIG_PARSER.make_scanner */
extern void T559f181(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T559f185(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T559f199(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T559f199p1(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T559f210(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern T0* T559f169(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T559f175(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern T0* T559f168(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern T0* T559f167(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_ec_template_2 */
extern void T559f223(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_array_subcopy */
extern void T559f225(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* UT_CONFIG_PARSER.yy_ec_template_1 */
extern void T559f222(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_def_template */
extern T0* T559f166(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern T0* T559f165(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern T0* T559f164(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_chk_template_2 */
extern void T559f221(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_chk_template_1 */
extern void T559f220(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern T0* T559f163(GE_context* ac, T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template_2 */
extern void T559f219(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_nxt_template_1 */
extern void T559f218(GE_context* ac, T0* C, T0* a1);
/* UT_CONFIG_PARSER.empty_buffer */
extern T0* T559f83(GE_context* ac, T0* C);
/* YY_BUFFER.make */
extern T0* T223c12(GE_context* ac, T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T223f16(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T1276f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T223f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].put_new */
extern void T55f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T36f23(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T36f22(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T1265f76(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T1265f96(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T122f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T121f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.generate_c_code */
extern void T76f508(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern T0* T76f111(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T263c31(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T263f31ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_set_reference_field_feature */
extern void T72f99(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.use_all_attributes */
extern void T72f100(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T255f23(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_set_reference_field_dynamic_types */
extern void T80f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T298f179(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T298f193(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern T0* T133f1(GE_context* ac, T0* C);
/* KL_STDERR_FILE.make */
extern T0* T134c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T298f18(GE_context* ac, T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T133c4(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.set_has_internal_error */
extern void T298f199(GE_context* ac, T0* C, T1 a1);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T444c13(GE_context* ac);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T34f184(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T34f185(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T34f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_has_internal_error */
extern void T34f186(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T80f72(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T80f103(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T80f118(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T342f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].item */
extern T0* T251f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_reference_field_feature */
extern void T72f98(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T255f22(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_reference_field_dynamic_types */
extern void T80f114(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T80f113(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_new_type_instance_of_feature */
extern void T72f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T255f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_type_of_type_result_type */
extern void T80f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.create_meta_type */
extern void T72f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.meta_type */
extern T0* T72f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.make_generic */
extern T0* T81c109(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T267f27(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].force */
extern void T694f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T691f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].extend */
extern void T691f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T267f12(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T694c3(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T267c26(GE_context* ac, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T267f26p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T694f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T691c5(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern T0* T82f246(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T385c72(GE_context* ac);
/* ET_SYMBOL.make_leaf */
extern void T385f83(GE_context* ac, T0* C);
/* ET_SYMBOL.tokens */
extern T0* T385f57(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T82c1512(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern T0* T82f245(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T692c102(GE_context* ac);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T692f104(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T692f58(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T267f10(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1576f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T199f75(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T280f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T303f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].force */
extern void T1075f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].fill_with */
extern void T1074f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].extend */
extern void T1074f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern T0* T303f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T1075c3(GE_context* ac);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1576f4(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T280f4(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T343f25(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T303f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T263f26(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T277f7(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1576f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T280f6(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T277f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T303c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].make */
extern T0* T1075f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].make_empty */
extern T0* T1074c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T255f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T80f60(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T563c15(GE_context* ac, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T563f20(GE_context* ac, T0* C, T0* a1);
extern T1 T563f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.force_last */
extern void T306f22(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].force */
extern void T683f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].fill_with */
extern void T682f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].extend */
extern void T682f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.fixed_array */
extern T0* T306f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].default_create */
extern T0* T683c3(GE_context* ac);
/* ET_DYNAMIC_TYPE_HASH_LIST.hash_position */
extern T6 T306f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.modulus */
extern T6 T306f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.resize */
extern void T306f18(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.special_integer_ */
extern T0* T306f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T683f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].aliased_resized_area */
extern T0* T682f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_modulus */
extern T6 T306f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.new_capacity */
extern T6 T306f13(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.capacity */
extern T6 T306f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.put_last */
extern void T306f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.append_last */
extern void T306f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.make_with_capacity */
extern T0* T306c17(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T683f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].make_empty */
extern T0* T682c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T255f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T412f37(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T412f30(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T412f35(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search */
extern void T412f43(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T412f47(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T412f28(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T412f32(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T412f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T412f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map_default */
extern T0* T412c40(GE_context* ac);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map */
extern void T412f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T412f48(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T412f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T412f57(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T412f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1380c8(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T412f56(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T412f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T412f31(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T412f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T412f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T412f52(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].default_capacity */
extern T6 T412f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.alive_conforming_descendants */
extern T0* T80f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T255f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T255f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T255f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].forth */
extern void T412f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T412f46(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T412f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1380f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_position */
extern void T1380f11(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T412f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1380f9(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T412f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T412f26(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_for_iteration */
extern T0* T412f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_key */
extern T0* T412f25(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T412f20(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T412f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T1380f4(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].start */
extern void T412f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T412f45(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T412f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].off */
extern T1 T1380f7(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE_SET, [attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T412f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T343f36(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T263f33(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T344f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T255f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T80f92(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_alive_conforming_descendants */
extern void T80f97(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T80f62(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T72f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.initialize_dynamic_types */
extern void T72f85(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_SYSTEM.propagate_alive_conforming_descendants */
extern void T72f95(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_attribute_type_sets */
extern void T72f94(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.propagate_type_of_type_result_type */
extern void T72f93(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.initialize_predicate_type */
extern void T72f92(GE_context* ac, T0* C, T0* a1);
extern T1 T72f92ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_set_rout_disp_final_feature */
extern void T556f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_set_rout_disp_final_feature */
extern void T555f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_predicate_class */
extern T1 T83f84(GE_context* ac, T0* C);
/* ET_CLASS.class_codes */
extern T0* T83f107(GE_context* ac, T0* C);
/* ET_CLASS_CODES.default_create */
extern T0* T440c35(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.initialize_function_type */
extern void T72f91(GE_context* ac, T0* C, T0* a1);
extern T1 T72f91ot1(T0* a1, T0** a2);
/* ET_CLASS.is_function_class */
extern T1 T83f83(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_procedure_type */
extern void T72f90(GE_context* ac, T0* C, T0* a1);
extern T1 T72f90ot1(T0* a1, T0** a2);
/* ET_CLASS.is_procedure_class */
extern T1 T83f82(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_typed_pointer_type */
extern void T72f89(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_typed_pointer_class */
extern T1 T83f127(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_array_type */
extern void T72f88(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_array_class */
extern T1 T83f126(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.initialize_special_type */
extern void T72f87(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_special_class */
extern T1 T83f79(GE_context* ac, T0* C);
/* ET_CLASS.has_interface_error */
extern T1 T83f95(GE_context* ac, T0* C);
/* ET_CLASS.interface_checked */
extern T1 T83f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T72f84(GE_context* ac, T0* C);
/* ET_CLASS.has_implementation_error */
extern T1 T83f104(GE_context* ac, T0* C);
/* ET_CLASS.implementation_checked */
extern T1 T83f101(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_type_mark */
extern T0* T82f21(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_separate_mark */
extern void T384f16(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.set_attached_mark */
extern void T384f15(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLICIT_TYPE_MARK.make */
extern T0* T384c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T72f64(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T72f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.register_dynamic_type */
extern void T72f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_index */
extern void T83f249(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].force_last */
extern void T251f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].resize */
extern void T251f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T251f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].extendible */
extern T1 T251f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.make */
extern T0* T256c49(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T307f17(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make_empty */
extern T0* T307c13(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T312c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T312f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T312f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T1082c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T312f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_slots */
extern void T312f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T312f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T312f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T312f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T312f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T256f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T342c13(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].make */
extern T0* T1115f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].make_empty */
extern T0* T1112c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern T0* T342f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].default_create */
extern T0* T1115c3(GE_context* ac);
/* ET_CLASS.hash_code */
extern T6 T83f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T72f62(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T556c52(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T556f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T556f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern T0* T72f63(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T303c14(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T72f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T72f60(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T555c52(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T555f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T555f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T72f59(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_class */
extern T1 T83f81(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T72f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T340c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T340f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T340f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T72f57(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T356c50(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T356f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T356f40(GE_context* ac, T0* C);
/* ET_CLASS.is_tuple_class */
extern T1 T83f80(GE_context* ac, T0* C);
/* ET_CLASS.is_generic */
extern T1 T83f230(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T263f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern T0* T263f17(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.make */
extern T0* T557c78(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern T0* T82f147(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T522c12(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].make */
extern T0* T817f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].make_empty */
extern T0* T818c5(GE_context* ac, T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern T0* T522f3(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].default_create */
extern T0* T817c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern T0* T82f90(GE_context* ac, T0* C);
/* ET_KEYWORD.make_end */
extern T0* T439c37(GE_context* ac);
/* ET_KEYWORD.make_token */
extern void T439f40(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T439f41(GE_context* ac, T0* C);
/* ET_KEYWORD.tokens */
extern T0* T439f19(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T557f32(GE_context* ac, T0* C);
/* ET_IDENTIFIER.make */
extern T0* T199c111(GE_context* ac, T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T199f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T199c121(GE_context* ac, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T199f122(GE_context* ac, T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T199f10(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_8.upper */
extern T2 T2f22(GE_context* ac, T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f25(GE_context* ac, T2* C);
/* ET_C_GENERATOR.close_cpp_file */
extern void T76f541(GE_context* ac, T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T76f540(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.delete_file */
extern void T122f33(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.delete */
extern void T31f76(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_delete */
extern void T31f79(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_unlink */
extern void T31f81(GE_context* ac, T0* C, T14 a1);
/* KL_WINDOWS_FILE_SYSTEM.delete_file */
extern void T121f36(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_file */
extern void T76f539(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.rename_file */
extern void T122f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_TEXT_INPUT_FILE.change_name */
extern void T31f75(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_change_name */
extern void T31f78(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.rename_file */
extern void T31f80(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.set_name */
extern void T31f72(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_rename */
extern void T31f82(GE_context* ac, T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.same_physical_file */
extern T1 T31f35(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.canonical_pathname */
extern T0* T122f4(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_to_string */
extern T0* T122f18(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.item */
extern T0* T568f8(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_parent */
extern T1 T568f7(GE_context* ac, T0* C, T6 a1);
/* KL_PATHNAME.is_current */
extern T1 T568f11(GE_context* ac, T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern T0* T122f15(GE_context* ac, T0* C);
/* KL_PATHNAME.set_canonical */
extern void T568f21(GE_context* ac, T0* C);
/* KL_PATHNAME.append_current */
extern void T568f23(GE_context* ac, T0* C);
/* KL_PATHNAME.append_name */
extern void T568f28(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] STRING_8].force */
extern void T145f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] STRING_8].capacity */
extern T6 T145f9(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] STRING_8].set_area */
extern void T145f16(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] STRING_8].make_empty_area */
extern void T145f15(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].additional_space */
extern T6 T145f8(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] STRING_8].empty_area */
extern T1 T145f7(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.string_to_pathname */
extern T0* T122f19(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.append_parent */
extern void T568f24(GE_context* ac, T0* C);
/* KL_PATHNAME.set_relative */
extern void T568f22(GE_context* ac, T0* C, T1 a1);
/* KL_PATHNAME.make */
extern T0* T568c20(GE_context* ac);
/* KL_WINDOWS_FILE_SYSTEM.canonical_pathname */
extern T0* T121f4(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.pathname_to_string */
extern T0* T121f21(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern T0* T121f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.string_to_pathname */
extern T0* T121f20(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_drive */
extern void T568f27(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_sharename */
extern void T568f26(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.set_hostname */
extern void T568f25(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.file_system */
extern T0* T31f43(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unix_file_system */
extern T0* T31f53(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.windows_file_system */
extern T0* T31f52(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.operating_system */
extern T0* T31f51(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T31f42(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T31f50(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.eif_file_date */
extern T6 T31f56(GE_context* ac, T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.count */
extern T6 T31f41(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_count */
extern T6 T31f49(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_size */
extern T6 T31f55(GE_context* ac, T0* C, T14 a1);
/* FILE_INFO.size */
extern T6 T130f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_write */
extern T1 T31f54(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.inode */
extern T6 T31f40(GE_context* ac, T0* C);
/* FILE_INFO.inode */
extern T6 T130f16(GE_context* ac, T0* C);
/* UC_UTF8_STRING.same_string */
extern T1 T1265f8(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_string */
extern T1 T17f11(GE_context* ac, T0* C, T0* a1);
/* STRING_8.same_characters */
extern T1 T17f17(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* KL_TEXT_INPUT_FILE.tmp_file1 */
extern T0* T31f39(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T31f28(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.rename_file */
extern void T121f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T333f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T333f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T333f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T333f41(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].keep_head */
extern void T682f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE].set_count */
extern void T682f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T333f40(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].keep_head */
extern void T1112f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].set_count */
extern void T1112f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T333f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T333f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1114f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1114f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].wipe_out */
extern void T332f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_wipe_out */
extern void T332f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T332f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T332f47(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].keep_head */
extern void T1109f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].set_count */
extern void T1109f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T332f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].unset_found_item */
extern void T332f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T332f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_next_cursor */
extern void T1108f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_after */
extern void T1108f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].wipe_out */
extern void T331f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_wipe_out */
extern void T331f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_wipe_out */
extern void T331f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T331f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FEATURE].keep_head */
extern void T1104f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE].set_count */
extern void T1104f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T331f47(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_CONSTANT].keep_head */
extern void T828f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTANT].set_count */
extern void T828f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].unset_found_item */
extern void T331f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].move_all_cursors_after */
extern void T331f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_next_cursor */
extern void T1106f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_after */
extern void T1106f9(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].fill_with */
extern void T330f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].wipe_out */
extern void T329f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_wipe_out */
extern void T329f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_wipe_out */
extern void T329f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_wipe_out */
extern void T329f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_wipe_out */
extern void T329f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].unset_found_item */
extern void T329f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].move_all_cursors_after */
extern void T329f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_next_cursor */
extern void T1103f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].set_after */
extern void T1103f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].wipe_out */
extern void T335f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_wipe_out */
extern void T335f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_wipe_out */
extern void T335f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_wipe_out */
extern void T335f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_wipe_out */
extern void T335f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].unset_found_item */
extern void T335f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].move_all_cursors_after */
extern void T335f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_next_cursor */
extern void T1117f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_after */
extern void T1117f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].wipe_out */
extern void T78f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_wipe_out */
extern void T78f65(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_wipe_out */
extern void T78f64(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_wipe_out */
extern void T78f63(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_wipe_out */
extern void T78f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].unset_found_item */
extern void T78f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_all_cursors_after */
extern void T78f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T407f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_after */
extern void T407f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].forth */
extern void T335f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_forth */
extern void T335f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].add_traversing_cursor */
extern void T335f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].set_position */
extern void T1117f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].remove_traversing_cursor */
extern void T335f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_item */
extern T6 T335f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_for_iteration */
extern T0* T335f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_key */
extern T0* T335f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_item */
extern T0* T335f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_for_iteration */
extern T1 T335f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_item */
extern T1 T335f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_item */
extern T1 T335f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T335f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_after */
extern T1 T335f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].after */
extern T1 T1117f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].start */
extern void T335f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_start */
extern void T335f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].cursor_off */
extern T1 T335f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].off */
extern T1 T1117f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].is_empty */
extern T1 T335f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].forth */
extern void T78f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_forth */
extern void T78f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].add_traversing_cursor */
extern void T78f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].set_position */
extern void T407f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove_traversing_cursor */
extern void T78f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_item */
extern T6 T78f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_file */
extern void T76f538(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_for_iteration */
extern T0* T78f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_item */
extern T0* T78f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_item */
extern T0* T78f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].after */
extern T1 T78f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_after */
extern T1 T78f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].after */
extern T1 T407f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].start */
extern void T78f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_start */
extern void T78f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_off */
extern T1 T78f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].off */
extern T1 T407f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].is_empty */
extern T1 T78f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T76f537(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T76f536(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dedent */
extern void T76f586(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T303f11(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1075f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].keep_head */
extern void T1074f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].set_count */
extern void T1074f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_expression */
extern void T76f609(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].wipe_out */
extern void T309f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_EXPRESSION].keep_head */
extern void T882f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION].set_count */
extern void T882f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].move_all_cursors_after */
extern void T309f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_next_cursor */
extern void T1077f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].set_after */
extern void T1077f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T76f644(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T76f614(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T76f622(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_expression */
extern void T76f621(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T76f604(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T76f666(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T76f659(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T76f603(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].wipe_out */
extern void T296f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].move_all_cursors_after */
extern void T296f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T1069f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].set_after */
extern void T1069f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_last_new */
extern void T55f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].item */
extern T6 T296f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].sort */
extern void T296f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].sort */
extern void T377f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T377f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T377f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] ARRAY [[attached] INTEGER_32].force */
extern void T330f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] INTEGER_32].capacity */
extern T6 T330f7(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].set_area */
extern void T330f16(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].make_empty_area */
extern void T330f15(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] INTEGER_32].additional_space */
extern T6 T330f6(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].empty_area */
extern T1 T330f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].swap */
extern void T296f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].replace */
extern void T296f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].less_than */
extern T1 T560f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].detachable_less_than */
extern T1 T560f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].attached_less_than */
extern T1 T560f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] INTEGER_32].put */
extern void T330f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern T0* T76f233(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] INTEGER_32].make */
extern T0* T377c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] INTEGER_32].make */
extern T0* T560c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T296f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].put_last */
extern void T296f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].resize */
extern void T296f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T76f258(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].item */
extern T0* T309f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T76f658(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_name */
extern void T76f605(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T76f137(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].force_last */
extern void T296f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].new_capacity */
extern T6 T296f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].extendible */
extern T1 T296f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].force_last */
extern void T305f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].force */
extern void T230f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].fill_with */
extern void T229f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].extend */
extern void T229f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].resize */
extern void T305f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T230f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].aliased_resized_area */
extern T0* T229f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T305f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].extendible */
extern T1 T305f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T199f118(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].item */
extern T0* T305f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].replace */
extern void T251f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T76f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T76f657(GE_context* ac, T0* C, T0* a1);
extern T1 T76f657ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_access */
extern void T76f584(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T76f606(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_type_cast */
extern void T76f580(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern T0* T82f26(GE_context* ac, T0* C);
/* ET_CURRENT.make */
extern T0* T319c32(GE_context* ac);
/* ET_CURRENT.make_token */
extern void T319f34(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T319f35(GE_context* ac, T0* C);
/* ET_CURRENT.tokens */
extern T0* T319f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T76f280(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove */
extern void T224f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove_position */
extern void T224f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_put */
extern void T224f73(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_put */
extern void T224f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_keep_head */
extern void T224f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_keep_head */
extern void T224f71(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].keep_head */
extern void T229f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].set_count */
extern void T229f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_put */
extern void T224f60(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_put */
extern void T224f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_item */
extern T6 T224f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].move_cursors_forth */
extern void T224f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_position */
extern void T672f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_next_cursor */
extern void T672f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].set_after */
extern void T672f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T224f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_equality_tester */
extern T0* T224f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_item */
extern T6 T224f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].hash_position */
extern T6 T224f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_item */
extern T0* T224f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_item */
extern T0* T224f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].search_position */
extern void T224f44(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T336f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T199f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T36f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f21(GE_context* ac, T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1173f1(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern T0* T1173f2(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern T0* T1173f5(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_filled */
extern T0* T1618c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].fill_with */
extern void T1618f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].extend */
extern void T1618f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]].make_empty */
extern void T1618f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern T0* T1173f12(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T249f4(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1173f23(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern T0* T1173f4(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern T0* T1173f22(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_filled */
extern T0* T1619c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].fill_with */
extern void T1619f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].extend */
extern void T1619f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] SPECIAL [[attached] ARRAY [[attached] INTEGER_32]]].make_empty */
extern void T1619f6(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern T0* T1173f3(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern T0* T1173f21(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_167 */
extern T0* T1173f20(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_166 */
extern T0* T1173f19(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern T0* T1173f18(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern T0* T1173f17(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern T0* T1173f16(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern T0* T1173f15(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern T0* T1173f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern T0* T1173f13(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern T0* T1173f11(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern T0* T1173f10(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern T0* T1173f9(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern T0* T1173f8(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern T0* T1173f7(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern T0* T1173f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T36f14(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1173c52(GE_context* ac);
/* ET_IDENTIFIER.string_ */
extern T0* T199f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].unset_found_item */
extern void T224f49(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T76f673(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T76f678(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].has */
extern T1 T224f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].force_last */
extern void T224f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].resize */
extern void T224f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_resize */
extern void T224f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].special_integer_ */
extern T0* T224f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_resize */
extern void T224f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_resize */
extern void T224f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_resize */
extern void T224f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_modulus */
extern T6 T224f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_capacity */
extern T6 T224f19(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_across_cursor */
extern void T76f672(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_cursor_name */
extern void T76f677(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T76f671(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T199f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T76f670(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T76f629(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].force */
extern void T308f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].force */
extern void T881f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION].fill_with */
extern void T882f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION].extend */
extern void T882f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].resize */
extern void T308f11(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T881f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPRESSION].aliased_resized_area */
extern T0* T882f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].new_capacity */
extern T6 T308f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].extendible */
extern T1 T308f6(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T76f656(GE_context* ac, T0* C, T6 a1);
extern T1 T76f656ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].prune */
extern void T308f10(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T76f585(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T76f278(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].i_th */
extern T0* T308f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].put_last */
extern void T309f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].resize */
extern void T309f16(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T76f655(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.arguments */
extern T0* T364f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.name */
extern T0* T364f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T76f246(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T311f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T311f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T303f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T303f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T303f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1075f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TYPE_SET].aliased_resized_area */
extern T0* T1074f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.new_capacity */
extern T6 T303f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T303f6(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.make */
extern T0* T364c28(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern T0* T82f260(GE_context* ac, T0* C);
/* ET_KEYWORD.make_create */
extern T0* T439c42(GE_context* ac);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T364f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.make */
extern T0* T365c5(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_show_console_call */
extern void T76f608(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].item */
extern T6 T330f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_routine_name */
extern void T76f601(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f601ot1(T0* a1, T0** a2);
/* ET_CLASS.upper_name */
extern T0* T83f162(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T199f22(GE_context* ac, T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T1265f27(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T1265f85(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1173f29(GE_context* ac, T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern T0* T1173f30(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern T0* T1173f33(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern T0* T1173f40(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern T0* T1173f32(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern T0* T1173f51(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern T0* T1173f31(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern T0* T1173f50(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_167 */
extern T0* T1173f49(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_166 */
extern T0* T1173f48(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern T0* T1173f47(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern T0* T1173f46(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern T0* T1173f45(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern T0* T1173f44(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern T0* T1173f43(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern T0* T1173f42(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern T0* T1173f41(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern T0* T1173f39(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern T0* T1173f38(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern T0* T1173f37(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern T0* T1173f36(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern T0* T1173f35(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern T0* T1173f34(GE_context* ac, T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T1265f57(GE_context* ac, T0* C);
/* STRING_8.as_upper */
extern T0* T17f30(GE_context* ac, T0* C);
/* STRING_8.to_upper */
extern void T17f68(GE_context* ac, T0* C);
/* STRING_8.to_upper_area */
extern void T17f72(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_escaped_string */
extern void T76f602(GE_context* ac, T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T391f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern T0* T76f263(GE_context* ac, T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T391c1(GE_context* ac);
/* ET_C_GENERATOR.print_temp_name */
extern void T76f579(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern T0* T76f147(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T76f575(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T76f547(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T76f577(GE_context* ac, T0* C);
/* ET_C_GENERATOR.indent */
extern void T76f576(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T76f535(GE_context* ac, T0* C);
extern T1 T76f535ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SYSTEM.is_new_instance_type */
extern T1 T72f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].has */
extern T1 T78f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].search_position */
extern void T78f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].hash_position */
extern T6 T78f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_item */
extern T0* T78f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_equality_tester */
extern T0* T78f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_item */
extern T6 T78f21(GE_context* ac, T0* C, T6 a1);
/* STRING_8.replace_substring_all */
extern void T17f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* SPECIAL [CHARACTER_8].resized_area_with_default */
extern T0* T15f8(GE_context* ac, T0* C, T2 a1, T6 a2);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].area */
extern T0* T1534f3(GE_context* ac, T0* C);
/* STRING_8_SEARCHER.substring_index_list_with_deltas */
extern T0* T1533f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].extend */
extern void T1534f9(GE_context* ac, T0* C, T6 a1);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].additional_space */
extern T6 T1534f5(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].capacity */
extern T6 T1534f6(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].count */
extern T6 T1534f4(GE_context* ac, T0* C);
/* detachable ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T1534c8(GE_context* ac, T6 a1);
/* STRING_8_SEARCHER.initialize_deltas */
extern void T1533f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_deferred */
extern T1 T83f111(GE_context* ac, T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T83f110(GE_context* ac, T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T439f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T76f607(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern T0* T82f28(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T251f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T251f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T684f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].set_after */
extern void T684f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].sort */
extern void T251f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].sort */
extern void T359f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].sort_with_comparator */
extern void T359f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].subsort_with_comparator */
extern void T359f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].swap */
extern void T251f22(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.less_than */
extern T1 T360f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T251f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].append_last */
extern void T251f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].extend_last */
extern void T251f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].forth */
extern void T1082f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T312f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T312f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1082f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_position */
extern void T1082f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T312f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].set_after */
extern void T1082f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T312f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].item */
extern T0* T1082f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T312f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T312f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].after */
extern T1 T1082f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].start */
extern void T1082f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T312f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T312f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TYPE].off */
extern T1 T1082f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T312f20(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T359c2(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.dynamic_type_comparator */
extern T0* T76f155(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_COMPARATOR_BY_ID.make */
extern T0* T360c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T251c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T251f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T251f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T684c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T333f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T333f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T333f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].search */
extern void T333f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T333f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T333f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T333f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T333f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T333f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T76f534(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].forth */
extern void T55f75(GE_context* ac, T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T1265f11(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T1265f41(GE_context* ac, T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f28(GE_context* ac, T0* C, T2 a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].key_for_iteration */
extern T0* T55f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].item_for_iteration */
extern T0* T55f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].after */
extern T1 T55f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].cursor_after */
extern T1 T55f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].start */
extern void T55f74(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_init_const_function */
extern void T76f533(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].forth */
extern void T332f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_forth */
extern void T332f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T332f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_position */
extern void T1108f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T332f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_item */
extern T6 T332f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T332f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_item */
extern T0* T332f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_item */
extern T0* T332f36(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T1356f16(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T76f599(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_for_iteration */
extern T0* T332f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_key */
extern T0* T332f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_item */
extern T0* T332f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T332f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_after */
extern T1 T332f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].after */
extern T1 T1108f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].start */
extern void T332f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_start */
extern void T332f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].cursor_off */
extern T1 T332f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].off */
extern T1 T1108f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].is_empty */
extern T1 T332f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].forth */
extern void T331f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_forth */
extern void T331f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].add_traversing_cursor */
extern void T331f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_position */
extern void T1106f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T331f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_item */
extern T6 T331f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_for_iteration */
extern T0* T331f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_item */
extern T0* T331f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_item */
extern T0* T331f20(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T76f598(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T76f600(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].has */
extern T1 T329f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search_position */
extern void T329f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].hash_position */
extern T6 T329f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_item */
extern T0* T329f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_item */
extern T6 T329f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_item */
extern T6 T329f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_for_iteration */
extern T0* T331f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_key */
extern T0* T331f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_item */
extern T0* T331f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T331f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_after */
extern T1 T331f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].after */
extern T1 T1106f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].start */
extern void T331f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_start */
extern void T331f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].cursor_off */
extern T1 T331f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].off */
extern T1 T1106f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].is_empty */
extern T1 T331f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T76f532(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T76f531(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T313f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T313f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T313f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T313f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T313f50(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].keep_head */
extern void T1080f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].set_count */
extern void T1080f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T313f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T313f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1083f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1083f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].forth */
extern void T313f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_forth */
extern void T313f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T313f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_position */
extern void T1083f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T313f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T313f24(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T76f597(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T76f634(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T76f581(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].wipe_out */
extern void T310f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_wipe_out */
extern void T310f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_wipe_out */
extern void T310f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T310f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T310f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].unset_found_item */
extern void T310f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].move_all_cursors_after */
extern void T310f45(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_next_cursor */
extern void T1079f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_after */
extern void T1079f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T76f654(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T76f653(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T76f653ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] PROCEDURE [[attached] TUPLE].set_rout_disp_final */
extern void T386f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T76f669(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T76f648(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T76f661(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item */
extern T0* T310f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_item */
extern T0* T310f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].search_position */
extern void T310f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].hash_position */
extern T6 T310f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_item */
extern T6 T310f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_item */
extern T6 T310f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_item */
extern T6 T310f21(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T76f630(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T76f616(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].force_last */
extern void T310f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_put */
extern void T310f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_put */
extern void T310f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_put */
extern void T310f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].resize */
extern void T310f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].clashes_resize */
extern void T310f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].special_integer_ */
extern T0* T310f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].key_storage_resize */
extern void T310f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_resize */
extern void T310f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].slots_resize */
extern void T310f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_modulus */
extern T6 T310f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_capacity */
extern T6 T310f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].item_storage_put */
extern void T310f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T76f628(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T313f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_item */
extern T0* T313f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T313f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T313f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T313f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].after */
extern T1 T1083f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].start */
extern void T313f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_start */
extern void T313f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].cursor_off */
extern T1 T313f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].off */
extern T1 T1083f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].is_empty */
extern T1 T313f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T76f596(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac2(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac3(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac4(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #7 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac7(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #8 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #9 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac9(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #10 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac10(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #11 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac11(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #12 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T76f596ac12(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f596ot1(T0* a1, T0** a2);
extern T1 T76f596ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T76f595(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T76f619(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T76f651(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T76f587(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T76f652(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T76f668(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T307f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].force_last_new */
extern void T313f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T313f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T313f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].force */
extern void T1081f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].fill_with */
extern void T1080f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].extend */
extern void T1080f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T313f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T313f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T313f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T313f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].resize */
extern void T313f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T313f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T313f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T313f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T313f64(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1081f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].aliased_resized_area */
extern T0* T1080f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T313f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T313f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T313f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T313f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T311f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern T0* T311f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T1081c3(GE_context* ac);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T311f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.new_capacity */
extern T6 T311f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T311f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T307c18(GE_context* ac, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T307f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.wipe_out */
extern void T306f20(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TYPE].keep_head */
extern void T683f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found_item */
extern T0* T313f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T313f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search */
extern void T313f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T313f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].force_last */
extern void T312f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_put */
extern void T312f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T312f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T312f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T312f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].resize */
extern void T312f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T312f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T312f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T312f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T312f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T312f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T312f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T312f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T312f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].search_position */
extern void T312f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T312f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.result_type_set_in_feature */
extern T0* T76f239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T76f583(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T76f624(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T342f4(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T76f594(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern T0* T82f27(GE_context* ac, T0* C);
/* ET_RESULT.make */
extern T0* T346c31(GE_context* ac);
/* ET_RESULT.make_token */
extern void T346f33(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T346f34(GE_context* ac, T0* C);
/* ET_RESULT.tokens */
extern T0* T346f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_attribute_special_capacity_access */
extern void T76f582(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_capacity_name */
extern void T76f623(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T76f578(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T328f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T328f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T328f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T328f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T328f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].keep_head */
extern void T1100f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].set_count */
extern void T1100f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T328f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T328f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T1099f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_after */
extern void T1099f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T328f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T328f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T328f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T1099f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T328f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T328f23(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T76f530(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T328f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T328f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T328f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T328f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T328f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T1099f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].start */
extern void T328f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T328f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T328f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].off */
extern T1 T1099f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T328f21(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T76f529(GE_context* ac, T0* C, T0* a1);
extern T1 T76f529ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T312f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T312f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T312f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T312f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T312f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T312f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].forth */
extern void T312f38(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T76f528(GE_context* ac, T0* C, T0* a1);
extern T1 T76f528ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T312f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].after */
extern T1 T312f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].cursor_after */
extern T1 T312f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].start */
extern void T312f37(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T76f527(GE_context* ac, T0* C);
extern T1 T76f527ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T76f588(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f588ot1(T0* a1, T0** a2);
extern T1 T76f588ot2(T0* a1, T0** a2);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T327f32(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T883f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].keep_head */
extern void T884f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].set_count */
extern void T884f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T327f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].default_create */
extern T0* T883c3(GE_context* ac);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T76f635(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T76f633(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T76f664(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T76f676(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].first */
extern T0* T309f10(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T76f675(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T76f695(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T76f766(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_attribute_access */
extern void T76f679(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T76f696(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T76f694(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T76f765(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_procedure_call */
extern void T76f693(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_set_item_call */
extern void T76f764(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T76f647(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T76f692(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_fast_call_call */
extern void T76f763(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T76f762(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T76f964(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f964ot1(T0* a1, T0** a2);
extern T1 T76f964ot2(T0* a1, T0** a2);
extern T1 T76f964ot3(T0* a1, T0** a2);
extern T1 T76f964ot4(T0* a1, T0** a2);
extern T1 T76f964ot5(T0* a1, T0** a2);
extern T1 T76f964ot6(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T76f968(GE_context* ac, T0* C);
extern T1 T76f968ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T76f970(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T347c12(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_CALL_EXPRESSION.set_target */
extern void T324f27(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T76f434(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].replace */
extern void T326f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_QUALIFIED_CALL_EXPRESSION.make */
extern T0* T324c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.make_qualified_call */
extern void T324f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T199f120(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].item */
extern T0* T326f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].put_last */
extern void T326f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].force */
extern void T798f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].fill_with */
extern void T799f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].extend */
extern void T799f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].resize */
extern void T326f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T798f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].aliased_resized_area */
extern T0* T799f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T76f967(GE_context* ac, T0* C);
extern T1 T76f967ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T76f969(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T307f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T555f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_typed_default_entity_value */
extern void T76f965(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.is_ise */
extern T1 T73f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T343f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T263f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_ref_procedure_call */
extern void T76f691(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_set_item_call */
extern void T76f761(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_procedure_call */
extern void T76f690(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_free_call */
extern void T76f760(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_c_call */
extern void T76f963(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_procedure_call */
extern void T76f689(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unmark_object_call */
extern void T76f759(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_unlock_marking_call */
extern void T76f758(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_at_call */
extern void T76f757(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_reference_field_call */
extern void T76f756(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_at_call */
extern void T76f755(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_64_field_call */
extern void T76f754(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_at_call */
extern void T76f753(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_real_32_field_call */
extern void T76f752(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_at_call */
extern void T76f751(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pointer_field_call */
extern void T76f750(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_at_call */
extern void T76f749(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_64_field_call */
extern void T76f748(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_at_call */
extern void T76f747(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_32_field_call */
extern void T76f746(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_at_call */
extern void T76f745(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_16_field_call */
extern void T76f744(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_at_call */
extern void T76f743(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_natural_8_field_call */
extern void T76f742(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_at_call */
extern void T76f741(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_64_field_call */
extern void T76f740(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_at_call */
extern void T76f739(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_32_field_call */
extern void T76f738(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_at_call */
extern void T76f737(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_16_field_call */
extern void T76f736(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_at_call */
extern void T76f735(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_integer_8_field_call */
extern void T76f734(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_at_call */
extern void T76f733(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_32_field_call */
extern void T76f732(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_at_call */
extern void T76f731(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_character_8_field_call */
extern void T76f730(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_at_call */
extern void T76f729(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_boolean_field_call */
extern void T76f728(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_mark_object_call */
extern void T76f727(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_lock_marking_call */
extern void T76f726(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_procedure_call */
extern void T76f688(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_exception_manager_developer_raise_call */
extern void T76f725(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_procedure_call */
extern void T76f687(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_set_item_call */
extern void T76f724(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_procedure_call */
extern void T76f686(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_free_call */
extern void T76f723(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_procedure_call */
extern void T76f685(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_local_free_call */
extern void T76f722(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_procedure_call */
extern void T76f684(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_set_item_call */
extern void T76f721(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_procedure_call */
extern void T76f683(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_set_item_call */
extern void T76f720(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T76f682(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T76f719(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f719ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_info_message_call */
extern void T76f962(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T76f718(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T343f20(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T263f28(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T76f663(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f663ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T76f632(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T76f632ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f632ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T76f662(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T76f662ac1(GE_context* ac, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T76f674(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f674ot1(T0* a1, T0** a2);
extern T1 T76f674ot2(T0* a1, T0** a2);
extern T1 T76f674ot3(T0* a1, T0** a2);
extern T1 T76f674ot4(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T76f681(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T76f680(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T76f717(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_runtime_name_call */
extern void T76f961(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T76f960(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_expanded_call */
extern void T76f959(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_deferred_call */
extern void T76f958(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_is_attached_call */
extern void T76f957(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_has_default_call */
extern void T76f956(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T76f955(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_default_call */
extern void T76f954(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T76f716(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T76f953(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T76f952(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f952ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T76f715(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T76f951(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T76f950(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f950ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T76f949(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_capacity_call */
extern void T76f948(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T76f947(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_query_call */
extern void T76f714(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_positive_infinity_call */
extern void T76f946(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_negative_infinity_call */
extern void T76f945(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_nan_call */
extern void T76f944(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ref_item_call */
extern void T76f943(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_query_call */
extern void T76f713(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_real_call */
extern void T76f942(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_64_call */
extern void T76f941(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_truncated_to_integer_call */
extern void T76f940(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_to_double_call */
extern void T76f939(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_quotient_call */
extern void T76f938(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_product_call */
extern void T76f937(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_power_call */
extern void T76f936(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_plus_call */
extern void T76f935(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_opposite_call */
extern void T76f934(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_minus_call */
extern void T76f933(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_positive_infinity_call */
extern void T76f932(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_negative_infinity_call */
extern void T76f931(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_nan_call */
extern void T76f930(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_is_less_call */
extern void T76f929(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_identity_call */
extern void T76f928(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_64_call */
extern void T76f927(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_floor_real_32_call */
extern void T76f926(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_64_call */
extern void T76f925(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_real_n_ceiling_real_32_call */
extern void T76f924(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_query_call */
extern void T76f712(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_ref_item_call */
extern void T76f923(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T76f711(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T76f922(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T76f921(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_is_default_pointer_call */
extern void T76f920(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.current_universe_impl */
extern T0* T76f277(GE_context* ac, T0* C);
/* ET_CLASS.universe */
extern T0* T83f156(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T76f919(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T76f710(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T76f918(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T76f917(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T76f916(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T76f915(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vxworks_call */
extern void T76f914(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T76f913(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T76f912(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T76f911(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_scoop_capable_call */
extern void T76f910(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T76f909(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T76f908(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_64_bits_call */
extern void T76f907(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T76f906(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T76f905(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T76f904(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T76f903(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_query_call */
extern void T76f709(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_memory_find_referers_call */
extern void T76f902(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_declaration_type_cast */
extern void T76f642(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_ise_runtime_query_call */
extern void T76f708(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_id_from_name_call */
extern void T76f901(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_c_call */
extern void T76f966(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_ise_runtime_type_conforms_to_call */
extern void T76f900(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_storable_version_of_type_call */
extern void T76f899(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_offset_call */
extern void T76f898(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_at_call */
extern void T76f897(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_reference_field_call */
extern void T76f896(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_at_call */
extern void T76f895(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_64_field_call */
extern void T76f894(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_at_call */
extern void T76f893(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_real_32_field_call */
extern void T76f892(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_offset_call */
extern void T76f891(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_raw_reference_field_at_call */
extern void T76f890(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_at_call */
extern void T76f889(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pointer_field_call */
extern void T76f888(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_persistent_field_count_of_type_call */
extern void T76f887(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_once_objects_call */
extern void T76f886(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_object_size_call */
extern void T76f885(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_type_instance_of_call */
extern void T76f884(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_tuple_instance_of_call */
extern void T76f883(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_special_of_reference_instance_of_call */
extern void T76f882(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_new_instance_of_call */
extern void T76f881(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_at_call */
extern void T76f880(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_64_field_call */
extern void T76f879(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_at_call */
extern void T76f878(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_32_field_call */
extern void T76f877(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_at_call */
extern void T76f876(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_16_field_call */
extern void T76f875(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_at_call */
extern void T76f874(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_natural_8_field_call */
extern void T76f873(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_type_call */
extern void T76f872(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_tuple_call */
extern void T76f871(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_type_call */
extern void T76f870(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_or_basic_type_call */
extern void T76f869(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_reference_call */
extern void T76f868(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_of_expanded_call */
extern void T76f867(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_copy_semantics_item_call */
extern void T76f866(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_special_call */
extern void T76f865(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_object_marked_call */
extern void T76f864(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_transient_of_type_call */
extern void T76f863(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_field_expanded_of_type_call */
extern void T76f862(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_expanded_call */
extern void T76f861(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_copy_semantics_field_call */
extern void T76f860(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_is_attached_type_call */
extern void T76f859(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_at_call */
extern void T76f858(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_64_field_call */
extern void T76f857(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_at_call */
extern void T76f856(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_32_field_call */
extern void T76f855(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_at_call */
extern void T76f854(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_16_field_call */
extern void T76f853(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_at_call */
extern void T76f852(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_integer_8_field_call */
extern void T76f851(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generic_parameter_count_call */
extern void T76f850(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generator_of_type_call */
extern void T76f849(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_generating_type_of_type_call */
extern void T76f848(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_type_of_type_call */
extern void T76f847(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_static_type_of_type_call */
extern void T76f846(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_offset_of_type_call */
extern void T76f845(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_name_of_type_call */
extern void T76f844(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_field_count_of_type_call */
extern void T76f843(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_eif_gen_param_id_call */
extern void T76f842(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_at_offset_call */
extern void T76f841(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_dynamic_type_call */
extern void T76f840(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_detachable_type_call */
extern void T76f839(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_compiler_version_call */
extern void T76f838(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_check_assert_call */
extern void T76f837(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_at_call */
extern void T76f836(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_32_field_call */
extern void T76f835(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_at_call */
extern void T76f834(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_character_8_field_call */
extern void T76f833(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_at_call */
extern void T76f832(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_boolean_field_call */
extern void T76f831(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_ise_runtime_attached_type_call */
extern void T76f830(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_query_call */
extern void T76f707(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_ref_item_call */
extern void T76f829(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_query_call */
extern void T76f706(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_64_call */
extern void T76f828(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_32_call */
extern void T76f827(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_real_call */
extern void T76f826(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_double_call */
extern void T76f825(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_32_call */
extern void T76f824(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_to_character_8_call */
extern void T76f823(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_quotient_call */
extern void T76f822(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_product_call */
extern void T76f821(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_power_call */
extern void T76f820(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_plus_call */
extern void T76f819(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_opposite_call */
extern void T76f818(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_minus_call */
extern void T76f817(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_is_less_call */
extern void T76f816(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_remainder_call */
extern void T76f815(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_integer_quotient_call */
extern void T76f814(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_identity_call */
extern void T76f813(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_xor_call */
extern void T76f812(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_right_call */
extern void T76f811(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_shift_left_call */
extern void T76f810(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_or_call */
extern void T76f809(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_not_call */
extern void T76f808(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_bit_and_call */
extern void T76f807(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_64_call */
extern void T76f806(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_32_call */
extern void T76f805(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_16_call */
extern void T76f804(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_natural_8_call */
extern void T76f803(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_64_call */
extern void T76f802(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_32_call */
extern void T76f801(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_16_call */
extern void T76f800(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_integer_n_as_integer_8_call */
extern void T76f799(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_query_call */
extern void T76f705(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_object_id_call */
extern void T76f798(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_routines_eif_id_object_call */
extern void T76f797(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T76f704(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T76f796(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_fast_item_call */
extern void T76f795(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_query_call */
extern void T76f703(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_cwin_error_text_call */
extern void T76f794(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_character_size_call */
extern void T76f793(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_facility_call */
extern void T76f792(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_code_call */
extern void T76f791(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_ccom_hresult_call */
extern void T76f790(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_com_failure_c_strlen_call */
extern void T76f789(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_query_call */
extern void T76f702(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_ref_item_call */
extern void T76f788(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_query_call */
extern void T76f701(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_32_call */
extern void T76f787(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_to_character_8_call */
extern void T76f786(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_natural_32_code_call */
extern void T76f785(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_character_n_code_call */
extern void T76f784(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_query_call */
extern void T76f700(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_ref_item_call */
extern void T76f783(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T76f699(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T76f782(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T76f781(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T76f780(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T76f779(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T76f778(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T76f777(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T76f776(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_query_call */
extern void T76f698(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_string_call */
extern void T76f775(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_i_th_argument_pointer_call */
extern void T76f774(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_32_argument_count_call */
extern void T76f773(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T76f697(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T76f772(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T76f772ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T76f771(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_is_equal_call */
extern void T76f770(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T76f769(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T76f768(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T76f767(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].force_last */
extern void T331f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_put */
extern void T331f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].force */
extern void T1105f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE].fill_with */
extern void T1104f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FEATURE].extend */
extern void T1104f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_put */
extern void T331f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_put */
extern void T331f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_item */
extern T6 T331f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].hash_position */
extern T6 T331f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].resize */
extern void T331f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].clashes_resize */
extern void T331f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].special_integer_ */
extern T0* T331f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].key_storage_resize */
extern void T331f64(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T1105f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FEATURE].aliased_resized_area */
extern T0* T1104f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_resize */
extern void T331f63(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T827f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTANT].aliased_resized_area */
extern T0* T828f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].slots_resize */
extern void T331f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_modulus */
extern T6 T331f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_capacity */
extern T6 T331f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].item_storage_put */
extern void T331f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].force */
extern void T827f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTANT].fill_with */
extern void T828f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTANT].extend */
extern void T828f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].search_position */
extern void T331f53(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T76f631(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f631ot1(T0* a1, T0** a2);
extern T1 T76f631ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T307f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T311f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_call_agent */
extern T1 T351f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_call_agent */
extern T1 T347f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T351f8(GE_context* ac, T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T76f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T343f28(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T263f19(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T327f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T327f12(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T76f627(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f627ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T76f626(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f626ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].force_last_new */
extern void T310f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].has */
extern T1 T310f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].replace */
extern void T309f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T327f30(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].force */
extern void T883f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].fill_with */
extern void T884f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].extend */
extern void T884f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T327f29(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T883f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].aliased_resized_area */
extern T0* T884f4(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T327f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T76f625(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T351f7(GE_context* ac, T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T83f165(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T282f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T347f9(GE_context* ac, T0* C);
/* ET_CLASS.seeded_query */
extern T0* T83f164(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T281f4(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T76f232(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].put_last */
extern void T305f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T199f119(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].force_last */
extern void T309f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_capacity */
extern T6 T309f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].extendible */
extern T1 T309f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T347f13(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T76f145(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f145ot1(T0* a1);
extern T1 T76f145ot2(T0* a1);
extern T1 T76f145ot3(T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T347f7(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T76f526(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].wipe_out */
extern void T316f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].keep_head */
extern void T1091f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].set_count */
extern void T1091f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T316f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1093f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].set_after */
extern void T1093f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_function */
extern void T76f593(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T692f66(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T385f66(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_equality_expression */
extern void T76f650(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].force_last */
extern void T316f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].force */
extern void T1092f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].fill_with */
extern void T1091f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].extend */
extern void T1091f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].resize */
extern void T316f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1092f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1091f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_capacity */
extern T6 T316f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].extendible */
extern T1 T316f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T76f667(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_equality_function_name */
extern void T76f649(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T76f665(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f665ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].item */
extern T0* T316f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].wipe_out */
extern void T315f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].keep_head */
extern void T1088f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_count */
extern void T1088f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].move_all_cursors_after */
extern void T315f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_next_cursor */
extern void T1090f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_after */
extern void T1090f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_function */
extern void T76f592(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_BRACKET_SYMBOL.is_not_tilde */
extern T1 T692f65(GE_context* ac, T0* C);
/* ET_SYMBOL.is_not_tilde */
extern T1 T385f65(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_equality_expression */
extern void T76f646(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force_last */
extern void T315f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].force */
extern void T1089f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].fill_with */
extern void T1088f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extend */
extern void T1088f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].resize */
extern void T315f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1089f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].aliased_resized_area */
extern T0* T1088f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_capacity */
extern T6 T315f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].extendible */
extern T1 T315f7(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_object_equality_function_name */
extern void T76f645(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].item */
extern T0* T315f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].wipe_out */
extern void T314f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].keep_head */
extern void T1085f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].set_count */
extern void T1085f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].move_all_cursors_after */
extern void T314f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_next_cursor */
extern void T1087f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].set_after */
extern void T1087f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function */
extern void T76f591(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE_HASH_LIST.is_empty */
extern T1 T306f9(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_function_name */
extern void T76f643(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].item */
extern T0* T314f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].wipe_out */
extern void T317f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_AGENT].keep_head */
extern void T1094f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT].set_count */
extern void T1094f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].move_all_cursors_after */
extern void T317f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_next_cursor */
extern void T1096f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].set_after */
extern void T1096f6(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T76f590(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T76f590ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T76f641(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T76f640(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T76f639(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T320f16(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T320f9(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T320f15(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T320f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T320f14(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T76f638(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T76f637(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T276c103(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern T0* T82f92(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T276f23(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_type_mark */
extern T0* T82f35(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T199f115(GE_context* ac, T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T199f112(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].item */
extern T0* T317f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T343f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T263f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].remove_last */
extern void T334f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T334f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T1116f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].set_after */
extern void T1116f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].last */
extern T0* T334f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].is_empty */
extern T1 T334f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].force_last */
extern void T334f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].force */
extern void T1115f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].fill_with */
extern void T1112f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].extend */
extern void T1112f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].resize */
extern void T334f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1115f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_DYNAMIC_FEATURE].aliased_resized_area */
extern T0* T1112f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T334f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].extendible */
extern T1 T334f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T343f35(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T263f32(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T76f525(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T76f589(GE_context* ac, T0* C, T0* a1);
extern T1 T76f589ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T76f636(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f636ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].force_last_new */
extern void T333f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T333f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T333f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T333f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T333f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].resize */
extern void T333f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T333f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T333f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T333f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T333f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T333f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T333f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T333f32(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.is_empty */
extern T1 T372f5(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T76f524(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T351f14(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T76f523(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_immutable_string_32_function */
extern void T76f522(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_32_function */
extern void T76f521(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_new_string_8_function */
extern void T76f520(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T76f519(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T76f574(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T76f620(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f620ot1(T0* a1, T0** a2);
extern T1 T76f620ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T76f660(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T76f518(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T339f35(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T339f44(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T339f44p1(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_types */
extern void T76f517(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T76f573(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_flags_name */
extern void T76f617(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T76f615(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T76f572(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T76f572ot1(T0* a1, T0** a2);
extern T1 T76f572ot2(T0* a1, T0** a2);
extern T1 T76f572ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.print */
extern void T76f618(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T394f7(GE_context* ac, T0* C, T0* a1);
/* STD_FILES.standard_default */
extern T0* T394f2(GE_context* ac, T0* C);
/* STRING_8.out */
extern T0* T17f18(GE_context* ac, T0* C);
/* ET_C_GENERATOR.io */
extern T0* T76f269(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_struct_name */
extern void T76f611(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].has_cycle */
extern T1 T345f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].sort */
extern void T345f15(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] BOOLEAN].item */
extern T1 T1129f4(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] BOOLEAN].put */
extern void T1129f6(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] ARRAY [[attached] BOOLEAN].make_filled */
extern T0* T1129c5(GE_context* ac, T1 a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] BOOLEAN].make_filled_area */
extern void T1129f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_TYPE].put_last */
extern void T251f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].replace */
extern void T1128f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].item */
extern T0* T1128f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].cloned_object */
extern T0* T1128f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].twin */
extern T0* T1128f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].copy */
extern void T1128f16(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].resized_area */
extern T0* T1523f4(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].copy_data */
extern void T1523f10(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1523f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].extend */
extern void T1523f12(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].move_data */
extern void T1523f13(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].overlapping_move */
extern void T1523f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].fill_with */
extern void T1523f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].non_overlapping_move */
extern void T1523f15(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].make_empty */
extern T0* T1523c6(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].new_cursor */
extern T0* T1128f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1525c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].set_internal_cursor */
extern void T1128f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].valid_cursor */
extern T1 T1128f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].move_all_cursors_after */
extern void T1128f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_next_cursor */
extern void T1525f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable DS_LINKABLE [[attached] INTEGER_32]].set_after */
extern void T1525f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].cloned_object */
extern T0* T296f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].twin */
extern T0* T296f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].copy */
extern void T296f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T296f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T1069c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T296f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].valid_cursor */
extern T1 T296f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].reset */
extern void T345f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T76f571(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T76f570(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T76f569(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T76f613(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T76f612(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].force_relation */
extern void T345f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T345f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_LINKABLE [[attached] INTEGER_32].put_right */
extern void T584f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] INTEGER_32].make */
extern T0* T584c3(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].count */
extern T6 T345f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].index_of */
extern T6 T345f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found_item */
extern T6 T411f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T411f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].found */
extern T1 T411f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search */
extern void T411f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].search_position */
extern void T411f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].hash_position */
extern T6 T411f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T411f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_item */
extern T6 T411f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_item */
extern T6 T411f22(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T76f568(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T76f567(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T76f566(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T76f565(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T76f564(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T76f563(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T76f562(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T76f561(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T76f560(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T76f559(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T76f558(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T76f557(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T76f556(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T76f555(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T76f554(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].force */
extern void T345f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put */
extern void T345f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].put_last */
extern void T1128f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].force */
extern void T1524f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].put_new */
extern void T411f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_put */
extern void T411f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_put */
extern void T411f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_put */
extern void T411f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_put */
extern void T411f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].unset_found_item */
extern void T411f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].resize */
extern void T1128f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1524f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].aliased_resized_area */
extern T0* T1523f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].resize */
extern void T411f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_resize */
extern void T411f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T411f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_resize */
extern void T411f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_resize */
extern void T411f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_resize */
extern void T411f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_modulus */
extern T6 T411f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].capacity */
extern T6 T345f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].has */
extern T1 T345f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].has */
extern T1 T411f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make_default */
extern T0* T345c12(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern void T345f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].make */
extern T0* T345c16(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1128c11(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].make */
extern T0* T1524f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_LINKABLE [[attached] INTEGER_32]].default_create */
extern T0* T1524c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern void T296f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make */
extern T0* T296c19(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T411c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T411f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T411f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T411f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T411f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1132c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T411f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T411f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T411f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T411f56(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T76f553(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern T0* T82f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T76f552(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern T0* T82f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T76f551(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern T0* T82f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T76f550(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern T0* T82f31(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T76f549(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern T0* T82f30(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T76f548(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern T0* T82f29(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T76f516(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T76f515(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T76f546(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].force_last */
extern void T78f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_put */
extern void T78f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_put */
extern void T78f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].resize */
extern void T78f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].clashes_resize */
extern void T78f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].special_integer_ */
extern T0* T78f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_resize */
extern void T78f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_resize */
extern void T78f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].slots_resize */
extern void T78f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_modulus */
extern T6 T78f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_capacity */
extern T6 T78f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_put */
extern void T78f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].force_last */
extern void T335f48(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_put */
extern void T335f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_put */
extern void T335f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_put */
extern void T335f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_item */
extern T6 T335f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].hash_position */
extern T6 T335f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].resize */
extern void T335f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].clashes_resize */
extern void T335f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].special_integer_ */
extern T0* T335f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].key_storage_resize */
extern void T335f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_resize */
extern void T335f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].slots_resize */
extern void T335f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_modulus */
extern T6 T335f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_capacity */
extern T6 T335f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item_storage_put */
extern void T335f59(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].search_position */
extern void T335f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].replace */
extern void T335f47(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].item */
extern T1 T335f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].has */
extern T1 T335f33(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T76f191(GE_context* ac, T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T76f116(GE_context* ac, T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T76f514(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T343f38(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T263f37(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.sort_types */
extern void T76f545(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_DYNAMIC_TYPE].put_relation */
extern void T345f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TYPE].force */
extern void T312f65(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T76f513(GE_context* ac, T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T76f512(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T76f504(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T76f503(GE_context* ac, T0* C, T1 a1);
/* GEC.no_split */
extern T1 T24f32(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T76f502(GE_context* ac, T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T24f22(GE_context* ac, T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T76f501(GE_context* ac, T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T24f31(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T44f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].last */
extern T0* T142f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].is_empty */
extern T1 T142f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make */
extern T0* T76c500(GE_context* ac, T0* a1, T0* a2);
/* ET_C_GENERATOR.make_external_regexps */
extern void T76f507(GE_context* ac, T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T76f506(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].set_equality_tester */
extern void T224f41(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern T0* T76f114(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T336c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make */
extern T0* T224c37(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T224f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T224f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T672c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_slots */
extern void T224f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_clashes */
extern void T224f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_key_storage */
extern void T224f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].make_item_storage */
extern void T224f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].make */
extern T0* T230f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_IDENTIFIER].make_empty */
extern T0* T229c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_IDENTIFIER].default_create */
extern T0* T230c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_key_equality_tester */
extern void T335f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T335c42(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_with_equality_testers */
extern void T335f50(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_sparse_container */
extern void T335f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].set_internal_cursor */
extern void T335f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].new_cursor */
extern T0* T335f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] STRING_8].make */
extern T0* T1117c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_slots */
extern void T335f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_clashes */
extern void T335f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_key_storage */
extern void T335f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] STRING_8].make_item_storage */
extern void T335f71(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] STRING_8].default_create */
extern T0* T59c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_equality_tester */
extern void T78f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make */
extern void T78f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make */
extern T0* T78c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_internal_cursor */
extern void T78f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_cursor */
extern T0* T78f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].make */
extern T0* T407c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_slots */
extern void T78f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_clashes */
extern void T78f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_key_storage */
extern void T78f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_item_storage */
extern void T78f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T334c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].set_internal_cursor */
extern void T334f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T334f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DYNAMIC_FEATURE].make */
extern T0* T1116c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T333c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T333f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T333f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T333f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T333f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1114c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T333f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T333f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T333f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable ET_DYNAMIC_FEATURE, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T333f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_map */
extern T0* T332c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_with_equality_testers */
extern void T332f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_sparse_container */
extern void T332f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].set_internal_cursor */
extern void T332f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_cursor */
extern T0* T332f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make */
extern T0* T1108c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_slots */
extern void T332f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_modulus */
extern T6 T332f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_clashes */
extern void T332f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_key_storage */
extern void T332f56(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].make */
extern T0* T1111f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].make_empty */
extern T0* T1109c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].default_create */
extern T0* T1111c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].make_item_storage */
extern void T332f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_map */
extern T0* T331c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_with_equality_testers */
extern void T331f44(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_sparse_container */
extern void T331f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].set_internal_cursor */
extern void T331f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].new_cursor */
extern T0* T331f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CONSTANT, [attached] ET_FEATURE].make */
extern T0* T1106c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_slots */
extern void T331f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_clashes */
extern void T331f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_key_storage */
extern void T331f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].make */
extern T0* T1105f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FEATURE].make_empty */
extern T0* T1104c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FEATURE].default_create */
extern T0* T1105c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_CONSTANT, [attached] ET_FEATURE].make_item_storage */
extern void T331f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].make */
extern T0* T827f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTANT].make_empty */
extern T0* T828c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTANT].default_create */
extern T0* T827c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_map */
extern T0* T329c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_with_equality_testers */
extern void T329f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_sparse_container */
extern void T329f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].set_internal_cursor */
extern void T329f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_cursor */
extern T0* T329f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FEATURE].make */
extern T0* T1103c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_slots */
extern void T329f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_modulus */
extern T6 T329f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_clashes */
extern void T329f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_key_storage */
extern void T329f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].make_item_storage */
extern void T329f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T328c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].set_internal_cursor */
extern void T328f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T328f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1099c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T328f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T328f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T328f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T328f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T328f39(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T1101f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].make_empty */
extern T0* T1100c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T1101c3(GE_context* ac);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T327c28(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T327f28p1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION_ITEM].make */
extern T0* T883f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION_ITEM].make_empty */
extern T0* T884c5(GE_context* ac, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T327f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T326c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].set_internal_cursor */
extern void T326f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_QUALIFIED_CALL_EXPRESSION].new_cursor */
extern T0* T326f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T1098c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].make */
extern T0* T798f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].make_empty */
extern T0* T799c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_CALL_EXPRESSION].default_create */
extern T0* T798c3(GE_context* ac);
/* ET_UNQUALIFIED_CALL_EXPRESSION.make */
extern T0* T325c28(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.make */
extern T0* T321c9(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.make_qualified_call */
extern void T321f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T320f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T320c13(GE_context* ac, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T320f13p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern T0* T82f257(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T385c74(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern T0* T82f256(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T385c73(GE_context* ac);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T320f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].make */
extern T0* T317c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].set_internal_cursor */
extern void T317f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].new_cursor */
extern T0* T317f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_AGENT].make */
extern T0* T1096c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].make */
extern T0* T1095f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT].make_empty */
extern T0* T1094c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].default_create */
extern T0* T1095c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T316c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T316f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EQUALITY_EXPRESSION].new_cursor */
extern T0* T316f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T1093c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].make */
extern T0* T1092f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_EQUALITY_EXPRESSION].make_empty */
extern T0* T1091c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_EQUALITY_EXPRESSION].default_create */
extern T0* T1092c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T315c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].set_internal_cursor */
extern void T315f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_EQUALITY_EXPRESSION].new_cursor */
extern T0* T315f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1090c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make */
extern T0* T1089f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_EQUALITY_EXPRESSION].make_empty */
extern T0* T1088c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_EQUALITY_EXPRESSION].default_create */
extern T0* T1089c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].make */
extern T0* T314c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].set_internal_cursor */
extern void T314f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_cursor */
extern T0* T314f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_OBJECT_TEST].make */
extern T0* T1087c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].make */
extern T0* T1086f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].make_empty */
extern T0* T1085c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].default_create */
extern T0* T1086c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_map */
extern T0* T313c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T313f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_sparse_container */
extern void T313f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].set_internal_cursor */
extern void T313f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].new_cursor */
extern T0* T313f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make */
extern T0* T1083c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_slots */
extern void T313f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_clashes */
extern void T313f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_key_storage */
extern void T313f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET, [attached] ET_DYNAMIC_TYPE].make_item_storage */
extern void T313f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T1081f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_STANDALONE_TYPE_SET].make_empty */
extern T0* T1080c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T311c8(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_map */
extern T0* T310c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_with_equality_testers */
extern void T310f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_sparse_container */
extern void T310f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].set_internal_cursor */
extern void T310f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].new_cursor */
extern T0* T310f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make */
extern T0* T1079c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_slots */
extern void T310f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_clashes */
extern void T310f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_key_storage */
extern void T310f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] INTEGER_32].make_item_storage */
extern void T310f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].make */
extern T0* T309c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].set_internal_cursor */
extern void T309f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].new_cursor */
extern T0* T309f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_EXPRESSION].make */
extern T0* T1077c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].make */
extern T0* T881f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPRESSION].make_empty */
extern T0* T882c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPRESSION].default_create */
extern T0* T881c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [[attached] ET_EXPRESSION].make */
extern T0* T308c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].make */
extern T0* T305c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].set_internal_cursor */
extern void T305f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_IDENTIFIER].new_cursor */
extern T0* T305f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_IDENTIFIER].make */
extern T0* T1076c3(GE_context* ac, T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T304c4(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern T0* T76f479(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T302c3(GE_context* ac, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T83f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern T0* T82f1(GE_context* ac, T0* C);
/* ET_CLASS.set_implementation_error */
extern void T83f245(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_error */
extern void T83f244(GE_context* ac, T0* C);
/* ET_CLASS.set_flattening_error */
extern void T83f243(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T83f242(GE_context* ac, T0* C);
/* ET_CLASS.set_syntax_error */
extern void T83f241(GE_context* ac, T0* C);
/* ET_CLASS.set_group */
extern void T83f240(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_group */
extern T0* T82f2(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.make */
extern T0* T436c30(GE_context* ac);
/* ET_CLASS.make_unknown */
extern T0* T83c239(GE_context* ac);
/* ET_CLASS.make */
extern void T83f246(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T83c246(GE_context* ac, T0* a1);
/* ET_CLASS_CODES.class_code */
extern T8 T440f1(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found_item */
extern T8 T1170f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_item */
extern T8 T1170f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].found */
extern T1 T1170f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search */
extern void T1170f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].search_position */
extern void T1170f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].hash_position */
extern T6 T1170f23(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T518f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_class_name */
extern T1 T199f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T1170f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T1170f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_item */
extern T6 T1170f26(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_CODES.codes_by_name */
extern T0* T440f2(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iteration_cursor_class_name */
extern T0* T82f143(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.iterable_class_name */
extern T0* T82f142(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern T0* T82f141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern T0* T82f140(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern T0* T82f139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern T0* T82f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern T0* T82f137(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern T0* T82f136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern T0* T82f135(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern T0* T82f134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern T0* T82f133(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern T0* T82f132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern T0* T82f131(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern T0* T82f130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern T0* T82f129(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern T0* T82f128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern T0* T82f127(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern T0* T82f126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern T0* T82f125(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern T0* T82f124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern T0* T82f123(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern T0* T82f122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern T0* T82f121(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern T0* T82f120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern T0* T82f119(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern T0* T82f118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern T0* T82f117(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].force_last */
extern void T1170f37(GE_context* ac, T0* C, T8 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_put */
extern void T1170f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].force */
extern void T680f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].fill_with */
extern void T681f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].extend */
extern void T681f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_put */
extern void T1170f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_put */
extern void T1170f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].resize */
extern void T1170f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].clashes_resize */
extern void T1170f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T1170f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T1170f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T680f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].aliased_resized_area */
extern T0* T681f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T1170f48(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].aliased_resized_area */
extern T0* T1531f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] NATURAL_8].aliased_resized_area */
extern T0* T571f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].slots_resize */
extern void T1170f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T1170f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T1170f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].item_storage_put */
extern void T1170f41(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].force */
extern void T1531f4(GE_context* ac, T0* C, T0* a1, T8 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].unset_found_item */
extern void T1170f40(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern T0* T82f116(GE_context* ac, T0* C);
/* ET_CLASS_CODES.tokens */
extern T0* T440f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T1170f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_CODES.class_name_tester */
extern T0* T440f4(GE_context* ac, T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T518c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_map */
extern T0* T1170c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T1170f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T1170f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T1170f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T1170f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make */
extern T0* T1532c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_slots */
extern void T1170f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_clashes */
extern void T1170f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_key_storage */
extern void T1170f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].make */
extern T0* T680f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLASS_NAME].make_empty */
extern T0* T681c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLASS_NAME].default_create */
extern T0* T680c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] NATURAL_8, [attached] ET_CLASS_NAME].make_item_storage */
extern void T1170f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].make */
extern T0* T1531f2(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] NATURAL_8].default_create */
extern T0* T1531c3(GE_context* ac);
/* MUTEX.make */
extern T0* T131c9(GE_context* ac);
/* MUTEX.eif_thr_mutex_create */
extern T14 T131f4(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern T0* T82f89(GE_context* ac, T0* C);
/* ET_KEYWORD.make_class */
extern T0* T439c36(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern T0* T82f88(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T282c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].make */
extern T0* T999f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PROCEDURE].make_empty */
extern T0* T1000c5(GE_context* ac, T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern T0* T282f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].default_create */
extern T0* T999c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern T0* T82f87(GE_context* ac, T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T281c8(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].make */
extern T0* T1004f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUERY].make_empty */
extern T0* T1005c5(GE_context* ac, T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern T0* T281f7(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].default_create */
extern T0* T1004c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern T0* T82f86(GE_context* ac, T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T438c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].make */
extern T0* T1384f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].make_empty */
extern T0* T1383c5(GE_context* ac, T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern T0* T438f5(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].default_create */
extern T0* T1384c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern T0* T82f85(GE_context* ac, T0* C);
/* ET_CLASS.tokens */
extern T0* T83f163(GE_context* ac, T0* C);
/* GEC.tokens */
extern T0* T24f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T72f76(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T72f79(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T72f83(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T255f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T80f95(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T80f99(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T80f104(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T80f106(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f106ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T351f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T347f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T80f110(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T298f192(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T298f198(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.set_has_eiffel_error */
extern void T298f197(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T34f198(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T34f178(GE_context* ac, T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T135f9(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.set_has_eiffel_error */
extern void T34f201(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T80f111(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T351f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T347f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T80f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern T0* T80f56(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T80f98(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T303f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].wipe_out */
extern void T411f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T411f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T411f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T411f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T411f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T411f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_next_cursor */
extern void T1132f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].set_after */
extern void T1132f7(GE_context* ac, T0* C);
/* [attached] DS_CELL [[attached] INTEGER_32].put */
extern void T410f3(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T343f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T263f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T80f102(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.wipe_out */
extern void T427f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].wipe_out */
extern void T177f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_wipe_out */
extern void T177f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_wipe_out */
extern void T177f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_wipe_out */
extern void T177f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_wipe_out */
extern void T177f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].unset_found_item */
extern void T177f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors_after */
extern void T177f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_next_cursor */
extern void T640f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_after */
extern void T640f10(GE_context* ac, T0* C);
/* ET_ACROSS_CURSOR_SCOPE.wipe_out */
extern void T426f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T1160f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T1158f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].set_count */
extern void T1158f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T1160f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1528f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].set_after */
extern void T1528f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].wipe_out */
extern void T425f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_wipe_out */
extern void T425f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_wipe_out */
extern void T425f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_wipe_out */
extern void T425f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_wipe_out */
extern void T425f50(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].keep_head */
extern void T1145f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].set_count */
extern void T1145f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].unset_found_item */
extern void T425f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_all_cursors_after */
extern void T425f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_next_cursor */
extern void T1155f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_after */
extern void T1155f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].forth */
extern void T425f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_forth */
extern void T425f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].add_traversing_cursor */
extern void T425f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_position */
extern void T1155f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_traversing_cursor */
extern void T425f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_item */
extern T6 T425f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_for_iteration */
extern T0* T425f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_item */
extern T0* T425f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_item */
extern T0* T425f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T425f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_after */
extern T1 T425f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].after */
extern T1 T1155f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].start */
extern void T425f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_start */
extern void T425f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].cursor_off */
extern T1 T425f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].off */
extern T1 T1155f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].is_empty */
extern T1 T425f27(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.wipe_out */
extern void T423f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T1154f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T1152f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].set_count */
extern void T1152f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T1154f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1527f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T1527f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].wipe_out */
extern void T422f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_wipe_out */
extern void T422f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_wipe_out */
extern void T422f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_wipe_out */
extern void T422f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_wipe_out */
extern void T422f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].unset_found_item */
extern void T422f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].move_all_cursors_after */
extern void T422f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_next_cursor */
extern void T1148f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_after */
extern void T1148f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].forth */
extern void T422f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_forth */
extern void T422f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].add_traversing_cursor */
extern void T422f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_position */
extern void T1148f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].remove_traversing_cursor */
extern void T422f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_item */
extern T6 T422f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T80f100(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T421f52(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T421f54(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].keep_head */
extern void T1017f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].keep_head */
extern void T279f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_TYPE].set_count */
extern void T279f9(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern T0* T421f4(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].default_create */
extern T0* T1017c3(GE_context* ac);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T80f69(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].force_last */
extern void T420f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].force */
extern void T1146f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].fill_with */
extern void T1145f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].extend */
extern void T1145f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].resize */
extern void T420f16(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1146f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].aliased_resized_area */
extern T0* T1145f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T420f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T420f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_for_iteration */
extern T0* T422f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_item */
extern T0* T422f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_item */
extern T0* T422f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T422f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_after */
extern T1 T422f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].after */
extern T1 T1148f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].start */
extern void T422f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_start */
extern void T422f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].cursor_off */
extern T1 T422f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].off */
extern T1 T1148f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].is_empty */
extern T1 T422f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_preconditions_attachment_scope */
extern void T80f105(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_attachment_scope */
extern void T80f109(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].force_last */
extern void T429f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].force */
extern void T1163f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].fill_with */
extern void T1162f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].extend */
extern void T1162f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].resize */
extern void T429f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1163f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].aliased_resized_area */
extern T0* T1162f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_capacity */
extern T6 T429f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].extendible */
extern T1 T429f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].forth */
extern void T432f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_forth */
extern void T432f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].add_traversing_cursor */
extern void T432f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_next_cursor */
extern void T1166f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_position */
extern void T1166f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].remove_traversing_cursor */
extern void T432f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_after */
extern void T1166f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_item */
extern T6 T432f28(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.merge_scope */
extern void T427f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].forth */
extern void T177f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_forth */
extern void T177f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].add_traversing_cursor */
extern void T177f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].set_position */
extern void T640f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove_traversing_cursor */
extern void T177f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_item */
extern T6 T177f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove */
extern void T177f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].remove_position */
extern void T177f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_put */
extern void T177f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_put */
extern void T177f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_keep_head */
extern void T177f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_keep_head */
extern void T177f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_put */
extern void T177f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_put */
extern void T177f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_cursors_forth */
extern void T177f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].internal_set_key_equality_tester */
extern void T177f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_equality_tester */
extern T0* T177f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_item */
extern T6 T177f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].hash_position */
extern T6 T177f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_item */
extern T6 T177f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_item */
extern T6 T177f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].search_position */
extern void T177f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].has */
extern T1 T177f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_for_iteration */
extern T6 T177f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_item */
extern T6 T177f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].after */
extern T1 T177f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_after */
extern T1 T177f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].after */
extern T1 T640f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].start */
extern void T177f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_start */
extern void T177f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_off */
extern T1 T177f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].off */
extern T1 T640f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].is_empty */
extern T1 T177f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_last */
extern T1 T432f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_is_last */
extern T1 T432f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].is_empty */
extern T1 T432f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_for_iteration */
extern T0* T432f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_item */
extern T0* T432f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_item */
extern T0* T432f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].start */
extern void T432f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_start */
extern void T432f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].cursor_off */
extern T1 T432f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].off */
extern T1 T1166f5(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.copy_scope */
extern void T427f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].append_last */
extern void T177f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].extend_last */
extern void T177f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].forth */
extern void T640f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].put_last */
extern void T177f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].compress */
extern void T177f77(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].move_all_cursors */
extern void T177f78(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].item */
extern T6 T640f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].start */
extern void T640f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_cursor */
extern T0* T177f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] INTEGER_32].make */
extern T0* T640c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].resize */
extern void T177f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].clashes_resize */
extern void T177f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].special_integer_ */
extern T0* T177f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].key_storage_resize */
extern void T177f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].item_storage_resize */
extern void T177f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].slots_resize */
extern void T177f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_modulus */
extern T6 T177f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].new_capacity */
extern T6 T177f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].extendible */
extern T1 T177f33(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_attachment_scope */
extern T0* T80f85(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].remove_last */
extern void T429f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].keep_head */
extern void T1162f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].set_count */
extern void T1162f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].move_last_cursors_after */
extern void T429f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_next_cursor */
extern void T1164f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].set_after */
extern void T1164f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].last */
extern T0* T429f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.make */
extern T0* T427c11(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make */
extern T0* T177c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].set_internal_cursor */
extern void T177f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_slots */
extern void T177f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_clashes */
extern void T177f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_key_storage */
extern void T177f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].make_item_storage */
extern void T177f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].is_empty */
extern T1 T429f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_assertions_attachment_scope */
extern void T80f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_scope */
extern void T428f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.assertion */
extern T0* T431f10(GE_context* ac, T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T431f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].first */
extern T0* T432f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].force_last */
extern void T432f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_put */
extern void T432f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_put */
extern void T432f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_put */
extern void T432f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_item */
extern T6 T432f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].hash_position */
extern T6 T432f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].resize */
extern void T432f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].clashes_resize */
extern void T432f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].special_integer_ */
extern T0* T432f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_resize */
extern void T432f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_resize */
extern void T432f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T1169f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].aliased_resized_area */
extern T0* T1167f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].key_storage_item */
extern T0* T432f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].slots_resize */
extern void T432f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_modulus */
extern T6 T432f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_capacity */
extern T6 T432f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].item_storage_put */
extern void T432f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].force */
extern void T1169f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].fill_with */
extern void T1167f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].extend */
extern void T1167f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].search_position */
extern void T432f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].unset_found_item */
extern void T432f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.add_precursors_with_preconditions_recursive */
extern void T80f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_LIST.item */
extern T0* T434f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_map */
extern T0* T432c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_with_equality_testers */
extern void T432f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_sparse_container */
extern void T432f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].set_internal_cursor */
extern void T432f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].new_cursor */
extern T0* T432f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make */
extern T0* T1166c7(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_slots */
extern void T432f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_clashes */
extern void T432f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_key_storage */
extern void T432f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ASSERTIONS, [attached] ET_FEATURE].make_item_storage */
extern void T432f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].make */
extern T0* T1169f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTIONS].make_empty */
extern T0* T1167c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTIONS].default_create */
extern T0* T1169c3(GE_context* ac);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T409f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.set_validity_error */
extern void T431f22(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.set_validity_checked */
extern void T431f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.free_context */
extern void T409f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T409f41(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.keep_object_tests */
extern void T423f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].keep_first */
extern void T1154f12(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T409f42(GE_context* ac, T0* C);
/* ET_CLASS.current_system */
extern T0* T83f147(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_scope */
extern void T424f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T298f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T298f195(GE_context* ac, T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern T0* T133f2(GE_context* ac, T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T135c5(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T298f200(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T1072c784(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T1072f783(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T1072f21(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T1072f19(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern T0* T1072f12(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T196c12(GE_context* ac);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T1072f15(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T298f27(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T34f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T34f200(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T34f181(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T34f26(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T421f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T409f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T409f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1067f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.add_supplier */
extern void T1067f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].force_last */
extern void T709f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_put */
extern void T709f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_put */
extern void T709f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_item */
extern T6 T709f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].hash_position */
extern T6 T709f30(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.hash_code */
extern T6 T496f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].resize */
extern void T709f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_resize */
extern void T709f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].special_integer_ */
extern T0* T709f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_resize */
extern void T709f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_resize */
extern void T709f70(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1471f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].aliased_resized_area */
extern T0* T1469f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_item */
extern T0* T709f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_item */
extern T0* T709f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_item */
extern T6 T709f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_resize */
extern void T709f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_modulus */
extern T6 T709f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_capacity */
extern T6 T709f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_put */
extern void T709f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].force */
extern void T1471f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].fill_with */
extern void T1469f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].extend */
extern void T1469f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].search_position */
extern void T709f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_equality_tester */
extern T0* T709f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].unset_found_item */
extern void T709f46(GE_context* ac, T0* C);
/* ET_CLASS.is_none */
extern T1 T83f167(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.actual_class */
extern T0* T496f23(GE_context* ac, T0* C);
/* ET_CLASS.actual_class */
extern T0* T83f131(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.count */
extern T6 T423f3(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T409f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T420f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T420f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T1147f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_after */
extern void T1147f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].last */
extern T0* T420f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T421c51(GE_context* ac, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T421f53(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].make */
extern T0* T1017f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_TYPE].make_empty */
extern T0* T279c5(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T420f10(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.current_universe_impl */
extern T0* T409f43(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T409f55(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T409f68(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T80f101(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T263f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T343f39(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T263f38(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T343f40(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T263f35(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T255f15(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T80f91(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T255f14(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T80f90(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T255f18(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T80f94(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T255f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T80f93(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T343f37(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T263f34(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T83f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T859f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T856f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T856f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T820f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.base_class */
extern T0* T534f3(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.has_class */
extern T1 T522f5(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T856f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T298f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T298f194(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T1071c32(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T298f24(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T34f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T34f199(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T34f15(GE_context* ac, T0* C);
/* ET_CLASS.named_query */
extern T0* T83f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T281f5(GE_context* ac, T0* C, T0* a1);
extern T1 T281f5ot1(T0* a1, T0** a2);
/* ET_CLASS.named_procedure */
extern T0* T83f74(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T282f5(GE_context* ac, T0* C, T0* a1);
extern T1 T282f5ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T298f183(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T1071c31(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T298f23(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T34f190(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T34f14(GE_context* ac, T0* C);
/* ET_CLASS.has_syntax_error */
extern T1 T83f70(GE_context* ac, T0* C);
/* ET_CLASS.is_parsed */
extern T1 T83f69(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T298f182(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T1071c30(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T298f22(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T34f189(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T34f13(GE_context* ac, T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T83f59(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T298f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T1071c29(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T298f21(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T34f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T34f12(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern T0* T82f4(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T298f180(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T1071c28(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T298f20(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T34f187(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T34f173(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T72f65(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.stop_requested */
extern T1 T73f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T72f81(GE_context* ac, T0* C, T0* a1);
extern T1 T72f81ot1(T0* a1, T0** a2);
/* ET_TOKEN_CONSTANTS.set_exception_data_feature_name */
extern T0* T82f20(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_raise_feature_name */
extern T0* T82f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.last_exception_feature_name */
extern T0* T82f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.init_exception_manager_feature_name */
extern T0* T82f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe6a_error */
extern void T298f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkfe6a */
extern T0* T1072c779(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] ARRAY [[attached] ET_TYPE].item */
extern T0* T278f4(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T298f16(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe6a_error */
extern void T34f197(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkfe6_error */
extern T1 T34f21(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T298f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T1072c778(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T298f15(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T34f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T34f20(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_rout_disp_final_feature_name */
extern T0* T82f16(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.rout_disp_feature_name */
extern T0* T82f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern T0* T82f14(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern T0* T82f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern T0* T82f10(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.older_ise_version */
extern T1 T73f44(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.is_less */
extern T1 T79f10(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T79f9(GE_context* ac, T0* C);
/* UT_VERSION.has_build */
extern T1 T79f8(GE_context* ac, T0* C);
/* UT_VERSION.revision */
extern T6 T79f7(GE_context* ac, T0* C);
/* UT_VERSION.has_revision */
extern T1 T79f6(GE_context* ac, T0* C);
/* UT_VERSION.minor */
extern T6 T79f5(GE_context* ac, T0* C);
/* UT_VERSION.has_minor */
extern T1 T79f13(GE_context* ac, T0* C);
/* UT_VERSION.major */
extern T6 T79f12(GE_context* ac, T0* C);
/* UT_VERSION.has_major */
extern T1 T79f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern T0* T72f66(GE_context* ac, T0* C);
/* UT_VERSION.make */
extern T0* T79c17(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern T0* T82f9(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern T0* T82f8(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern T0* T82f7(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.capacity_feature_name */
extern T0* T82f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T298f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T1072c777(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T298f14(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T34f195(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T34f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T298f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T1072c776(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T298f13(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T34f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T34f18(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T298f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T1072c775(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T298f12(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T34f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T34f17(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern T0* T82f5(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T298f185(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T1071c33(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T298f174(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T34f192(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T34f16(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_6 */
extern void T73f55(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_6_metrics */
extern void T73f63(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.record_end_time */
extern void T73f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.print_time */
extern void T73f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T301f9(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T301f18(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T301f23(GE_context* ac, T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T249f6(GE_context* ac, T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T301f14(GE_context* ac, T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T301f22(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T301f17(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T301f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T301f16(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T301c16(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T301f20(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T301f19(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T257f43(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T257f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T257f38(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T257f42(GE_context* ac, T0* C);
/* DT_DATE_TIME.is_less */
extern T1 T257f41(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T257f40(GE_context* ac, T0* C);
/* DT_DATE_TIME.day */
extern T6 T257f10(GE_context* ac, T0* C);
/* DT_DATE_TIME.month */
extern T6 T257f9(GE_context* ac, T0* C);
/* DT_DATE_TIME.year */
extern T6 T257f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_duration */
extern void T257f62(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.add_milliseconds */
extern void T257f66(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_normalized_time_storage */
extern void T257f69(GE_context* ac, T0* C, T7 a1);
/* DT_DATE_TIME.add_days */
extern void T257f70(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T257f68(GE_context* ac, T0* C, T6 a1);
/* DT_DATE_TIME.set_year_month_day */
extern void T257f57(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern T6 T257f46(GE_context* ac, T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T257f11(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern T6 T257f24(GE_context* ac, T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T257f23(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern T6 T257f22(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T249f3(GE_context* ac, T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T257f21(GE_context* ac, T0* C);
/* DT_DATE_TIME.set_day */
extern void T257f67(GE_context* ac, T0* C, T6 a1);
/* INTEGER_64.to_integer */
extern T6 T7f11(GE_context* ac, T7* C);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T301f15(GE_context* ac, T0* C);
/* DT_DATE_TIME.add_years_months_days */
extern void T257f65(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_time */
extern void T257f61(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T257f60(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern T0* T301f8(GE_context* ac, T0* C);
/* DT_DATE_TIME.make */
extern T0* T257c59(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T257f64(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T257f63(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.minus */
extern T0* T257f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T257f16(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T257f7(GE_context* ac, T0* C);
/* DT_DATE_TIME.second */
extern T6 T257f6(GE_context* ac, T0* C);
/* DT_DATE_TIME.minute */
extern T6 T257f5(GE_context* ac, T0* C);
/* DT_DATE_TIME.hour */
extern T6 T257f4(GE_context* ac, T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T257f3(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T284f10(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T284f12(GE_context* ac, T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T257f58(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T284f13(GE_context* ac, T0* C);
/* C_DATE.second_now */
extern T6 T695f6(GE_context* ac, T0* C);
/* C_DATE.get_tm_sec */
extern T6 T695f13(GE_context* ac, T0* C, T14 a1);
/* C_DATE.minute_now */
extern T6 T695f5(GE_context* ac, T0* C);
/* C_DATE.get_tm_min */
extern T6 T695f12(GE_context* ac, T0* C, T14 a1);
/* C_DATE.hour_now */
extern T6 T695f4(GE_context* ac, T0* C);
/* C_DATE.get_tm_hour */
extern T6 T695f11(GE_context* ac, T0* C, T14 a1);
/* C_DATE.day_now */
extern T6 T695f15(GE_context* ac, T0* C);
/* C_DATE.get_tm_mday */
extern T6 T695f10(GE_context* ac, T0* C, T14 a1);
/* C_DATE.month_now */
extern T6 T695f8(GE_context* ac, T0* C);
/* C_DATE.get_tm_mon */
extern T6 T695f9(GE_context* ac, T0* C, T14 a1);
/* C_DATE.year_now */
extern T6 T695f7(GE_context* ac, T0* C);
/* C_DATE.get_tm_year */
extern T6 T695f14(GE_context* ac, T0* C, T14 a1);
/* C_DATE.update */
extern void T695f23(GE_context* ac, T0* C);
/* POINTER.memory_free */
extern void T14f11(GE_context* ac, T14* C);
/* POINTER.default_pointer */
extern T14 T14f10(GE_context* ac, T14* C);
/* POINTER.c_free */
extern void T14f14(GE_context* ac, T14* C, T14 a1);
/* C_DATE.get_millitm */
extern T6 T695f21(GE_context* ac, T0* C, T14 a1);
/* C_DATE.tm_structure_size */
extern T6 T695f20(GE_context* ac, T0* C);
/* C_DATE.localtime */
extern T14 T695f19(GE_context* ac, T0* C, T14 a1);
/* C_DATE.gmtime */
extern T14 T695f18(GE_context* ac, T0* C, T14 a1);
/* C_DATE.get_time */
extern void T695f25(GE_context* ac, T0* C, T14 a1, T14 a2);
/* C_DATE.ftime */
extern void T695f24(GE_context* ac, T0* C, T14 a1);
/* C_DATE.time_t_structure_size */
extern T6 T695f17(GE_context* ac, T0* C);
/* C_DATE.timeb_structure_size */
extern T6 T695f16(GE_context* ac, T0* C);
/* C_DATE.default_create */
extern T0* T695c22(GE_context* ac);
/* DT_DATE_TIME.make_from_storage */
extern T0* T257c56(GE_context* ac, T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern T0* T283f1(GE_context* ac, T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T284c11(GE_context* ac);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T283c2(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.benchmark_start_time */
extern T0* T73f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T72f80(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T72f78(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T72f78ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T253f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T72f82(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T282f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T281f6(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_all */
extern void T73f53(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.compile_all */
extern T0* T73f53ac1(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].force_last */
extern void T293f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].force */
extern void T815f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLASS].fill_with */
extern void T816f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLASS].extend */
extern void T816f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].resize */
extern void T293f20(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].aliased_resized_area */
extern T0* T815f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLASS].aliased_resized_area */
extern T0* T816f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].new_capacity */
extern T6 T293f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].extendible */
extern T1 T293f7(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.compile_classes */
extern void T73f61(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_3 */
extern void T73f76(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_3_metrics */
extern void T73f88(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_metrics */
extern void T73f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.report_processor_metrics */
extern void T73f97(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.report_processed_class_count_stack */
extern void T73f98(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.total_processed_class_count */
extern T6 T73f46(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_implementation_internal_error */
extern void T73f87(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].item */
extern T0* T293f9(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM_PROCESSOR.check_implementation_validity */
extern void T73f86(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.reset_processed_class_count */
extern void T73f95(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.reset_total_processed_class_count */
extern void T73f94(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_ast_processor */
extern T0* T82f24(GE_context* ac, T0* C);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T295c1(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.tokens */
extern T0* T73f45(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.compile_degree_4 */
extern void T73f75(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_degree_4_metrics */
extern void T73f85(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_interface_internal_error */
extern void T73f84(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_interface_validity */
extern void T73f83(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.features_flattened */
extern T1 T83f60(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flattening_internal_error */
extern void T73f82(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.flatten_features */
extern void T73f81(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.ancestors_built */
extern T1 T83f108(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ancestors_internal_error */
extern void T73f80(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.build_ancestors */
extern void T73f79(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5 */
extern void T73f74(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.check_provider_validity */
extern void T73f78(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.compile_degree_5_2 */
extern void T73f77(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_SYSTEM_PROCESSOR.report_degree_5_2_metrics */
extern void T73f93(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_syntax_internal_error */
extern void T73f92(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.parse_classes */
extern void T73f91(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.remove_unmarked_classes */
extern void T73f90(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].keep_first */
extern void T293f18(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].keep_head */
extern void T816f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].set_count */
extern void T816f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_all_cursors_after */
extern void T293f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1068f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_after */
extern void T1068f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].replace */
extern void T293f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CLASS.is_marked */
extern T1 T83f169(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.parse_marked_classes */
extern void T73f89(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.nested_benchmark_start_time */
extern T0* T73f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].make */
extern T0* T293c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].set_internal_cursor */
extern void T293f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].new_cursor */
extern T0* T293f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].make */
extern T0* T1068c9(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].make */
extern T0* T815f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLASS].make_empty */
extern T0* T816c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLASS].default_create */
extern T0* T815c3(GE_context* ac);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T72f75(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T80c89(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_CELL [[attached] INTEGER_32].make */
extern T0* T410c2(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern T0* T80f84(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T80f70(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T564c77(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.make */
extern void T564f77p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern T0* T82f723(GE_context* ac, T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T439c87(GE_context* ac);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T564f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern T0* T80f68(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T409c65(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].make */
extern T0* T430c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].set_internal_cursor */
extern void T430f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_cursor */
extern T0* T430f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].make */
extern T0* T1165c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].make */
extern T0* T931f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].make_empty */
extern T0* T933c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].default_create */
extern T0* T931c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T429c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].set_internal_cursor */
extern void T429f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ATTACHMENT_SCOPE].new_cursor */
extern T0* T429f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T1164c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].make */
extern T0* T1163f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ATTACHMENT_SCOPE].make_empty */
extern T0* T1162c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ATTACHMENT_SCOPE].default_create */
extern T0* T1163c3(GE_context* ac);
/* ET_ATTACHMENT_SCOPE_BUILDER.make */
extern T0* T428c3(GE_context* ac);
/* ET_ACROSS_CURSOR_SCOPE.make */
extern T0* T426c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1160c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T1160f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T1160f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1528c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].make */
extern T0* T1159f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].make_empty */
extern T0* T1158c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].default_create */
extern T0* T1159c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_map */
extern T0* T425c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_with_equality_testers */
extern void T425f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_sparse_container */
extern void T425f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].set_internal_cursor */
extern void T425f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_cursor */
extern T0* T425f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make */
extern T0* T1155c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_slots */
extern void T425f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_modulus */
extern T6 T425f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_clashes */
extern void T425f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_key_storage */
extern void T425f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].make_item_storage */
extern void T425f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1146f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NESTED_TYPE_CONTEXT].make_empty */
extern T0* T1145c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T1146c3(GE_context* ac);
/* ET_OBJECT_TEST_SCOPE_BUILDER.make */
extern T0* T424c8(GE_context* ac, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.tokens */
extern T0* T424f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.make */
extern T0* T423c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1154c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T1154f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T1154f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1527c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1153f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].make_empty */
extern T0* T1152c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].default_create */
extern T0* T1153c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_map */
extern T0* T422c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_with_equality_testers */
extern void T422f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_sparse_container */
extern void T422f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].set_internal_cursor */
extern void T422f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_cursor */
extern T0* T422f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make */
extern T0* T1148c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_slots */
extern void T422f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_modulus */
extern T6 T422f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_clashes */
extern void T422f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_key_storage */
extern void T422f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].make_item_storage */
extern void T422f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T420c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].set_internal_cursor */
extern void T420f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T420f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].make */
extern T0* T1147c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T419c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_internal_cursor */
extern void T419f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_cursor */
extern T0* T419f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T1144c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make */
extern T0* T1141f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].make_empty */
extern T0* T1143c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].default_create */
extern T0* T1141c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T418c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_internal_cursor */
extern void T418f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_cursor */
extern T0* T418f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T1140c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make */
extern T0* T1138f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].make_empty */
extern T0* T1139c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].default_create */
extern T0* T1138c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T417c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_internal_cursor */
extern void T417f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_cursor */
extern T0* T417f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T1137c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make */
extern T0* T1135f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].make_empty */
extern T0* T1136c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].default_create */
extern T0* T1135c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].make */
extern T0* T416c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].set_internal_cursor */
extern void T416f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_cursor */
extern T0* T416f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].make */
extern T0* T1134c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].make */
extern T0* T940f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].make_empty */
extern T0* T942c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].default_create */
extern T0* T940c3(GE_context* ac);
/* ET_FEATURE_CHECKER.dummy_feature */
extern T0* T409f47(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern T0* T414c18(GE_context* ac, T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern T0* T414f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T414f17(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.make */
extern void T414f18p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.make */
extern void T409f65p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T80f96(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T80f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern void T80f96p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_new_instance_types */
extern void T72f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].force */
extern void T78f40(GE_context* ac, T0* C, T0* a1);
/* STRING_8.starts_with */
extern T1 T17f16(GE_context* ac, T0* C, T0* a1);
/* STRING_8.is_empty */
extern T1 T17f12(GE_context* ac, T0* C);
/* STRING_8.right_adjust */
extern void T17f54(GE_context* ac, T0* C);
/* CHARACTER_8.is_space */
extern T1 T2f4(GE_context* ac, T2* C);
/* STRING_8.left_adjust */
extern void T17f53(GE_context* ac, T0* C);
/* STRING_8.twin */
extern T0* T17f9(GE_context* ac, T0* C);
/* STRING_8.copy */
extern void T17f55(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T31f63(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T31f68(GE_context* ac, T0* C, T2 a1);
/* detachable KL_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T127f4(GE_context* ac, T0* C, T0* a1);
/* detachable KL_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T127c3(GE_context* ac, T2 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].make_equal */
extern T0* T78c39(GE_context* ac, T6 a1);
/* AP_STRING_OPTION.parameter */
extern T0* T47f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T72f73(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T24f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T72f72(GE_context* ac, T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T24f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SYSTEM.set_full_class_checking */
extern void T72f71(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T72c70(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T72f70ac1(GE_context* ac, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T255c13(GE_context* ac, T0* a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T72f77(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode */
extern void T73f52(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_dbc_mode_only */
extern void T73f60(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode */
extern void T73f51(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_flat_mode_only */
extern void T73f59(GE_context* ac, T0* C, T1 a1);
/* GEC.is_gelint */
extern T1 T24f27(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ise_version */
extern void T73f50(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_ise_version_only */
extern void T73f58(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_default_keyword_usage_only */
extern void T73f64(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.set_ecma_version_only */
extern void T73f73(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_use_detachable_keyword_only */
extern void T73f72(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attached_keyword_only */
extern void T73f71(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_reference_keyword_only */
extern void T73f70(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_note_keyword_only */
extern void T73f69(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_use_attribute_keyword_only */
extern void T73f68(GE_context* ac, T0* C, T1 a1);
/* GEC.ise_latest */
extern T0* T24f26(GE_context* ac, T0* C);
/* UT_VERSION.make_latest */
extern T0* T79c16(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_error_handler */
extern void T73f49(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.set_error_handler_only */
extern void T73f57(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.make */
extern T0* T73c48(GE_context* ac);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern T0* T82f22(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T292c13(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T292f14(GE_context* ac, T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T1067f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1067c5(GE_context* ac);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern T0* T1067f4(GE_context* ac, T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T1067f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make */
extern T0* T709c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].set_internal_cursor */
extern void T709f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].new_cursor */
extern T0* T709f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].make */
extern T0* T1412c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_slots */
extern void T709f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_clashes */
extern void T709f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_key_storage */
extern void T709f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].make_item_storage */
extern void T709f42(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].make */
extern T0* T1471f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].make_empty */
extern T0* T1469c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_CLASS].default_create */
extern T0* T1471c3(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make */
extern T0* T1066c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].set_internal_cursor */
extern void T1066f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_cursor */
extern T0* T1066f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].make */
extern T0* T1522c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].unset_found_item */
extern void T1066f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_slots */
extern void T1066f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_modulus */
extern T6 T1066f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_clashes */
extern void T1066f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_key_storage */
extern void T1066f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].make_item_storage */
extern void T1066f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make */
extern T0* T1065c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T1065f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_cursor */
extern T0* T1065f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1521c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].unset_found_item */
extern void T1065f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_slots */
extern void T1065f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_modulus */
extern T6 T1065f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_clashes */
extern void T1065f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_key_storage */
extern void T1065f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].make_item_storage */
extern void T1065f39(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T292f15(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T292f8(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T291c15(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern T0* T1061c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.make */
extern void T1061f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.tokens */
extern T0* T1061f4(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1052c10(GE_context* ac, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern void T1052f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1052f6(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1048c19(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1508f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_map */
extern T0* T1508c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1508f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_sparse_container */
extern void T1508f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1508f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1508f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make */
extern T0* T1730c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1508f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_slots */
extern void T1508f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1508f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1508f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1508f58(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1726f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].make_empty */
extern T0* T1724c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].default_create */
extern T0* T1726c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1508f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make */
extern T0* T1731f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].make_empty */
extern T0* T1727c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].default_create */
extern T0* T1731c3(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_equality_tester */
extern void T1506f32(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1505c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1506c31(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1506f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1506f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1725c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].unset_found_item */
extern void T1506f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_slots */
extern void T1506f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_modulus */
extern T6 T1506f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_clashes */
extern void T1506f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_key_storage */
extern void T1506f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].make_item_storage */
extern void T1506f37(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1048f19p1(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1048f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1047c25(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1500c42(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1500f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1500f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1500f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1500f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make */
extern T0* T1715c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1500f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1500f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1500f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1500f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1500f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1500f71(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].make */
extern T0* T1718f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].make_empty */
extern T0* T1716c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].default_create */
extern T0* T1718c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1499f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.alias_name_tester */
extern T0* T1047f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1043c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1499c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1499f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1499f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1499f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1499f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make */
extern T0* T1714c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1499f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_slots */
extern void T1499f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1499f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1499f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1499f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].make */
extern T0* T786f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].make_empty */
extern T0* T788c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].default_create */
extern T0* T786c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1499f58(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].make */
extern T0* T899f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].make_empty */
extern T0* T900c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].default_create */
extern T0* T899c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1498f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_map */
extern T0* T1498c43(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1498f52(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1498f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1498f77(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1498f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].make */
extern T0* T1711c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].unset_found_item */
extern void T1498f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_slots */
extern void T1498f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1498f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_clashes */
extern void T1498f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_key_storage */
extern void T1498f74(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].make */
extern T0* T1709f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].make_empty */
extern T0* T1707c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].default_create */
extern T0* T1709c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].make_item_storage */
extern void T1498f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].set_equality_tester */
extern void T1497f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make */
extern T0* T1497c37(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].set_internal_cursor */
extern void T1497f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].new_cursor */
extern T0* T1497f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].make */
extern T0* T1710c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].unset_found_item */
extern void T1497f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_slots */
extern void T1497f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].new_modulus */
extern T6 T1497f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_clashes */
extern void T1497f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_key_storage */
extern void T1497f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].make_item_storage */
extern void T1497f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_key_equality_tester */
extern void T1494f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.call_name_tester */
extern T0* T1047f19(GE_context* ac, T0* C);
/* ET_CALL_NAME_TESTER.default_create */
extern T0* T1495c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_map */
extern T0* T1494c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_with_equality_testers */
extern void T1494f49(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_sparse_container */
extern void T1494f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_internal_cursor */
extern void T1494f79(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_cursor */
extern T0* T1494f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].make */
extern T0* T1701c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].unset_found_item */
extern void T1494f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_slots */
extern void T1494f78(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].new_modulus */
extern T6 T1494f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_clashes */
extern void T1494f77(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_key_storage */
extern void T1494f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].make_item_storage */
extern void T1494f75(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].make */
extern T0* T1708f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_RENAME].make_empty */
extern T0* T1702c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].default_create */
extern T0* T1708c3(GE_context* ac);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1047f25p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1047f18(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T1039f45(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.feature_name_tester */
extern T0* T291f12(GE_context* ac, T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1040c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_map */
extern T0* T1039c44(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T1039f54(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T1039f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T1039f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T1039f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make */
extern T0* T1480c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].unset_found_item */
extern void T1039f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_slots */
extern void T1039f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T1039f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_clashes */
extern void T1039f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_key_storage */
extern void T1039f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].make_item_storage */
extern void T1039f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].make */
extern T0* T1484f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].make_empty */
extern T0* T1481c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].default_create */
extern T0* T1484c3(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern T0* T1060c8(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.make */
extern void T1060f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1060f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_classes_to_be_processed */
extern void T1059f8(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1059c7(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1059f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1059f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make */
extern T0* T1058c32(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].set_internal_cursor */
extern void T1058f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_cursor */
extern T0* T1058f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].make */
extern T0* T1519c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].unset_found_item */
extern void T1058f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_slots */
extern void T1058f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_modulus */
extern T6 T1058f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_clashes */
extern void T1058f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_key_storage */
extern void T1058f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].make_item_storage */
extern void T1058f34(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.make */
extern void T291f15p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T291f11(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T290c29(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_map */
extern T0* T1057c39(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_with_equality_testers */
extern void T1057f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_sparse_container */
extern void T1057f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].set_internal_cursor */
extern void T1057f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_cursor */
extern T0* T1057f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].make */
extern T0* T1516c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].unset_found_item */
extern void T1057f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_slots */
extern void T1057f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_modulus */
extern T6 T1057f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_clashes */
extern void T1057f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_key_storage */
extern void T1057f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].make_item_storage */
extern void T1057f72(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1056c10(GE_context* ac, T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern T0* T1056f6(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1372c27(GE_context* ac, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1063f10(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1063f9(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1063c22(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1056f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1056f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1056f5(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern T0* T1055c12(GE_context* ac, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.make */
extern void T1055f12p1(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.tokens */
extern T0* T1055f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_map */
extern T0* T1515c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_with_equality_testers */
extern void T1515f34(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_sparse_container */
extern void T1515f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].set_internal_cursor */
extern void T1515f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_cursor */
extern T0* T1515f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make */
extern T0* T1739c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].unset_found_item */
extern void T1515f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_slots */
extern void T1515f39(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_modulus */
extern T6 T1515f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_clashes */
extern void T1515f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_key_storage */
extern void T1515f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].make_item_storage */
extern void T1515f36(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make */
extern T0* T1740f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].make_empty */
extern T0* T1742c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].default_create */
extern T0* T1740c3(GE_context* ac);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1054c8(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T1054f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1054f5(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1053c9(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T1053f9p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1053f5(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1051c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make_default */
extern T0* T1511c10(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].make */
extern void T1511f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_map */
extern T0* T1734c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_with_equality_testers */
extern void T1734f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_sparse_container */
extern void T1734f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T1734f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T1734f26(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make */
extern T0* T1889c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].unset_found_item */
extern void T1734f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_slots */
extern void T1734f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].new_modulus */
extern T6 T1734f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_clashes */
extern void T1734f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_key_storage */
extern void T1734f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].make */
extern T0* T1736f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].make_empty */
extern T0* T1735c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].default_create */
extern T0* T1736c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].make_item_storage */
extern void T1734f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].make */
extern T0* T1512c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].set_internal_cursor */
extern void T1512f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].new_cursor */
extern T0* T1512f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].make */
extern T0* T1737c9(GE_context* ac, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1051f8p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1051f7(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern T0* T1050c6(GE_context* ac, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.make */
extern void T1050f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.tokens */
extern T0* T1050f4(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1049c7(GE_context* ac, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1049f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_map */
extern T0* T1046c41(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_equality_testers */
extern void T1046f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_sparse_container */
extern void T1046f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T1046f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T1046f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1491c10(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].unset_found_item */
extern void T1046f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_slots */
extern void T1046f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_modulus */
extern T6 T1046f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_clashes */
extern void T1046f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_key_storage */
extern void T1046f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].make_item_storage */
extern void T1046f44(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].make */
extern T0* T1492f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT].make_empty */
extern T0* T1493c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].default_create */
extern T0* T1492c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].make */
extern T0* T1045c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].set_internal_cursor */
extern void T1045f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_cursor */
extern T0* T1045f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].make */
extern T0* T1489c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].make */
extern T0* T1487f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].make_empty */
extern T0* T1488c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].default_create */
extern T0* T1487c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_key_equality_tester */
extern void T1042f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern T0* T290f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_map */
extern T0* T1042c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_with_equality_testers */
extern void T1042f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_sparse_container */
extern void T1042f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_internal_cursor */
extern void T1042f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_cursor */
extern T0* T1042f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make */
extern T0* T1486c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].unset_found_item */
extern void T1042f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_slots */
extern void T1042f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_modulus */
extern T6 T1042f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_clashes */
extern void T1042f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_key_storage */
extern void T1042f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].make_item_storage */
extern void T1042f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].make */
extern T0* T707c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].set_internal_cursor */
extern void T707f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_cursor */
extern T0* T707f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].make */
extern T0* T1467c9(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].make */
extern T0* T706c15(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].set_internal_cursor */
extern void T706f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].new_cursor */
extern T0* T706f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].make */
extern T0* T1466c9(GE_context* ac, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T290f22(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.make */
extern void T290f29p1(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T290f21(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T289c13(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1038c11(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].make_default */
extern T0* T1477c10(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].make */
extern void T1477f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_map */
extern T0* T1699c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1699f35(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1699f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1699f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1699f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make */
extern T0* T1887c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].unset_found_item */
extern void T1699f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_slots */
extern void T1699f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1699f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_clashes */
extern void T1699f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_key_storage */
extern void T1699f44(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].make */
extern T0* T911f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].make_empty */
extern T0* T913c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].default_create */
extern T0* T911c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].make_item_storage */
extern void T1699f43(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].make */
extern T0* T1478c11(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].set_internal_cursor */
extern void T1478f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1478f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].make */
extern T0* T1700c9(GE_context* ac, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1038f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1038f9(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1037c8(GE_context* ac, T0* a1);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1037f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_map */
extern T0* T1036c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_with_equality_testers */
extern void T1036f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_sparse_container */
extern void T1036f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_internal_cursor */
extern void T1036f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_cursor */
extern T0* T1036f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make */
extern T0* T1474c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].unset_found_item */
extern void T1036f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_slots */
extern void T1036f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_modulus */
extern T6 T1036f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_clashes */
extern void T1036f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_key_storage */
extern void T1036f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].make_item_storage */
extern void T1036f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make_default */
extern T0* T1035c11(GE_context* ac);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].make */
extern void T1035f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_map */
extern T0* T1473c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_with_equality_testers */
extern void T1473f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_sparse_container */
extern void T1473f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].set_internal_cursor */
extern void T1473f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_cursor */
extern T0* T1473f32(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].make */
extern T0* T1698c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].unset_found_item */
extern void T1473f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_slots */
extern void T1473f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].new_modulus */
extern T6 T1473f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_clashes */
extern void T1473f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_key_storage */
extern void T1473f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].make_item_storage */
extern void T1473f56(GE_context* ac, T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T289f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T289f9(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T288c6(GE_context* ac, T0* a1);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T288f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T287c968(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T287f970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T287f973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern T0* T287f635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T287f695(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_38 */
extern void T287f1076(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T287f1140(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.integer_array_ */
extern T0* T287f702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yycheck_template_37 */
extern void T287f1075(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_36 */
extern void T287f1074(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_35 */
extern void T287f1073(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_34 */
extern void T287f1072(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_33 */
extern void T287f1071(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_32 */
extern void T287f1070(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_31 */
extern void T287f1069(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_30 */
extern void T287f1068(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_29 */
extern void T287f1067(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_28 */
extern void T287f1066(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_27 */
extern void T287f1065(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_26 */
extern void T287f1064(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_25 */
extern void T287f1063(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_24 */
extern void T287f1062(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_23 */
extern void T287f1061(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_22 */
extern void T287f1060(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_21 */
extern void T287f1059(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_20 */
extern void T287f1058(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_19 */
extern void T287f1057(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_18 */
extern void T287f1056(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_17 */
extern void T287f1055(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_16 */
extern void T287f1054(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_15 */
extern void T287f1053(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_14 */
extern void T287f1052(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_13 */
extern void T287f1051(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_12 */
extern void T287f1050(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_11 */
extern void T287f1049(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_10 */
extern void T287f1048(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_9 */
extern void T287f1047(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_8 */
extern void T287f1046(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_7 */
extern void T287f1045(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T287f1044(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T287f1043(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T287f1042(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T287f1041(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T287f1040(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T287f1039(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern T0* T287f630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytable_template_38 */
extern void T287f1038(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_37 */
extern void T287f1037(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_36 */
extern void T287f1036(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_35 */
extern void T287f1035(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_34 */
extern void T287f1034(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_33 */
extern void T287f1033(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_32 */
extern void T287f1032(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_31 */
extern void T287f1031(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_30 */
extern void T287f1030(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_29 */
extern void T287f1029(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_28 */
extern void T287f1028(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_27 */
extern void T287f1027(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_26 */
extern void T287f1026(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_25 */
extern void T287f1025(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_24 */
extern void T287f1024(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_23 */
extern void T287f1023(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_22 */
extern void T287f1022(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_21 */
extern void T287f1021(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_20 */
extern void T287f1020(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_19 */
extern void T287f1019(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_18 */
extern void T287f1018(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_17 */
extern void T287f1017(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_16 */
extern void T287f1016(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_15 */
extern void T287f1015(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_14 */
extern void T287f1014(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_13 */
extern void T287f1013(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_12 */
extern void T287f1012(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_11 */
extern void T287f1011(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_10 */
extern void T287f1010(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_9 */
extern void T287f1009(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_8 */
extern void T287f1008(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_7 */
extern void T287f1007(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T287f1006(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T287f1005(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T287f1004(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T287f1003(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T287f1002(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T287f1001(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern T0* T287f626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypgoto_template_2 */
extern void T287f1000(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template_1 */
extern void T287f999(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template */
extern T0* T287f624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yypact_template_9 */
extern void T287f998(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_8 */
extern void T287f997(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_7 */
extern void T287f996(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_6 */
extern void T287f995(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_5 */
extern void T287f994(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_4 */
extern void T287f993(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_3 */
extern void T287f992(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T287f991(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T287f990(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern T0* T287f622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template_2 */
extern void T287f989(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template_1 */
extern void T287f988(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template */
extern T0* T287f711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_9 */
extern void T287f987(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_8 */
extern void T287f986(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_7 */
extern void T287f985(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_6 */
extern void T287f984(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_5 */
extern void T287f983(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_4 */
extern void T287f982(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_3 */
extern void T287f981(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T287f980(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T287f979(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern T0* T287f704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern T0* T287f692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_9 */
extern void T287f1136(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_8 */
extern void T287f1135(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_7 */
extern void T287f1134(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_6 */
extern void T287f1133(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_5 */
extern void T287f1132(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_4 */
extern void T287f1131(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_3 */
extern void T287f1130(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T287f1129(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T287f1128(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern T0* T287f688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yyr1_template_5 */
extern void T287f1121(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_4 */
extern void T287f1120(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_3 */
extern void T287f1119(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_2 */
extern void T287f1118(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template_1 */
extern void T287f1117(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern T0* T287f684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template_2 */
extern void T287f1114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytranslate_template_1 */
extern void T287f1113(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T287f972(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].make */
extern T0* T1033f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WRITABLE].make_empty */
extern T0* T1034c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].default_create */
extern T0* T1033c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].make */
extern T0* T1030f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].make_empty */
extern T0* T1032c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].default_create */
extern T0* T1030c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].make */
extern T0* T1027f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].make_empty */
extern T0* T1029c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].default_create */
extern T0* T1027c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].make */
extern T0* T1024f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].make_empty */
extern T0* T1026c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].default_create */
extern T0* T1024c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].make */
extern T0* T1021f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].make_empty */
extern T0* T1023c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].default_create */
extern T0* T1021c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].make */
extern T0* T1018f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].make_empty */
extern T0* T1020c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].default_create */
extern T0* T1018c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].make */
extern T0* T1014f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].make_empty */
extern T0* T1016c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].default_create */
extern T0* T1014c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].make */
extern T0* T1011f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].make_empty */
extern T0* T1013c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T1011c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].make */
extern T0* T1009f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].make_empty */
extern T0* T1010c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].default_create */
extern T0* T1009c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].make */
extern T0* T1006f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].make_empty */
extern T0* T1008c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].default_create */
extern T0* T1006c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make */
extern T0* T1001f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].make_empty */
extern T0* T1003c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].default_create */
extern T0* T1001c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].make */
extern T0* T997f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].make_empty */
extern T0* T998c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].default_create */
extern T0* T997c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].make */
extern T0* T994f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].make_empty */
extern T0* T996c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].default_create */
extern T0* T994c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].make */
extern T0* T992f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].make_empty */
extern T0* T993c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].default_create */
extern T0* T992c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].make */
extern T0* T990f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].make_empty */
extern T0* T991c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].default_create */
extern T0* T990c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].make */
extern T0* T987f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].make_empty */
extern T0* T989c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].default_create */
extern T0* T987c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].make */
extern T0* T985f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].make_empty */
extern T0* T986c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].default_create */
extern T0* T985c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T982f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].make_empty */
extern T0* T984c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T982c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].make */
extern T0* T979f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].make_empty */
extern T0* T981c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].default_create */
extern T0* T979c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].make */
extern T0* T977f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].make_empty */
extern T0* T978c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].default_create */
extern T0* T977c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].make */
extern T0* T974f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].make_empty */
extern T0* T976c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].default_create */
extern T0* T974c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].make */
extern T0* T971f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].make_empty */
extern T0* T973c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T971c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].make */
extern T0* T968f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].make_empty */
extern T0* T970c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].default_create */
extern T0* T968c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].make */
extern T0* T965f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].make_empty */
extern T0* T967c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].default_create */
extern T0* T965c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T963f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].make_empty */
extern T0* T964c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T963c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T960f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].make_empty */
extern T0* T962c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T960c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].make */
extern T0* T957f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].make_empty */
extern T0* T959c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].default_create */
extern T0* T957c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].make */
extern T0* T954f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].make_empty */
extern T0* T956c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].default_create */
extern T0* T954c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T952f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].make_empty */
extern T0* T953c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T952c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].make */
extern T0* T949f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].make_empty */
extern T0* T951c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].default_create */
extern T0* T949c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].make */
extern T0* T946f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].make_empty */
extern T0* T948c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].default_create */
extern T0* T946c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].make */
extern T0* T943f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].make_empty */
extern T0* T945c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].default_create */
extern T0* T943c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].make */
extern T0* T937f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].make_empty */
extern T0* T939c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].default_create */
extern T0* T937c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].make */
extern T0* T934f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].make_empty */
extern T0* T936c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].default_create */
extern T0* T934c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].make */
extern T0* T928f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].make_empty */
extern T0* T930c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].default_create */
extern T0* T928c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].make */
extern T0* T925f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].make_empty */
extern T0* T927c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].default_create */
extern T0* T925c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].make */
extern T0* T922f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].make_empty */
extern T0* T924c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].default_create */
extern T0* T922c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].make */
extern T0* T919f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].make_empty */
extern T0* T921c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].default_create */
extern T0* T919c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].make */
extern T0* T917f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].make_empty */
extern T0* T918c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T917c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T914f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].make_empty */
extern T0* T916c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T914c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T909f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].make_empty */
extern T0* T910c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T909c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T906f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].make_empty */
extern T0* T908c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T906c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].make */
extern T0* T904f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].make_empty */
extern T0* T905c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].default_create */
extern T0* T904c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].make */
extern T0* T901f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].make_empty */
extern T0* T903c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].default_create */
extern T0* T901c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].make */
extern T0* T896f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].make_empty */
extern T0* T898c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].default_create */
extern T0* T896c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].make */
extern T0* T893f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].make_empty */
extern T0* T895c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T893c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].make */
extern T0* T890f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].make_empty */
extern T0* T892c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].default_create */
extern T0* T890c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].make */
extern T0* T887f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].make_empty */
extern T0* T889c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].default_create */
extern T0* T887c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].make */
extern T0* T885f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].make_empty */
extern T0* T886c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T885c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].make */
extern T0* T879f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].make_empty */
extern T0* T880c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].default_create */
extern T0* T879c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].make */
extern T0* T876f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].make_empty */
extern T0* T878c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].default_create */
extern T0* T876c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].make */
extern T0* T873f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].make_empty */
extern T0* T875c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].default_create */
extern T0* T873c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].make */
extern T0* T870f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].make_empty */
extern T0* T872c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].default_create */
extern T0* T870c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].make */
extern T0* T867f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].make_empty */
extern T0* T869c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].default_create */
extern T0* T867c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].make */
extern T0* T864f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].make_empty */
extern T0* T866c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].default_create */
extern T0* T864c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].make */
extern T0* T861f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].make_empty */
extern T0* T863c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].default_create */
extern T0* T861c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].make */
extern T0* T858f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].make_empty */
extern T0* T860c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].default_create */
extern T0* T858c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].make */
extern T0* T855f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].make_empty */
extern T0* T857c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].default_create */
extern T0* T855c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].make */
extern T0* T852f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].make_empty */
extern T0* T854c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].default_create */
extern T0* T852c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].make */
extern T0* T850f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].make_empty */
extern T0* T851c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].default_create */
extern T0* T850c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].make */
extern T0* T847f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].make_empty */
extern T0* T849c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T847c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].make */
extern T0* T844f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].make_empty */
extern T0* T846c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T844c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].make */
extern T0* T841f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].make_empty */
extern T0* T843c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].default_create */
extern T0* T841c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T838f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].make_empty */
extern T0* T840c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].default_create */
extern T0* T838c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].make */
extern T0* T835f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].make_empty */
extern T0* T837c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].default_create */
extern T0* T835c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T832f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T834c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T832c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T829f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_empty */
extern T0* T831c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T829c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].make */
extern T0* T824f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].make_empty */
extern T0* T826c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].default_create */
extern T0* T824c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].make */
extern T0* T822f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].make_empty */
extern T0* T823c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].default_create */
extern T0* T822c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].make */
extern T0* T819f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].make_empty */
extern T0* T821c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].default_create */
extern T0* T819c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].make */
extern T0* T812f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].make_empty */
extern T0* T814c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].default_create */
extern T0* T812c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].make */
extern T0* T809f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].make_empty */
extern T0* T811c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].default_create */
extern T0* T809c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].make */
extern T0* T806f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].make_empty */
extern T0* T808c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].default_create */
extern T0* T806c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].make */
extern T0* T803f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].make_empty */
extern T0* T805c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].default_create */
extern T0* T803c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].make */
extern T0* T800f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].make_empty */
extern T0* T802c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].default_create */
extern T0* T800c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].make */
extern T0* T795f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].make_empty */
extern T0* T797c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].default_create */
extern T0* T795c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].make */
extern T0* T792f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].make_empty */
extern T0* T794c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].default_create */
extern T0* T792c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].make */
extern T0* T789f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].make_empty */
extern T0* T791c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].default_create */
extern T0* T789c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].make */
extern T0* T784f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].make_empty */
extern T0* T785c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].default_create */
extern T0* T784c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T781f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].make_empty */
extern T0* T783c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T781c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T778f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].make_empty */
extern T0* T780c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T778c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T776f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].make_empty */
extern T0* T777c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T776c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T774f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].make_empty */
extern T0* T775c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T774c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T772f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].make_empty */
extern T0* T773c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T772c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].make */
extern T0* T769f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].make_empty */
extern T0* T771c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].default_create */
extern T0* T769c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].make */
extern T0* T766f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].make_empty */
extern T0* T768c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].default_create */
extern T0* T766c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].make */
extern T0* T763f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].make_empty */
extern T0* T765c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T763c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].make */
extern T0* T761f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].make_empty */
extern T0* T762c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].default_create */
extern T0* T761c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].make */
extern T0* T758f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].make_empty */
extern T0* T760c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].default_create */
extern T0* T758c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].make */
extern T0* T755f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].make_empty */
extern T0* T757c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].default_create */
extern T0* T755c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].make */
extern T0* T752f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].make_empty */
extern T0* T754c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].default_create */
extern T0* T752c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].make */
extern T0* T749f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].make_empty */
extern T0* T751c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].default_create */
extern T0* T749c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].make */
extern T0* T747f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].make_empty */
extern T0* T748c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].default_create */
extern T0* T747c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].make */
extern T0* T744f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].make_empty */
extern T0* T746c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].default_create */
extern T0* T744c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].make */
extern T0* T742f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].make_empty */
extern T0* T743c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].default_create */
extern T0* T742c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].make */
extern T0* T739f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].make_empty */
extern T0* T741c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].default_create */
extern T0* T739c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].make */
extern T0* T736f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].make_empty */
extern T0* T738c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].default_create */
extern T0* T736c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].make */
extern T0* T733f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].make_empty */
extern T0* T735c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].default_create */
extern T0* T733c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].make */
extern T0* T731f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].make_empty */
extern T0* T732c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].default_create */
extern T0* T731c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].make */
extern T0* T728f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].make_empty */
extern T0* T730c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].default_create */
extern T0* T728c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].make */
extern T0* T725f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].make_empty */
extern T0* T727c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].default_create */
extern T0* T725c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].make */
extern T0* T722f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].make_empty */
extern T0* T724c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].default_create */
extern T0* T722c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].make */
extern T0* T720f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].make_empty */
extern T0* T721c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].default_create */
extern T0* T720c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].make */
extern T0* T718f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL].make_empty */
extern T0* T719c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].default_create */
extern T0* T718c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].make */
extern T0* T715f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].make_empty */
extern T0* T717c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].default_create */
extern T0* T715c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].make */
extern T0* T712f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].make_empty */
extern T0* T714c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].default_create */
extern T0* T712c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].make */
extern T0* T710f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD].make_empty */
extern T0* T711c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].default_create */
extern T0* T710c3(GE_context* ac);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T287f651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T287f969(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T287f686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T287f971(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T287f975(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T287f977(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T287f974(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T287f974p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T287f976(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern T0* T287f691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T287f696(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_3 */
extern void T287f1127(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T287f1141(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_acclist_template_2 */
extern void T287f1126(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_acclist_template_1 */
extern void T287f1125(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern T0* T287f689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_accept_template_3 */
extern void T287f1124(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_2 */
extern void T287f1123(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template_1 */
extern void T287f1122(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern T0* T287f687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern T0* T287f685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template_2 */
extern void T287f1116(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_ec_template_1 */
extern void T287f1115(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template */
extern T0* T287f683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_def_template_3 */
extern void T287f1112(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_2 */
extern void T287f1111(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_def_template_1 */
extern void T287f1110(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template */
extern T0* T287f681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_base_template_3 */
extern void T287f1109(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_2 */
extern void T287f1108(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_base_template_1 */
extern void T287f1107(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern T0* T287f679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_15 */
extern void T287f1106(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_14 */
extern void T287f1105(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_13 */
extern void T287f1104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_12 */
extern void T287f1103(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_11 */
extern void T287f1102(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_10 */
extern void T287f1101(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_9 */
extern void T287f1100(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_8 */
extern void T287f1099(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_7 */
extern void T287f1098(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_6 */
extern void T287f1097(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_5 */
extern void T287f1096(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_4 */
extern void T287f1095(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T287f1094(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T287f1093(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T287f1092(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern T0* T287f677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_15 */
extern void T287f1091(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_14 */
extern void T287f1090(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_13 */
extern void T287f1089(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_12 */
extern void T287f1088(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_11 */
extern void T287f1087(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_10 */
extern void T287f1086(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_9 */
extern void T287f1085(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_8 */
extern void T287f1084(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_7 */
extern void T287f1083(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_6 */
extern void T287f1082(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_5 */
extern void T287f1081(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_4 */
extern void T287f1080(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T287f1079(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T287f1078(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T287f1077(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T287f693(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T708c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].set_internal_cursor */
extern void T708f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T708f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].make */
extern T0* T1468c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].make */
extern T0* T705c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].set_internal_cursor */
extern void T705f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_cursor */
extern T0* T705f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1465c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].make */
extern T0* T1464f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].make_empty */
extern T0* T1463c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].default_create */
extern T0* T1464c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T704c10(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].make */
extern T0* T1462f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].make_empty */
extern T0* T1461c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].default_create */
extern T0* T1462c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T703c10(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].make */
extern T0* T1460f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].make_empty */
extern T0* T1459c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].default_create */
extern T0* T1460c3(GE_context* ac);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].make */
extern T0* T702c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].make */
extern T0* T701c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].make */
extern T0* T700c9(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T699c9(GE_context* ac, T6 a1);
/* KL_STANDARD_FILES.input */
extern T0* T133f3(GE_context* ac, T0* C);
/* KL_STDIN_FILE.make */
extern T0* T696c12(GE_context* ac);
/* ET_EIFFEL_PARSER.std */
extern T0* T287f653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.make */
extern void T287f968p1(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.make */
extern T0* T286c7(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.make */
extern T0* T496c50(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.empty_master_classes */
extern T0* T82f761(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].make */
extern T0* T1399c14(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].set_internal_cursor */
extern void T1399f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_cursor */
extern T0* T1399f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].make */
extern T0* T1684c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].make */
extern T0* T678f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].make_empty */
extern T0* T679c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].default_create */
extern T0* T678c3(GE_context* ac);
/* ET_TOKEN_CONSTANTS.empty_classes */
extern T0* T82f760(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.tokens */
extern T0* T496f22(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_system */
extern T0* T82f3(GE_context* ac, T0* C);
/* ET_SYSTEM.make */
extern T0* T35c135(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_default_class_mapping */
extern void T35f141(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_ref_class_mapping */
extern void T35f195(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_class_mapping */
extern void T35f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.set_mapped_class */
extern void T496f53(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.set_marked */
extern void T496f51(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.set_marked */
extern void T83f268(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_unknown */
extern T1 T83f58(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_marked */
extern T1 T496f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern T0* T82f177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern T0* T82f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_class_mapping */
extern void T35f194(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_string_class_mapping */
extern void T35f193(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern T0* T82f169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern T0* T82f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_ref_class_mapping */
extern void T35f192(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern T0* T82f176(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern T0* T82f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_class_mapping */
extern void T35f191(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_natural_ref_class_mapping */
extern void T35f190(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern T0* T82f175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern T0* T82f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_class_mapping */
extern void T35f189(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_integer_ref_class_mapping */
extern void T35f188(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern T0* T82f174(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern T0* T82f154(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_class_mapping */
extern void T35f187(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_double_ref_class_mapping */
extern void T35f186(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern T0* T82f173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern T0* T82f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_class_mapping */
extern void T35f185(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.set_character_ref_class_mapping */
extern void T35f184(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern T0* T82f172(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern T0* T82f152(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_class_mapping */
extern void T35f183(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.tokens */
extern T0* T35f118(GE_context* ac, T0* C);
/* ET_SYSTEM.set_kernel_types */
extern void T35f140(GE_context* ac, T0* C);
/* ET_SYSTEM.set_wide_character_type */
extern void T35f182(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T81c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.set_typed_pointer_type */
extern void T35f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_current */
extern T0* T82f163(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T542c70(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern T0* T82f762(GE_context* ac, T0* C);
/* ET_KEYWORD.make_like */
extern T0* T439c47(GE_context* ac);
/* ET_LIKE_CURRENT.tokens */
extern T0* T542f4(GE_context* ac, T0* C);
/* ET_SYSTEM.set_type_type */
extern void T35f180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_like_current */
extern T0* T82f171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_keyword */
extern T0* T82f159(GE_context* ac, T0* C);
/* ET_KEYWORD.make_detachable */
extern T0* T439c38(GE_context* ac);
/* ET_SYSTEM.set_system_string_type */
extern void T35f179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern T0* T82f170(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_object_type */
extern void T35f178(GE_context* ac, T0* C);
/* ET_PARENT_LIST.put_first */
extern void T521f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].force */
extern void T990f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].fill_with */
extern void T991f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].extend */
extern void T991f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.fixed_array */
extern T0* T521f9(GE_context* ac, T0* C);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T521c11(GE_context* ac, T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T521f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern T0* T82f719(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T439c83(GE_context* ac);
/* ET_PARENT_LIST.tokens */
extern T0* T521f8(GE_context* ac, T0* C);
/* ET_PARENT.make */
extern T0* T520c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T520f9(GE_context* ac, T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T520f8(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_type */
extern void T35f177(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_32_type */
extern void T35f176(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T523c6(GE_context* ac, T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1414c8(GE_context* ac);
/* ET_BRACED_TYPE_LIST.make */
extern void T1414f8p1(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern T0* T1414f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern T0* T82f688(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T385c88(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern T0* T82f687(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T385c87(GE_context* ac);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1414f5(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern T0* T82f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_string_8_type */
extern void T35f175(GE_context* ac, T0* C);
/* ET_SYSTEM.set_special_type */
extern void T35f174(GE_context* ac, T0* C);
/* ET_SYSTEM.set_routine_type */
extern void T35f173(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_64_type */
extern void T35f172(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_32_type */
extern void T35f171(GE_context* ac, T0* C);
/* ET_SYSTEM.set_real_type */
extern void T35f170(GE_context* ac, T0* C);
/* ET_SYSTEM.set_procedure_type */
extern void T35f169(GE_context* ac, T0* C);
/* ET_SYSTEM.set_predicate_type */
extern void T35f168(GE_context* ac, T0* C);
/* ET_SYSTEM.set_pointer_type */
extern void T35f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_64_type */
extern void T35f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_32_type */
extern void T35f165(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_16_type */
extern void T35f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_8_type */
extern void T35f163(GE_context* ac, T0* C);
/* ET_SYSTEM.set_natural_type */
extern void T35f162(GE_context* ac, T0* C);
/* ET_SYSTEM.set_iterable_type */
extern void T35f161(GE_context* ac, T0* C);
/* ET_SYSTEM.set_ise_exception_manager_type */
extern void T35f160(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_exception_manager_class_name */
extern T0* T82f167(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_64_type */
extern void T35f159(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_32_type */
extern void T35f158(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_16_type */
extern void T35f157(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_8_type */
extern void T35f156(GE_context* ac, T0* C);
/* ET_SYSTEM.set_integer_type */
extern void T35f155(GE_context* ac, T0* C);
/* ET_SYSTEM.set_immutable_string_32_type */
extern void T35f154(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.immutable_string_32_class_name */
extern T0* T82f166(GE_context* ac, T0* C);
/* ET_SYSTEM.set_function_type */
extern void T35f153(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_manager_type */
extern void T35f152(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_class_name */
extern T0* T82f165(GE_context* ac, T0* C);
/* ET_SYSTEM.set_exception_type */
extern void T35f151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_class_name */
extern T0* T82f164(GE_context* ac, T0* C);
/* ET_SYSTEM.set_double_type */
extern void T35f150(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_32_type */
extern void T35f149(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_8_type */
extern void T35f148(GE_context* ac, T0* C);
/* ET_SYSTEM.set_character_type */
extern void T35f147(GE_context* ac, T0* C);
/* ET_SYSTEM.set_boolean_type */
extern void T35f146(GE_context* ac, T0* C);
/* ET_SYSTEM.set_array_type */
extern void T35f145(GE_context* ac, T0* C);
/* ET_SYSTEM.set_tuple_type */
extern void T35f144(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T543c17(GE_context* ac, T0* a1);
/* ET_SYSTEM.set_none_type */
extern void T35f143(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_class */
extern void T496f52(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_non_override_class */
extern void T496f57(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.update_intrinsic_class */
extern void T496f59(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_intrinsic_class */
extern void T496f61(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T496f61ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T496f61ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_MASTER_CLASS.set_intrinsic_class */
extern T0* T496f61ac3(GE_context* ac, T0* a1);
extern T1 T496f61ot1(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T504f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_MASTER_CLASS.mark_overridden */
extern void T496f58(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_overriding_class */
extern void T496f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_last */
extern void T1399f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].force */
extern void T678f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].fill_with */
extern void T679f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].extend */
extern void T679f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].resize */
extern void T1399f22(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T678f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].aliased_resized_area */
extern T0* T679f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].new_capacity */
extern T6 T1399f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].extendible */
extern T1 T1399f9(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.is_override */
extern T1 T496f24(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_override */
extern T1 T83f123(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].do_all */
extern void T1399f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].item */
extern T0* T1399f7(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS.unmark_overridden */
extern void T496f62(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_overriding_class */
extern void T496f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_first */
extern void T1399f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove */
extern void T1399f20(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].keep_head */
extern void T679f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_MASTER_CLASS].set_count */
extern void T679f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_left */
extern void T1399f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_left */
extern void T1399f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_position */
extern void T1684f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].remove_last */
extern void T1399f25(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_last_cursors_after */
extern void T1399f31(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_next_cursor */
extern void T1684f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_MASTER_CLASS].set_after */
extern void T1684f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].first */
extern T0* T1399f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].is_empty */
extern T1 T1399f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].delete */
extern void T1399f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_all_cursors_after */
extern void T1399f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].force_first */
extern void T293f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].put */
extern void T293f25(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_right */
extern void T293f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].set_position */
extern void T1068f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_right */
extern void T293f26(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].put_last */
extern void T293f23(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_first_local_override_class */
extern void T496f56(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_in_override_group */
extern T1 T83f122(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_local_ignored_class */
extern void T496f55(GE_context* ac, T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T541c29(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern T0* T82f162(GE_context* ac, T0* C);
/* ET_SYSTEM.set_any_type */
extern void T35f142(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.put_first */
extern void T522f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].force */
extern void T817f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].fill_with */
extern void T818f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].extend */
extern void T818f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T534c6(GE_context* ac, T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T522c10(GE_context* ac, T6 a1);
/* ET_TOKEN_CONSTANTS.separate_keyword */
extern T0* T82f161(GE_context* ac, T0* C);
/* ET_KEYWORD.make_separate */
extern T0* T439c39(GE_context* ac);
/* ET_TOKEN_CONSTANTS.detachable_separate_type_mark */
extern T0* T82f160(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.make */
extern T0* T535c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.make_adapted */
extern void T35f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.default_read_only_value */
extern T1 T35f117(GE_context* ac, T0* C);
/* ET_SYSTEM.set_unknown_kernel_types */
extern void T35f138(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_convert_feature */
extern T0* T82f151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_generic_class_type */
extern T0* T82f150(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern T0* T267c29(GE_context* ac);
/* ET_ACTUAL_PARAMETER_LIST.make */
extern void T267f29p1(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.empty_actual_parameters */
extern T0* T82f149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_tuple_type */
extern T0* T82f148(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parents */
extern T0* T82f146(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_parent */
extern T0* T82f145(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_type */
extern T0* T82f144(GE_context* ac, T0* C);
/* ET_SYSTEM.set_system_name */
extern void T35f137(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern void T142f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make */
extern T0* T142c22(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T142f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].new_cursor */
extern T0* T142f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T580c8(GE_context* ac, T0* a1);
/* ET_SYSTEM.initialize */
extern void T35f136(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make_empty */
extern T0* T214c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T668c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T668f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T668f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1456c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1455f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1454c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1455c3(GE_context* ac);
/* ET_CLUSTERS.make_empty */
extern T0* T652c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].make */
extern T0* T1447c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].set_internal_cursor */
extern void T1447f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_cursor */
extern T0* T1447f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLUSTER].make */
extern T0* T1697c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].make */
extern T0* T1696f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLUSTER].make_empty */
extern T0* T1695c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].default_create */
extern T0* T1696c3(GE_context* ac);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T192c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T653c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].set_internal_cursor */
extern void T653f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T653f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1450c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].make */
extern T0* T1449f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].make_empty */
extern T0* T1448c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].default_create */
extern T0* T1449c3(GE_context* ac);
/* ET_SYSTEM.initialize */
extern void T35f136p1(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_key_equality_tester */
extern void T250f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern T0* T35f120(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_map */
extern T0* T250c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_with_equality_testers */
extern void T250f41(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_sparse_container */
extern void T250f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_internal_cursor */
extern void T250f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_cursor */
extern T0* T250f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make */
extern T0* T677c10(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].unset_found_item */
extern void T250f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_slots */
extern void T250f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_modulus */
extern T6 T250f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_clashes */
extern void T250f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_key_storage */
extern void T250f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].make_item_storage */
extern void T250f43(GE_context* ac, T0* C, T6 a1);
/* ET_MASTER_CLASS_CHECKER.tokens */
extern T0* T286f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T285c134(GE_context* ac, T0* a1);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T285f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T285f57(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T285f136(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T285f138(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T285f140(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T285f137(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T285f137p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T285f139(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern T0* T285f88(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T285f91(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_4 */
extern void T285f165(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T285f176(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T285f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_3 */
extern void T285f164(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_2 */
extern void T285f163(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_acclist_template_1 */
extern void T285f162(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern T0* T285f81(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_accept_template_3 */
extern void T285f161(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_2 */
extern void T285f160(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template_1 */
extern void T285f159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern T0* T285f78(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern T0* T285f72(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template_2 */
extern void T285f158(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_ec_template_1 */
extern void T285f157(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern T0* T285f70(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template_3 */
extern void T285f156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_2 */
extern void T285f155(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_def_template_1 */
extern void T285f154(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern T0* T285f68(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template_3 */
extern void T285f153(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_2 */
extern void T285f152(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_base_template_1 */
extern void T285f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern T0* T285f58(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_10 */
extern void T285f150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_9 */
extern void T285f149(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_8 */
extern void T285f148(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_7 */
extern void T285f147(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_6 */
extern void T285f146(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_5 */
extern void T285f145(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_4 */
extern void T285f144(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_3 */
extern void T285f143(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T285f142(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T285f141(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern T0* T285f90(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_10 */
extern void T285f175(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_9 */
extern void T285f174(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_8 */
extern void T285f173(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_7 */
extern void T285f172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_6 */
extern void T285f171(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_5 */
extern void T285f170(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_4 */
extern void T285f169(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_3 */
extern void T285f168(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T285f167(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T285f166(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T285f61(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T285f82(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T285f71(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern void T73f56(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.make_null */
extern T0* T73c56(GE_context* ac);
/* ET_SYSTEM_PROCESSOR.set_qualified_anchored_types_cycle_detection_enabled_only */
extern void T73f67(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_unknown_builtin_reported_only */
extern void T73f66(GE_context* ac, T0* C, T1 a1);
/* ET_SYSTEM_PROCESSOR.set_preparse_shallow_mode_only */
extern void T73f65(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T300c3(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.null_error_handler */
extern T0* T82f25(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.make_null */
extern T0* T298c178(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.make_null */
extern void T298f178p1(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.null_output_stream */
extern T0* T298f19(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern T0* T82f23(GE_context* ac, T0* C);
/* ET_AST_FACTORY.make */
extern T0* T297c359(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].make_default */
extern T0* T296c16(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].default_capacity */
extern T6 T296f6(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T34f180(GE_context* ac, T0* C);
/* GEC.is_verbose */
extern T1 T24f25(GE_context* ac, T0* C);
/* GEC.is_silent */
extern T1 T24f24(GE_context* ac, T0* C);
/* GEC.parse_ace_file */
extern void T24f43(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T69f141(GE_context* ac, T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T69f248(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T69f252(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T69f265(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T69f264(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T69f263(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T69f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern T0* T69f223(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T69f140(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T199f116(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].force_last */
extern void T142f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].resize */
extern void T142f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].new_capacity */
extern T6 T142f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].extendible */
extern T1 T142f17(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern T0* T69f222(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T69f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token_id */
extern void T247f122(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T247f127(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture_id */
extern void T247f121(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T247f126(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version_id */
extern void T247f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T247f125(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.tokens */
extern T0* T69f241(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T220f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T247c118(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_gac_assembly */
extern void T247f123(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_dotnet_assembly */
extern void T247f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_from_system */
extern void T247f129(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_default_class_mapping */
extern void T247f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T247f188(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_class_mapping */
extern void T247f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_class */
extern T0* T247f103(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].force_last_new */
extern void T250f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_put */
extern void T250f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_put */
extern void T250f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_put */
extern void T250f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_put */
extern void T250f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_item */
extern T6 T250f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].hash_position */
extern T6 T250f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].resize */
extern void T250f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_resize */
extern void T250f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].special_integer_ */
extern T0* T250f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_resize */
extern void T250f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_resize */
extern void T250f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key_storage_item */
extern T0* T250f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].clashes_item */
extern T6 T250f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].slots_resize */
extern void T250f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].new_capacity */
extern T6 T250f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found_item */
extern T0* T250f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item_storage_item */
extern T0* T250f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].found */
extern T1 T250f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search */
extern void T250f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].search_position */
extern void T250f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_class_mapping */
extern void T247f187(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_class_mapping */
extern void T247f186(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_ref_class_mapping */
extern void T247f185(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_class_mapping */
extern void T247f184(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_ref_class_mapping */
extern void T247f183(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_class_mapping */
extern void T247f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_ref_class_mapping */
extern void T247f181(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_class_mapping */
extern void T247f180(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_ref_class_mapping */
extern void T247f179(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_class_mapping */
extern void T247f178(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_ref_class_mapping */
extern void T247f177(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_class_mapping */
extern void T247f176(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.tokens */
extern T0* T247f110(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_kernel_types */
extern void T247f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_wide_character_type */
extern void T247f175(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_typed_pointer_type */
extern void T247f174(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_type_type */
extern void T247f173(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_string_type */
extern void T247f172(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_system_object_type */
extern void T247f171(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_type */
extern void T247f170(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_32_type */
extern void T247f169(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_string_8_type */
extern void T247f168(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_special_type */
extern void T247f167(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_routine_type */
extern void T247f166(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_64_type */
extern void T247f165(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_32_type */
extern void T247f164(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_real_type */
extern void T247f163(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_procedure_type */
extern void T247f162(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_predicate_type */
extern void T247f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_pointer_type */
extern void T247f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_64_type */
extern void T247f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_32_type */
extern void T247f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_16_type */
extern void T247f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_8_type */
extern void T247f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_natural_type */
extern void T247f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_iterable_type */
extern void T247f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_ise_exception_manager_type */
extern void T247f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_64_type */
extern void T247f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_32_type */
extern void T247f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_16_type */
extern void T247f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_8_type */
extern void T247f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_integer_type */
extern void T247f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_immutable_string_32_type */
extern void T247f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_function_type */
extern void T247f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_manager_type */
extern void T247f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_exception_type */
extern void T247f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_double_type */
extern void T247f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_32_type */
extern void T247f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_8_type */
extern void T247f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_character_type */
extern void T247f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_boolean_type */
extern void T247f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_array_type */
extern void T247f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_tuple_type */
extern void T247f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_none_type */
extern void T247f136(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.add_first_imported_class */
extern void T496f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].force_first */
extern void T1399f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put */
extern void T1399f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_cursors_right */
extern void T1399f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].move_right */
extern void T1399f29(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].put_last */
extern void T1399f28(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_any_type */
extern void T247f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make_adapted */
extern void T247f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.default_read_only_value */
extern T1 T247f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_unknown_kernel_types */
extern void T247f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.initialize */
extern void T247f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.class_name_tester */
extern T0* T247f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLIES.make_empty */
extern T0* T475c5(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1395c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1395f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1395f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1683c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1392f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].make_empty */
extern T0* T1393c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].default_create */
extern T0* T1392c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].force */
extern void T246f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].fill_with */
extern void T245f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].extend */
extern void T245f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T246f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T245f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix_id */
extern void T247f119(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T247f124(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix_id */
extern void T234f112(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T234f114(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T69f171(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T220f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T234c111(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_dotnet_assembly */
extern void T234f113(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.make_from_system */
extern void T234f115(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T234f120(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T234f174(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_class_mapping */
extern void T234f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_class */
extern T0* T234f96(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T234f173(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T234f172(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T234f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T234f170(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T234f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T234f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T234f167(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T234f166(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T234f165(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T234f164(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T234f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T234f162(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.tokens */
extern T0* T234f103(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_kernel_types */
extern void T234f119(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T234f161(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T234f160(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_type_type */
extern void T234f159(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_string_type */
extern void T234f158(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_system_object_type */
extern void T234f157(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_type */
extern void T234f156(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_32_type */
extern void T234f155(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_string_8_type */
extern void T234f154(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_special_type */
extern void T234f153(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_routine_type */
extern void T234f152(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_64_type */
extern void T234f151(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_32_type */
extern void T234f150(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_real_type */
extern void T234f149(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_procedure_type */
extern void T234f148(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_predicate_type */
extern void T234f147(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_pointer_type */
extern void T234f146(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T234f145(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T234f144(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T234f143(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T234f142(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_natural_type */
extern void T234f141(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_iterable_type */
extern void T234f140(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T234f139(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T234f138(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T234f137(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T234f136(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T234f135(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_integer_type */
extern void T234f134(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T234f133(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_function_type */
extern void T234f132(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T234f131(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_exception_type */
extern void T234f130(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_double_type */
extern void T234f129(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_32_type */
extern void T234f128(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_8_type */
extern void T234f127(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_character_type */
extern void T234f126(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_boolean_type */
extern void T234f125(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_array_type */
extern void T234f124(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_tuple_type */
extern void T234f123(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_none_type */
extern void T234f122(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_any_type */
extern void T234f121(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.make_adapted */
extern void T234f118(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T234f95(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T234f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.initialize */
extern void T234f116(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T234f101(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T214f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T668f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1455f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1454f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1454f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T668f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1455f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1454f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T668f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T668f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T69f168(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T220f4(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T214c10(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T668f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].force */
extern void T244f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].fill_with */
extern void T237f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].extend */
extern void T237f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T244f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].aliased_resized_area */
extern T0* T237f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_EXCLUDE.put_last */
extern void T233f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T233c6(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].force */
extern void T243f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].fill_with */
extern void T242f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].extend */
extern void T242f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T243f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].aliased_resized_area */
extern T0* T242f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T232f58(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T231f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T232f62(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T232f57(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T69f158(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].force_last */
extern void T221f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_put */
extern void T221f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_put */
extern void T221f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_put */
extern void T221f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_item */
extern T6 T221f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].hash_position */
extern T6 T221f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].resize */
extern void T221f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_resize */
extern void T221f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].special_integer_ */
extern T0* T221f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_resize */
extern void T221f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_resize */
extern void T221f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_item */
extern T0* T221f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_item */
extern T6 T221f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_resize */
extern void T221f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_modulus */
extern T6 T221f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_capacity */
extern T6 T221f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_put */
extern void T221f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].search_position */
extern void T221f44(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER].test */
extern T1 T337f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T199f27(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T199f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].unset_found_item */
extern void T221f39(GE_context* ac, T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T220f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T232c53(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T232f59(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T231f6(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T241f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].aliased_resized_area */
extern T0* T240f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T69f156(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T69f276(GE_context* ac, T0* C, T0* a1);
extern T1 T69f276ot1(T0* a1, T0** a2);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T70f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T70f8(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T70f5(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T69f219(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T232f61(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T231c7(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].make */
extern T0* T674c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].set_internal_cursor */
extern void T674f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].new_cursor */
extern T0* T674f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].make */
extern T0* T1458c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].make */
extern T0* T241f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].make_empty */
extern T0* T240c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].default_create */
extern T0* T241c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].found_item */
extern T0* T221f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_item */
extern T0* T221f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].found */
extern T1 T221f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].search */
extern void T221f35(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T232f56(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T232f55(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_CLUSTER].force */
extern void T241f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].fill_with */
extern void T240f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].extend */
extern void T240f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T232f54(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T231f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].force_last */
extern void T674f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].resize */
extern void T674f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].new_capacity */
extern T6 T674f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].extendible */
extern T1 T674f7(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T69f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T220f2(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T231c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].put_last */
extern void T674f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].force */
extern void T239f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].fill_with */
extern void T236f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].extend */
extern void T236f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T239f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].aliased_resized_area */
extern T0* T236f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_default_value */
extern T0* T69f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern T0* T69f240(GE_context* ac, T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern T0* T69f239(GE_context* ac, T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern T0* T69f238(GE_context* ac, T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern T0* T69f237(GE_context* ac, T0* C);
/* ET_LACE_PARSER.no_value */
extern T0* T69f236(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yes_value */
extern T0* T69f235(GE_context* ac, T0* C);
/* ET_LACE_PARSER.console_application_option */
extern T0* T69f234(GE_context* ac, T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern T0* T69f233(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T238f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].aliased_resized_area */
extern T0* T235f4(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.new_system */
extern T0* T69f142(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T220f1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.make */
extern T0* T71c149(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T71f167(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T71f230(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_class_mapping */
extern void T71f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_wide_character_class_mapping */
extern void T71f229(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_class_mapping */
extern void T71f228(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_ref_class_mapping */
extern void T71f227(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_class_mapping */
extern void T71f226(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_ref_class_mapping */
extern void T71f225(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_class_mapping */
extern void T71f224(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_ref_class_mapping */
extern void T71f223(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_class_mapping */
extern void T71f222(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_ref_class_mapping */
extern void T71f221(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_double_class_mapping */
extern void T71f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_ref_class_mapping */
extern void T71f219(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_class_mapping */
extern void T71f218(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.tokens */
extern T0* T71f142(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_kernel_types */
extern void T71f166(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_wide_character_type */
extern void T71f217(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_typed_pointer_type */
extern void T71f216(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_type_type */
extern void T71f215(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_string_type */
extern void T71f214(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_object_type */
extern void T71f213(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_type */
extern void T71f212(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_32_type */
extern void T71f211(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_string_8_type */
extern void T71f210(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_special_type */
extern void T71f209(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_routine_type */
extern void T71f208(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_64_type */
extern void T71f207(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_32_type */
extern void T71f206(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_real_type */
extern void T71f205(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_procedure_type */
extern void T71f204(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_predicate_type */
extern void T71f203(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_pointer_type */
extern void T71f202(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_64_type */
extern void T71f201(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_32_type */
extern void T71f200(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_16_type */
extern void T71f199(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_8_type */
extern void T71f198(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_natural_type */
extern void T71f197(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_iterable_type */
extern void T71f196(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_ise_exception_manager_type */
extern void T71f195(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_64_type */
extern void T71f194(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_32_type */
extern void T71f193(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_16_type */
extern void T71f192(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_8_type */
extern void T71f191(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_integer_type */
extern void T71f190(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_immutable_string_32_type */
extern void T71f189(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_function_type */
extern void T71f188(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_manager_type */
extern void T71f187(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_exception_type */
extern void T71f186(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_double_type */
extern void T71f185(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_32_type */
extern void T71f184(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_8_type */
extern void T71f183(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_character_type */
extern void T71f182(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_boolean_type */
extern void T71f181(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_array_type */
extern void T71f180(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_tuple_type */
extern void T71f179(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_none_type */
extern void T71f178(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_any_type */
extern void T71f177(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.make_adapted */
extern void T71f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.default_read_only_value */
extern T1 T71f136(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_unknown_kernel_types */
extern void T71f164(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.set_system_name */
extern void T71f163(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.initialize */
extern void T71f162(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T71f162p1(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T71f139(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].force */
extern void T238f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].fill_with */
extern void T235f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].extend */
extern void T235f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T71f158(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_type */
extern void T71f157(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T71f156(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T71f155(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T69f277(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T71f154(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T71f153(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T71f152(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T71f151(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T71f150(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].forth */
extern void T224f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_forth */
extern void T224f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].add_traversing_cursor */
extern void T224f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].remove_traversing_cursor */
extern void T224f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T232f60(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_for_iteration */
extern T0* T224f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_item */
extern T0* T224f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].after */
extern T1 T224f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_after */
extern T1 T224f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].after */
extern T1 T672f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].start */
extern void T224f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_start */
extern void T224f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].cursor_off */
extern T1 T224f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_IDENTIFIER].off */
extern T1 T672f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].is_empty */
extern T1 T224f32(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T69f262(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T69f261(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T69f259(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T69f275(GE_context* ac, T0* C);
/* ET_LACE_PARSER.read_token */
extern void T69f258(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T69f274(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T69f221(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T69f132(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_identifier_from_buffer */
extern T0* T69f220(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.platform */
extern T0* T69f218(GE_context* ac, T0* C);
/* STRING_8.to_integer */
extern T6 T17f25(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T1171f13(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T1171f17(GE_context* ac, T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T1171f23(GE_context* ac, T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T1171f15(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern T0* T1171f14(GE_context* ac, T0* C);
/* CHARACTER_8.is_digit */
extern T1 T2f28(GE_context* ac, T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T1171f22(GE_context* ac, T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern T0* T17f34(GE_context* ac, T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T1171f21(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T1171f20(GE_context* ac, T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T1171f19(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T1171f18(GE_context* ac, T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T1171c16(GE_context* ac);
/* ET_LACE_PARSER.set_start_condition */
extern void T69f282(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T69f215(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T69f199(GE_context* ac, T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T69f191(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T69f273(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T69f281(GE_context* ac, T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T69f126(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T69f272(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T69f270(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T69f125(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T69f217(GE_context* ac, T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T69f271(GE_context* ac, T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T134f8(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_PARSER.std */
extern T0* T69f188(GE_context* ac, T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T69f161(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T69f257(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T69f266(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T69f279(GE_context* ac, T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T69f283(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T69f285(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].keep_head */
extern void T237f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].set_count */
extern void T237f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].keep_head */
extern void T235f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].set_count */
extern void T235f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].keep_head */
extern void T245f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].set_count */
extern void T245f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].keep_head */
extern void T242f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].set_count */
extern void T242f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].keep_head */
extern void T236f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].set_count */
extern void T236f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].keep_head */
extern void T240f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_CLUSTER].set_count */
extern void T240f9(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_PARSER.abort */
extern void T69f260(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].wipe_out */
extern void T142f28(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_all_cursors_after */
extern void T142f34(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T580f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_after */
extern void T580f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].wipe_out */
extern void T224f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].slots_wipe_out */
extern void T224f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].clashes_wipe_out */
extern void T224f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].key_storage_wipe_out */
extern void T224f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].item_storage_wipe_out */
extern void T224f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_IDENTIFIER].move_all_cursors_after */
extern void T224f51(GE_context* ac, T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T69f251(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T69f256(GE_context* ac, T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T69f143(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].wipe_out */
extern void T221f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].slots_wipe_out */
extern void T221f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].clashes_wipe_out */
extern void T221f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].key_storage_wipe_out */
extern void T221f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].item_storage_wipe_out */
extern void T221f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].move_all_cursors_after */
extern void T221f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_next_cursor */
extern void T671f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_after */
extern void T671f7(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f250(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T69f255(GE_context* ac, T0* C);
/* ET_LACE_PARSER.reset */
extern void T69f255p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.make */
extern T0* T69c247(GE_context* ac, T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T69f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T69f254(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T69f269(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern T0* T69f187(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T69f242(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yycheck_template_2 */
extern void T69f291(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yyarray_subcopy */
extern void T69f298(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.integer_array_ */
extern T0* T69f246(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yycheck_template_1 */
extern void T69f290(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern T0* T69f186(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytable_template_2 */
extern void T69f289(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template_1 */
extern void T69f288(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yypgoto_template */
extern T0* T69f185(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yypact_template */
extern T0* T69f184(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern T0* T69f183(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern T0* T69f182(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern T0* T69f181(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern T0* T69f180(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern T0* T69f179(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern T0* T69f178(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yytranslate_template_2 */
extern void T69f287(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yytranslate_template_1 */
extern void T69f286(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T69f268(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make */
extern T0* T244f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].make_empty */
extern T0* T237c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ADAPTED_DOTNET_ASSEMBLIES].default_create */
extern T0* T244c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].make */
extern T0* T238f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_SYSTEM].make_empty */
extern T0* T235c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_SYSTEM].default_create */
extern T0* T238c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T246f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LACE_DOTNET_ASSEMBLY].make_empty */
extern T0* T245c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T246c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].make */
extern T0* T243f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_EXCLUDE].make_empty */
extern T0* T242c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_EXCLUDE].default_create */
extern T0* T243c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].make */
extern T0* T239f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LACE_CLUSTERS].make_empty */
extern T0* T236c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LACE_CLUSTERS].default_create */
extern T0* T239c3(GE_context* ac);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T69f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T69f267(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_initialize */
extern void T69f280p1(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T69f284(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern T0* T69f231(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T69f244(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern T0* T69f230(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern T0* T69f229(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_ec_template_2 */
extern void T69f297(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_array_subcopy */
extern void T69f299(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_LACE_PARSER.yy_ec_template_1 */
extern void T69f296(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_def_template */
extern T0* T69f228(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern T0* T69f227(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern T0* T69f226(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_chk_template_2 */
extern void T69f295(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_chk_template_1 */
extern void T69f294(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template */
extern T0* T69f225(GE_context* ac, T0* C);
/* ET_LACE_PARSER.yy_nxt_template_2 */
extern void T69f293(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.yy_nxt_template_1 */
extern void T69f292(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T69f135(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make */
extern T0* T221c33(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_with_equality_testers */
extern void T221f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_sparse_container */
extern void T221f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].set_internal_cursor */
extern void T221f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].new_cursor */
extern T0* T221f30(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make */
extern T0* T671c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_slots */
extern void T221f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_clashes */
extern void T221f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_key_storage */
extern void T221f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_LACE_CLUSTER, [attached] ET_IDENTIFIER].make_item_storage */
extern void T221f55(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] ET_IDENTIFIER].default_create */
extern T0* T337c2(GE_context* ac);
/* ET_LACE_AST_FACTORY.make */
extern T0* T220c7(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T70c6(GE_context* ac);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T70f4(GE_context* ac, T0* C);
/* GEC.parse_ecf_file */
extern void T24f42(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.to_boolean */
extern T1 T1265f61(GE_context* ac, T0* C);
/* STRING_8.to_boolean */
extern T1 T17f43(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_boolean */
extern T1 T1265f31(GE_context* ac, T0* C);
/* STRING_8.is_boolean */
extern T1 T17f41(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.value */
extern T0* T68f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.has_error */
extern T1 T64f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file */
extern void T63f202(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_file */
extern T0* T63f202ac1(GE_context* ac, T0* a1, T1 a2, T0* a3);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] XM_ELEMENT, detachable XM_POSITION_TABLE, [attached] STRING_8]].set_rout_disp_final */
extern void T181f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_SYSTEM_PARSER.build_system */
extern void T63f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.build_system */
extern T0* T63f204ac1(GE_context* ac);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_LIBRARY]].set_rout_disp_final */
extern void T195f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.propagate_read_only */
extern void T211f35(GE_context* ac, T0* C);
/* ET_LIBRARY.set_read_only */
extern void T486f182(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM].put */
extern void T179f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].wipe_out */
extern void T187f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_wipe_out */
extern void T187f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_wipe_out */
extern void T187f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_wipe_out */
extern void T187f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_wipe_out */
extern void T187f42(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].keep_head */
extern void T647f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].set_count */
extern void T647f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].unset_found_item */
extern void T187f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].move_all_cursors_after */
extern void T187f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_next_cursor */
extern void T650f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_after */
extern void T650f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].wipe_out */
extern void T185f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_wipe_out */
extern void T185f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_wipe_out */
extern void T185f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_wipe_out */
extern void T185f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_wipe_out */
extern void T185f52(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].keep_head */
extern void T643f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].set_count */
extern void T643f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].unset_found_item */
extern void T185f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].move_all_cursors_after */
extern void T185f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_next_cursor */
extern void T642f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_after */
extern void T642f9(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_dotnet_assemblies */
extern void T63f208(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T63f208ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].force_last_new */
extern void T187f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_put */
extern void T187f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_put */
extern void T187f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].force */
extern void T651f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].fill_with */
extern void T647f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].extend */
extern void T647f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_put */
extern void T187f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_put */
extern void T187f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_item */
extern T6 T187f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].hash_position */
extern T6 T187f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].resize */
extern void T187f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_resize */
extern void T187f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].special_integer_ */
extern T0* T187f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_resize */
extern void T187f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_resize */
extern void T187f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T651f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T647f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].key_storage_item */
extern T0* T187f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].clashes_item */
extern T6 T187f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].slots_resize */
extern void T187f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_modulus */
extern T6 T187f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_capacity */
extern T6 T187f21(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_dotnet_assembly */
extern T0* T178f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make */
extern T0* T215c106(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.make_from_system */
extern void T215f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T215f112(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T215f166(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_class_mapping */
extern void T215f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_class */
extern T0* T215f92(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T215f165(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T215f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T215f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T215f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T215f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T215f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T215f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T215f158(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T215f157(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T215f156(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T215f155(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T215f154(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.tokens */
extern T0* T215f90(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_kernel_types */
extern void T215f111(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T215f153(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T215f152(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_type_type */
extern void T215f151(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_string_type */
extern void T215f150(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_system_object_type */
extern void T215f149(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_type */
extern void T215f148(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_32_type */
extern void T215f147(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_string_8_type */
extern void T215f146(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_special_type */
extern void T215f145(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_routine_type */
extern void T215f144(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_64_type */
extern void T215f143(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_32_type */
extern void T215f142(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_real_type */
extern void T215f141(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_procedure_type */
extern void T215f140(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_predicate_type */
extern void T215f139(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_pointer_type */
extern void T215f138(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T215f137(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T215f136(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T215f135(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T215f134(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_natural_type */
extern void T215f133(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_iterable_type */
extern void T215f132(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T215f131(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T215f130(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T215f129(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T215f128(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T215f127(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_integer_type */
extern void T215f126(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T215f125(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_function_type */
extern void T215f124(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T215f123(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_exception_type */
extern void T215f122(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_double_type */
extern void T215f121(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_32_type */
extern void T215f120(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_8_type */
extern void T215f119(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_character_type */
extern void T215f118(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_boolean_type */
extern void T215f117(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_array_type */
extern void T215f116(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_tuple_type */
extern void T215f115(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_none_type */
extern void T215f114(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_any_type */
extern void T215f113(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.make_adapted */
extern void T215f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T215f91(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T215f109(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.initialize */
extern void T215f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T215f102(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_dotnet_assembly */
extern void T217f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found_item */
extern T0* T187f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].item_storage_item */
extern T0* T187f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].found */
extern T1 T187f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search */
extern void T187f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].search_position */
extern void T187f46(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.as_lower */
extern T0* T1265f14(GE_context* ac, T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T1265f84(GE_context* ac, T0* C);
/* STRING_8.as_lower */
extern T0* T17f26(GE_context* ac, T0* C);
/* STRING_8.to_lower */
extern void T17f67(GE_context* ac, T0* C);
/* STRING_8.to_lower_area */
extern void T17f71(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ECF_SYSTEM_PARSER.operating_system */
extern T0* T63f24(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.full_filename */
extern T0* T63f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.dirname */
extern T0* T122f6(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T122f14(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.dirname */
extern T0* T121f6(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T121f16(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.is_relative_pathname */
extern T1 T122f5(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname_from_file_system */
extern T0* T122f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.any_ */
extern T0* T122f17(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname_from_file_system */
extern T0* T121f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.any_ */
extern T0* T121f19(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.windows_file_system */
extern T0* T63f16(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.file_system */
extern T0* T63f15(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.unix_file_system */
extern T0* T63f30(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.execution_environment */
extern T0* T63f23(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.pathname */
extern T0* T217f22(GE_context* ac, T0* C);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T214f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T668f9(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T214f2(GE_context* ac, T0* C);
/* ET_ECF_TARGET.fill_options */
extern void T66f55(GE_context* ac, T0* C, T0* a1);
extern T1 T66f55ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.set_trace_mode */
extern void T65f273(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_obsolete_routine_type_mode */
extern void T65f272(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_obsolete_routine_type_mode */
extern void T191f194(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_detachable_type_mark */
extern T0* T82f78(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_detachable_mark */
extern void T384f19(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_implicit_attachment_type_mark */
extern void T65f271(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_implicit_attachment_type_mark */
extern void T191f193(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.tokens */
extern T0* T66f29(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.value */
extern T0* T551f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_capabilities */
extern void T66f59(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_target_type_attachment_mode */
extern void T65f278(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_attachment_type_conformance_mode */
extern void T65f277(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_multithreaded_mode */
extern void T65f276(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.string_ */
extern T0* T66f30(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.support_value */
extern T0* T205f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.use_value */
extern T0* T205f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found_item */
extern T0* T1271f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_item */
extern T0* T1271f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].found */
extern T1 T1271f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search */
extern void T1271f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].search_position */
extern void T1271f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].hash_position */
extern T6 T1271f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_item */
extern T0* T1271f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_item */
extern T6 T1271f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_item */
extern T6 T1271f27(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_settings */
extern void T66f58(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_exception_trace_mode */
extern void T65f275(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_console_application_mode */
extern void T65f274(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SETTINGS.value */
extern T0* T550f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.fill_root */
extern void T66f57(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.fill_root */
extern void T1228f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_creation */
extern void T65f280(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_root_type */
extern void T65f279(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_ALL_CLASSES.fill_root */
extern void T1229f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.unset_root_type */
extern void T65f281(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T192f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].do_all */
extern void T653f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].item */
extern T0* T653f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].forth */
extern void T185f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_forth */
extern void T185f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].add_traversing_cursor */
extern void T185f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_position */
extern void T642f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].remove_traversing_cursor */
extern void T185f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_item */
extern T6 T185f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_for_iteration */
extern T0* T185f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_item */
extern T0* T185f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_item */
extern T0* T185f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T185f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_after */
extern T1 T185f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].after */
extern T1 T642f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].start */
extern void T185f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_start */
extern void T185f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].cursor_off */
extern T1 T185f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].off */
extern T1 T642f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].is_empty */
extern T1 T185f23(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_libraries */
extern void T63f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.parse_libraries */
extern T0* T63f207ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_library */
extern void T63f210(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_CELL [detachable ET_ECF_LIBRARY].put */
extern void T210f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_library */
extern T0* T63f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].force_last_new */
extern void T185f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_put */
extern void T185f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_put */
extern void T185f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].force */
extern void T646f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].fill_with */
extern void T643f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].extend */
extern void T643f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_put */
extern void T185f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_put */
extern void T185f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_item */
extern T6 T185f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].hash_position */
extern T6 T185f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].resize */
extern void T185f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].clashes_resize */
extern void T185f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].special_integer_ */
extern T0* T185f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_resize */
extern void T185f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].item_storage_resize */
extern void T185f66(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T646f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].aliased_resized_area */
extern T0* T643f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].key_storage_item */
extern T0* T185f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].slots_resize */
extern void T185f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_modulus */
extern T6 T185f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_capacity */
extern T6 T185f36(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.fill_system_config */
extern void T63f211(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f211ot1(T0* a1, T0** a2);
extern T1 T63f211ot2(T0* a1, T0** a2);
/* ET_ECF_ERROR_HANDLER.report_eltm_error */
extern void T64f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_error */
extern void T64f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_error_message */
extern void T64f29p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.message */
extern T0* T64f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.default_message */
extern T0* T218f9(GE_context* ac, T0* C);
/* ET_ECF_ERROR.message */
extern T0* T218f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.arguments */
extern T0* T218f6(GE_context* ac, T0* C);
/* KL_ARGUMENTS.make */
extern T0* T32c5(GE_context* ac);
/* KL_ARGUMENTS.argument */
extern T0* T32f2(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.as_string_8 */
extern T0* T19f9(GE_context* ac, T0* C);
/* ARGUMENTS_32.argument */
extern T0* T443f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].item */
extern T0* T1385f5(GE_context* ac, T0* C, T6 a1);
/* ARGUMENTS_32.internal_argument_array */
extern T0* T443f3(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].put */
extern void T1385f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].compare_objects */
extern void T1385f7(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T1385c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] IMMUTABLE_STRING_32].make_filled_area */
extern void T1385f9(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_filled */
extern T0* T1386c6(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].fill_with */
extern void T1386f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].extend */
extern void T1386f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern void T1386f4(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].make_empty */
extern T0* T1386c4(GE_context* ac, T6 a1);
/* IMMUTABLE_STRING_32.make_empty */
extern T0* T19c16(GE_context* ac);
/* IMMUTABLE_STRING_32.make */
extern void T19f17(GE_context* ac, T0* C, T6 a1);
/* KL_ARGUMENTS.internal_arguments */
extern T0* T32f3(GE_context* ac, T0* C);
/* ARGUMENTS_32.default_create */
extern T0* T443c5(GE_context* ac);
/* [attached] ARRAY [[attached] STRING_8].valid_index */
extern T1 T145f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T1265f29(GE_context* ac, T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T1265f51(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T1265f28(GE_context* ac, T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T1265f50(GE_context* ac, T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T1171f12(GE_context* ac, T0* C);
/* STRING_8.is_integer */
extern T1 T17f36(GE_context* ac, T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f39(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.string_ */
extern T0* T218f8(GE_context* ac, T0* C);
/* ET_ECF_ERROR.make_eltm */
extern T0* T218c104(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.filename */
extern T0* T218f14(GE_context* ac, T0* C);
/* ET_ECF_ERROR.default_message_template */
extern T0* T218f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR.add_dependent_universes */
extern void T218f115(GE_context* ac, T0* C, T0* a1);
extern T1 T218f115ot1(T0* a1, T0** a2);
/* ET_ECF_TARGET.parent_path */
extern T0* T66f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].put_last */
extern void T1274f16(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].force */
extern void T1662f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].fill_with */
extern void T1661f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].extend */
extern void T1661f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern void T1274f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1274c13(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].set_internal_cursor */
extern void T1274f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_cursor */
extern T0* T1274f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1663c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].make */
extern T0* T1662f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].make_empty */
extern T0* T1661c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].default_create */
extern T0* T1662c3(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].item */
extern T0* T1272f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR.add_parent_path */
extern void T218f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].item */
extern T0* T1274f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].force_last */
extern void T1274f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].resize */
extern void T1274f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1662f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET_PARENT].aliased_resized_area */
extern T0* T1661f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].new_capacity */
extern T6 T1274f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].extendible */
extern T1 T1274f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].make_default */
extern T0* T1274c11(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET_PARENT].default_capacity */
extern T6 T1274f8(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.target_by_name */
extern T0* T189f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.string_ */
extern T0* T189f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].item */
extern T0* T1270f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eaby_error */
extern void T64f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eaby */
extern T0* T218c103(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].forth */
extern void T459f12(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_forth */
extern void T1257f15(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].add_traversing_cursor */
extern void T1257f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_next_cursor */
extern void T459f17(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_traversing_cursor */
extern void T1257f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set */
extern void T459f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_ECF_ERROR_HANDLER.report_eatb_error */
extern void T64f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatb */
extern T0* T218c102(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.attribute_value */
extern T0* T63f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_POSITION_TABLE.item */
extern T0* T158f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].forth */
extern void T1261f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_forth */
extern void T1262f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].add_traversing_cursor */
extern void T1262f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_next_cursor */
extern void T1261f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].remove_traversing_cursor */
extern void T1262f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set */
extern void T1261f12(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].go_after */
extern void T1261f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_go_after */
extern void T1262f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_after */
extern void T1261f13(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_off */
extern T1 T1262f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].off */
extern T1 T1261f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].item */
extern T0* T1261f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].start */
extern void T1261f9(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].cursor_start */
extern void T1262f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].new_cursor */
extern T0* T1262f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1261c8(GE_context* ac, T0* a1);
/* XM_POSITION_TABLE.has */
extern T1 T158f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_false */
extern T1 T63f48(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.is_true */
extern T1 T63f47(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_targets */
extern T0* T63f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ECF_TARGETS.put_last */
extern void T189f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].force_last */
extern void T1270f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].force */
extern void T663f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].fill_with */
extern void T661f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].extend */
extern void T661f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].resize */
extern void T1270f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T663f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].aliased_resized_area */
extern T0* T661f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_capacity */
extern T6 T1270f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].extendible */
extern T1 T1270f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_targets */
extern T0* T178f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGETS.make */
extern T0* T189c8(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].put_last */
extern void T1270f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].make */
extern T0* T1270c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].set_internal_cursor */
extern void T1270f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_TARGET].new_cursor */
extern T0* T1270f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_TARGET].make */
extern T0* T1655c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].make */
extern T0* T663f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_TARGET].make_empty */
extern T0* T661c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_TARGET].default_create */
extern T0* T663c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_target */
extern T0* T63f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
extern T1 T63f69ot1(T0* a1, T0** a2);
extern T1 T63f69ot2(T0* a1, T0** a2);
/* ET_ECF_TARGET.set_notes */
extern void T66f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_post_compile_actions */
extern void T66f52(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_pre_compile_actions */
extern void T66f51(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_resources */
extern void T66f50(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_objects */
extern void T66f49(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_makes */
extern void T66f48(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_linker_flags */
extern void T66f47(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_libraries */
extern void T66f46(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_includes */
extern void T66f45(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_external_cflags */
extern void T66f44(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_class_mappings */
extern void T66f43(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_file_rules */
extern void T66f42(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_dotnet_assemblies */
extern void T66f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_libraries */
extern void T66f40(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_clusters */
extern void T66f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_target_options */
extern void T63f228(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_options */
extern void T63f230(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_OPTIONS.set_primary_value */
extern void T551f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_value */
extern T0* T551f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.primary_value */
extern T0* T550f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.adapt_capabilities */
extern void T63f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_5_0 */
extern T0* T63f65(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_use_value */
extern void T205f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.set_primary_use_value_id */
extern void T205f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].force_last */
extern void T1271f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_put */
extern void T1271f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_put */
extern void T1271f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_put */
extern void T1271f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].resize */
extern void T1271f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].clashes_resize */
extern void T1271f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].special_integer_ */
extern T0* T1271f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].key_storage_resize */
extern void T1271f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_resize */
extern void T1271f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].slots_resize */
extern void T1271f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_modulus */
extern T6 T1271f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_capacity */
extern T6 T1271f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].item_storage_put */
extern void T1271f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].unset_found_item */
extern void T1271f41(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.set_primary_support_value */
extern void T205f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ecf_1_11_0 */
extern T0* T63f55(GE_context* ac, T0* C);
/* ET_ECF_CAPABILITIES.primary_use_value */
extern T0* T205f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_use_value_id */
extern T0* T205f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.primary_support_value */
extern T0* T205f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.set_abstract */
extern void T66f38(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_TARGET.set_version */
extern void T66f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_version */
extern T0* T63f112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VERSION.set_copyright */
extern void T1212f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_company */
extern void T1212f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.set_product */
extern void T1212f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VERSION.make_major */
extern T0* T1212c11(GE_context* ac, T6 a1);
/* ET_ECF_VERSION.make_major_minor */
extern T0* T1212c10(GE_context* ac, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eats_error */
extern void T64f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eats */
extern T0* T218c106(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VERSION.make_major_minor_release */
extern T0* T1212c9(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* ET_ECF_VERSION.make */
extern T0* T1212c8(GE_context* ac, T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_ECF_ERROR_HANDLER.report_eati_error */
extern void T64f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eati */
extern T0* T218c105(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_variable */
extern void T63f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_VARIABLES.set_primary_value */
extern void T68f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_VARIABLES.primary_value */
extern T0* T68f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_setting */
extern void T63f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SETTINGS.set_primary_value */
extern void T550f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.set_root */
extern void T66f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_root */
extern T0* T63f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ROOT_CLASS.set_cluster_name */
extern void T1228f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.set_creation_procedure_name */
extern void T1228f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_class */
extern T0* T178f24(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ROOT_CLASS.make */
extern T0* T1228c4(GE_context* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_root_all_classes */
extern T0* T178f23(GE_context* ac, T0* C);
/* ET_ECF_ROOT_ALL_CLASSES.make */
extern T0* T1229c1(GE_context* ac);
/* ET_ECF_TARGET.set_precompiled_library */
extern void T66f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T63f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_precompiled_library */
extern T0* T63f106ac1(GE_context* ac, T0* a1);
extern T1 T63f106ot1(T0* a1, T0** a2);
extern T1 T63f106ot2(T0* a1, T0** a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_OPTIONS]].set_rout_disp_final */
extern void T1226f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_conditions */
extern void T1210f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_visible_classes */
extern void T1210f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_renamings */
extern void T1210f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_class_options */
extern void T1210f26(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].do_all */
extern void T1223f35(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_item */
extern T0* T1223f33(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_item */
extern T6 T1223f28(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_options */
extern void T1210f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_use_application_options */
extern void T1210f24(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_read_only */
extern void T1210f23(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_classname_prefix */
extern void T1210f22(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_eifgens_location */
extern void T1210f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_visible_classes */
extern T0* T63f135(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].force_last */
extern void T1224f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].force */
extern void T1642f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].fill_with */
extern void T1643f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].extend */
extern void T1643f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].resize */
extern void T1224f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1642f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].aliased_resized_area */
extern T0* T1643f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_capacity */
extern T6 T1224f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].extendible */
extern T1 T1224f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_visible_classes */
extern T0* T178f41(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1224c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].set_internal_cursor */
extern void T1224f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_VISIBLE_CLASS].new_cursor */
extern T0* T1224f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1644c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].make */
extern T0* T1642f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_VISIBLE_CLASS].make_empty */
extern T0* T1643c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_VISIBLE_CLASS].default_create */
extern T0* T1642c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_visible_class */
extern T0* T63f167(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_VISIBLE_CLASS.set_new_feature_name */
extern void T1232f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_new_class_name */
extern void T1232f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.set_feature_name */
extern void T1232f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_visible_class */
extern T0* T178f44(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_VISIBLE_CLASS.make */
extern T0* T1232c5(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_renamings */
extern T0* T63f133(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_renaming */
extern void T63f231(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_eatd_error */
extern void T64f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatd */
extern T0* T218c114(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_renamings */
extern T0* T178f40(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.case_insensitive_string_equality_tester */
extern T0* T178f51(GE_context* ac, T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T186c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_options */
extern T0* T63f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_AST_FACTORY.new_options */
extern T0* T178f39(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.make */
extern T0* T551c14(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_OPTIONS.make */
extern T0* T551f14ac1(GE_context* ac, T0* a1);
/* [attached] FUNCTION [[attached] TUPLE [[attached] STRING_8], [attached] INTEGER_32].set_rout_disp_final */
extern void T547f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T36f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_hash_function */
extern void T55f97(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_AGENT_HASH_FUNCTION [[attached] STRING_8].make */
extern T0* T545c3(GE_context* ac, T0* a1);
/* ET_ECF_OPTIONS.string_ */
extern T0* T551f10(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T551f9(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.set_description */
extern void T1210f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_class_options */
extern T0* T63f130(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].force_last */
extern void T1223f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_put */
extern void T1223f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_put */
extern void T1223f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_put */
extern void T1223f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_item */
extern T6 T1223f26(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].hash_position */
extern T6 T1223f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].resize */
extern void T1223f43(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].clashes_resize */
extern void T1223f51(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].special_integer_ */
extern T0* T1223f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_resize */
extern void T1223f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_resize */
extern void T1223f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1640f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].aliased_resized_area */
extern T0* T1637f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].key_storage_item */
extern T0* T1223f22(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].slots_resize */
extern void T1223f48(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_modulus */
extern T6 T1223f24(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_capacity */
extern T6 T1223f21(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].item_storage_put */
extern void T1223f42(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].force */
extern void T1640f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].fill_with */
extern void T1637f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].extend */
extern void T1637f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search_position */
extern void T1223f40(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].unset_found_item */
extern void T1223f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found_item */
extern T0* T1223f25(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].found */
extern T1 T1223f27(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].search */
extern void T1223f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_class_options */
extern T0* T178f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_key_equality_tester */
extern void T1223f38(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_map */
extern T0* T1223c34(GE_context* ac, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_with_equality_testers */
extern void T1223f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_sparse_container */
extern void T1223f47(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].set_internal_cursor */
extern void T1223f56(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].new_cursor */
extern T0* T1223f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make */
extern T0* T1641c4(GE_context* ac, T0* a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_slots */
extern void T1223f55(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_clashes */
extern void T1223f54(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_key_storage */
extern void T1223f53(GE_context* ac, T0* C, T6 a1);
/* detachable DS_HASH_TABLE [[attached] ET_ECF_OPTIONS, [attached] STRING_8].make_item_storage */
extern void T1223f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].make */
extern T0* T1640f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_OPTIONS].make_empty */
extern T0* T1637c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_OPTIONS].default_create */
extern T0* T1640c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_conditions */
extern T0* T63f128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T63f128ot1(T0* a1, T0** a2);
extern T1 T63f128ot2(T0* a1, T0** a2);
/* ET_ECF_ORED_CONDITIONS.put_last */
extern void T1230f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].force_last */
extern void T1645f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].force */
extern void T1870f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].fill_with */
extern void T1871f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].extend */
extern void T1871f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].resize */
extern void T1645f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1870f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].aliased_resized_area */
extern T0* T1871f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_capacity */
extern T6 T1645f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].extendible */
extern T1 T1645f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_ored_conditions */
extern T0* T178f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.make */
extern T0* T1230c6(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].put_last */
extern void T1645f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1645c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].set_internal_cursor */
extern void T1645f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].new_cursor */
extern T0* T1645f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1872c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].make */
extern T0* T1870f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ANDED_CONDITIONS].make_empty */
extern T0* T1871c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ANDED_CONDITIONS].default_create */
extern T0* T1870c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_condition */
extern T0* T63f166(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f166ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_version_condition */
extern T0* T63f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabj_error */
extern void T64f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabj */
extern T0* T218c113(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.make */
extern T0* T1242c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_COMPILER_VERSION_CONDITION.make */
extern T0* T1241c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabi_error */
extern void T64f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabi */
extern T0* T218c112(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eabh_error */
extern void T64f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_eabh */
extern T0* T218c111(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eabg_error */
extern void T64f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabg */
extern T0* T218c110(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eabf_error */
extern void T64f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabf */
extern T0* T218c109(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* UT_VERSION.make_major_minor_revision */
extern T0* T79c20(GE_context* ac, T6 a1, T6 a2, T6 a3);
/* UT_VERSION.make_major_minor */
extern T0* T79c19(GE_context* ac, T6 a1, T6 a2);
/* UT_VERSION.make_major */
extern T0* T79c18(GE_context* ac, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_platform_condition */
extern T0* T63f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eatn_error */
extern void T64f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatn */
extern T0* T218c108(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_platform_condition */
extern T0* T178f50(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_PLATFORM_CONDITION.make */
extern T0* T1239c9(GE_context* ac, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.make_excluded */
extern T0* T1239c8(GE_context* ac, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatx_error */
extern void T64f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eatx */
extern T0* T218c107(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.new_multithreaded_condition */
extern T0* T63f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_concurrency_condition */
extern T0* T178f46(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_CONCURRENCY_CONDITION.make */
extern T0* T1235c10(GE_context* ac, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.make_excluded */
extern T0* T1235c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_dynamic_runtime_condition */
extern T0* T63f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dynamic_runtime_condition */
extern T0* T178f49(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.make */
extern T0* T1238c5(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_dotnet_condition */
extern T0* T63f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_dotnet_condition */
extern T0* T178f48(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_DOTNET_CONDITION.make */
extern T0* T1237c5(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_custom_condition */
extern T0* T63f173(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_custom_condition */
extern T0* T178f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_ECF_CUSTOM_CONDITION.make */
extern T0* T1236c13(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.make_excluded */
extern T0* T1236c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.new_concurrency_condition */
extern T0* T63f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.put_last */
extern void T1231f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].force_last */
extern void T1646f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].force */
extern void T1873f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].fill_with */
extern void T1874f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].extend */
extern void T1874f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].resize */
extern void T1646f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1873f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].aliased_resized_area */
extern T0* T1874f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_capacity */
extern T6 T1646f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].extendible */
extern T1 T1646f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM_PARSER.new_build_condition */
extern T0* T63f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_build_condition */
extern T0* T178f45(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_ECF_BUILD_CONDITION.make */
extern T0* T1234c8(GE_context* ac, T0* a1);
/* ET_ECF_BUILD_CONDITION.make_excluded */
extern T0* T1234c7(GE_context* ac, T0* a1);
/* ET_ECF_AST_FACTORY.new_anded_conditions */
extern T0* T178f43(GE_context* ac, T0* C);
/* ET_ECF_ANDED_CONDITIONS.make_empty */
extern T0* T1231c6(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1646c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].set_internal_cursor */
extern void T1646f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].new_cursor */
extern T0* T1646f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1875c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].make */
extern T0* T1873f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CONDITION_ITEM].make_empty */
extern T0* T1874c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CONDITION_ITEM].default_create */
extern T0* T1873c3(GE_context* ac);
/* ET_ECF_AST_FACTORY.new_adapted_precompiled_library */
extern T0* T178f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make */
extern T0* T1210c19(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.make_adapted_library */
extern void T1210f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.default_read_only_value */
extern T1 T1210f18(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_library */
extern T0* T82f281(GE_context* ac, T0* C);
/* ET_LIBRARY.make */
extern T0* T486c107(GE_context* ac, T0* a1, T0* a2);
/* ET_LIBRARY.make_from_system */
extern void T486f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_default_class_mapping */
extern void T486f113(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_ref_class_mapping */
extern void T486f167(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_class_mapping */
extern void T486f168(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.set_wide_character_class_mapping */
extern void T486f166(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_string_class_mapping */
extern void T486f165(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_ref_class_mapping */
extern void T486f164(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_real_class_mapping */
extern void T486f163(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_ref_class_mapping */
extern void T486f162(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_natural_class_mapping */
extern void T486f161(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_ref_class_mapping */
extern void T486f160(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_integer_class_mapping */
extern void T486f159(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_ref_class_mapping */
extern void T486f158(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_double_class_mapping */
extern void T486f157(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_ref_class_mapping */
extern void T486f156(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.set_character_class_mapping */
extern void T486f155(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.tokens */
extern T0* T486f91(GE_context* ac, T0* C);
/* ET_LIBRARY.set_kernel_types */
extern void T486f112(GE_context* ac, T0* C);
/* ET_LIBRARY.set_wide_character_type */
extern void T486f154(GE_context* ac, T0* C);
/* ET_LIBRARY.set_typed_pointer_type */
extern void T486f153(GE_context* ac, T0* C);
/* ET_LIBRARY.set_type_type */
extern void T486f152(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_string_type */
extern void T486f151(GE_context* ac, T0* C);
/* ET_LIBRARY.set_system_object_type */
extern void T486f150(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_type */
extern void T486f149(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_32_type */
extern void T486f148(GE_context* ac, T0* C);
/* ET_LIBRARY.set_string_8_type */
extern void T486f147(GE_context* ac, T0* C);
/* ET_LIBRARY.set_special_type */
extern void T486f146(GE_context* ac, T0* C);
/* ET_LIBRARY.set_routine_type */
extern void T486f145(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_64_type */
extern void T486f144(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_32_type */
extern void T486f143(GE_context* ac, T0* C);
/* ET_LIBRARY.set_real_type */
extern void T486f142(GE_context* ac, T0* C);
/* ET_LIBRARY.set_procedure_type */
extern void T486f141(GE_context* ac, T0* C);
/* ET_LIBRARY.set_predicate_type */
extern void T486f140(GE_context* ac, T0* C);
/* ET_LIBRARY.set_pointer_type */
extern void T486f139(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_64_type */
extern void T486f138(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_32_type */
extern void T486f137(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_16_type */
extern void T486f136(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_8_type */
extern void T486f135(GE_context* ac, T0* C);
/* ET_LIBRARY.set_natural_type */
extern void T486f134(GE_context* ac, T0* C);
/* ET_LIBRARY.set_iterable_type */
extern void T486f133(GE_context* ac, T0* C);
/* ET_LIBRARY.set_ise_exception_manager_type */
extern void T486f132(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_64_type */
extern void T486f131(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_32_type */
extern void T486f130(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_16_type */
extern void T486f129(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_8_type */
extern void T486f128(GE_context* ac, T0* C);
/* ET_LIBRARY.set_integer_type */
extern void T486f127(GE_context* ac, T0* C);
/* ET_LIBRARY.set_immutable_string_32_type */
extern void T486f126(GE_context* ac, T0* C);
/* ET_LIBRARY.set_function_type */
extern void T486f125(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_manager_type */
extern void T486f124(GE_context* ac, T0* C);
/* ET_LIBRARY.set_exception_type */
extern void T486f123(GE_context* ac, T0* C);
/* ET_LIBRARY.set_double_type */
extern void T486f122(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_32_type */
extern void T486f121(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_8_type */
extern void T486f120(GE_context* ac, T0* C);
/* ET_LIBRARY.set_character_type */
extern void T486f119(GE_context* ac, T0* C);
/* ET_LIBRARY.set_boolean_type */
extern void T486f118(GE_context* ac, T0* C);
/* ET_LIBRARY.set_array_type */
extern void T486f117(GE_context* ac, T0* C);
/* ET_LIBRARY.set_tuple_type */
extern void T486f116(GE_context* ac, T0* C);
/* ET_LIBRARY.set_none_type */
extern void T486f115(GE_context* ac, T0* C);
/* ET_LIBRARY.set_any_type */
extern void T486f114(GE_context* ac, T0* C);
/* ET_LIBRARY.make_adapted */
extern void T486f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.default_read_only_value */
extern T1 T486f92(GE_context* ac, T0* C);
/* ET_LIBRARY.set_unknown_kernel_types */
extern void T486f110(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T486f109(GE_context* ac, T0* C);
/* ET_LIBRARY.initialize */
extern void T486f109p1(GE_context* ac, T0* C);
/* ET_LIBRARY.class_name_tester */
extern T0* T486f101(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_PRECOMPILED_LIBRARY.tokens */
extern T0* T1210f17(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_actions */
extern T0* T63f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].force_last */
extern void T1209f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].force */
extern void T1633f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].fill_with */
extern void T1634f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].extend */
extern void T1634f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].resize */
extern void T1209f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T1633f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].aliased_resized_area */
extern T0* T1634f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_capacity */
extern T6 T1209f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].extendible */
extern T1 T1209f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_actions */
extern T0* T178f21(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].make */
extern T0* T1209c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].set_internal_cursor */
extern void T1209f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_ACTION].new_cursor */
extern T0* T1209f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ACTION].make */
extern T0* T1635c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].make */
extern T0* T1633f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ACTION].make_empty */
extern T0* T1634c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ACTION].default_create */
extern T0* T1633c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_action */
extern T0* T63f126(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f126ot1(T0* a1, T0** a2);
extern T1 T63f126ot2(T0* a1, T0** a2);
/* ET_ECF_ACTION.set_conditions */
extern void T1222f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_working_directory */
extern void T1222f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.set_must_succeed */
extern void T1222f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ACTION.set_description */
extern void T1222f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_action */
extern T0* T178f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ACTION.make */
extern T0* T1222c6(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_options */
extern void T63f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T63f224ot1(T0* a1, T0** a2);
extern T1 T63f224ot2(T0* a1, T0** a2);
/* ET_ECF_OPTIONS.set_description */
extern void T551f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_warning */
extern void T63f238(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_warning_value */
extern void T551f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_warning_value */
extern T0* T551f8(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_debug */
extern void T63f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_OPTIONS.set_primary_debug_value */
extern void T551f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_debug_value */
extern T0* T551f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_assertions */
extern void T63f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T63f236ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].new_iterator */
extern T0* T55f49(GE_context* ac, T0* C);
/* ET_ECF_OPTIONS.set_primary_assertion_value */
extern void T551f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.primary_assertion_value */
extern T0* T551f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_mappings */
extern T0* T63f100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_mapping */
extern void T63f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_class_mappings */
extern T0* T178f20(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_adapted_libraries */
extern T0* T63f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_LIBRARIES.put_last */
extern void T1199f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].force_last */
extern void T1623f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].force */
extern void T1838f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].fill_with */
extern void T1837f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].extend */
extern void T1837f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].resize */
extern void T1623f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1838f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1837f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_capacity */
extern T6 T1623f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].extendible */
extern T1 T1623f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_libraries */
extern T0* T178f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.make */
extern T0* T1199c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].put_last */
extern void T1623f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1623c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].set_internal_cursor */
extern void T1623f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].new_cursor */
extern T0* T1623f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1839c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].make */
extern T0* T1838f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_LIBRARY].make_empty */
extern T0* T1837c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_LIBRARY].default_create */
extern T0* T1838c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T63f125(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_library */
extern T0* T63f125ac1(GE_context* ac, T0* a1);
extern T1 T63f125ot1(T0* a1, T0** a2);
extern T1 T63f125ot2(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_LIBRARY.set_notes */
extern void T211f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_conditions */
extern void T211f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_visible_classes */
extern void T211f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_renamings */
extern void T211f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_class_options */
extern void T211f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_options */
extern void T211f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_use_application_options */
extern void T211f26(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_read_only */
extern void T211f25(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_LIBRARY.set_classname_prefix */
extern void T211f24(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARY.set_description */
extern void T211f23(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_library */
extern T0* T178f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make */
extern T0* T211c22(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_LIBRARY.make_adapted_library */
extern void T211f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_LIBRARY.default_read_only_value */
extern T1 T211f18(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.tokens */
extern T0* T211f17(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_override_clusters */
extern T0* T63f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_CLUSTERS.put_last */
extern void T1198f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].force_last */
extern void T1622f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].force */
extern void T1835f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].fill_with */
extern void T1834f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].extend */
extern void T1834f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].resize */
extern void T1622f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1835f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].aliased_resized_area */
extern T0* T1834f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_capacity */
extern T6 T1622f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].extendible */
extern T1 T1622f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_clusters */
extern T0* T178f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make */
extern T0* T1198c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].put_last */
extern void T1622f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].make */
extern T0* T1622c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].set_internal_cursor */
extern void T1622f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].new_cursor */
extern T0* T1622f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].make */
extern T0* T1836c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].make */
extern T0* T1835f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].make_empty */
extern T0* T1834c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_CLUSTER].default_create */
extern T0* T1835c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T63f124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_override_cluster */
extern T0* T63f124ac1(GE_context* ac, T0* a1);
extern T1 T63f124ot1(T0* a1, T0** a2);
extern T1 T63f124ot2(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_conditions */
extern void T1213f83(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_provider_groups */
extern void T1213f82(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_visible_classes */
extern void T1213f81(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_mappings */
extern void T1213f80(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_renamings */
extern void T1213f79(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_class_options */
extern void T1213f78(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_options */
extern void T1213f77(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_file_rules */
extern void T1213f76(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_conditioned_subclusters */
extern void T1213f75(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_parent */
extern void T1198f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_parent */
extern void T1213f94(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_recursive */
extern void T1213f74(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_read_only */
extern void T1213f73(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_classname_prefix */
extern void T1213f72(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_hidden */
extern void T1213f71(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_provider_groups */
extern T0* T63f155(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_SYSTEM_PARSER.add_provider_group */
extern void T63f232(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_provider_groups */
extern T0* T178f42(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_overridden_group */
extern void T1213f86(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_overridden_group */
extern T0* T63f162(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.set_description */
extern void T1213f70(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_override */
extern void T1213f85(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_AST_FACTORY.new_cluster */
extern T0* T178f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.make */
extern T0* T1213c69(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_CLUSTER.set_use_obsolete_syntax */
extern void T1213f88(GE_context* ac, T0* C, T1 a1);
/* UT_VERSION.is_less_equal */
extern T1 T79f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.ecf_1_4_0 */
extern T0* T1213f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T1213f87(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T1198f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.new_file_rules */
extern T0* T63f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_FILE_RULES.put_last */
extern void T1201f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].force_last */
extern void T1625f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].force */
extern void T1843f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].fill_with */
extern void T1844f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].extend */
extern void T1844f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].resize */
extern void T1625f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1843f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].aliased_resized_area */
extern T0* T1844f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_capacity */
extern T6 T1625f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].extendible */
extern T1 T1625f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_file_rules */
extern T0* T178f18(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.make */
extern T0* T1201c4(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].put_last */
extern void T1625f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1625c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].set_internal_cursor */
extern void T1625f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].new_cursor */
extern T0* T1625f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1845c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].make */
extern T0* T1843f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_FILE_RULE].make_empty */
extern T0* T1844c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_FILE_RULE].default_create */
extern T0* T1843c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_file_rule */
extern T0* T63f123(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f123ot1(T0* a1, T0** a2);
/* ET_ECF_FILE_RULE.set_description */
extern void T1221f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULE.set_conditions */
extern void T1221f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_file_rule */
extern T0* T178f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.make */
extern T0* T1221c11(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_FILE_RULE.compiled_regexp */
extern T0* T1221f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].forth */
extern void T407f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].put_last */
extern void T1636f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].force */
extern void T1867f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].fill_with */
extern void T1868f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].extend */
extern void T1868f7(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_compiled */
extern T1 T338f301(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].item */
extern T0* T407f6(GE_context* ac, T0* C);
/* ET_ECF_FILE_RULE.operating_system */
extern T0* T1221f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].start */
extern void T407f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1636c9(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].set_internal_cursor */
extern void T1636f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].new_cursor */
extern T0* T1636f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1869c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].make */
extern T0* T1867f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] RX_PCRE_REGULAR_EXPRESSION].make_empty */
extern T0* T1868c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] RX_PCRE_REGULAR_EXPRESSION].default_create */
extern T0* T1867c2(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resources */
extern T0* T63f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_RESOURCES.put_last */
extern void T1208f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].force_last */
extern void T1632f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].force */
extern void T1864f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].fill_with */
extern void T1865f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].extend */
extern void T1865f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].resize */
extern void T1632f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1864f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].aliased_resized_area */
extern T0* T1865f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_capacity */
extern T6 T1632f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].extendible */
extern T1 T1632f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_resources */
extern T0* T178f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCES.make */
extern T0* T1208c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].put_last */
extern void T1632f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1632c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].set_internal_cursor */
extern void T1632f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].new_cursor */
extern T0* T1632f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1866c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].make */
extern T0* T1864f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_RESOURCE].make_empty */
extern T0* T1865c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_RESOURCE].default_create */
extern T0* T1864c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_resource */
extern T0* T63f122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f122ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_RESOURCE.set_conditions */
extern void T1220f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.set_description */
extern void T1220f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_resource */
extern T0* T178f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_RESOURCE.make */
extern T0* T1220c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_objects */
extern T0* T63f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_OBJECTS.put_last */
extern void T1207f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].force_last */
extern void T1631f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].force */
extern void T1861f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].fill_with */
extern void T1862f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].extend */
extern void T1862f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].resize */
extern void T1631f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1861f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].aliased_resized_area */
extern T0* T1862f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_capacity */
extern T6 T1631f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].extendible */
extern T1 T1631f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_objects */
extern T0* T178f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECTS.make */
extern T0* T1207c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].put_last */
extern void T1631f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1631c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].set_internal_cursor */
extern void T1631f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].new_cursor */
extern T0* T1631f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1863c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].make */
extern T0* T1861f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_OBJECT].make_empty */
extern T0* T1862c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_OBJECT].default_create */
extern T0* T1861c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_object */
extern T0* T63f121(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f121ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_OBJECT.set_conditions */
extern void T1219f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.set_description */
extern void T1219f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_object */
extern T0* T178f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_OBJECT.make */
extern T0* T1219c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_makes */
extern T0* T63f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_MAKES.put_last */
extern void T1206f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].force_last */
extern void T1630f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].force */
extern void T1858f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].fill_with */
extern void T1859f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].extend */
extern void T1859f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].resize */
extern void T1630f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1858f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].aliased_resized_area */
extern T0* T1859f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_capacity */
extern T6 T1630f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].extendible */
extern T1 T1630f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_makes */
extern T0* T178f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKES.make */
extern T0* T1206c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].put_last */
extern void T1630f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1630c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].set_internal_cursor */
extern void T1630f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].new_cursor */
extern T0* T1630f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1860c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].make */
extern T0* T1858f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_MAKE].make_empty */
extern T0* T1859c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_MAKE].default_create */
extern T0* T1858c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_make */
extern T0* T63f120(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f120ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_MAKE.set_conditions */
extern void T1218f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.set_description */
extern void T1218f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_make */
extern T0* T178f31(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.make */
extern T0* T1218c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flags */
extern T0* T63f86(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.put_last */
extern void T1205f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force_last */
extern void T1629f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].force */
extern void T1855f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].fill_with */
extern void T1856f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extend */
extern void T1856f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].resize */
extern void T1629f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1855f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].aliased_resized_area */
extern T0* T1856f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_capacity */
extern T6 T1629f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].extendible */
extern T1 T1629f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flags */
extern T0* T178f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.make */
extern T0* T1205c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].put_last */
extern void T1629f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1629c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].set_internal_cursor */
extern void T1629f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].new_cursor */
extern T0* T1629f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1857c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make */
extern T0* T1855f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].make_empty */
extern T0* T1856c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].default_create */
extern T0* T1855c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_linker_flag */
extern T0* T63f119(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f119ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_conditions */
extern void T1217f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.set_description */
extern void T1217f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_linker_flag */
extern T0* T178f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAG.make */
extern T0* T1217c5(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_libraries */
extern T0* T63f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_LIBRARIES.put_last */
extern void T1204f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].force_last */
extern void T1628f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].force */
extern void T1852f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].fill_with */
extern void T1853f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].extend */
extern void T1853f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].resize */
extern void T1628f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1852f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].aliased_resized_area */
extern T0* T1853f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_capacity */
extern T6 T1628f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].extendible */
extern T1 T1628f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_libraries */
extern T0* T178f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARIES.make */
extern T0* T1204c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].put_last */
extern void T1628f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1628c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].set_internal_cursor */
extern void T1628f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].new_cursor */
extern T0* T1628f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1854c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].make */
extern T0* T1852f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_LIBRARY].make_empty */
extern T0* T1853c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_LIBRARY].default_create */
extern T0* T1852c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_library */
extern T0* T63f118(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f118ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_LIBRARY.set_conditions */
extern void T1216f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.set_description */
extern void T1216f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_library */
extern T0* T178f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_LIBRARY.make */
extern T0* T1216c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_includes */
extern T0* T63f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_INCLUDES.put_last */
extern void T1203f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].force_last */
extern void T1627f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].force */
extern void T1849f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].fill_with */
extern void T1850f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].extend */
extern void T1850f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].resize */
extern void T1627f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1849f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].aliased_resized_area */
extern T0* T1850f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_capacity */
extern T6 T1627f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].extendible */
extern T1 T1627f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_includes */
extern T0* T178f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDES.make */
extern T0* T1203c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].put_last */
extern void T1627f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1627c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].set_internal_cursor */
extern void T1627f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].new_cursor */
extern T0* T1627f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1851c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].make */
extern T0* T1849f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_INCLUDE].make_empty */
extern T0* T1850c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_INCLUDE].default_create */
extern T0* T1849c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_include */
extern T0* T63f117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f117ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_INCLUDE.set_conditions */
extern void T1215f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.set_description */
extern void T1215f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_include */
extern T0* T178f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_INCLUDE.make */
extern T0* T1215c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_external_cflags */
extern T0* T63f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_EXTERNAL_CFLAGS.put_last */
extern void T1202f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].force_last */
extern void T1626f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].force */
extern void T1846f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].fill_with */
extern void T1847f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].extend */
extern void T1847f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].resize */
extern void T1626f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1846f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].aliased_resized_area */
extern T0* T1847f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_capacity */
extern T6 T1626f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].extendible */
extern T1 T1626f6(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_external_cflags */
extern T0* T178f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAGS.make */
extern T0* T1202c3(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].put_last */
extern void T1626f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1626c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].set_internal_cursor */
extern void T1626f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].new_cursor */
extern T0* T1626f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1848c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].make */
extern T0* T1846f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_EXTERNAL_CFLAG].make_empty */
extern T0* T1847c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_EXTERNAL_CFLAG].default_create */
extern T0* T1846c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_external_cflag */
extern T0* T63f116(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f116ot1(T0* a1, T0** a2);
/* ET_ECF_EXTERNAL_CFLAG.set_conditions */
extern void T1214f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.set_description */
extern void T1214f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_external_cflag */
extern T0* T178f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_CFLAG.make */
extern T0* T1214c5(GE_context* ac, T0* a1);
/* ET_ECF_TARGET.set_description */
extern void T66f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_clusters */
extern T0* T63f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T63f115(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_cluster */
extern T0* T63f115ac1(GE_context* ac, T0* a1);
extern T1 T63f115ot1(T0* a1, T0** a2);
extern T1 T63f115ot2(T0* a1, T0** a2);
/* ET_ECF_CLUSTER.set_notes */
extern void T1213f84(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.add_capabilities */
extern void T63f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T63f223ot1(T0* a1, T0** a2);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assemblies */
extern T0* T63f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.put_last */
extern void T1200f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force_last */
extern void T1624f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].force */
extern void T1841f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].fill_with */
extern void T1840f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extend */
extern void T1840f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].resize */
extern void T1624f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1841f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1840f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1624f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].extendible */
extern T1 T1624f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assemblies */
extern T0* T178f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.make */
extern T0* T1200c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].put_last */
extern void T1624f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1624c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T1624f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].new_cursor */
extern T0* T1624f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1842c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make */
extern T0* T1841f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].make_empty */
extern T0* T1840c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].default_create */
extern T0* T1841c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T63f114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.new_adapted_dotnet_assembly */
extern T0* T63f114ac1(GE_context* ac, T0* a1);
extern T1 T63f114ot1(T0* a1, T0** a2);
extern T1 T63f114ot2(T0* a1, T0** a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_notes */
extern void T217f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_conditions */
extern void T217f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_renamings */
extern void T217f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_class_options */
extern void T217f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_options */
extern void T217f32(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_read_only */
extern void T217f31(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T217f30(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_version */
extern void T217f29(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_name */
extern void T217f28(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_key */
extern void T217f27(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_assembly_culture */
extern void T217f26(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.set_description */
extern void T217f25(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_adapted_dotnet_assembly */
extern T0* T178f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make */
extern T0* T217c24(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.make_adapted_dotnet_assembly */
extern void T217f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T217f20(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unknown_dotnet_assembly */
extern T0* T82f282(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make */
extern T0* T476c106(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.make_from_system */
extern void T476f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.set_default_class_mapping */
extern void T476f112(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_ref_class_mapping */
extern void T476f166(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_class_mapping */
extern void T476f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_class */
extern T0* T476f92(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_wide_character_class_mapping */
extern void T476f165(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_string_class_mapping */
extern void T476f164(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_ref_class_mapping */
extern void T476f163(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_real_class_mapping */
extern void T476f162(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_ref_class_mapping */
extern void T476f161(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_natural_class_mapping */
extern void T476f160(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_ref_class_mapping */
extern void T476f159(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_integer_class_mapping */
extern void T476f158(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_ref_class_mapping */
extern void T476f157(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_double_class_mapping */
extern void T476f156(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_ref_class_mapping */
extern void T476f155(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.set_character_class_mapping */
extern void T476f154(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.tokens */
extern T0* T476f90(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_kernel_types */
extern void T476f111(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_wide_character_type */
extern void T476f153(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_typed_pointer_type */
extern void T476f152(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_type_type */
extern void T476f151(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_string_type */
extern void T476f150(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_system_object_type */
extern void T476f149(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_type */
extern void T476f148(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_32_type */
extern void T476f147(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_string_8_type */
extern void T476f146(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_special_type */
extern void T476f145(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_routine_type */
extern void T476f144(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_64_type */
extern void T476f143(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_32_type */
extern void T476f142(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_real_type */
extern void T476f141(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_procedure_type */
extern void T476f140(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_predicate_type */
extern void T476f139(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_pointer_type */
extern void T476f138(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_64_type */
extern void T476f137(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_32_type */
extern void T476f136(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_16_type */
extern void T476f135(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_8_type */
extern void T476f134(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_natural_type */
extern void T476f133(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_iterable_type */
extern void T476f132(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_ise_exception_manager_type */
extern void T476f131(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_64_type */
extern void T476f130(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_32_type */
extern void T476f129(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_16_type */
extern void T476f128(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_8_type */
extern void T476f127(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_integer_type */
extern void T476f126(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_immutable_string_32_type */
extern void T476f125(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_function_type */
extern void T476f124(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_manager_type */
extern void T476f123(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_exception_type */
extern void T476f122(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_double_type */
extern void T476f121(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_32_type */
extern void T476f120(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_8_type */
extern void T476f119(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_character_type */
extern void T476f118(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_boolean_type */
extern void T476f117(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_array_type */
extern void T476f116(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_tuple_type */
extern void T476f115(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_none_type */
extern void T476f114(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_any_type */
extern void T476f113(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.make_adapted */
extern void T476f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.default_read_only_value */
extern T1 T476f91(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.set_unknown_kernel_types */
extern void T476f109(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.initialize */
extern void T476f108(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.class_name_tester */
extern T0* T476f99(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.tokens */
extern T0* T217f19(GE_context* ac, T0* C);
/* ET_ECF_TARGET.set_parent */
extern void T66f33(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.execution_environment */
extern T0* T66f28(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.set_secondary_variables */
extern void T68f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET_PARENT.make */
extern T0* T204c4(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_OPTIONS.set_secondary_options */
extern void T551f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.set_secondary_capabilities */
extern void T205f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SETTINGS.set_secondary_settings */
extern void T550f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_AST_FACTORY.new_target */
extern T0* T178f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_TARGET.make */
extern T0* T66c32(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_CAPABILITIES.make */
extern T0* T205c13(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.make */
extern T0* T205f13ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_hash_function */
extern void T1271f36(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.string_ */
extern T0* T205f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_key_equality_tester */
extern void T1271f35(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CAPABILITIES.case_insensitive_string_equality_tester */
extern T0* T205f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_map */
extern T0* T1271c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_with_equality_testers */
extern void T1271f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_sparse_container */
extern void T1271f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].set_internal_cursor */
extern void T1271f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].new_cursor */
extern T0* T1271f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_IDENTIFIER, [attached] STRING_8].make */
extern T0* T1657c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_slots */
extern void T1271f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_clashes */
extern void T1271f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_key_storage */
extern void T1271f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_IDENTIFIER, [attached] STRING_8].make_item_storage */
extern void T1271f52(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SETTINGS.make */
extern T0* T550c7(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_SETTINGS.make */
extern T0* T550f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_SETTINGS.string_ */
extern T0* T550f3(GE_context* ac, T0* C);
/* ET_ECF_SETTINGS.case_insensitive_string_equality_tester */
extern T0* T550f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.make */
extern T0* T68c8(GE_context* ac);
/* Creation of agent #1 in feature ET_ECF_VARIABLES.make */
extern T0* T68f8ac1(GE_context* ac, T0* a1);
/* ET_ECF_VARIABLES.string_ */
extern T0* T68f6(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.case_insensitive_string_equality_tester */
extern T0* T68f5(GE_context* ac, T0* C);
/* ET_ECF_VARIABLES.execution_environment */
extern T0* T68f4(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_notes */
extern T0* T63f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].force_last */
extern void T552f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].force */
extern void T1415f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].fill_with */
extern void T1416f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].extend */
extern void T1416f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].resize */
extern void T552f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1415f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].aliased_resized_area */
extern T0* T1416f3(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_capacity */
extern T6 T552f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].extendible */
extern T1 T552f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_AST_FACTORY.new_notes */
extern T0* T178f5(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern void T552f10(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T552c10(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].set_internal_cursor */
extern void T552f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].new_cursor */
extern T0* T552f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T1417c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].make */
extern T0* T1415f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_NOTE_ELEMENT].make_empty */
extern T0* T1416c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_NOTE_ELEMENT].default_create */
extern T0* T1415c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.new_note_element */
extern T0* T63f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T63f68ot1(T0* a1, T0** a2);
extern T1 T63f68ot2(T0* a1, T0** a2);
/* ET_ECF_NOTE_ELEMENT.set_content */
extern void T1197f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_element */
extern void T1197f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.add_attribute */
extern void T1197f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_note */
extern T0* T178f7(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_NOTE_ELEMENT.make */
extern T0* T1197c7(GE_context* ac, T0* a1);
/* Creation of agent #1 in feature ET_ECF_NOTE_ELEMENT.make */
extern T0* T1197f7ac1(GE_context* ac, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].make_default */
extern T0* T552c14(GE_context* ac);
/* detachable DS_ARRAYED_LIST [[attached] ET_ECF_NOTE_ELEMENT].default_capacity */
extern T6 T552f9(GE_context* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.string_ */
extern T0* T1197f6(GE_context* ac, T0* C);
/* ET_ECF_NOTE_ELEMENT.case_insensitive_string_equality_tester */
extern T0* T1197f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].make_map_default */
extern T0* T55c104(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].default_capacity */
extern T6 T55f51(GE_context* ac, T0* C);
/* XM_ELEMENT.text */
extern T0* T157f20(GE_context* ac, T0* C);
extern T1 T157f20ot1(T0* a1, T0** a2);
/* XM_ELEMENT.string_ */
extern T0* T157f21(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.string_ */
extern T0* T63f17(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].item */
extern T0* T459f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].start */
extern void T459f11(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_start */
extern void T1257f14(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_off */
extern T1 T1257f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].off */
extern T1 T459f9(GE_context* ac, T0* C);
/* XM_ELEMENT.new_cursor */
extern T0* T157f9(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].new_cursor */
extern T0* T1257f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].make */
extern T0* T459c10(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options */
extern T0* T63f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_0_0 */
extern T0* T63f67(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_0_0 */
extern void T63f222(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_5_0 */
extern void T63f221(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_9_0 */
extern void T63f220(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_11_0 */
extern void T63f219(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_15_0 */
extern void T63f218(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_1_18_0 */
extern void T63f217(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_options_latest */
extern void T63f235(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_options_1_5_0 */
extern T0* T63f66(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_9_0 */
extern T0* T63f64(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_9_0 */
extern T0* T63f63(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_11_0 */
extern T0* T63f62(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_15_0 */
extern T0* T63f61(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_15_0 */
extern T0* T63f60(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_options_1_18_0 */
extern T0* T63f59(GE_context* ac, T0* C);
/* UT_VERSION.is_greater_equal */
extern T1 T79f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_1_18_0 */
extern T0* T63f58(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities */
extern T0* T63f38(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_0_0 */
extern T0* T63f57(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_0_0 */
extern void T63f216(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_11_0 */
extern void T63f215(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_13_0 */
extern void T63f214(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_1_16_0 */
extern void T63f213(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_capabilities_latest */
extern void T63f234(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_11_0 */
extern T0* T63f56(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_13_0 */
extern T0* T63f54(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_13_0 */
extern T0* T63f53(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_capabilities_1_16_0 */
extern T0* T63f52(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_1_16_0 */
extern T0* T63f51(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.default_settings */
extern T0* T63f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.default_settings_1_0_0 */
extern T0* T63f50(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_1_0_0 */
extern void T63f212(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_default_settings_latest */
extern void T63f233(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.ecf_latest */
extern T0* T63f36(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.ecf_version */
extern T0* T63f35(GE_context* ac, T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.matches */
extern T1 T338f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eate_error */
extern void T64f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eate */
extern T0* T218c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.attribute_name */
extern T0* T63f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found_item */
extern T0* T185f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].found */
extern T1 T185f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search */
extern void T185f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].search_position */
extern void T185f56(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eatm_error */
extern void T64f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eatm */
extern T0* T218c100(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.element_name */
extern T0* T63f21(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_AST_FACTORY.new_library */
extern T0* T178f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make */
extern T0* T191c121(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.make_library */
extern void T191f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.make_from_system */
extern void T191f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_default_class_mapping */
extern void T191f136(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_ref_class_mapping */
extern void T191f190(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_class_mapping */
extern void T191f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.set_wide_character_class_mapping */
extern void T191f189(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_string_class_mapping */
extern void T191f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_ref_class_mapping */
extern void T191f187(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_real_class_mapping */
extern void T191f186(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_ref_class_mapping */
extern void T191f185(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_natural_class_mapping */
extern void T191f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_ref_class_mapping */
extern void T191f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_integer_class_mapping */
extern void T191f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_ref_class_mapping */
extern void T191f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_double_class_mapping */
extern void T191f180(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_ref_class_mapping */
extern void T191f179(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_character_class_mapping */
extern void T191f178(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.tokens */
extern T0* T191f102(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_kernel_types */
extern void T191f135(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_wide_character_type */
extern void T191f177(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_typed_pointer_type */
extern void T191f176(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_type_type */
extern void T191f175(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_string_type */
extern void T191f174(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_system_object_type */
extern void T191f173(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_type */
extern void T191f172(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_32_type */
extern void T191f171(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_string_8_type */
extern void T191f170(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_special_type */
extern void T191f169(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_routine_type */
extern void T191f168(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_64_type */
extern void T191f167(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_32_type */
extern void T191f166(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_real_type */
extern void T191f165(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_procedure_type */
extern void T191f164(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_predicate_type */
extern void T191f163(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_pointer_type */
extern void T191f162(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_64_type */
extern void T191f161(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_32_type */
extern void T191f160(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_16_type */
extern void T191f159(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_8_type */
extern void T191f158(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_natural_type */
extern void T191f157(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_iterable_type */
extern void T191f156(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_ise_exception_manager_type */
extern void T191f155(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_64_type */
extern void T191f154(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_32_type */
extern void T191f153(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_16_type */
extern void T191f152(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_8_type */
extern void T191f151(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_integer_type */
extern void T191f150(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_immutable_string_32_type */
extern void T191f149(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_function_type */
extern void T191f148(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_manager_type */
extern void T191f147(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_exception_type */
extern void T191f146(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_double_type */
extern void T191f145(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_32_type */
extern void T191f144(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_8_type */
extern void T191f143(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_character_type */
extern void T191f142(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_boolean_type */
extern void T191f141(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_array_type */
extern void T191f140(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_tuple_type */
extern void T191f139(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_none_type */
extern void T191f138(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_any_type */
extern void T191f137(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.make_adapted */
extern void T191f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.default_read_only_value */
extern T1 T191f104(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.set_unknown_kernel_types */
extern void T191f133(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T191f132(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.initialize */
extern void T191f132p1(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.class_name_tester */
extern T0* T191f103(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_by_name */
extern T0* T157f6(GE_context* ac, T0* C, T0* a1);
extern T1 T157f6ot1(T0* a1, T0** a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].go_after */
extern void T459f14(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_go_after */
extern void T1257f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_after */
extern void T459f16(GE_context* ac, T0* C);
/* XM_ELEMENT.attribute_same_name */
extern T1 T157f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T157f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T157f15(GE_context* ac, T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T58c3(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].forth */
extern void T209f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_forth */
extern void T208f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].add_traversing_cursor */
extern void T208f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_next_cursor */
extern void T209f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_position */
extern void T209f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].remove_traversing_cursor */
extern void T208f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_after */
extern void T209f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_item */
extern T6 T208f29(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_eadp_error */
extern void T64f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_eadp */
extern T0* T218c99(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1231f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ANDED_CONDITIONS.is_capability_supported */
extern T1 T1231f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CONDITION_ITEM].item */
extern T0* T1646f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1230f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ANDED_CONDITIONS].item */
extern T0* T1645f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ORED_CONDITIONS.is_capability_supported */
extern T1 T1230f3p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CAPABILITIES.is_capability_supported */
extern T1 T205f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_item */
extern T6 T1562f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_item */
extern T6 T1562f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found */
extern T1 T1562f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search */
extern void T1562f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].search_position */
extern void T1562f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].hash_position */
extern T6 T1562f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_item */
extern T0* T1562f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_item */
extern T6 T1562f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_item */
extern T6 T1562f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found_item */
extern T0* T1759f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_item */
extern T0* T1759f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].found */
extern T1 T1759f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search */
extern void T1759f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].search_position */
extern void T1759f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].hash_position */
extern T6 T1759f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_item */
extern T0* T1759f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_item */
extern T6 T1759f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_item */
extern T6 T1759f23(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CAPABILITIES.capability_order */
extern T0* T205f12(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CAPABILITIES.capability_order */
extern T0* T205f12ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].put_last */
extern void T1759f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_put */
extern void T1759f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_put */
extern void T1759f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_put */
extern void T1759f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].compress */
extern void T1759f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].slots_wipe_out */
extern void T1759f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].clashes_wipe_out */
extern void T1759f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].key_storage_keep_head */
extern void T1759f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_keep_head */
extern void T1759f47(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].keep_head */
extern void T1924f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].set_count */
extern void T1924f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].move_all_cursors */
extern void T1759f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_position */
extern void T1928f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].item_storage_put */
extern void T1759f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].force */
extern void T1927f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].fill_with */
extern void T1924f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].extend */
extern void T1924f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].unset_found_item */
extern void T1759f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].put_last */
extern void T1562f41(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_put */
extern void T1562f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_put */
extern void T1562f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_put */
extern void T1562f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].compress */
extern void T1562f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_wipe_out */
extern void T1562f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_wipe_out */
extern void T1562f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_keep_head */
extern void T1562f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_keep_head */
extern void T1562f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].move_all_cursors */
extern void T1562f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].set_position */
extern void T1828f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_put */
extern void T1562f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].unset_found_item */
extern void T1562f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_hash_function */
extern void T1562f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_key_equality_tester */
extern void T1562f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_map */
extern T0* T1562c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_with_equality_testers */
extern void T1562f43(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_sparse_container */
extern void T1562f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].set_internal_cursor */
extern void T1562f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_cursor */
extern T0* T1562f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] STRING_8].make */
extern T0* T1828c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_slots */
extern void T1562f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_modulus */
extern T6 T1562f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_clashes */
extern void T1562f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_key_storage */
extern void T1562f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].make_item_storage */
extern void T1562f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_hash_function */
extern void T1759f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_key_equality_tester */
extern void T1759f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_map */
extern T0* T1759c32(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_with_equality_testers */
extern void T1759f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_sparse_container */
extern void T1759f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].set_internal_cursor */
extern void T1759f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_cursor */
extern T0* T1759f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make */
extern T0* T1928c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_slots */
extern void T1759f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].new_modulus */
extern T6 T1759f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_clashes */
extern void T1759f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_key_storage */
extern void T1759f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8], [attached] STRING_8].make_item_storage */
extern void T1759f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make */
extern T0* T1927f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].make_empty */
extern T0* T1924c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8]].default_create */
extern T0* T1927c2(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key */
extern T0* T209f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_key */
extern T0* T208f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_item */
extern T0* T208f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].after */
extern T1 T209f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_iterator */
extern T0* T208f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].start */
extern void T209f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_start */
extern void T208f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].cursor_off */
extern T1 T208f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].off */
extern T1 T209f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].is_empty */
extern T1 T208f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_cursor */
extern T0* T208f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make */
extern T0* T209c9(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T63f26(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.valid_capabilities_latest */
extern T0* T63f26ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.void_safety_detection_capability_value_regexp */
extern T0* T63f33(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.concurrency_capability_value_regexp */
extern T0* T63f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].force_last */
extern void T208f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_put */
extern void T208f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_put */
extern void T208f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_put */
extern void T208f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_item */
extern T6 T208f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].hash_position */
extern T6 T208f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].resize */
extern void T208f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].clashes_resize */
extern void T208f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].special_integer_ */
extern T0* T208f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].key_storage_resize */
extern void T208f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_resize */
extern void T208f52(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T666f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].aliased_resized_area */
extern T0* T667f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].slots_resize */
extern void T208f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_modulus */
extern T6 T208f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].new_capacity */
extern T6 T208f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_put */
extern void T208f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].force */
extern void T666f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].fill_with */
extern void T667f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].extend */
extern void T667f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].search_position */
extern void T208f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].unset_found_item */
extern void T208f43(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.catcall_detection_capability_value_regexp */
extern T0* T63f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_hash_function */
extern void T208f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_key_equality_tester */
extern void T208f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T63f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_map */
extern T0* T208c38(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_with_equality_testers */
extern void T208f42(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_sparse_container */
extern void T208f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].set_internal_cursor */
extern void T208f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_slots */
extern void T208f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_clashes */
extern void T208f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_key_storage */
extern void T208f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].make_item_storage */
extern void T208f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].make */
extern T0* T666f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable RX_REGULAR_EXPRESSION].make_empty */
extern T0* T667c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable RX_REGULAR_EXPRESSION].default_create */
extern T0* T666c3(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_eabw_error */
extern void T64f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabw */
extern T0* T218c98(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.set_library */
extern void T211f34(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_eabv_error */
extern void T64f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eabv */
extern T0* T218c97(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ADAPTED_LIBRARY.pathname */
extern T0* T211f20(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.library */
extern T0* T192f4(GE_context* ac, T0* C, T6 a1);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T192f3(GE_context* ac, T0* C);
/* [attached] DS_CELL [detachable ET_ECF_LIBRARY].make */
extern T0* T210c2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.select_target */
extern void T63f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM_PARSER.select_target */
extern T0* T63f206ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_PARSER.build_system_config */
extern void T63f209(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].put */
extern void T206f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.new_system_config */
extern T0* T63f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_AST_FACTORY.new_system_config */
extern T0* T178f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM_CONFIG.make */
extern T0* T200c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_TARGET.fill_universe */
extern void T66f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T66f54ot1(T0* a1);
/* ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern void T1205f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LINKER_FLAGS.fill_external_linker_flags */
extern T0* T1205f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LINKER_FLAG]].set_rout_disp_final */
extern void T1809f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LINKER_FLAG.fill_external_linker_flags */
extern void T1217f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.add_external_value */
extern void T1217f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LINKER_FLAG.is_enabled */
extern T1 T1217f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ANDED_CONDITIONS.is_enabled */
extern T1 T1231f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ORED_CONDITIONS.is_enabled */
extern T1 T1230f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].do_all */
extern void T1629f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LINKER_FLAG].item */
extern T0* T1629f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern void T1202f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_CFLAGS.fill_external_cflags */
extern T0* T1202f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_CFLAG]].set_rout_disp_final */
extern void T1802f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_CFLAG.fill_external_cflags */
extern void T1214f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.add_external_value */
extern void T1214f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_CFLAG.is_enabled */
extern T1 T1214f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].do_all */
extern void T1626f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_CFLAG].item */
extern T0* T1626f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern void T1206f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_MAKES.fill_external_makes */
extern T0* T1206f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_MAKE]].set_rout_disp_final */
extern void T1811f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_MAKE.fill_external_makes */
extern void T1218f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.add_external_value */
extern void T1218f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_MAKE.file_system */
extern T0* T1218f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.unix_file_system */
extern T0* T1218f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.windows_file_system */
extern T0* T1218f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_MAKE.operating_system */
extern T0* T1218f6(GE_context* ac, T0* C);
/* UC_UTF8_STRING.starts_with */
extern T1 T1265f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_EXTERNAL_MAKE.is_enabled */
extern T1 T1218f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].do_all */
extern void T1630f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_MAKE].item */
extern T0* T1630f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern void T1208f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_RESOURCES.fill_external_resources */
extern T0* T1208f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_RESOURCE]].set_rout_disp_final */
extern void T1815f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_RESOURCE.fill_external_resources */
extern void T1220f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.add_external_value */
extern void T1220f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_RESOURCE.file_system */
extern T0* T1220f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.unix_file_system */
extern T0* T1220f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.windows_file_system */
extern T0* T1220f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.operating_system */
extern T0* T1220f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_RESOURCE.is_enabled */
extern T1 T1220f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].do_all */
extern void T1632f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_RESOURCE].item */
extern T0* T1632f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern void T1204f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_LIBRARIES.fill_external_libraries */
extern T0* T1204f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_LIBRARY]].set_rout_disp_final */
extern void T1807f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_LIBRARY.fill_external_libraries */
extern void T1216f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.add_external_value */
extern void T1216f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_LIBRARY.file_system */
extern T0* T1216f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.unix_file_system */
extern T0* T1216f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.windows_file_system */
extern T0* T1216f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.operating_system */
extern T0* T1216f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_LIBRARY.is_enabled */
extern T1 T1216f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].do_all */
extern void T1628f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_LIBRARY].item */
extern T0* T1628f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern void T1207f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_OBJECTS.fill_external_objects */
extern T0* T1207f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_OBJECT]].set_rout_disp_final */
extern void T1813f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_OBJECT.fill_external_objects */
extern void T1219f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.add_external_value */
extern void T1219f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_OBJECT.file_system */
extern T0* T1219f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.unix_file_system */
extern T0* T1219f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.windows_file_system */
extern T0* T1219f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.operating_system */
extern T0* T1219f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_OBJECT.is_enabled */
extern T1 T1219f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].do_all */
extern void T1631f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_OBJECT].item */
extern T0* T1631f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern void T1203f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_EXTERNAL_INCLUDES.fill_external_includes */
extern T0* T1203f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_EXTERNAL_INCLUDE]].set_rout_disp_final */
extern void T1805f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_EXTERNAL_INCLUDE.fill_external_includes */
extern void T1215f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.add_external_value */
extern void T1215f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_EXTERNAL_INCLUDE.file_system */
extern T0* T1215f5(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.unix_file_system */
extern T0* T1215f8(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.windows_file_system */
extern T0* T1215f7(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.operating_system */
extern T0* T1215f6(GE_context* ac, T0* C);
/* ET_ECF_EXTERNAL_INCLUDE.is_enabled */
extern T1 T1215f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].do_all */
extern void T1627f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_EXTERNAL_INCLUDE].item */
extern T0* T1627f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dotnet */
extern void T65f270(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.is_enabled */
extern T1 T217f21(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T1200f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_DOTNET_ASSEMBLY].item */
extern T0* T1624f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLIES.count */
extern T6 T1200f3(GE_context* ac, T0* C);
/* ET_ADAPTED_LIBRARIES.put_last */
extern void T192f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].force_last */
extern void T653f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].force */
extern void T1449f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].fill_with */
extern void T1448f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].extend */
extern void T1448f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].resize */
extern void T653f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1449f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_LIBRARY].aliased_resized_area */
extern T0* T1448f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].new_capacity */
extern T6 T653f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_LIBRARY].extendible */
extern T1 T653f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARY.is_enabled */
extern T1 T211f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_LIBRARIES.library */
extern T0* T1199f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_ADAPTED_LIBRARY].item */
extern T0* T1623f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ADAPTED_LIBRARIES.count */
extern T6 T1199f3(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.fill_file_rules */
extern void T1213f93(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_CLUSTER.fill_file_rules */
extern T0* T1213f93ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_CLUSTER]].set_rout_disp_final */
extern void T1970f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_CLUSTERS.do_all */
extern void T1198f11(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.fill_file_rules */
extern void T1201f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1201f7ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULES.fill_file_rules */
extern T0* T1201f7ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2031f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_FILE_RULE.is_enabled */
extern T1 T1221f9(GE_context* ac, T0* C, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ECF_FILE_RULE]].set_rout_disp_final */
extern void T2029f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].do_if */
extern void T1625f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].item */
extern T0* T1625f9(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGET.fill_file_rules */
extern void T66f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_FILE_RULES.make_empty */
extern T0* T1201c6(GE_context* ac);
/* ET_ECF_CLUSTER.fill_subclusters */
extern void T1213f92(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.add_subcluster */
extern void T1213f99(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_subclusters */
extern void T1213f100(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.make_empty */
extern T0* T1198c8(GE_context* ac);
/* ET_CLUSTERS.put_last */
extern void T652f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].force_last */
extern void T1447f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].force */
extern void T1696f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLUSTER].fill_with */
extern void T1695f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLUSTER].extend */
extern void T1695f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].resize */
extern void T1447f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T1696f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLUSTER].aliased_resized_area */
extern T0* T1695f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].new_capacity */
extern T6 T1447f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].extendible */
extern T1 T1447f8(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTER.is_enabled */
extern T1 T1213f41(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.cluster */
extern T0* T1198f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CLUSTERS.count */
extern T6 T1198f3(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_epcd_error */
extern void T64f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR.make_epcd */
extern T0* T218c96(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ECF_ERROR_HANDLER.report_epcl_error */
extern void T64f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR.make_epcl */
extern T0* T218c95(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ECF_ERROR_HANDLER.report_epcr_error */
extern void T64f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR.make_epcr */
extern T0* T218c94(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ECF_ERROR_HANDLER.report_eadq_error */
extern void T64f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadq */
extern T0* T218c93(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T203f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_before */
extern T1 T203f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].before */
extern T1 T660f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].back */
extern void T203f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_back */
extern void T203f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].add_traversing_cursor */
extern void T203f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_next_cursor */
extern void T660f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_position */
extern void T660f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].remove_traversing_cursor */
extern void T203f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_before */
extern void T660f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_item */
extern T6 T203f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].finish */
extern void T203f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_finish */
extern void T203f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_off */
extern T1 T203f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].off */
extern T1 T660f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].is_empty */
extern T1 T203f36(GE_context* ac, T0* C);
/* ET_ECF_TARGET_PARENT.set_target */
extern void T204f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ERROR_HANDLER.report_epcy_error */
extern void T64f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epcy */
extern T0* T218c92(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].put_last */
extern void T142f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_for_iteration */
extern T0* T203f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_item */
extern T0* T203f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_item */
extern T0* T203f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].forth */
extern void T203f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_forth */
extern void T203f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].set_after */
extern void T660f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_for_iteration */
extern T0* T203f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_key */
extern T0* T203f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_item */
extern T0* T203f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T203f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_after */
extern T1 T203f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].after */
extern T1 T660f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].start */
extern void T203f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].cursor_start */
extern void T203f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].has */
extern T1 T203f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].search_position */
extern void T203f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].hash_position */
extern T6 T203f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_item */
extern T6 T203f24(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_ERROR_HANDLER.report_internal_error */
extern void T64f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_internal */
extern T0* T218c91(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epud_error */
extern void T64f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epud */
extern T0* T218c90(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_epul_error */
extern void T64f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_epul */
extern T0* T218c89(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_epur_error */
extern void T64f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epur */
extern T0* T218c88(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_epfe_error */
extern void T64f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_epfe */
extern T0* T218c87(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found_item */
extern T0* T202f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_item */
extern T0* T202f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].found */
extern T1 T202f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search */
extern void T202f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].search_position */
extern void T202f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].hash_position */
extern T6 T202f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_item */
extern T0* T202f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_item */
extern T6 T202f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_item */
extern T6 T202f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM_CONFIG].make */
extern T0* T206c2(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].force_last */
extern void T203f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_put */
extern void T203f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_put */
extern void T203f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_put */
extern void T203f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].resize */
extern void T203f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].clashes_resize */
extern void T203f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].special_integer_ */
extern T0* T203f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].key_storage_resize */
extern void T203f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_resize */
extern void T203f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].slots_resize */
extern void T203f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_modulus */
extern T6 T203f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_capacity */
extern T6 T203f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].item_storage_put */
extern void T203f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].unset_found_item */
extern void T203f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_default */
extern T0* T203c43(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern void T203f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_with_equality_testers */
extern void T203f61(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_sparse_container */
extern void T203f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].set_internal_cursor */
extern void T203f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].new_cursor */
extern T0* T203f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_TARGET, [attached] STRING_8].make */
extern T0* T660c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_slots */
extern void T203f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_clashes */
extern void T203f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_key_storage */
extern void T203f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].make_item_storage */
extern void T203f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_TARGET, [attached] STRING_8].default_capacity */
extern T6 T203f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].force_last */
extern void T202f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_put */
extern void T202f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_put */
extern void T202f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_put */
extern void T202f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].resize */
extern void T202f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].clashes_resize */
extern void T202f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].special_integer_ */
extern T0* T202f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].key_storage_resize */
extern void T202f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_resize */
extern void T202f47(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T658f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].aliased_resized_area */
extern T0* T656f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].slots_resize */
extern void T202f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_modulus */
extern T6 T202f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_capacity */
extern T6 T202f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].item_storage_put */
extern void T202f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].force */
extern void T658f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].fill_with */
extern void T656f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].extend */
extern void T656f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].unset_found_item */
extern void T202f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_default */
extern T0* T202c34(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern void T202f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_with_equality_testers */
extern void T202f45(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_sparse_container */
extern void T202f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].set_internal_cursor */
extern void T202f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].new_cursor */
extern T0* T202f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make */
extern T0* T659c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_slots */
extern void T202f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_clashes */
extern void T202f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_key_storage */
extern void T202f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].make_item_storage */
extern void T202f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].make */
extern T0* T658f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_SYSTEM_CONFIG].make_empty */
extern T0* T656c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_SYSTEM_CONFIG].default_create */
extern T0* T658c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_SYSTEM_CONFIG, [attached] STRING_8].default_capacity */
extern T6 T202f27(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.select_target */
extern void T191f192(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.select_target */
extern void T65f159(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_TARGET.update_state */
extern void T66f56(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_STATE.set_dotnet */
extern void T188f11(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_scoop */
extern void T188f10(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_multithreaded */
extern void T188f9(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.set_finalize_mode */
extern void T188f8(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_STATE.make */
extern T0* T188c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_TARGETS.target */
extern T0* T189f4(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_TARGETS.count */
extern T6 T189f3(GE_context* ac, T0* C);
/* ET_ECF_TARGETS.is_empty */
extern T1 T189f5(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.new_system */
extern T0* T63f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_AST_FACTORY.new_system */
extern T0* T178f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make */
extern T0* T65c158(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.make_system */
extern void T65f171(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_default_class_mapping */
extern void T65f186(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_ref_class_mapping */
extern void T65f248(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_class_mapping */
extern void T65f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.set_wide_character_class_mapping */
extern void T65f247(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_string_class_mapping */
extern void T65f246(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_ref_class_mapping */
extern void T65f245(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_real_class_mapping */
extern void T65f244(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_ref_class_mapping */
extern void T65f243(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_natural_class_mapping */
extern void T65f242(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_ref_class_mapping */
extern void T65f241(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_integer_class_mapping */
extern void T65f240(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_ref_class_mapping */
extern void T65f239(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_double_class_mapping */
extern void T65f238(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_ref_class_mapping */
extern void T65f237(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_character_class_mapping */
extern void T65f236(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.tokens */
extern T0* T65f135(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_kernel_types */
extern void T65f185(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_wide_character_type */
extern void T65f235(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_typed_pointer_type */
extern void T65f234(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_type_type */
extern void T65f233(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_string_type */
extern void T65f232(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_object_type */
extern void T65f231(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_type */
extern void T65f230(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_32_type */
extern void T65f229(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_string_8_type */
extern void T65f228(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_special_type */
extern void T65f227(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_routine_type */
extern void T65f226(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_64_type */
extern void T65f225(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_32_type */
extern void T65f224(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_real_type */
extern void T65f223(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_procedure_type */
extern void T65f222(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_predicate_type */
extern void T65f221(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_pointer_type */
extern void T65f220(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_64_type */
extern void T65f219(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_32_type */
extern void T65f218(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_16_type */
extern void T65f217(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_8_type */
extern void T65f216(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_natural_type */
extern void T65f215(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_iterable_type */
extern void T65f214(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_ise_exception_manager_type */
extern void T65f213(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_64_type */
extern void T65f212(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_32_type */
extern void T65f211(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_16_type */
extern void T65f210(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_8_type */
extern void T65f209(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_integer_type */
extern void T65f208(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_immutable_string_32_type */
extern void T65f207(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_function_type */
extern void T65f206(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_manager_type */
extern void T65f205(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_exception_type */
extern void T65f204(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_double_type */
extern void T65f203(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_32_type */
extern void T65f202(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_8_type */
extern void T65f201(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_character_type */
extern void T65f200(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_boolean_type */
extern void T65f199(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_array_type */
extern void T65f198(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_tuple_type */
extern void T65f197(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_none_type */
extern void T65f196(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_any_type */
extern void T65f195(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.make_adapted */
extern void T65f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.default_read_only_value */
extern T1 T65f146(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_unknown_kernel_types */
extern void T65f183(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.set_system_name */
extern void T65f182(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.initialize */
extern void T65f181(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.initialize */
extern void T65f181p1(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.class_name_tester */
extern T0* T65f148(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM_PARSER.parse_file_with_action */
extern void T63f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T167f128(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.position */
extern T0* T167f120(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].first */
extern T0* T602f6(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T167f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T167f122(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].remove */
extern void T603f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].item */
extern T0* T603f4(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].is_empty */
extern T1 T603f3(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].force_last */
extern void T602f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].put_right */
extern void T1431f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].attach_left */
extern void T1431f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_POSITION].make */
extern T0* T1431c4(GE_context* ac, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].make */
extern T0* T602c7(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].set_internal_cursor */
extern void T602f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_POSITION].new_cursor */
extern T0* T602f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_POSITION].make */
extern T0* T1432c3(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].copy */
extern void T603f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].put_right */
extern void T1433f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T1433c3(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].make */
extern T0* T603c5(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.report_syntax_error */
extern void T64f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_syntax */
extern T0* T218c86(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T160f8(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T196c11(GE_context* ac, T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T196f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_ECF_ERROR_HANDLER.report_eabx_error */
extern void T64f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eabx */
extern T0* T218c85(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadf_error */
extern void T64f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadf */
extern T0* T218c84(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR_HANDLER.report_eadi_error */
extern void T64f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_ERROR.make_eadi */
extern T0* T218c83(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove */
extern void T78f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].remove_position */
extern void T78f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_put */
extern void T78f77(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] STRING_8].key_storage_keep_head */
extern void T78f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].item_storage_keep_head */
extern void T78f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_cursors_forth */
extern void T78f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].internal_set_key_equality_tester */
extern void T78f73(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_PARSER.string_equality_tester */
extern T0* T63f11(GE_context* ac, T0* C);
/* ET_ECF_ERROR_HANDLER.report_eadh_error */
extern void T64f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadh */
extern T0* T218c82(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_ERROR_HANDLER.report_eadg_error */
extern void T64f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_ERROR.make_eadg */
extern T0* T218c81(GE_context* ac, T0* a1, T0* a2);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T160f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T167f140(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T167f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T167f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T167f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T167f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T167f228(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T167f227(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T167f226(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T167f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T608f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T616f5(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T615f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].aliased_resized_area */
extern T0* T617f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T616f4(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T167f174(GE_context* ac, T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T616c3(GE_context* ac);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T167f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].force_new */
extern void T604f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_put */
extern void T604f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_put */
extern void T604f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].force */
extern void T1438f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].fill_with */
extern void T1434f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].extend */
extern void T1434f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_put */
extern void T604f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_put */
extern void T604f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_item */
extern T6 T604f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].hash_position */
extern T6 T604f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_item */
extern T6 T604f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].resize */
extern void T604f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_resize */
extern void T604f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].special_integer_ */
extern T0* T604f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_resize */
extern void T604f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_resize */
extern void T604f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1438f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].aliased_resized_area */
extern T0* T1434f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_item */
extern T0* T604f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_resize */
extern void T604f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_modulus */
extern T6 T604f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_capacity */
extern T6 T604f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].unset_found_item */
extern void T604f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].has */
extern T1 T604f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].search_position */
extern void T604f40(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T639c210(GE_context* ac, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T639f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T606c3(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T639f213(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T639f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T639f218(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T639f215p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T639f215p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T639f215p2(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T639f215p3(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T639f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T639f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T639f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T639f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T639f216p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T639f219(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern T0* T639f54(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T639f57(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_5 */
extern void T639f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T639f292(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T639f59(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_4 */
extern void T639f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_3 */
extern void T639f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_2 */
extern void T639f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template_1 */
extern void T639f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern T0* T639f52(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern T0* T639f93(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_2 */
extern void T639f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template_1 */
extern void T639f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern T0* T639f71(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_5 */
extern void T639f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_4 */
extern void T639f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_3 */
extern void T639f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_2 */
extern void T639f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template_1 */
extern void T639f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern T0* T639f61(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_5 */
extern void T639f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_4 */
extern void T639f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_3 */
extern void T639f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_2 */
extern void T639f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template_1 */
extern void T639f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern T0* T639f55(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_27 */
extern void T639f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_26 */
extern void T639f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_25 */
extern void T639f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_24 */
extern void T639f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_23 */
extern void T639f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_22 */
extern void T639f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_21 */
extern void T639f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_20 */
extern void T639f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_19 */
extern void T639f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_18 */
extern void T639f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_17 */
extern void T639f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_16 */
extern void T639f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_15 */
extern void T639f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_14 */
extern void T639f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_13 */
extern void T639f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_12 */
extern void T639f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_11 */
extern void T639f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_10 */
extern void T639f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_9 */
extern void T639f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_8 */
extern void T639f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_7 */
extern void T639f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T639f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T639f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T639f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T639f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T639f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T639f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern T0* T639f51(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_27 */
extern void T639f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_26 */
extern void T639f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_25 */
extern void T639f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_24 */
extern void T639f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_23 */
extern void T639f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_22 */
extern void T639f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_21 */
extern void T639f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_20 */
extern void T639f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_19 */
extern void T639f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_18 */
extern void T639f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_17 */
extern void T639f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_16 */
extern void T639f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_15 */
extern void T639f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_14 */
extern void T639f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_13 */
extern void T639f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_12 */
extern void T639f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_11 */
extern void T639f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_10 */
extern void T639f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_9 */
extern void T639f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_8 */
extern void T639f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_7 */
extern void T639f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T639f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T639f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T639f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T639f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T639f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T639f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T639f56(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T639f53(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1430c8(GE_context* ac);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T639f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T167f173(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T636c209(GE_context* ac, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T636f210(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T636f212(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T636f212p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T636f212p0(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T636f212p2(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T636f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T636f214(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T636f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T636f213(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T636f213p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T636f215(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T636f52(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T636f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_5 */
extern void T636f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T636f288(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T636f57(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_4 */
extern void T636f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_3 */
extern void T636f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_2 */
extern void T636f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template_1 */
extern void T636f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T636f50(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T636f90(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_2 */
extern void T636f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template_1 */
extern void T636f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T636f69(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_5 */
extern void T636f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_4 */
extern void T636f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_3 */
extern void T636f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_2 */
extern void T636f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template_1 */
extern void T636f222(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T636f59(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_5 */
extern void T636f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_4 */
extern void T636f220(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_3 */
extern void T636f219(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_2 */
extern void T636f218(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template_1 */
extern void T636f217(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T636f53(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_27 */
extern void T636f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_26 */
extern void T636f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_25 */
extern void T636f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_24 */
extern void T636f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_23 */
extern void T636f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_22 */
extern void T636f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_21 */
extern void T636f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_20 */
extern void T636f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_19 */
extern void T636f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_18 */
extern void T636f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_17 */
extern void T636f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_16 */
extern void T636f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_15 */
extern void T636f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_14 */
extern void T636f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_13 */
extern void T636f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_12 */
extern void T636f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_11 */
extern void T636f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_10 */
extern void T636f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_9 */
extern void T636f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_8 */
extern void T636f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_7 */
extern void T636f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T636f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T636f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T636f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T636f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T636f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T636f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T636f49(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_27 */
extern void T636f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_26 */
extern void T636f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_25 */
extern void T636f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_24 */
extern void T636f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_23 */
extern void T636f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_22 */
extern void T636f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_21 */
extern void T636f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_20 */
extern void T636f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_19 */
extern void T636f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_18 */
extern void T636f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_17 */
extern void T636f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_16 */
extern void T636f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_15 */
extern void T636f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_14 */
extern void T636f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_13 */
extern void T636f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_12 */
extern void T636f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_11 */
extern void T636f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_10 */
extern void T636f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_9 */
extern void T636f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_8 */
extern void T636f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_7 */
extern void T636f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T636f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T636f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T636f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T636f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T636f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T636f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T636f70(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T636f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T167f254(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T608f7(GE_context* ac, T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T167f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T167f172(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T636c208(GE_context* ac, T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T625f26(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T625f25(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T625f24(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T625f23(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T627f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].aliased_resized_area */
extern T0* T629f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].force_last */
extern void T628f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].put_right */
extern void T1446f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].attach_left */
extern void T1446f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] STRING_8].make */
extern T0* T1446c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T167f169(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T628f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T167f184(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].make */
extern T0* T628c10(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T628f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T628f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T1445c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].force */
extern void T627f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].fill_with */
extern void T629f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].extend */
extern void T629f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T625f22(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T625f27(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern T0* T625f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].make */
extern T0* T147c17(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].set_internal_cursor */
extern void T147f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].new_cursor */
extern T0* T147f11(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].make */
extern T0* T176c8(GE_context* ac, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T625f21(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T625f20(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T625f19(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T625f18(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T625f17(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T625f16(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T625f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T167f168(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T624f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].aliased_resized_area */
extern T0* T626f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T625c12(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].force */
extern void T624f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].fill_with */
extern void T626f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].extend */
extern void T626f10(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T625f14(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T625f10(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T625f9(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T625f8(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T625f7(GE_context* ac, T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T625f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].force */
extern void T621f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].fill_with */
extern void T623f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].extend */
extern void T623f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T621f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].aliased_resized_area */
extern T0* T623f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T622f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1444f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1444f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1444c4(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T167f166(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T622c7(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_internal_cursor */
extern void T622f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T622f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1443c8(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T167f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1443f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T622f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T622f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1443f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T622f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1443f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T167f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T608f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1443f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1443f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T622f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T622f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ATTRIBUTE_CONTENT].off */
extern T1 T1443f7(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T619f11(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T619c10(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T619f21(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T619f19(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T619f16(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T619f22(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T619f12(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T619f20(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1442c6(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].set_internal_cursor */
extern void T1442f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1442f5(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1693c3(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T619c9(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1442f8(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1694f5(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1694f6(GE_context* ac, T0* C, T0* a1);
/* attached DS_BILINKABLE [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1694c4(GE_context* ac, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T619c8(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1442f7(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T167f161(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T619c15(GE_context* ac, T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T167f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T619f14(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T619f13(GE_context* ac, T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T619c7(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T619f18(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].force */
extern void T618f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].fill_with */
extern void T620f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].extend */
extern void T620f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T618f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].aliased_resized_area */
extern T0* T620f4(GE_context* ac, T0* C, T6 a1);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T619c6(GE_context* ac);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T619f17(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T167f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T608f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T167f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].has */
extern T1 T613f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].search_position */
extern void T613f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T613f24(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T610f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T610f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].item */
extern T0* T628f8(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].test */
extern T1 T1440f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T613f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T613f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T613f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T613f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T613f25(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].force */
extern void T612f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].fill_with */
extern void T614f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].extend */
extern void T614f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T612f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].aliased_resized_area */
extern T0* T614f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].force_new */
extern void T613f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T613f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_put */
extern void T613f38(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T613f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].resize */
extern void T613f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T613f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T613f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T613f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T613f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T613f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T613f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T613f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T613f35(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T167f154(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T613c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1440c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make */
extern void T613f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].set_internal_cursor */
extern void T613f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T613f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T1441c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_slots */
extern void T613f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T613f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T613f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T613f40(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].make */
extern T0* T609f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].make_empty */
extern T0* T611c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T609c3(GE_context* ac);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T167f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T167f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T610f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T1445f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T628f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T628f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T1445f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T628f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T1445f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T1445f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T1445f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_start */
extern void T628f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T628f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T1445f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T610f10(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T610f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] STRING_8].last */
extern T0* T628f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T610f8(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T610f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T610f18(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T610c18(GE_context* ac);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T610f15(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T610f14(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T167f246(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T610f6(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T610f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T167f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T637c201(GE_context* ac);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T637f208(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T637f201p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T637f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T637f210p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T637f210p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T637f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T637f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T637f221(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T637f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T637f219p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T637f224(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T637f195(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T637f198(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_5 */
extern void T637f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T637f296(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T637f200(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_4 */
extern void T637f294(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_3 */
extern void T637f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_2 */
extern void T637f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template_1 */
extern void T637f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T637f194(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T637f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_2 */
extern void T637f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template_1 */
extern void T637f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T637f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_5 */
extern void T637f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_4 */
extern void T637f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_3 */
extern void T637f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_2 */
extern void T637f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template_1 */
extern void T637f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T637f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_5 */
extern void T637f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_4 */
extern void T637f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_3 */
extern void T637f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_2 */
extern void T637f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template_1 */
extern void T637f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T637f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_27 */
extern void T637f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_26 */
extern void T637f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_25 */
extern void T637f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_24 */
extern void T637f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_23 */
extern void T637f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_22 */
extern void T637f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_21 */
extern void T637f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_20 */
extern void T637f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_19 */
extern void T637f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_18 */
extern void T637f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_17 */
extern void T637f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_16 */
extern void T637f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_15 */
extern void T637f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_14 */
extern void T637f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_13 */
extern void T637f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_12 */
extern void T637f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_11 */
extern void T637f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_10 */
extern void T637f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_9 */
extern void T637f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_8 */
extern void T637f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_7 */
extern void T637f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T637f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T637f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T637f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T637f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T637f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T637f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T637f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_27 */
extern void T637f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_26 */
extern void T637f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_25 */
extern void T637f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_24 */
extern void T637f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_23 */
extern void T637f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_22 */
extern void T637f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_21 */
extern void T637f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_20 */
extern void T637f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_19 */
extern void T637f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_18 */
extern void T637f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_17 */
extern void T637f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_16 */
extern void T637f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_15 */
extern void T637f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_14 */
extern void T637f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_13 */
extern void T637f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_12 */
extern void T637f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_11 */
extern void T637f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_10 */
extern void T637f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_9 */
extern void T637f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_8 */
extern void T637f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_7 */
extern void T637f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T637f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T637f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T637f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T637f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T637f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T637f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T637f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T637f50(GE_context* ac, T0* C);
/* [attached] DS_LINKED_STACK [[attached] XM_EIFFEL_SCANNER].force */
extern void T603f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.null_resolver */
extern T0* T167f94(GE_context* ac, T0* C);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T606f1(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T167f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T606f5(GE_context* ac, T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T606f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].force */
extern void T615f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].fill_with */
extern void T617f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].extend */
extern void T617f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T167f244(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T608f5(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T167f243(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T608f4(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T632f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T632f8(GE_context* ac, T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T632f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].force */
extern void T631f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].fill_with */
extern void T633f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].extend */
extern void T633f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T631f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].aliased_resized_area */
extern T0* T633f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T632c7(GE_context* ac);
/* XM_EIFFEL_DECLARATION.process */
extern void T632f10(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T167f287(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T167f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T167f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T167f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T608f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T167f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T167f238(GE_context* ac, T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T608f2(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T167f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T167f144(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T167f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T167f202(GE_context* ac, T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f74(GE_context* ac, T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T606f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T1266f30(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T1266f8(GE_context* ac, T0* C);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T249f2(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T167f203(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T1266c29(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].make */
extern T0* T1653c5(GE_context* ac);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T606f2(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item */
extern T0* T604f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_item */
extern T0* T604f35(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T167f89(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.force_error */
extern void T167f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T167f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T167f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T167f92(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T167f87(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T167f97(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T167f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T167f133(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T167f191(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T167f190(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T167f186(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T1265c67(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T1265f86(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T1264f1(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T1264f10(GE_context* ac, T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T1264f5(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T1264f2(GE_context* ac, T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T167f189(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T167f187(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T167f131(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T167f185(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T167f142(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern T0* T167f195(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern T0* T167f194(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T167f201(GE_context* ac, T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T1265c72(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].force */
extern void T609f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].fill_with */
extern void T611f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].extend */
extern void T611f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T609f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].aliased_resized_area */
extern T0* T611f4(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T167f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T610f19(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T610f12(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T167f141(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T610c20(GE_context* ac);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T167f225(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T167f224(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T167f222(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T167f233(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T167f221(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T167f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T167f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T636f290(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T639f294(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T636f289(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1279c9(GE_context* ac, T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T1264f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1264f32ot1(T0* a1, T0** a2);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T1264f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T1264f29(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T636f68(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T636f297(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T639f293(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T639f70(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T639f301(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T636f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T636f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T639f65(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T639f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.process_entity */
extern void T167f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T167f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T167f124(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T167f220(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T167f229(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T167f257(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T167f263(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T167f264(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].keep_head */
extern void T633f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].set_count */
extern void T633f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].keep_head */
extern void T629f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].set_count */
extern void T629f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].keep_head */
extern void T626f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].set_count */
extern void T626f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].keep_head */
extern void T623f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].set_count */
extern void T623f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].keep_head */
extern void T620f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].set_count */
extern void T620f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].keep_head */
extern void T617f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].set_count */
extern void T617f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].keep_head */
extern void T614f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].set_count */
extern void T614f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].keep_head */
extern void T611f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_PARSER_NAME].set_count */
extern void T611f9(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PARSER.abort */
extern void T167f223(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T167f217(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T167f216(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T167f212(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].wipe_out */
extern void T604f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].slots_wipe_out */
extern void T604f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].clashes_wipe_out */
extern void T604f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].key_storage_wipe_out */
extern void T604f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].item_storage_wipe_out */
extern void T604f44(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].keep_head */
extern void T1434f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].set_count */
extern void T1434f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].move_all_cursors_after */
extern void T604f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_next_cursor */
extern void T1437f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_after */
extern void T1437f7(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T167f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T599c199(GE_context* ac);
/* XM_EIFFEL_SCANNER.reset */
extern void T599f207(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T599f207p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T599f207p0(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T599f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T599f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T599f216(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T599f214(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T599f214p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T599f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T599f193(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T599f196(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_5 */
extern void T599f293(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T599f294(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T599f198(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template_4 */
extern void T599f292(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_3 */
extern void T599f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_2 */
extern void T599f290(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_accept_template_1 */
extern void T599f289(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T599f192(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T599f191(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template_2 */
extern void T599f288(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_ec_template_1 */
extern void T599f287(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T599f190(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template_5 */
extern void T599f286(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_4 */
extern void T599f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_3 */
extern void T599f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_2 */
extern void T599f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_def_template_1 */
extern void T599f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T599f189(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template_5 */
extern void T599f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_4 */
extern void T599f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_3 */
extern void T599f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_2 */
extern void T599f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_base_template_1 */
extern void T599f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T599f188(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_27 */
extern void T599f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_26 */
extern void T599f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_25 */
extern void T599f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_24 */
extern void T599f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_23 */
extern void T599f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_22 */
extern void T599f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_21 */
extern void T599f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_20 */
extern void T599f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_19 */
extern void T599f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_18 */
extern void T599f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_17 */
extern void T599f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_16 */
extern void T599f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_15 */
extern void T599f264(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_14 */
extern void T599f263(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_13 */
extern void T599f262(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_12 */
extern void T599f261(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_11 */
extern void T599f260(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_10 */
extern void T599f259(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_9 */
extern void T599f258(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_8 */
extern void T599f257(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_7 */
extern void T599f256(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T599f255(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T599f254(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T599f253(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T599f252(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T599f251(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T599f250(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T599f187(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_27 */
extern void T599f249(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_26 */
extern void T599f248(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_25 */
extern void T599f247(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_24 */
extern void T599f246(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_23 */
extern void T599f245(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_22 */
extern void T599f244(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_21 */
extern void T599f243(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_20 */
extern void T599f242(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_19 */
extern void T599f241(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_18 */
extern void T599f240(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_17 */
extern void T599f239(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_16 */
extern void T599f238(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_15 */
extern void T599f237(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_14 */
extern void T599f236(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_13 */
extern void T599f235(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_12 */
extern void T599f234(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_11 */
extern void T599f233(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_10 */
extern void T599f232(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_9 */
extern void T599f231(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_8 */
extern void T599f230(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_7 */
extern void T599f229(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T599f228(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T599f227(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T599f226(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T599f225(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T599f224(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T599f223(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T599f51(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T599f70(GE_context* ac, T0* C);
/* [attached] DS_CELL [detachable ET_ECF_SYSTEM].make */
extern T0* T179c2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.set_finalize_mode */
extern void T63f201(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_PARSER.make */
extern T0* T63c200(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T162f10(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T158c4(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1262c7(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].set_internal_cursor */
extern void T1262f8(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T167f208(GE_context* ac, T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T160c10(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T160f9(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] XM_CALLBACKS_FILTER].item */
extern T0* T587f4(GE_context* ac, T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T162c9(GE_context* ac);
/* XM_CALLBACKS_TO_TREE_FILTER.make_next */
extern void T162f11(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.initialize */
extern void T162f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_equal */
extern T0* T590c31(GE_context* ac, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].default_create */
extern T0* T1426c2(GE_context* ac);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make */
extern void T590f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].set_internal_cursor */
extern void T590f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_cursor */
extern T0* T590f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] XM_NAMESPACE].make */
extern T0* T1427c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].unset_found_item */
extern void T590f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_slots */
extern void T590f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_modulus */
extern T6 T590f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_clashes */
extern void T590f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_key_storage */
extern void T590f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].make_item_storage */
extern void T590f33(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].make */
extern T0* T1428f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].make_empty */
extern T0* T1429c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].default_create */
extern T0* T1428c3(GE_context* ac);
/* XM_DOCUMENT.make */
extern T0* T156c10(GE_context* ac);
/* XM_DOCUMENT.make_with_root_named */
extern void T156f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T156f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T1255f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].force_last */
extern void T1255f12p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put_right */
extern void T1648f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].make */
extern T0* T1648c3(GE_context* ac, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].before_addition */
extern void T1255f14(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.before_addition */
extern void T156f13(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T157f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].remove */
extern void T459f13(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_at_cursor */
extern void T1257f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors */
extern void T1257f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].set_current_cell */
extern void T459f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].put */
extern void T1795f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].put_right */
extern void T1795f4(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_last_cell */
extern void T1257f23(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].forget_right */
extern void T1795f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_last */
extern void T1257f22(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_last_cursors_after */
extern void T1257f27(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].wipe_out */
extern void T1257f25(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].move_all_cursors_after */
extern void T1257f28(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_last */
extern T1 T459f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_last */
extern T1 T1257f10(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].remove_first */
extern void T1257f21(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_first_cell */
extern void T1257f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_ELEMENT_NODE].is_first */
extern T1 T459f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].cursor_is_first */
extern T1 T1257f9(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T156f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].forth */
extern void T1549f13(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_forth */
extern void T1255f17(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].add_traversing_cursor */
extern void T1255f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_next_cursor */
extern void T1549f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_traversing_cursor */
extern void T1255f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set */
extern void T1549f15(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].remove */
extern void T1549f12(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_at_cursor */
extern void T1255f16(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors */
extern void T1255f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_current_cell */
extern void T1549f17(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].put */
extern void T1648f6(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_last_cell */
extern void T1255f21(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_DOCUMENT_NODE].forget_right */
extern void T1648f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_last */
extern void T1255f20(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_last_cursors_after */
extern void T1255f26(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].set_after */
extern void T1549f18(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].wipe_out */
extern void T1255f24(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].move_all_cursors_after */
extern void T1255f27(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_last */
extern T1 T1549f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_last */
extern T1 T1255f10(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].remove_first */
extern void T1255f19(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_first_cell */
extern void T1255f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].is_first */
extern T1 T1549f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_is_first */
extern T1 T1255f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].item */
extern T0* T1549f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].start */
extern void T1549f11(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_start */
extern void T1255f15(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_off */
extern T1 T1255f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].off */
extern T1 T1549f9(GE_context* ac, T0* C);
/* XM_DOCUMENT.new_cursor */
extern T0* T156f7(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].new_cursor */
extern T0* T1255f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].make */
extern T0* T1549c10(GE_context* ac, T0* a1);
/* XM_DOCUMENT.last */
extern T0* T156f6(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].last */
extern T0* T1255f7(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_empty */
extern T1 T156f5(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].is_empty */
extern T1 T1255f6(GE_context* ac, T0* C);
/* XM_ELEMENT.make */
extern T0* T157c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].make */
extern T0* T1257c11(GE_context* ac);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].set_internal_cursor */
extern void T1257f12(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].make */
extern T0* T1255c11(GE_context* ac);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].set_internal_cursor */
extern void T1255f13(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.default_ns */
extern T0* T156f3(GE_context* ac, T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T553c7(GE_context* ac);
/* XM_NAMESPACE.make */
extern void T553f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T553c8(GE_context* ac, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.null_callbacks */
extern T0* T162f7(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T589c1(GE_context* ac);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T160f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T161c5(GE_context* ac);
/* XM_STOP_ON_ERROR_FILTER.make_next */
extern void T161f6(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.initialize */
extern void T161f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.null_callbacks */
extern T0* T161f4(GE_context* ac, T0* C);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T160f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T586c26(GE_context* ac);
/* XM_NAMESPACE_RESOLVER.make_next */
extern void T586f37(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.initialize */
extern void T586f38(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T586f42(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T586f20(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].make */
extern T0* T1425c6(GE_context* ac);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1423c10(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1691c8(GE_context* ac);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_internal_cursor */
extern void T1691f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].new_cursor */
extern T0* T1691f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1692c8(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER.null_callbacks */
extern T0* T586f13(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T167f207(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T167c205(GE_context* ac);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T167f91(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_key_equality_tester */
extern void T604f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map_default */
extern T0* T604c36(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_map */
extern void T604f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_with_equality_testers */
extern void T604f53(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_sparse_container */
extern void T604f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].set_internal_cursor */
extern void T604f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].new_cursor */
extern T0* T604f34(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make */
extern T0* T1437c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_slots */
extern void T604f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_clashes */
extern void T604f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_key_storage */
extern void T604f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].make_item_storage */
extern void T604f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1438f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_ENTITY_DEF].make_empty */
extern T0* T1434c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1438c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] XM_EIFFEL_ENTITY_DEF, [attached] STRING_8].default_capacity */
extern T6 T604f30(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T167f211(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T167f215(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern T0* T167f88(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T167f183(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_4 */
extern void T167f272(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyarray_subcopy */
extern void T167f286(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PARSER.integer_array_ */
extern T0* T167f204(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yycheck_template_3 */
extern void T167f271(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_2 */
extern void T167f270(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yycheck_template_1 */
extern void T167f269(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern T0* T167f86(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytable_template_4 */
extern void T167f268(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_3 */
extern void T167f267(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_2 */
extern void T167f266(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template_1 */
extern void T167f265(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern T0* T167f84(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern T0* T167f129(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yypact_template_3 */
extern void T167f285(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_2 */
extern void T167f284(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yypact_template_1 */
extern void T167f283(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern T0* T167f127(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern T0* T167f125(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yydefact_template_3 */
extern void T167f282(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_2 */
extern void T167f281(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yydefact_template_1 */
extern void T167f280(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern T0* T167f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern T0* T167f121(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template_3 */
extern void T167f279(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_2 */
extern void T167f278(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytypes1_template_1 */
extern void T167f277(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template */
extern T0* T167f119(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yyr1_template_2 */
extern void T167f276(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yyr1_template_1 */
extern void T167f275(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern T0* T167f106(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template_2 */
extern void T167f274(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytranslate_template_1 */
extern void T167f273(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T167f214(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].make */
extern T0* T631f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_EIFFEL_DECLARATION].make_empty */
extern T0* T633c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_EIFFEL_DECLARATION].default_create */
extern T0* T631c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make */
extern T0* T627f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] STRING_8]].make_empty */
extern T0* T629c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] STRING_8]].default_create */
extern T0* T627c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T624f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ATTRIBUTE_CONTENT].make_empty */
extern T0* T626c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T624c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T621f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].make_empty */
extern T0* T623c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_BILINKED_LIST [[attached] XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T621c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].make */
extern T0* T618f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_ELEMENT_CONTENT].make_empty */
extern T0* T620c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T618c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].make */
extern T0* T615f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] XM_DTD_EXTERNAL_ID].make_empty */
extern T0* T617c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_DTD_EXTERNAL_ID].default_create */
extern T0* T615c3(GE_context* ac);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make */
extern T0* T612f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].make_empty */
extern T0* T614c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_SET [[attached] XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T612c3(GE_context* ac);
/* XM_EIFFEL_PARSER.initialize */
extern void T167f209(GE_context* ac, T0* C);
/* XM_EIFFEL_PARSER.null_dtd_callbacks */
extern T0* T167f112(GE_context* ac, T0* C);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T608c1(GE_context* ac);
/* XM_EIFFEL_PARSER.null_callbacks */
extern T0* T167f104(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_key_equality_tester */
extern void T187f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_map */
extern T0* T187c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_with_equality_testers */
extern void T187f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_sparse_container */
extern void T187f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].set_internal_cursor */
extern void T187f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].new_cursor */
extern T0* T187f31(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make */
extern T0* T650c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_slots */
extern void T187f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_clashes */
extern void T187f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_key_storage */
extern void T187f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_DOTNET_ASSEMBLY, [attached] STRING_8].make_item_storage */
extern void T187f57(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].make */
extern T0* T651f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_DOTNET_ASSEMBLY].make_empty */
extern T0* T647c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_DOTNET_ASSEMBLY].default_create */
extern T0* T651c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_key_equality_tester */
extern void T185f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_map */
extern T0* T185c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_with_equality_testers */
extern void T185f47(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_sparse_container */
extern void T185f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].set_internal_cursor */
extern void T185f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].new_cursor */
extern T0* T185f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make */
extern T0* T642c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_slots */
extern void T185f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_clashes */
extern void T185f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_key_storage */
extern void T185f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_ECF_LIBRARY, [attached] STRING_8].make_item_storage */
extern void T185f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].make */
extern T0* T646f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_LIBRARY].make_empty */
extern T0* T643c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ECF_LIBRARY].default_create */
extern T0* T646c3(GE_context* ac);
/* ET_ECF_SYSTEM_PARSER.make_with_factory */
extern void T63f203p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM_PARSER.ise_latest */
extern T0* T63f13(GE_context* ac, T0* C);
/* ET_ECF_AST_FACTORY.make */
extern T0* T178c52(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.make_standard */
extern T0* T64c8(GE_context* ac);
/* ET_ECF_ERROR_HANDLER.std */
extern T0* T64f6(GE_context* ac, T0* C);
/* KL_EXECUTION_ENVIRONMENT.set_variable_value */
extern void T67f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.put */
extern void T219f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* EXECUTION_ENVIRONMENT.eif_putenv */
extern T6 T219f7(GE_context* ac, T0* C, T14 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].force */
extern void T669f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] SPECIAL [[attached] NATIVE_STRING].force */
extern void T1457f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] NATIVE_STRING].extend */
extern void T1457f7(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].position */
extern T6 T669f22(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] IMMUTABLE_STRING_32].force */
extern void T1386f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] BOOLEAN].force */
extern void T125f7(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].deleted_position */
extern T6 T669f21(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].add_space */
extern void T669f37(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].accommodate */
extern void T669f38(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_indexes_map */
extern void T669f42(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_deleted_marks */
extern void T669f41(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_keys */
extern void T669f40(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_content */
extern void T669f39(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].put */
extern void T669f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].set_conflict */
extern void T669f45(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].found */
extern T1 T669f31(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].occupied */
extern T1 T669f29(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].empty_duplicate */
extern T0* T669f28(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].compare_objects */
extern void T669f44(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].make */
extern T0* T669c34(GE_context* ac, T6 a1);
/* [attached] SPECIAL [[attached] NATIVE_STRING].make_empty */
extern T0* T1457c4(GE_context* ac, T6 a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].soon_full */
extern T1 T669f20(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].not_found */
extern T1 T669f19(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].internal_search */
extern void T669f36(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].same_keys */
extern T1 T669f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* IMMUTABLE_STRING_32.is_equal */
extern T1 T19f8(GE_context* ac, T0* C, T0* a1);
/* SPECIAL [CHARACTER_32].same_items */
extern T1 T16f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] HASH_TABLE [[attached] NATIVE_STRING, [attached] IMMUTABLE_STRING_32].hash_code_of */
extern T6 T669f25(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.hash_code */
extern T6 T19f7(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.item */
extern T3 T19f10(GE_context* ac, T0* C, T6 a1);
/* IMMUTABLE_STRING_32.make_from_string_general */
extern T0* T19c11(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.to_string_32 */
extern T0* T1265f20(GE_context* ac, T0* C);
/* STRING_8.to_string_32 */
extern T0* T17f35(GE_context* ac, T0* C);
/* IMMUTABLE_STRING_32.make_from_string_32 */
extern void T19f14(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_string_8 */
extern void T19f13(GE_context* ac, T0* C, T0* a1);
/* IMMUTABLE_STRING_32.make_from_area_and_bounds */
extern void T19f15(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* EXECUTION_ENVIRONMENT.environ */
extern T0* T219f5(GE_context* ac, T0* C);
/* GEC.execution_environment */
extern T0* T24f21(GE_context* ac, T0* C);
/* GEC.parse_xace_file */
extern void T24f41(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T54f5(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T53f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T54f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T54f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T54f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T54f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T163f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T54f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T1177c8(GE_context* ac, T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T600f6(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T600f5(GE_context* ac, T0* C);
/* XM_ELEMENT.position */
extern T0* T157f8(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.null_position */
extern T0* T157f12(GE_context* ac, T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T600c7(GE_context* ac, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_XACE_VALIDATOR.validate_system */
extern void T163f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f50ot1(T0* a1, T0** a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T54f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T1179c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T163f53(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f53ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T163f57(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f57ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern T0* T163f30(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern T0* T163f28(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern T0* T163f26(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern T0* T163f25(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern T0* T163f14(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern T0* T163f24(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T54f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T54f14(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T54f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T463c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern T0* T163f12(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T163f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T163f52ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern T0* T163f23(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern T0* T163f22(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern T0* T163f21(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern T0* T163f20(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern T0* T163f19(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern T0* T163f18(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern T0* T163f17(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern T0* T163f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].has */
extern T1 T208f33(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.valid_system_options */
extern T0* T163f11(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_system_options */
extern T0* T163f11ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.warning_option_value_regexp */
extern T0* T163f44(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.void_safety_option_value_regexp */
extern T0* T163f43(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.target_option_value_regexp */
extern T0* T163f42(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.syntax_option_value_regexp */
extern T0* T163f41(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.msil_classes_per_module_option_value_regexp */
extern T0* T163f40(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.inlining_size_option_value_regexp */
extern T0* T163f39(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.inlining_option_value_regexp */
extern T0* T163f38(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.garbage_collector_option_value_regexp */
extern T0* T163f37(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.dead_code_removal_option_value_regexp */
extern T0* T163f36(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.assertion_option_value_regexp */
extern T0* T163f35(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.boolean_option_value_regexp */
extern T0* T163f34(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.case_insensitive_string_equality_tester */
extern T0* T163f33(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_option */
extern T0* T163f10(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T163f51(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f51ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T163f56(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T54f22(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T1183c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern T0* T163f15(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern T0* T163f9(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T163f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f54ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T163f58(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f58ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T163f59(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f59ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.valid_feature_options */
extern T0* T163f32(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_feature_options */
extern T0* T163f32ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.valid_class_options */
extern T0* T163f31(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_class_options */
extern T0* T163f31ac1(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.valid_cluster_options */
extern T0* T163f27(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_VALIDATOR.valid_cluster_options */
extern T0* T163f27ac1(GE_context* ac, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T54f21(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T1182c8(GE_context* ac, T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T163f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T54f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T1180c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern T0* T163f5(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern T0* T163f8(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.validate_root */
extern void T163f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern T0* T163f29(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T54f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T1181c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.element_by_name */
extern T0* T157f5(GE_context* ac, T0* C, T0* a1);
extern T1 T157f5ot1(T0* a1, T0** a2);
/* XM_ELEMENT.named_same_name */
extern T1 T157f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T157f14(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T553f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T553f3(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_root */
extern T0* T163f13(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T54f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T1178c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T157f7(GE_context* ac, T0* C, T0* a1);
extern T1 T157f7ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T163f7(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern T0* T163f6(GE_context* ac, T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T163f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].wipe_out */
extern void T165f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_wipe_out */
extern void T165f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_wipe_out */
extern void T165f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_wipe_out */
extern void T165f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_wipe_out */
extern void T165f41(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].keep_head */
extern void T597f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].set_count */
extern void T597f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].unset_found_item */
extern void T165f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].move_all_cursors_after */
extern void T165f39(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_next_cursor */
extern void T596f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_after */
extern void T596f7(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T62f156(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.unset_root_type */
extern void T62f170(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_root_type */
extern void T62f169(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T53f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_multithreaded_mode */
extern void T62f167(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T62f166(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T62f165(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T62f164(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T62f163(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_OPTIONS.value */
extern T0* T448f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T53f16(GE_context* ac, T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T1265f75(GE_context* ac, T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T62f162(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T455f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T491f9(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T454f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T458f69(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T447f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].force_last */
extern void T147f18(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] STRING_8].put_right */
extern void T581f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] STRING_8].make */
extern T0* T581c3(GE_context* ac, T0* a1);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T447f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T447f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].new_iterator */
extern T0* T78f37(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.multivalue */
extern T0* T448f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].found_item */
extern T0* T1387f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_item */
extern T0* T1387f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].found */
extern T1 T1387f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].search */
extern void T1387f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].search_position */
extern void T1387f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].hash_position */
extern T6 T1387f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_item */
extern T0* T1387f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_item */
extern T6 T1387f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_item */
extern T6 T1387f27(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_EXTERNALS.make */
extern T0* T447c4(GE_context* ac);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T62f161(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T455f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T454f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T454f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].force_last */
extern void T1389f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].force */
extern void T1679f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].fill_with */
extern void T1678f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].extend */
extern void T1678f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].resize */
extern void T1389f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1679f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].aliased_resized_area */
extern T0* T1678f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].new_capacity */
extern T6 T1389f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].extendible */
extern T1 T1389f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T458f76(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T454f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T458f77(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T454f17(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_SYSTEM.select_target */
extern void T62f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T62f179(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T62f194(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.select_target */
extern void T62f160p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.select_target */
extern T0* T62f160p1ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_XACE_CLUSTER]].set_rout_disp_final */
extern void T494f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_XACE_CLUSTERS.do_all */
extern void T454f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T492f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T455f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T455f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T491f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].force */
extern void T1397f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].fill_with */
extern void T1396f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].extend */
extern void T1396f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].resize */
extern void T491f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1397f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].aliased_resized_area */
extern T0* T1396f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T491f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T491f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T54f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T464c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.root_item */
extern T0* T455f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T455f4(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T456f5(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T456f6(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T455f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root_count */
extern void T455f9(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_MOUNTED_LIBRARIES.count */
extern T6 T455f6(GE_context* ac, T0* C);
/* ET_XACE_TARGET.merge_libraries */
extern void T449f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T53f79(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.fill_target */
extern void T53f80(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f80ot1(T0* a1, T0** a2);
extern T1 T53f80ot2(T0* a1, T0** a2);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T454f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T458f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_override */
extern void T458f73(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.cluster_by_name */
extern T0* T454f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.string_ */
extern T0* T454f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T53f82(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f82ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.put_class_option */
extern void T458f61(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].put_last */
extern void T1390f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS].put_right */
extern void T1682f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T1682c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T1390c6(GE_context* ac);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].set_internal_cursor */
extern void T1390f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T1390f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_CLASS_OPTIONS].make */
extern T0* T1681c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T53f46(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f46ot1(T0* a1, T0** a2);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T1175f6(GE_context* ac, T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T462f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].put_last */
extern void T1175f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1621f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1621c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1175c7(GE_context* ac);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].set_internal_cursor */
extern void T1175f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T1175f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1620c3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T53f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T155f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T1174c3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern T0* T53f73(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T53f69(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T155f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T462c4(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T155f3(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T448c9(GE_context* ac);
/* Creation of agent #1 in feature ET_XACE_OPTIONS.make */
extern T0* T448f9ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].force_last */
extern void T1387f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_put */
extern void T1387f47(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_put */
extern void T1387f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_put */
extern void T1387f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].resize */
extern void T1387f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].clashes_resize */
extern void T1387f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].special_integer_ */
extern T0* T1387f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].key_storage_resize */
extern void T1387f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_resize */
extern void T1387f50(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].aliased_resized_area */
extern T0* T1673f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].aliased_resized_area */
extern T0* T1670f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].slots_resize */
extern void T1387f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_modulus */
extern T6 T1387f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_capacity */
extern T6 T1387f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].item_storage_put */
extern void T1387f43(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].force */
extern void T1673f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].fill_with */
extern void T1670f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].extend */
extern void T1670f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].unset_found_item */
extern void T1387f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_hash_function */
extern void T1387f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_key_equality_tester */
extern void T1387f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_map */
extern T0* T1387c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_with_equality_testers */
extern void T1387f40(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_sparse_container */
extern void T1387f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].set_internal_cursor */
extern void T1387f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].new_cursor */
extern T0* T1387f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make */
extern T0* T1674c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_slots */
extern void T1387f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_clashes */
extern void T1387f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_key_storage */
extern void T1387f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].make_item_storage */
extern void T1387f53(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].make */
extern T0* T1673f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_HASH_SET [[attached] STRING_8]].make_empty */
extern T0* T1670c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable DS_HASH_SET [[attached] STRING_8]].default_create */
extern T0* T1673c3(GE_context* ac);
/* ET_XACE_OPTIONS.string_ */
extern T0* T448f7(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.case_insensitive_string_equality_tester */
extern T0* T448f6(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T53f45(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T53f44(GE_context* ac, T0* C);
/* ET_XACE_OPTIONS.set_primary_value */
extern void T448f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [detachable DS_HASH_SET [[attached] STRING_8], [attached] STRING_8].replace_found_item */
extern void T1387f39(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T448f8(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T53f43(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T53f42(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T53f31(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T53f81(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f81ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T53f41(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T53f40(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T53f39(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T53f38(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T53f37(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T53f36(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T53f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern T0* T53f34(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T53f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item */
extern T0* T208f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [detachable RX_REGULAR_EXPRESSION, [attached] STRING_8].item_storage_item */
extern T0* T208f35(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T53f32(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.valid_system_options */
extern T0* T53f30(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_system_options */
extern T0* T53f30ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.warning_option_value_regexp */
extern T0* T53f66(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.void_safety_option_value_regexp */
extern T0* T53f65(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.target_option_value_regexp */
extern T0* T53f64(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.syntax_option_value_regexp */
extern T0* T53f63(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.msil_classes_per_module_option_value_regexp */
extern T0* T53f62(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.inlining_size_option_value_regexp */
extern T0* T53f61(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.inlining_option_value_regexp */
extern T0* T53f60(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.garbage_collector_option_value_regexp */
extern T0* T53f59(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.dead_code_removal_option_value_regexp */
extern T0* T53f58(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.assertion_option_value_regexp */
extern T0* T53f57(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.boolean_option_value_regexp */
extern T0* T53f56(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.case_insensitive_string_equality_tester */
extern T0* T53f55(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T53f29(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T53f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T456f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern T0* T53f49(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T155f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T456c7(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T54f24(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.select_target */
extern void T492f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG.select_target */
extern void T492f10p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG.select_target */
extern T0* T492f10p1ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T170f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T170f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T492f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern T0* T170f66(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_target */
extern void T170f74(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T170f74ot1(T0* a1, T0** a2);
extern T1 T170f74ot2(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T170f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T170f76ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T170f39(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T170f39ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T170f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T170f67(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T170f62(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T170f38(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T170f37(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T170f36(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T170f35(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T170f24(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T170f75(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T170f75ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T170f34(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T170f33(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T170f32(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T170f31(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T170f30(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T170f29(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T170f28(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T170f27(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T170f26(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T170f25(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_system_options */
extern T0* T170f23(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_system_options */
extern T0* T170f23ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.warning_option_value_regexp */
extern T0* T170f59(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.void_safety_option_value_regexp */
extern T0* T170f58(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.target_option_value_regexp */
extern T0* T170f57(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.syntax_option_value_regexp */
extern T0* T170f56(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.msil_classes_per_module_option_value_regexp */
extern T0* T170f55(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.inlining_size_option_value_regexp */
extern T0* T170f54(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.inlining_option_value_regexp */
extern T0* T170f53(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.garbage_collector_option_value_regexp */
extern T0* T170f52(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.dead_code_removal_option_value_regexp */
extern T0* T170f51(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.assertion_option_value_regexp */
extern T0* T170f50(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.boolean_option_value_regexp */
extern T0* T170f49(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.case_insensitive_string_equality_tester */
extern T0* T170f48(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T170f22(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T170f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T170f47(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_name */
extern T0* T170f45(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T170f20(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_creation */
extern T0* T170f19(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T170f18(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_root */
extern T0* T170f17(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T170f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T170f16ot1(T0* a1, T0** a2);
/* ET_XACE_CLUSTER.set_libraries */
extern void T458f67(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T458f66(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T454f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T458f75(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T458f65(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T458f64(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T458f63(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_abstract */
extern void T458f62(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T170f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T170f44ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T170f65(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T170f65ot1(T0* a1, T0** a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_feature_options */
extern T0* T170f68(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_feature_options */
extern T0* T170f68ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_class_options */
extern T0* T170f64(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_class_options */
extern T0* T170f64ac1(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T170f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.valid_cluster_options */
extern T0* T170f42(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_LIBRARY_CONFIG_PARSER.valid_cluster_options */
extern T0* T170f42ac1(GE_context* ac, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T155f5(GE_context* ac, T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T455c8(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T491c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].set_internal_cursor */
extern void T491f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T491f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1398c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T1397f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_MOUNTED_LIBRARY].make_empty */
extern T0* T1396c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T1397c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T155f4(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T454c9(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].put_last */
extern void T1389f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].make */
extern T0* T1389c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].set_internal_cursor */
extern void T1389f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].new_cursor */
extern T0* T1389f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].make */
extern T0* T1680c5(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].make */
extern T0* T1679f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].make_empty */
extern T0* T1678c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_CLUSTER].default_create */
extern T0* T1679c3(GE_context* ac);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T458f60(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T458f59(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern T0* T170f41(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T54f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T1184c8(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern T0* T170f40(GE_context* ac, T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T155f2(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T458c58(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_scm_mapping_constraint_enabled */
extern void T458f68(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_scm_mapping_constraint_enabled */
extern void T454f12(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T170f14(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T170f13(GE_context* ac, T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T170f12(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T53f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].force_new */
extern void T165f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_put */
extern void T165f58(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_put */
extern void T165f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].force */
extern void T598f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].fill_with */
extern void T597f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].extend */
extern void T597f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_put */
extern void T165f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_put */
extern void T165f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_item */
extern T6 T165f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].hash_position */
extern T6 T165f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_item */
extern T6 T165f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].resize */
extern void T165f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].clashes_resize */
extern void T165f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].special_integer_ */
extern T0* T165f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_resize */
extern void T165f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_resize */
extern void T165f60(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T598f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].aliased_resized_area */
extern T0* T597f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].key_storage_item */
extern T0* T165f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].slots_resize */
extern void T165f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_modulus */
extern T6 T165f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_capacity */
extern T6 T165f24(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T155f6(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T492c9(GE_context* ac, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.make */
extern void T492f9p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T454c5(GE_context* ac);
/* ET_XACE_TARGETS.make */
extern T0* T452c6(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].put_last */
extern void T1388f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].force */
extern void T1676f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].fill_with */
extern void T1675f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].extend */
extern void T1675f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].make */
extern T0* T1388c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].set_internal_cursor */
extern void T1388f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].new_cursor */
extern T0* T1388f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_TARGET].make */
extern T0* T1677c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].make */
extern T0* T1676f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_TARGET].make_empty */
extern T0* T1675c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_TARGET].default_create */
extern T0* T1676c2(GE_context* ac);
/* ET_XACE_AST_FACTORY.new_target */
extern T0* T155f1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.make */
extern T0* T449c7(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_name */
extern T0* T53f18(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].found_item */
extern T0* T165f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].item_storage_item */
extern T0* T165f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].found */
extern T1 T165f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].search */
extern void T165f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].search_position */
extern void T165f53(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T53f27(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_creation_procedure_name */
extern void T449f14(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_root_class_name */
extern void T449f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T53f26(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T53f25(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T53f24(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_libraries */
extern void T449f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_clusters */
extern void T449f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_TARGET.set_options */
extern void T449f10(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T53f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T53f23ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T53f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f52ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T53f72(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T53f72ot1(T0* a1, T0** a2);
/* ET_XACE_SYSTEM_PARSER.valid_feature_options */
extern T0* T53f74(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_feature_options */
extern T0* T53f74ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.valid_class_options */
extern T0* T53f71(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_class_options */
extern T0* T53f71ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T53f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.valid_cluster_options */
extern T0* T53f50(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM_PARSER.valid_cluster_options */
extern T0* T53f50ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T53f48(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T53f47(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T53f21(GE_context* ac, T0* C);
/* ET_XACE_TARGET.set_name */
extern void T449f9(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T53f17(GE_context* ac, T0* C);
/* ET_XACE_TARGETS.last */
extern T0* T452f4(GE_context* ac, T0* C);
/* ET_XACE_TARGETS.target */
extern T0* T452f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_TARGET].item */
extern T0* T1388f7(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_TARGETS.count */
extern T6 T452f2(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T62c155(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.make_system */
extern void T62f168(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T62f185(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_ref_class_mapping */
extern void T62f248(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_class_mapping */
extern void T62f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_wide_character_class_mapping */
extern void T62f247(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_class_mapping */
extern void T62f246(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_ref_class_mapping */
extern void T62f245(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_class_mapping */
extern void T62f244(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_ref_class_mapping */
extern void T62f243(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_class_mapping */
extern void T62f242(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_ref_class_mapping */
extern void T62f241(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_class_mapping */
extern void T62f240(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_ref_class_mapping */
extern void T62f239(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_double_class_mapping */
extern void T62f238(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_ref_class_mapping */
extern void T62f237(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_class_mapping */
extern void T62f236(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.tokens */
extern T0* T62f146(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_kernel_types */
extern void T62f184(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_wide_character_type */
extern void T62f235(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_typed_pointer_type */
extern void T62f234(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_type_type */
extern void T62f233(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_string_type */
extern void T62f232(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_object_type */
extern void T62f231(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_type */
extern void T62f230(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_32_type */
extern void T62f229(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_string_8_type */
extern void T62f228(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_special_type */
extern void T62f227(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_routine_type */
extern void T62f226(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_64_type */
extern void T62f225(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_32_type */
extern void T62f224(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_real_type */
extern void T62f223(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_procedure_type */
extern void T62f222(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_predicate_type */
extern void T62f221(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_pointer_type */
extern void T62f220(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_64_type */
extern void T62f219(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_32_type */
extern void T62f218(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_16_type */
extern void T62f217(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_8_type */
extern void T62f216(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_natural_type */
extern void T62f215(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_iterable_type */
extern void T62f214(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_ise_exception_manager_type */
extern void T62f213(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_64_type */
extern void T62f212(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_32_type */
extern void T62f211(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_16_type */
extern void T62f210(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_8_type */
extern void T62f209(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_integer_type */
extern void T62f208(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_immutable_string_32_type */
extern void T62f207(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_function_type */
extern void T62f206(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_manager_type */
extern void T62f205(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_exception_type */
extern void T62f204(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_double_type */
extern void T62f203(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_32_type */
extern void T62f202(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_8_type */
extern void T62f201(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_character_type */
extern void T62f200(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_boolean_type */
extern void T62f199(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_array_type */
extern void T62f198(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_tuple_type */
extern void T62f197(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_none_type */
extern void T62f196(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_any_type */
extern void T62f195(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make_adapted */
extern void T62f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.default_read_only_value */
extern T1 T62f147(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_unknown_kernel_types */
extern void T62f182(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.set_system_name */
extern void T62f181(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.initialize */
extern void T62f180(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T62f180p1(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T62f144(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.make */
extern void T62f155p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_named_target */
extern T0* T53f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_secondary_options */
extern void T448f11(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.default_options */
extern T0* T53f19(GE_context* ac, T0* C);
/* XM_ELEMENT.set_name */
extern void T157f23(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T53f14(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T164f11(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T164f11ot1(T0* a1, T0** a2);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T164f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T54f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1536c8(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T164f8(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T164f4(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T164f9(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T164f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern T0* T164f6(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern T0* T164f5(GE_context* ac, T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T164f12(GE_context* ac, T0* C, T0* a1);
extern T1 T164f12ot1(T0* a1, T0** a2);
/* XM_ATTRIBUTE.set_value */
extern void T198f7(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T163f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T163f48(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T163f48ot1(T0* a1, T0** a2);
/* ET_XACE_VALIDATOR.uc_library */
extern T0* T163f4(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T53f12(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T53f53(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T53c75(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T53f77(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.create_library_parser */
extern void T53f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T170f70(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T170c69(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.create_library_parser */
extern void T170f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T170f46(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T166f2(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T166f1(GE_context* ac, T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T166c3(GE_context* ac);
/* ET_XACE_VALIDATOR.make */
extern T0* T163c45(GE_context* ac, T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T164c10(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_key_equality_tester */
extern void T165f37(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T53f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_map */
extern T0* T165c35(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_with_equality_testers */
extern void T165f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_sparse_container */
extern void T165f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].set_internal_cursor */
extern void T165f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].new_cursor */
extern T0* T165f29(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make */
extern T0* T596c6(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_slots */
extern void T165f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_clashes */
extern void T165f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_key_storage */
extern void T165f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_XACE_LIBRARY_CONFIG, [attached] STRING_8].make_item_storage */
extern void T165f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].make */
extern T0* T598f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_LIBRARY_CONFIG].make_empty */
extern T0* T597c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T598c3(GE_context* ac);
/* ET_XACE_AST_FACTORY.make */
extern T0* T155c10(GE_context* ac);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].forth */
extern void T176f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_forth */
extern void T147f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T147f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set_next_cursor */
extern void T176f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T147f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].set */
extern void T176f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T1265f24(GE_context* ac, T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T1265f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f29(GE_context* ac, T0* C, T2 a1, T6 a2);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].item */
extern T0* T176f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].start */
extern void T176f9(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_start */
extern void T147f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_off */
extern T1 T147f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T176f7(GE_context* ac, T0* C);
/* ST_SPLITTER.split */
extern T0* T56f6(GE_context* ac, T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T56f8(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ST_SPLITTER.string_ */
extern T0* T56f5(GE_context* ac, T0* C);
/* ST_SPLITTER.make */
extern T0* T56c9(GE_context* ac);
/* ST_SPLITTER.set_separators */
extern void T56f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].put */
extern void T177f39(GE_context* ac, T0* C, T6 a1);
/* GEC.string_equality_tester */
extern T0* T24f20(GE_context* ac, T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T54c8(GE_context* ac);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T54f6(GE_context* ac, T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T36f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T36f1ot1(T0* a1, T0** a2);
extern T1 T36f1ot2(T0* a1, T0** a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T36f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T1265f54(GE_context* ac, T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T1265f34(GE_context* ac, T0* C, T0* a1, T6 a2);
extern T1 T1265f34ot1(T0* a1, T0** a2);
extern T1 T1265f34ot2(T0* a1, T0** a2);
/* GEC.string_ */
extern T0* T24f18(GE_context* ac, T0* C);
/* INTEGER_32.is_greater */
extern T1 T6f6(GE_context* ac, T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T31f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T31f27(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T31f61(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T31f17(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T31f66(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T31f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T31f66p1(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T31f24(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T31f16(GE_context* ac, T0* C);
/* FILE_INFO.is_readable */
extern T1 T130f8(GE_context* ac, T0* C);
/* FILE_INFO.file_eaccess */
extern T1 T130f6(GE_context* ac, T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T31f59(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T31c59(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern void T31f59p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T31f64(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make_with_name */
extern void T31f69(GE_context* ac, T0* C, T0* a1);
/* GEC.parse_arguments */
extern void T24f40(GE_context* ac, T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T41c21(GE_context* ac, T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T46f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].last */
extern T6 T154f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].is_empty */
extern T1 T154f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].first */
extern T0* T142f9(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T51f10(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_usage_instruction */
extern T0* T39f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T141f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T141f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T577f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T141f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T577f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T141f23(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.alternative_usage_instruction */
extern T0* T39f26(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T445f5(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T445f12(GE_context* ac, T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T445f8(GE_context* ac, T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T445f4(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T445f10(GE_context* ac, T0* C, T6 a1);
/* AP_PARSER.wrapper */
extern T0* T39f30(GE_context* ac, T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T445f11(GE_context* ac, T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T445c9(GE_context* ac);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T122f2(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T121f2(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T39f13(GE_context* ac, T0* C);
/* AP_PARSER.file_system */
extern T0* T39f27(GE_context* ac, T0* C);
/* AP_PARSER.unix_file_system */
extern T0* T39f33(GE_context* ac, T0* C);
/* AP_PARSER.windows_file_system */
extern T0* T39f32(GE_context* ac, T0* C);
/* AP_PARSER.operating_system */
extern T0* T39f31(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T40f17(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T40f19(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T40f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T144f9(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T40f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].set */
extern void T144f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T40f6(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T40f8(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T40f5(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T40f7(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T40f16(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T40f18(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T40f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T144f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T141f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T141f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T141f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T141f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T577f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T141f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T141f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_after */
extern void T577f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T141f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T577f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].before */
extern T1 T577f6(GE_context* ac, T0* C);
/* AP_PARSER.usage_instruction */
extern T0* T39f25(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].forth */
extern void T140f20(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_forth */
extern void T140f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_position */
extern void T573f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].add_traversing_cursor */
extern void T140f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_next_cursor */
extern void T573f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].remove_traversing_cursor */
extern void T140f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].item_for_iteration */
extern T0* T140f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_item */
extern T0* T140f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].after */
extern T1 T140f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_after */
extern T1 T140f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].after */
extern T1 T573f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].start */
extern void T140f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].cursor_start */
extern void T140f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].set_after */
extern void T573f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].is_empty */
extern T1 T140f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].off */
extern T1 T573f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].before */
extern T1 T573f6(GE_context* ac, T0* C);
/* GEC.report_version_number */
extern void T24f46(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.make */
extern T0* T88c8(GE_context* ac, T0* a1);
/* AP_PARSER.parse_arguments */
extern void T39f44(GE_context* ac, T0* C);
/* AP_PARSER.parse_list */
extern void T39f45(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T39f49(GE_context* ac, T0* C);
/* AP_PARSER.exceptions */
extern T0* T39f20(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T38c1(GE_context* ac);
/* AP_ERROR_HANDLER.report_error_message */
extern void T143f10(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T143f10p1(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T39f48(GE_context* ac, T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T41c23(GE_context* ac, T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T143f9(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T143f6(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T41c22(GE_context* ac, T0* a1);
/* AP_PARSER.parse_argument */
extern void T39f47(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.parse_short */
extern void T39f51(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T41c25(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].off */
extern T1 T142f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_off */
extern T1 T142f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].off */
extern T1 T580f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].before */
extern T1 T580f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].after */
extern T1 T580f5(GE_context* ac, T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T41c24(GE_context* ac, T0* a1);
/* CHARACTER_8.out */
extern T0* T2f3(GE_context* ac, T2* C);
/* AP_PARSER.parse_long */
extern void T39f50(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T41c26(GE_context* ac, T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T39f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].forth */
extern void T142f25(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_forth */
extern void T142f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] STRING_8].set_position */
extern void T580f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].add_traversing_cursor */
extern void T142f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove_traversing_cursor */
extern void T142f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T142f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_item */
extern T0* T142f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].after */
extern T1 T142f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_after */
extern T1 T142f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].start */
extern void T142f24(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].cursor_start */
extern void T142f32(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.reset_parser */
extern void T39f46(GE_context* ac, T0* C);
/* AP_PARSER.all_options */
extern T0* T39f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].has */
extern T1 T140f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].make */
extern T0* T140c17(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].set_internal_cursor */
extern void T140f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].new_cursor */
extern T0* T140f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T573c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].make */
extern T0* T576f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] AP_OPTION].make_empty */
extern T0* T575c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].default_create */
extern T0* T576c3(GE_context* ac);
/* AP_ERROR_HANDLER.reset */
extern void T143f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].force */
extern void T142f23(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].put */
extern void T142f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_right */
extern void T142f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_right */
extern void T142f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_ARGUMENTS.argument_count */
extern T6 T32f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T141f15(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].force */
extern void T579f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].fill_with */
extern void T578f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extend */
extern void T578f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T141f19(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T579f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].aliased_resized_area */
extern T0* T578f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T141f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T141f10(GE_context* ac, T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T40c11(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T40f14(GE_context* ac, T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_internal_cursor */
extern void T40f15(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T40f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] AP_OPTION].make */
extern T0* T144c7(GE_context* ac, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T40f13(GE_context* ac, T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T40f12(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T42c19(GE_context* ac, T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T42f21(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T42f23(GE_context* ac, T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T42f20(GE_context* ac, T0* C);
/* AP_STRING_OPTION.set_parameter_description */
extern void T47f25(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.set_description */
extern void T47f24(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.make_with_long_form */
extern T0* T47c23(GE_context* ac, T0* a1);
/* AP_STRING_OPTION.set_long_form */
extern void T47f27(GE_context* ac, T0* C, T0* a1);
/* AP_STRING_OPTION.initialize */
extern void T47f26(GE_context* ac, T0* C);
/* AP_STRING_OPTION.initialize */
extern void T47f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T46f25(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T46f24(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T46c23(GE_context* ac, T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T46f27(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T46f26p0(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T45f28(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T45f27(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T45c26(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T45f30(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T45f29p0(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T44f28(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T44f27(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T44f32(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].forth */
extern void T147f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].is_last */
extern T1 T147f10(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_is_last */
extern T1 T147f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].item_for_iteration */
extern T0* T147f9(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_item */
extern T0* T147f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].after */
extern T1 T147f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].cursor_after */
extern T1 T147f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].start */
extern void T147f20(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T44f26(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T44c25(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T44f30(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].set_equality_tester */
extern void T147f19(GE_context* ac, T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T44f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T44f29p0(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].force_last */
extern void T140f18(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].force */
extern void T576f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_OPTION].fill_with */
extern void T575f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] AP_OPTION].extend */
extern void T575f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].resize */
extern void T140f22(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_OPTION].aliased_resized_area */
extern T0* T576f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] AP_OPTION].aliased_resized_area */
extern T0* T575f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].new_capacity */
extern T6 T140f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].extendible */
extern T1 T140f13(GE_context* ac, T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T42f18(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T42c17(GE_context* ac, T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T39f43(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T39f42(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T39c41(GE_context* ac);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T51f21(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T51c20(GE_context* ac, T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T51f24(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T51f23(GE_context* ac, T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T51f22(GE_context* ac, T0* C);
/* AP_PARSER.make */
extern void T39f41p1(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T143c7(GE_context* ac);
/* AP_ERROR_HANDLER.std */
extern T0* T143f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T141c14(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].set_internal_cursor */
extern void T141f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T141f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T577c8(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T579f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] AP_ALTERNATIVE_OPTIONS_LIST].make_empty */
extern T0* T578c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T579c3(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T34c177(GE_context* ac);
/* ET_ERROR_HANDLER.make_standard */
extern void T34f177p1(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.set_ise_library_variable */
extern void T33f7(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.execution_environment */
extern T0* T33f3(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_eiffel_value */
extern T0* T33f2(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.ise_library_value */
extern T0* T33f1(GE_context* ac, T0* C);
/* GEC.ise_variables */
extern T0* T24f23(GE_context* ac, T0* C);
/* ET_ISE_VARIABLES.default_create */
extern T0* T33c6(GE_context* ac);
/* KL_ARGUMENTS.set_program_name */
extern void T32f6(GE_context* ac, T0* C, T0* a1);
/* GEC.arguments */
extern T0* T24f17(GE_context* ac, T0* C);
/* KL_EXCEPTIONS.die */
extern void T38f2(GE_context* ac, T0* C, T6 a1);
/* KL_EXCEPTIONS.exceptions_die */
extern void T38f3(GE_context* ac, T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T24f19(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.set_exception_data */
extern void T20f16(GE_context* ac, T0* C, T6 a1, T1 a2, T6 a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T6 a11, T1 a12);
/* ISE_EXCEPTION_MANAGER.exception_from_data */
extern T0* T20f10(GE_context* ac, T0* C);
extern T1 T20f10ot1(T0* a1, T0** a2);
extern T1 T20f10ot2(T0* a1, T0** a2);
extern T1 T20f10ot3(T0* a1, T0** a2);
extern T1 T20f10ot4(T0* a1, T0** a2);
extern T1 T20f10ot5(T0* a1, T0** a2);
extern T1 T20f10ot6(T0* a1, T0** a2);
extern T1 T20f10ot7(T0* a1, T0** a2);
/* COM_FAILURE.set_exception_information */
extern void T100f15(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.ccom_hresult_to_string */
extern T0* T100f11(GE_context* ac, T0* C, T6 a1);
/* INTEGER_32.to_hex_string */
extern T0* T6f24(GE_context* ac, T6* C);
/* COM_FAILURE.set_hresult_code */
extern void T100f14(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_FAILURE.set_error_code */
extern void T99f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.set_error_code */
extern void T98f11(GE_context* ac, T0* C, T6 a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_signal_code */
extern void T97f9(GE_context* ac, T0* C, T6 a1);
/* INVARIANT_VIOLATION.set_is_entry */
extern void T96f9(GE_context* ac, T0* C, T1 a1);
/* ROUTINE_FAILURE.set_class_name */
extern void T91f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_routine_name */
extern void T91f9(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_from_code */
extern T0* T20f12(GE_context* ac, T0* C, T6 a1);
/* SERIALIZATION_FAILURE.default_create */
extern T0* T120c6(GE_context* ac);
/* OLD_VIOLATION.default_create */
extern T0* T93c6(GE_context* ac);
/* COM_FAILURE.default_create */
extern T0* T100c12(GE_context* ac);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.default_create */
extern T0* T119c6(GE_context* ac);
/* MISMATCH_FAILURE.default_create */
extern T0* T117c6(GE_context* ac);
/* OPERATING_SYSTEM_FAILURE.default_create */
extern T0* T99c7(GE_context* ac);
/* IO_FAILURE.set_code */
extern void T98f9(GE_context* ac, T0* C, T6 a1);
/* IO_FAILURE.default_create */
extern T0* T98c8(GE_context* ac);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.default_create */
extern T0* T116c6(GE_context* ac);
/* VOID_ASSIGNED_TO_EXPANDED.default_create */
extern T0* T115c6(GE_context* ac);
/* EXTERNAL_FAILURE.default_create */
extern T0* T114c6(GE_context* ac);
/* CREATE_ON_DEFERRED.default_create */
extern T0* T113c6(GE_context* ac);
/* RESUMPTION_FAILURE.default_create */
extern T0* T112c6(GE_context* ac);
/* RESCUE_FAILURE.default_create */
extern T0* T111c6(GE_context* ac);
/* EIFFEL_RUNTIME_PANIC.set_code */
extern void T101f9(GE_context* ac, T0* C, T6 a1);
/* EIFFEL_RUNTIME_PANIC.code */
extern T6 T101f7(GE_context* ac, T0* C);
/* EIFFEL_RUNTIME_PANIC.default_create */
extern T0* T101c8(GE_context* ac);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.default_create */
extern T0* T97c7(GE_context* ac);
/* LOOP_INVARIANT_VIOLATION.default_create */
extern T0* T110c6(GE_context* ac);
/* VARIANT_VIOLATION.default_create */
extern T0* T109c6(GE_context* ac);
/* BAD_INSPECT_VALUE.default_create */
extern T0* T108c6(GE_context* ac);
/* ROUTINE_FAILURE.default_create */
extern T0* T91c8(GE_context* ac);
/* CHECK_VIOLATION.default_create */
extern T0* T107c6(GE_context* ac);
/* INVARIANT_VIOLATION.default_create */
extern T0* T96c7(GE_context* ac);
/* FLOATING_POINT_FAILURE.default_create */
extern T0* T106c6(GE_context* ac);
/* POSTCONDITION_VIOLATION.default_create */
extern T0* T105c6(GE_context* ac);
/* PRECONDITION_VIOLATION.default_create */
extern T0* T104c6(GE_context* ac);
/* NO_MORE_MEMORY.set_code */
extern void T95f10(GE_context* ac, T0* C, T6 a1);
/* NO_MORE_MEMORY.code */
extern T6 T95f7(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.no_memory_exception_object_cell */
extern T0* T20f7(GE_context* ac, T0* C);
/* [attached] CELL [[attached] NO_MORE_MEMORY].put */
extern T0* T28c2(GE_context* ac, T0* a1);
/* NO_MORE_MEMORY.default_create */
extern T0* T95c8(GE_context* ac);
/* VOID_TARGET.default_create */
extern T0* T89c6(GE_context* ac);
/* ISE_EXCEPTION_MANAGER.exception_data */
extern T0* T20f11(GE_context* ac, T0* C);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern void T27f2(GE_context* ac, T0* C, T0* a1);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].put */
extern T0* T27c2(GE_context* ac, T0* a1);
/* ISE_EXCEPTION_MANAGER.exception_data_cell */
extern T0* T20f6(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.once_raise */
extern void T20f15(GE_context* ac, T0* C, T0* a1);
/* ISE_EXCEPTION_MANAGER.last_exception */
extern T0* T20f1(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.init_exception_manager */
extern void T20f14(GE_context* ac, T0* C);
/* [attached] CELL [[attached] NO_MORE_MEMORY].do_nothing */
extern void T28f3(GE_context* ac, T0* C);
/* [attached] CELL [detachable EXCEPTION].do_nothing */
extern void T25f3(GE_context* ac, T0* C);
/* [attached] CELL [detachable TUPLE [[attached] INTEGER_32, [attached] INTEGER_32, [attached] INTEGER_32, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] STRING_8, [attached] INTEGER_32, [attached] BOOLEAN]].do_nothing */
extern void T27f3(GE_context* ac, T0* C);
/* ISE_EXCEPTION_MANAGER.unraisable_exceptions */
extern T0* T20f5(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].force */
extern void T26f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].position */
extern T6 T26f22(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].deleted_position */
extern T6 T26f21(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].add_space */
extern void T26f39(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].accommodate */
extern void T26f40(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_indexes_map */
extern void T26f44(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_deleted_marks */
extern void T26f43(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_keys */
extern void T26f42(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_content */
extern void T26f41(GE_context* ac, T0* C, T0* a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].put */
extern void T26f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].set_conflict */
extern void T26f47(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].found */
extern T1 T26f31(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].occupied */
extern T1 T26f29(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].empty_duplicate */
extern T0* T26f28(GE_context* ac, T0* C, T6 a1);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].compare_objects */
extern void T26f46(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].soon_full */
extern T1 T26f20(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].not_found */
extern T1 T26f19(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].internal_search */
extern void T26f38(GE_context* ac, T0* C, T6 a1);
/* ISE_EXCEPTION_MANAGER.unignorable_exceptions */
extern T0* T20f4(GE_context* ac, T0* C);
/* [attached] HASH_TABLE [[attached] INTEGER_32, [attached] INTEGER_32].do_nothing */
extern void T26f36(GE_context* ac, T0* C);
/* KL_DIRECTORY.dispose */
extern void T369f31(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T339f28(GE_context* ac, T0* C);
/* MUTEX.dispose */
extern void T131f10(GE_context* ac, T0* C);
/* MUTEX.destroy */
extern void T131f13(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_destroy */
extern void T131f16(GE_context* ac, T0* C, T14 a1);
/* MUTEX.is_set */
extern T1 T131f3(GE_context* ac, T0* C);
/* MANAGED_POINTER.dispose */
extern void T129f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T31f60(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T31f65(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T31f70(GE_context* ac, T0* C, T14 a1);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T1995f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1957f12(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.put */
extern void T1957f12p1(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].forget_left */
extern void T1997f8(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].forget_right */
extern void T1997f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put_right */
extern void T1997f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].attach_left */
extern void T1997f11(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].item */
extern T0* T1996f4(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T1993f4(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].record */
extern void T1991f5(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1957f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.item */
extern T6 T1934f14(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.upper */
extern T6 T1957f6(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.lower */
extern T6 T1957f7(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.add */
extern void T1957f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.set_arguments */
extern void T1765f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T1564f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_arguments */
extern void T1344f32(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.set_arguments */
extern void T1343f14(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_arguments */
extern void T1341f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_EXPRESSION.set_arguments */
extern void T1246f12(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.set_arguments */
extern void T1012f35(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.set_arguments */
extern void T793f28(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL.set_arguments */
extern void T365f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T325f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_arguments */
extern void T324f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_arguments */
extern void T321f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1564f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_INSTRUCTION.make */
extern T0* T1765c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T325f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIS_EXPRESSION.make */
extern T0* T1246c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.set_parenthesis_call */
extern void T324f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_parenthesis_call */
extern void T321f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T1351f35(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T1350f35(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T753f101(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T740f56(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T734f54(GE_context* ac, T0* C);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1552f4(GE_context* ac, T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T198f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove */
extern void T1622f15(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].keep_head */
extern void T1834f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ECF_CLUSTER].set_count */
extern void T1834f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_left */
extern void T1622f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_cursors_left */
extern void T1622f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_position */
extern void T1836f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].remove_last */
extern void T1622f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].move_last_cursors_after */
extern void T1622f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_next_cursor */
extern void T1836f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ECF_CLUSTER].set_after */
extern void T1836f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].remove */
extern void T1389f15(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].keep_head */
extern void T1678f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_XACE_CLUSTER].set_count */
extern void T1678f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_left */
extern void T1389f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_cursors_left */
extern void T1389f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_position */
extern void T1680f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].remove_last */
extern void T1389f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].move_last_cursors_after */
extern void T1389f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_next_cursor */
extern void T1680f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_XACE_CLUSTER].set_after */
extern void T1680f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].remove */
extern void T674f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_left */
extern void T674f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_cursors_left */
extern void T674f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_position */
extern void T1458f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].remove_last */
extern void T674f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].move_last_cursors_after */
extern void T674f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_next_cursor */
extern void T1458f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LACE_CLUSTER].set_after */
extern void T1458f7(GE_context* ac, T0* C);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1551f6(GE_context* ac, T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1550f5(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T157f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1907f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_type */
extern void T1907f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T255f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_is_equal_argument_type */
extern void T80f517(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T80f178(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T255f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T255f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.put_type_from_type_set */
extern void T1906f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_type */
extern void T1906f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T351f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_tuple_label */
extern void T351f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T255f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T80f511(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f511ot1(T0* a1, T0** a2);
extern T1 T80f511ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_argument_dynamic_types */
extern void T80f515(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T351f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T351f15ot1(T0* a1, T0** a2);
extern T1 T351f15ot2(T0* a1, T0** a2);
extern T1 T351f15ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T1547f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1547f20ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T343f32(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T263f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin_procedure_call */
extern T1 T343f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin_procedure_call */
extern T1 T263f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T347f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_tuple_label */
extern void T347f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T255f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_expression_dynamic_types */
extern void T80f510(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f510ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_result_dynamic_types */
extern void T80f514(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T347f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T347f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T347f16p1ot1(T0* a1, T0** a2);
extern T1 T347f16p1ot2(T0* a1, T0** a2);
extern T1 T347f16p1ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1907f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.propagate_can_be_void */
extern void T1906f9(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T351f13(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T347f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1564f8(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset */
extern void T1564f8p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T1564f9(GE_context* ac, T0* C);
extern T1 T1564f9ot1(T0* a1, T0** a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.reset */
extern void T1787f15(GE_context* ac, T0* C);
extern T1 T1787f15ot1(T0* a1, T0** a2);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T320f19(GE_context* ac, T0* C);
extern T1 T320f19ot1(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1343f12(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T1343f6(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T1343f12p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset_arguments */
extern void T1343f13(GE_context* ac, T0* C);
extern T1 T1343f13ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T1341f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset_arguments */
extern void T1341f14(GE_context* ac, T0* C);
extern T1 T1341f14ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.reset */
extern void T1339f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T365f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.reset_arguments */
extern void T365f8(GE_context* ac, T0* C);
extern T1 T365f8ot1(T0* a1, T0** a2);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T1339f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T1338f14(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T1336f15(GE_context* ac, T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T1336f9(GE_context* ac, T0* C);
/* ET_VARIANT.reset */
extern void T1025f7(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T966f12(GE_context* ac, T0* C);
/* ET_COMPOUND.reset */
extern void T372f13(GE_context* ac, T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T1335f7(GE_context* ac, T0* C);
/* ET_ASSIGNMENT.reset */
extern void T1334f7(GE_context* ac, T0* C);
extern T1 T1334f7ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T1333f17(GE_context* ac, T0* C);
extern T1 T1333f17ot1(T0* a1, T0** a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern T0* T1333f6(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T944f10(GE_context* ac, T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T1031f7(GE_context* ac, T0* C);
/* ET_WHEN_PART.reset */
extern void T1028f4(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.reset */
extern void T813f11(GE_context* ac, T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T944f6(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T923f12(GE_context* ac, T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T874f7(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.reset */
extern void T871f5(GE_context* ac, T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T871f3(GE_context* ac, T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T923f7(GE_context* ac, T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T862f7(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T801f15(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T801f15p1(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset */
extern void T770f25(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.reset_unfolded_form */
extern void T770f26(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T750f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T321f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T321f15p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset */
extern void T321f15p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.reset_arguments */
extern void T321f17(GE_context* ac, T0* C);
extern T1 T321f17ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.process */
extern void T1564f7(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T1343f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T1341f12(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T1339f15(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T1338f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T1336f14(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T1335f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T1334f6(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T1333f16(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T944f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T923f11(GE_context* ac, T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T862f6(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T801f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.process */
extern void T770f24(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T750f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.process */
extern void T321f14(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1362f37(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1361f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_object_tests */
extern void T1360f39(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1359f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1358f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_object_tests */
extern void T1357f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1362f38(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1361f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_across_components */
extern void T1360f40(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1359f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1358f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_across_components */
extern void T1357f41(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_RANGE.reset */
extern void T1340f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T1324f47(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T1324f9(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T1322f104(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T1321f71(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T1321f35(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T1320f90(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T1320f26(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T1251f71(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T787f86(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T787f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T1324f46(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T1322f103(GE_context* ac, T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T1322f43(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T1321f70(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T1320f89(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T1251f70(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T1251f32(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T787f85(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T1324f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.reset */
extern void T787f87(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.set_sign */
extern void T1291f65(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_sign */
extern void T1290f65(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T1289f65(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T1288f65(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T403f65(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_type */
extern void T1291f70(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_type */
extern void T1290f70(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T1289f70(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T1288f70(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T403f73(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_cast_type */
extern void T1291f68(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_cast_type */
extern void T1290f68(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T1289f68(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T1288f68(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T403f68(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T1298f49(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T1297f49(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T1285f51(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.set_cast_type */
extern void T1298f46(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_cast_type */
extern void T1297f46(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_cast_type */
extern void T1285f47(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T639f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T639f302(GE_context* ac, T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T222f16(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T639f302p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T639f73(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T637f202(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T637f211(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T637f211p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T637f55(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T636f291(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T636f298(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T636f298p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T636f71(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T599f200(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T599f208(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T599f208p1(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T599f46(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T639f296(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T639f296p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T639f296p0(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T639f306(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1430f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T36f17(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1430f7(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1430f3(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1430f6(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1430f2(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1430f5(GE_context* ac, T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1173f24(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1430f4(GE_context* ac, T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1430f9(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T639f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T639f183(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T639f182(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T639f164(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T639f209(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T639f123(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T639f123p1(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T639f310(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T639f107(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T639f309(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T639f307(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T639f308(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T639f305(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T639f101(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T639f304(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T639f100(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T639f99(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T639f303(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T637f203(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T637f203p1(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T637f217(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T637f183(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T637f163(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T637f162(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T637f144(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T637f197(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T637f106(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T637f223(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T637f80(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T637f222(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T637f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T637f216(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T637f68(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T637f215(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T637f67(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T637f66(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T637f214(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T637f213(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T637f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T636f292(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T636f292p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T636f301(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T636f200(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T636f180(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T636f179(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T636f161(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T636f207(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T636f120(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T636f120p1(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T636f306(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T636f104(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T636f305(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T636f302(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T636f304(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T636f300(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T636f303(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T636f98(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T636f299(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T636f97(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T636f96(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T599f201(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T599f212(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T599f181(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T599f161(GE_context* ac, T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T599f160(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T599f142(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T599f195(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T599f101(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T599f220(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T599f75(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T599f219(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T599f221(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T599f213(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T599f218(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T599f211(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T599f217(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T599f63(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T599f210(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T599f62(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T599f61(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T599f209(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T639f298(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T637f205(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T636f294(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T599f203(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T639f299(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T1266f31(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T637f206(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T636f295(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T599f204(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T639f300(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T637f207(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T636f296(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T599f205(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T639f297(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T637f204(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T636f293(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T599f202(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T1323f8(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.consume */
extern void T476f168(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T300f6(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T298f306(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T298f360(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1743c14(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T298f70(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T34f305(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T34f349(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T34f69(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T300f2(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T247f190(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T300f7(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T234f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.consume */
extern void T215f168(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.preparse */
extern void T476f169(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.preparse */
extern void T247f191(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.preparse */
extern void T234f177(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.preparse */
extern void T215f169(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.import_classes */
extern void T476f170(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_class */
extern void T476f182(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_imported_class */
extern void T496f85(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_imported_class */
extern T1 T496f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_MASTER_CLASS].has */
extern T1 T1399f13(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.is_declared_locally */
extern T1 T496f31(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T476f181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern T0* T82f811(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_classes */
extern void T247f192(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_class */
extern void T247f204(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.import_kernel_classes */
extern void T247f203(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_classes */
extern void T234f178(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_class */
extern void T234f190(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T234f189(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_classes */
extern void T215f170(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_class */
extern void T215f183(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.import_kernel_classes */
extern void T215f182(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T476f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T476f171ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T479f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_DOTNET_ASSEMBLIES.do_all */
extern void T475f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].item */
extern T0* T1395f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].force_last */
extern void T497f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_put */
extern void T497f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_put */
extern void T497f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_item */
extern T6 T497f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].hash_position */
extern T6 T497f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].resize */
extern void T497f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_resize */
extern void T497f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].special_integer_ */
extern T0* T497f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_resize */
extern void T497f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_resize */
extern void T497f59(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1403f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].aliased_resized_area */
extern T0* T1401f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_storage_item */
extern T0* T497f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_item */
extern T0* T497f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].clashes_item */
extern T6 T497f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].slots_resize */
extern void T497f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_modulus */
extern T6 T497f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_capacity */
extern T6 T497f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_storage_put */
extern void T497f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].force */
extern void T1403f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].fill_with */
extern void T1401f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].extend */
extern void T1401f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].search_position */
extern void T497f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].key_equality_tester */
extern T0* T497f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].unset_found_item */
extern void T497f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].has */
extern T1 T497f24(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern void T247f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_universe_recursive */
extern T0* T247f193ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T234f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T234f179ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern void T215f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_universe_recursive */
extern T0* T215f171ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T476f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T476f172ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T474f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_put */
extern void T474f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_put */
extern void T474f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_item */
extern T6 T474f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].hash_position */
extern T6 T474f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T474f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_resize */
extern void T474f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].special_integer_ */
extern T0* T474f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_resize */
extern void T474f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_resize */
extern void T474f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1392f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].aliased_resized_area */
extern T0* T1393f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_storage_item */
extern T0* T474f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_item */
extern T0* T474f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].clashes_item */
extern T6 T474f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].slots_resize */
extern void T474f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_modulus */
extern T6 T474f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T474f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].item_storage_put */
extern void T474f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_ASSEMBLY].force */
extern void T1392f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].fill_with */
extern void T1393f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_ASSEMBLY].extend */
extern void T1393f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].search_position */
extern void T474f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].key_equality_tester */
extern T0* T474f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].unset_found_item */
extern void T474f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T474f29(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T247f194(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T247f194ac1(GE_context* ac, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T234f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T234f180ac1(GE_context* ac, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern void T215f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.add_dotnet_assembly_recursive */
extern T0* T215f172ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.dotnet_assemblies_do_if */
extern void T486f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_if */
extern void T214f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.dotnet_assemblies_do_if */
extern void T191f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.dotnet_assemblies_do_if */
extern void T71f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.dotnet_assemblies_do_if */
extern void T65f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.dotnet_assemblies_do_if */
extern void T62f268(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.clusters_do_explicit */
extern void T486f184(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_explicit */
extern void T652f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.do_recursive */
extern void T1198f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLUSTER].item */
extern T0* T1447f7(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_LIBRARY.clusters_do_explicit */
extern void T191f211(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit */
extern void T71f259(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_explicit */
extern void T231f11(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.do_recursive */
extern void T231f12(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit */
extern void T65f269(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit */
extern void T62f269(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_explicit */
extern void T454f15(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.do_recursive */
extern void T454f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_read_mapping */
extern void T1213f89(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_read_mapping */
extern void T458f70(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_read_mapping */
extern void T232f65(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_scm_write_mapping */
extern void T1213f90(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_scm_write_mapping */
extern void T458f71(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_scm_write_mapping */
extern void T232f66(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_preparsed */
extern void T1213f95(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T458f78(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T232f68(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.add_recursive_cluster */
extern void T1213f96(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.new_recursive_cluster */
extern T0* T1213f53(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_implicit */
extern void T1213f103(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_CLUSTER.set_file_rules */
extern void T1213f102(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.make_relative */
extern T0* T1213c101(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CLUSTER.string_ */
extern T0* T1213f52(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T458f79(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T458f82(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T458f42(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_use_obsolete_syntax */
extern void T458f84(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T458f83(GE_context* ac, T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T458f41(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T232f69(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T232f48(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_use_obsolete_syntax */
extern void T232f71(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T232f70(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T232f22(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T232f40(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.set_provider_constraint */
extern void T1213f97(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_provider_constraint */
extern void T1198f12(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T458f80(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T454f18(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T232f63(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T231f9(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.set_dependant_constraint */
extern void T1213f98(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTERS.set_dependant_constraint */
extern void T1198f13(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T458f81(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T454f19(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T232f64(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T231f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.process */
extern void T1213f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T295f3(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T285f177(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T285f178(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T285f178ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_EIFFEL_PREPARSER.preparse_cluster */
extern T0* T285f178ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_CLASS]].set_rout_disp_final */
extern void T511f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLASS.is_in_group */
extern T1 T83f180(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T285f182(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T285f181(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1278c17(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_key_equality_tester */
extern void T1665f35(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_equality_tester */
extern T0* T1278f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_map */
extern T0* T1665c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_with_equality_testers */
extern void T1665f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_sparse_container */
extern void T1665f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].set_internal_cursor */
extern void T1665f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_cursor */
extern T0* T1665f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].make */
extern T0* T1830c9(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].unset_found_item */
extern void T1665f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_slots */
extern void T1665f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].new_modulus */
extern T6 T1665f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_clashes */
extern void T1665f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_key_storage */
extern void T1665f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].make_item_storage */
extern void T1665f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].make */
extern T0* T1884f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].make_empty */
extern T0* T1881c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].default_create */
extern T0* T1884c2(GE_context* ac);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make_with_pathnames */
extern T0* T1278c16(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].put_last */
extern void T1665f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_put */
extern void T1665f44(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_put */
extern void T1665f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_put */
extern void T1665f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_item */
extern T6 T1665f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].compress */
extern void T1665f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].hash_position */
extern T6 T1665f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].slots_wipe_out */
extern void T1665f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_wipe_out */
extern void T1665f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_keep_head */
extern void T1665f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_keep_head */
extern void T1665f47(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].keep_head */
extern void T1881f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_WILDCARD].set_count */
extern void T1881f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].move_all_cursors */
extern void T1665f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_position */
extern void T1830f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].key_storage_item */
extern T0* T1665f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_item */
extern T0* T1665f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].clashes_item */
extern T6 T1665f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].item_storage_put */
extern void T1665f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_WILDCARD].force */
extern void T1884f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_WILDCARD].fill_with */
extern void T1881f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_WILDCARD].extend */
extern void T1881f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].search_position */
extern void T1665f39(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile */
extern void T1664f16(GE_context* ac, T0* C, T0* a1, T1 a2);
/* LX_DFA_WILDCARD.compile */
extern T0* T1664c16(GE_context* ac, T0* a1, T1 a2);
/* LX_FULL_DFA.make */
extern T0* T1879c37(GE_context* ac, T0* a1);
/* LX_FULL_DFA.build */
extern void T1879f40(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_accept_table */
extern void T1879f46(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].first */
extern T0* T1931f6(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_nxt_table */
extern void T1879f45(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].target */
extern T0* T1960f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [detachable LX_DFA_STATE].item */
extern T0* T2014f4(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.is_accepting */
extern T1 T1954f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].is_empty */
extern T1 T1931f11(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_transitions */
extern void T1879f44(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].set_target */
extern void T1960f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [detachable LX_DFA_STATE].put */
extern void T2014f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.previous_symbol */
extern T6 T1957f4(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.new_state */
extern T0* T1879f36(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.set_id */
extern void T1954f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].put_last */
extern void T1956f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].force */
extern void T2011f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].fill_with */
extern void T2010f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].extend */
extern void T2010f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.is_equal */
extern T1 T1954f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_equal */
extern T1 T1955f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].any_ */
extern T0* T1955f17(GE_context* ac, T0* C);
/* LX_DFA_STATE.any_ */
extern T0* T1954f14(GE_context* ac, T0* C);
/* LX_DFA_STATE.new_state */
extern T0* T1954f9(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.make */
extern T0* T1954c16(GE_context* ac, T0* a1, T6 a2, T6 a3);
extern T1 T1954f16ot1(T0* a1, T0** a2);
/* LX_RULE.set_useful */
extern void T1942f22(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].sort */
extern void T1931f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].sort */
extern void T2003f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].sort_with_comparator */
extern void T2003f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].subsort_with_comparator */
extern void T2003f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].replace */
extern void T1931f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].less_than */
extern T1 T2038f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].detachable_less_than */
extern T1 T2038f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].attached_less_than */
extern T1 T2038f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_RULE.is_less */
extern T1 T1942f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].item */
extern T0* T1931f10(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.rule_sorter */
extern T0* T1954f7(GE_context* ac, T0* C);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_RULE].make */
extern T0* T2003c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_RULE].make */
extern T0* T2038c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].sort */
extern void T1955f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort */
extern void T2001f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].sort_with_comparator */
extern void T2001f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].subsort_with_comparator */
extern void T2001f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].replace */
extern void T1955f22(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].less_than */
extern T1 T2041f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].detachable_less_than */
extern T1 T2041f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].attached_less_than */
extern T1 T2041f3(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_NFA_STATE.is_less */
extern T1 T1963f9(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_STATE.bubble_sorter */
extern T0* T1954f8(GE_context* ac, T0* C);
/* [attached] DS_BUBBLE_SORTER [[attached] LX_NFA_STATE].make */
extern T0* T2001c2(GE_context* ac, T0* a1);
/* [attached] KL_COMPARABLE_COMPARATOR [[attached] LX_NFA_STATE].make */
extern T0* T2041c4(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].last */
extern T0* T1955f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].is_empty */
extern T1 T1955f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].force_last */
extern void T1931f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].force */
extern void T1983f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_RULE].fill_with */
extern void T1953f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_RULE].extend */
extern void T1953f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].resize */
extern void T1931f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].aliased_resized_area */
extern T0* T1983f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_RULE].aliased_resized_area */
extern T0* T1953f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].new_capacity */
extern T6 T1931f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].extendible */
extern T1 T1931f8(GE_context* ac, T0* C, T6 a1);
/* LX_NFA_STATE.is_accepting_head */
extern T1 T1963f6(GE_context* ac, T0* C);
/* LX_NFA_STATE.has_transition */
extern T1 T1963f8(GE_context* ac, T0* C);
/* LX_NFA_STATE.is_accepting */
extern T1 T1963f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].has */
extern T1 T1955f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].force_last */
extern void T1955f23(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].force */
extern void T2007f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].fill_with */
extern void T2005f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].extend */
extern void T2005f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].resize */
extern void T1955f28(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2007f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].aliased_resized_area */
extern T0* T2005f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_capacity */
extern T6 T1955f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extendible */
extern T1 T1955f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].make */
extern T0* T1931c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].set_internal_cursor */
extern void T1931f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].new_cursor */
extern T0* T1931f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].make */
extern T0* T1984c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].make */
extern T0* T1983f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_RULE].make_empty */
extern void T1953f7(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_RULE].make_empty */
extern T0* T1953c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T1983c3(GE_context* ac);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].make */
extern T0* T1960c7(GE_context* ac, T6 a1, T6 a2);
/* [attached] KL_ARRAY_ROUTINES [detachable LX_DFA_STATE].default_create */
extern T0* T2015c1(GE_context* ac);
/* [attached] ARRAY [detachable LX_DFA_STATE].make_filled */
extern T0* T2014c5(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [detachable LX_DFA_STATE].make_filled_area */
extern void T2014f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].make_filled */
extern T0* T2010c8(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].make_empty */
extern void T2010f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].make_empty */
extern T0* T2010c5(GE_context* ac, T6 a1);
/* LX_DFA_STATE.maximum_symbol */
extern T6 T1954f13(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].upper */
extern T6 T1960f5(GE_context* ac, T0* C);
/* LX_DFA_STATE.minimum_symbol */
extern T6 T1954f12(GE_context* ac, T0* C);
/* [attached] LX_TRANSITION_TABLE [[attached] LX_DFA_STATE].lower */
extern T6 T1960f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_last */
extern void T1955f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].item */
extern T0* T1955f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].make */
extern T0* T1955c19(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].set_internal_cursor */
extern void T1955f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].new_cursor */
extern T0* T1955f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].make */
extern T0* T2008c9(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].make */
extern T0* T2007f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA_STATE].make_empty */
extern T0* T2005c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA_STATE].default_create */
extern T0* T2007c3(GE_context* ac);
/* LX_SYMBOL_PARTITIONS.is_representative */
extern T1 T1957f8(GE_context* ac, T0* C, T6 a1);
/* LX_DFA_STATE.partition */
extern void T1954f18(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1957f10(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] BOOLEAN].clear_all */
extern void T1129f8(GE_context* ac, T0* C);
/* LX_SYMBOL_PARTITIONS.initialize */
extern void T1957f10p1(GE_context* ac, T0* C);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put_left */
extern void T1997f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].attach_right */
extern void T1997f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].put */
extern void T1997f5(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.resize */
extern void T1879f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].resize */
extern void T1956f10(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2011f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_DFA_STATE].aliased_resized_area */
extern T0* T2010f4(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.capacity */
extern T6 T1957f5(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].count */
extern T6 T1996f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].item */
extern T0* T1956f7(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_PARTITIONS.make */
extern T0* T1957c9(GE_context* ac, T6 a1, T6 a2);
/* LX_SYMBOL_PARTITIONS.make */
extern void T1957f9p1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].put */
extern void T1996f7(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T1996c6(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled_area */
extern void T1996f8(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_filled */
extern T0* T1998c4(GE_context* ac, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].fill_with */
extern void T1998f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].extend */
extern void T1998f8(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] DS_BILINKABLE [[attached] INTEGER_32]].make_empty */
extern void T1998f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_BILINKABLE [[attached] INTEGER_32].make */
extern T0* T1997c4(GE_context* ac, T6 a1);
/* LX_FULL_DFA.put_eob_state */
extern void T1879f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].force_first */
extern void T1931f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].put */
extern void T1931f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].move_cursors_right */
extern void T1931f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_RULE].set_position */
extern void T1984f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].move_right */
extern void T1931f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_RULE].put_last */
extern void T1931f19(GE_context* ac, T0* C, T0* a1);
/* LX_RULE.make_default */
extern T0* T1942c14(GE_context* ac, T6 a1);
/* LX_RULE.dummy_action */
extern T0* T1942f11(GE_context* ac, T0* C);
/* LX_ACTION.make */
extern T0* T2000c2(GE_context* ac, T0* a1);
/* LX_RULE.dummy_pattern */
extern T0* T1942f12(GE_context* ac, T0* C);
/* LX_NFA.make_epsilon */
extern T0* T1939c12(GE_context* ac, T1 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put_first */
extern void T1955f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].put */
extern void T1955f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_cursors_right */
extern void T1955f31(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_position */
extern void T2008f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].move_right */
extern void T1955f30(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_NFA_STATE.set_transition */
extern void T1963f11(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T1993c3(GE_context* ac, T0* a1);
/* LX_NFA_STATE.make */
extern T0* T1963c10(GE_context* ac, T1 a1);
/* LX_FULL_DFA.initialize */
extern void T1879f38(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_DFA.initialize_dfa */
extern void T1879f43(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* LX_FULL_DFA.put_start_condition */
extern void T1879f48(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.start_state */
extern T0* T1939f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].first */
extern T0* T1955f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].item */
extern T0* T1961f7(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.item */
extern T0* T1932f9(GE_context* ac, T0* C, T6 a1);
/* LX_FULL_DFA.set_nfa_state_ids */
extern void T1879f47(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_id */
extern void T1963f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].force */
extern void T1962f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_put */
extern void T1962f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_put */
extern void T1962f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_put */
extern void T1962f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_item */
extern T6 T1962f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_item */
extern T6 T1962f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].hash_position */
extern T6 T1962f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].resize */
extern void T1962f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].clashes_resize */
extern void T1962f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].special_integer_ */
extern T0* T1962f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_resize */
extern void T1962f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_resize */
extern void T1962f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].aliased_resized_area */
extern T0* T1938f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_NFA].aliased_resized_area */
extern T0* T1940f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].key_storage_item */
extern T6 T1962f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].slots_resize */
extern void T1962f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_modulus */
extern T6 T1962f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_capacity */
extern T6 T1962f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_put */
extern void T1962f39(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].force */
extern void T1938f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA].fill_with */
extern void T1940f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_NFA].extend */
extern void T1940f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].search_position */
extern void T1962f36(GE_context* ac, T0* C, T6 a1);
/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32].test */
extern T1 T641f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].unset_found_item */
extern void T1962f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item */
extern T0* T1962f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].item_storage_item */
extern T0* T1962f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].has */
extern T1 T1962f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T1962c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_with_equality_testers */
extern void T1962f37(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_sparse_container */
extern void T1962f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].set_internal_cursor */
extern void T1962f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].new_cursor */
extern T0* T1962f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_NFA, [attached] INTEGER_32].make */
extern T0* T2018c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_slots */
extern void T1962f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_clashes */
extern void T1962f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_key_storage */
extern void T1962f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_NFA, [attached] INTEGER_32].make_item_storage */
extern void T1962f49(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].make */
extern T0* T1938f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA].make_empty */
extern T0* T1940c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_NFA].default_create */
extern T0* T1938c3(GE_context* ac);
/* detachable KL_EQUALITY_TESTER [[attached] INTEGER_32].default_create */
extern T0* T641c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].make */
extern T0* T1956c8(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].set_internal_cursor */
extern void T1956f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_DFA_STATE].new_cursor */
extern T0* T1956f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_DFA_STATE].make */
extern T0* T2012c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].make */
extern T0* T2011f1(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_DFA_STATE].default_create */
extern T0* T2011c3(GE_context* ac);
/* LX_EQUIVALENCE_CLASSES.to_array */
extern T0* T1941f6(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.lower */
extern T6 T1941f5(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.upper */
extern T6 T1941f4(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.built */
extern T1 T1941f3(GE_context* ac, T0* C);
/* LX_FULL_DFA.build_eof_rules */
extern void T1879f42(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] LX_RULE].put */
extern void T1952f5(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] ARRAY [[attached] LX_RULE].make_filled */
extern T0* T1952c4(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* [attached] ARRAY [[attached] LX_RULE].make_filled_area */
extern void T1952f6(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_RULE].make_filled */
extern T0* T1953c5(GE_context* ac, T0* a1, T6 a2);
/* LX_FULL_DFA.build_rules */
extern void T1879f41(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE].make_empty_with_lower */
extern T0* T1958f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] LX_RULE].make_from_array */
extern T0* T1952c8(GE_context* ac, T0* a1);
/* [attached] ARRAY [[attached] LX_RULE].set_area */
extern void T1952f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY [[attached] LX_RULE].new_rebase */
extern void T2013f5(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY [[attached] LX_RULE].make_empty */
extern T0* T2013c4(GE_context* ac);
/* [attached] KL_ARRAY [[attached] LX_RULE].make_empty_area */
extern void T2013f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] LX_RULE].make_empty */
extern T0* T1952c7(GE_context* ac);
/* [attached] ARRAY [[attached] LX_RULE].make_empty_area */
extern void T1952f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] LX_RULE].default_create */
extern T0* T1958c2(GE_context* ac);
/* LX_START_CONDITIONS.names */
extern T0* T1932f7(GE_context* ac, T0* C);
/* LX_START_CONDITIONS.first */
extern T0* T1932f6(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8].make_empty_with_lower */
extern T0* T1985f1(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].make_from_array */
extern T0* T145c18(GE_context* ac, T0* a1);
/* [attached] KL_ARRAY [[attached] STRING_8].new_rebase */
extern void T2044f5(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY [[attached] STRING_8].make_empty */
extern T0* T2044c4(GE_context* ac);
/* [attached] KL_ARRAY [[attached] STRING_8].make_empty_area */
extern void T2044f6(GE_context* ac, T0* C, T6 a1);
/* [attached] ARRAY [[attached] STRING_8].make_empty */
extern T0* T145c17(GE_context* ac);
/* LX_START_CONDITIONS.string_array_routines */
extern T0* T1932f11(GE_context* ac, T0* C);
/* [attached] KL_ARRAY_ROUTINES [[attached] STRING_8].default_create */
extern T0* T1985c2(GE_context* ac);
/* LX_WILDCARD_PARSER.parse_string */
extern void T1877f222(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.parse */
extern void T1877f226(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_pop_last_value */
extern void T1877f239(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_push_error_value */
extern void T1877f238(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_action */
extern void T1877f237(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_string */
extern T0* T1877f172(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_symbol_nfa */
extern T0* T1877f217(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.make_symbol */
extern T0* T1939c13(GE_context* ac, T6 a1, T1 a2);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T1995c4(GE_context* ac, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force_new */
extern void T1935f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_put */
extern void T1935f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_put */
extern void T1935f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_put */
extern void T1935f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_put */
extern void T1935f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_item */
extern T6 T1935f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].hash_position */
extern T6 T1935f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_item */
extern T6 T1935f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].resize */
extern void T1935f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].clashes_resize */
extern void T1935f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].special_integer_ */
extern T0* T1935f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_resize */
extern void T1935f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_resize */
extern void T1935f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].key_storage_item */
extern T0* T1935f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].slots_resize */
extern void T1935f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_modulus */
extern T6 T1935f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_capacity */
extern T6 T1935f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].unset_found_item */
extern void T1935f47(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.add */
extern void T1941f11(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.put */
extern void T1934f19(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.force_last */
extern void T1934f22(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.resize */
extern void T1934f23(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.new_capacity */
extern T6 T1934f13(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.extendible */
extern T1 T1934f11(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.last */
extern T6 T1934f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.is_empty */
extern T1 T1934f10(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.has */
extern T1 T1934f9(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.arrayed_has */
extern T1 T1934f15(GE_context* ac, T0* C, T6 a1);
/* LX_SYMBOL_CLASS.make */
extern T0* T1934c18(GE_context* ac, T6 a1);
/* LX_SYMBOL_CLASS.set_internal_cursor */
extern void T1934f21(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.new_cursor */
extern T0* T1934f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found_item */
extern T0* T1935f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item_storage_item */
extern T0* T1935f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].found */
extern T1 T1935f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search */
extern void T1935f43(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].search_position */
extern void T1935f45(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.new_epsilon_nfa */
extern T0* T1877f171(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.append_character_set_to_character_class */
extern T0* T1877f170(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_negative_range_in_character_class_error */
extern void T1877f272(GE_context* ac, T0* C);
/* UT_ERROR_HANDLER.report_error */
extern void T132f7(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T132f8(GE_context* ac, T0* C, T0* a1);
/* UT_ERROR_HANDLER.message */
extern T0* T132f5(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.make */
extern T0* T1975c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.filename */
extern T0* T1877f190(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1936f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].aliased_resized_area */
extern T0* T1937f4(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.append_character_to_character_class */
extern T0* T1877f169(GE_context* ac, T0* C, T6 a1, T0* a2);
/* LX_WILDCARD_PARSER.new_character_class */
extern T0* T1877f168(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.set_negated */
extern void T1934f20(GE_context* ac, T0* C, T1 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].force */
extern void T1936f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].fill_with */
extern void T1937f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].extend */
extern void T1937f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].force */
extern void T1935f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.new_nfa_from_character_class */
extern T0* T1877f167(GE_context* ac, T0* C, T0* a1);
/* LX_SYMBOL_CLASS.sort */
extern void T1934f24(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.arrayed_sort */
extern void T1934f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].sort */
extern void T2037f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].sort_with_comparator */
extern void T2037f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].subsort_with_comparator */
extern void T2037f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* LX_SYMBOL_CLASS.replace */
extern void T1934f27(GE_context* ac, T0* C, T6 a1, T6 a2);
/* LX_SYMBOL_CLASS.sorter */
extern T0* T1934f17(GE_context* ac, T0* C);
/* [attached] DS_SHELL_SORTER [[attached] INTEGER_32].make */
extern T0* T2037c2(GE_context* ac, T0* a1);
/* LX_WILDCARD_PARSER.new_symbol_class_nfa */
extern T0* T1877f165(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.make_symbol_class */
extern T0* T1939c6(GE_context* ac, T0* a1, T1 a2);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].make */
extern T0* T1991c4(GE_context* ac, T0* a1, T0* a2);
/* LX_WILDCARD_PARSER.question_character_class */
extern T0* T1877f164(GE_context* ac, T0* C);
/* LX_NFA.build_optional */
extern void T1939f11(GE_context* ac, T0* C);
/* LX_NFA_STATE.set_epsilon_transition */
extern void T1963f12(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.final_state */
extern T0* T1939f5(GE_context* ac, T0* C);
/* LX_NFA.build_positive_closure */
extern void T1939f10(GE_context* ac, T0* C);
/* LX_NFA.build_closure */
extern void T1939f9(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_nfa_from_character */
extern T0* T1877f163(GE_context* ac, T0* C, T6 a1);
/* LX_NFA.build_concatenation */
extern void T1939f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].append_last */
extern void T1955f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].extend_last */
extern void T1955f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].forth */
extern void T2008f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_forth */
extern void T1955f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].add_traversing_cursor */
extern void T1955f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_next_cursor */
extern void T2008f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].remove_traversing_cursor */
extern void T1955f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].item */
extern T0* T2008f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_item */
extern T0* T1955f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].after */
extern T1 T2008f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].start */
extern void T2008f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA_STATE].cursor_start */
extern void T1955f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].set_after */
extern void T2008f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].off */
extern T1 T2008f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA_STATE].before */
extern T1 T2008f8(GE_context* ac, T0* C);
/* LX_NFA.build_union */
extern void T1939f7(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_unrecognized_rule_error */
extern void T1877f252(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.make */
extern T0* T1944c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_rule */
extern void T1877f251(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.add_nfa_to_all */
extern void T1932f13(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.put_nfa */
extern void T1959f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].force_last */
extern void T1961f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].resize */
extern void T1961f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].new_capacity */
extern T6 T1961f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].extendible */
extern T1 T1961f8(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.add_nfa_to_non_exclusive */
extern void T1932f15(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.is_empty */
extern T1 T1932f8(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_variable_trail_context */
extern void T1878f35(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_column_count */
extern void T1942f21(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_line_count */
extern void T1942f20(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_count */
extern void T1942f19(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_head_count */
extern void T1942f18(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_trail_context */
extern void T1942f17(GE_context* ac, T0* C, T1 a1);
/* LX_RULE.set_line_nb */
extern void T1942f16(GE_context* ac, T0* C, T6 a1);
/* LX_RULE.set_pattern */
extern void T1942f15(GE_context* ac, T0* C, T0* a1);
/* LX_NFA.set_accepted_rule */
extern void T1939f14(GE_context* ac, T0* C, T0* a1);
/* LX_NFA_STATE.set_accepted_rule */
extern void T1963f13(GE_context* ac, T0* C, T0* a1);
/* LX_DESCRIPTION.create_equiv_classes */
extern void T1878f34(GE_context* ac, T0* C);
/* LX_EQUIVALENCE_CLASSES.make */
extern T0* T1941c9(GE_context* ac, T6 a1, T6 a2);
/* LX_EQUIVALENCE_CLASSES.initialize */
extern void T1941f12(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.check_options */
extern void T1877f250(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_full_and_variable_trailing_context_error */
extern void T1877f265(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.make */
extern T0* T1950c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_reject_error */
extern void T1877f264(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.make */
extern T0* T1949c8(GE_context* ac);
/* LX_WILDCARD_PARSER.report_full_and_meta_equiv_classes_error */
extern void T1877f263(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.make */
extern T0* T1948c8(GE_context* ac);
/* LX_WILDCARD_PARSER.build_equiv_classes */
extern void T1877f249(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].forth */
extern void T1943f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_forth */
extern void T1935f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].add_traversing_cursor */
extern void T1935f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_next_cursor */
extern void T1943f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_position */
extern void T1943f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].remove_traversing_cursor */
extern void T1935f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_after */
extern void T1943f12(GE_context* ac, T0* C);
/* LX_SYMBOL_CLASS.convert_to_equivalence */
extern void T1934f26(GE_context* ac, T0* C, T0* a1);
/* LX_EQUIVALENCE_CLASSES.equivalence_class */
extern T6 T1941f8(GE_context* ac, T0* C, T6 a1);
/* LX_EQUIVALENCE_CLASSES.is_representative */
extern T1 T1941f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T1943f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_item */
extern T0* T1935f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].after */
extern T1 T1943f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].start */
extern void T1943f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_start */
extern void T1935f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].cursor_off */
extern T1 T1935f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].off */
extern T1 T1943f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].is_empty */
extern T1 T1935f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].new_cursor */
extern T0* T1935f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make */
extern T0* T1943c9(GE_context* ac, T0* a1);
/* LX_EQUIVALENCE_CLASSES.build */
extern void T1941f10(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_push_last_value */
extern void T1877f236(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.accept */
extern void T1877f235(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_do_error_action */
extern void T1877f233(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_error */
extern void T1877f248(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.report_eof_expected_error */
extern void T1877f247(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.read_token */
extern void T1877f232(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_execute_action */
extern void T1877f246(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_bad_character_error */
extern void T1877f262(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.make */
extern T0* T1947c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.report_bad_character_class_error */
extern void T1877f261(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.make */
extern T0* T1946c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.start_condition */
extern T6 T1877f185(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.process_escaped_character */
extern void T1877f260(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.text_count */
extern T6 T1877f206(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.report_missing_quote_error */
extern void T1877f259(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.make */
extern T0* T1945c8(GE_context* ac, T0* a1, T6 a2);
/* LX_WILDCARD_PARSER.process_character */
extern void T1877f258(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.report_character_out_of_range_error */
extern void T1877f268(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.make */
extern T0* T1951c8(GE_context* ac, T0* a1, T6 a2, T0* a3);
/* LX_WILDCARD_PARSER.text_item */
extern T2 T1877f182(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.less */
extern void T1877f257(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_set_line_column */
extern void T1877f267(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].item */
extern T0* T1935f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].has */
extern T1 T1935f27(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.text */
extern T0* T1877f176(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_start_condition */
extern void T1877f256(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_execute_eof_action */
extern void T1877f245(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.terminate */
extern void T1877f255(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.wrap */
extern T1 T1877f149(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_refill_input_buffer */
extern void T1877f244(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_set_content */
extern void T1877f242(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_null_trans_state */
extern T6 T1877f148(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.yy_previous_state */
extern T6 T1877f147(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.fatal_error */
extern void T1877f243(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.std */
extern T0* T1877f173(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.special_integer_ */
extern T0* T1877f129(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_init_value_stacks */
extern void T1877f231(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_all */
extern void T1877f240(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_all */
extern void T1877f253(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.clear_stacks */
extern void T1877f266(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_clear_value_stacks */
extern void T1877f269(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] LX_NFA].keep_head */
extern void T1940f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_NFA].set_count */
extern void T1940f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].keep_head */
extern void T1937f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].set_count */
extern void T1937f9(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.abort */
extern void T1877f234(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.set_input_buffer */
extern void T1877f225(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_load_input_buffer */
extern void T1877f230(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.new_string_buffer */
extern T0* T1877f131(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.make_from_description */
extern T0* T1877c221(GE_context* ac, T0* a1, T0* a2);
/* LX_ACTION_FACTORY.make */
extern T0* T1933c1(GE_context* ac);
/* LX_START_CONDITIONS.make */
extern void T1932f12(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.make */
extern T0* T1932c12(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.set_internal_cursor */
extern void T1932f16(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.new_cursor */
extern T0* T1932f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].make */
extern T0* T1988c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].make */
extern T0* T1987f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].make_empty */
extern T0* T1986c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].default_create */
extern T0* T1987c2(GE_context* ac);
/* LX_WILDCARD_PARSER.make_parser_skeleton */
extern void T1877f224(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_parser_tables */
extern void T1877f229(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yycheck_template */
extern T0* T1877f160(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyfixed_array */
extern T0* T1877f211(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yytable_template */
extern T0* T1877f158(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypgoto_template */
extern T0* T1877f157(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yypact_template */
extern T0* T1877f156(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefgoto_template */
extern T0* T1877f155(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yydefact_template */
extern T0* T1877f154(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes2_template */
extern T0* T1877f153(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytypes1_template */
extern T0* T1877f144(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yyr1_template */
extern T0* T1877f142(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template */
extern T0* T1877f140(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_2 */
extern void T1877f271(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yyarray_subcopy */
extern void T1877f275(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.integer_array_ */
extern T0* T1877f220(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yytranslate_template_1 */
extern void T1877f270(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_create_value_stacks */
extern void T1877f228(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].make */
extern T0* T1936f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] LX_SYMBOL_CLASS].make_empty */
extern T0* T1937c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_SYMBOL_CLASS].default_create */
extern T0* T1936c3(GE_context* ac);
/* LX_WILDCARD_PARSER.make_lex_scanner_from_description */
extern void T1877f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_key_equality_tester */
extern void T1935f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_map */
extern T0* T1935c40(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_with_equality_testers */
extern void T1935f46(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_sparse_container */
extern void T1935f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].set_internal_cursor */
extern void T1935f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_slots */
extern void T1935f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_clashes */
extern void T1935f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_key_storage */
extern void T1935f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] LX_SYMBOL_CLASS, [attached] STRING_8].make_item_storage */
extern void T1935f58(GE_context* ac, T0* C, T6 a1);
/* LX_WILDCARD_PARSER.string_equality_tester */
extern T0* T1877f117(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.make_with_buffer */
extern void T1877f227(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1877f241(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_initialize */
extern void T1877f241p1(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_build_tables */
extern void T1877f254(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_accept_template */
extern T0* T1877f198(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_fixed_array */
extern T0* T1877f219(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_meta_template */
extern T0* T1877f197(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template */
extern T0* T1877f196(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_ec_template_2 */
extern void T1877f274(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_array_subcopy */
extern void T1877f276(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* LX_WILDCARD_PARSER.yy_ec_template_1 */
extern void T1877f273(GE_context* ac, T0* C, T0* a1);
/* LX_WILDCARD_PARSER.yy_def_template */
extern T0* T1877f195(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_base_template */
extern T0* T1877f194(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_chk_template */
extern T0* T1877f193(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.yy_nxt_template */
extern T0* T1877f192(GE_context* ac, T0* C);
/* LX_WILDCARD_PARSER.empty_buffer */
extern T0* T1877f119(GE_context* ac, T0* C);
/* LX_DESCRIPTION.set_case_insensitive */
extern void T1878f33(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_full_table */
extern void T1878f32(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_meta_equiv_classes_used */
extern void T1878f31(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.set_equiv_classes_used */
extern void T1878f30(GE_context* ac, T0* C, T1 a1);
/* LX_DESCRIPTION.make */
extern T0* T1878c29(GE_context* ac);
/* LX_START_CONDITIONS.make_with_initial */
extern T0* T1932c14(GE_context* ac, T6 a1);
/* LX_START_CONDITIONS.put_first */
extern void T1932f17(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put */
extern void T1932f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_START_CONDITIONS.move_cursors_right */
extern void T1932f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_START_CONDITION].set_position */
extern void T1988f5(GE_context* ac, T0* C, T6 a1);
/* LX_START_CONDITIONS.move_right */
extern void T1932f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] LX_START_CONDITION].force */
extern void T1987f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].fill_with */
extern void T1986f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] LX_START_CONDITION].extend */
extern void T1986f7(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITIONS.put_last */
extern void T1932f19(GE_context* ac, T0* C, T0* a1);
/* LX_START_CONDITION.make */
extern T0* T1959c6(GE_context* ac, T0* a1, T6 a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].make */
extern T0* T1961c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].set_internal_cursor */
extern void T1961f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] LX_NFA].new_cursor */
extern T0* T1961f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] LX_NFA].make */
extern T0* T2016c3(GE_context* ac, T0* a1);
/* UT_ERROR_HANDLER.make_null */
extern T0* T132c6(GE_context* ac);
/* UT_ERROR_HANDLER.null_output_stream */
extern T0* T132f4(GE_context* ac, T0* C);
/* LX_DFA_WILDCARD.wipe_out */
extern void T1664f17(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.replace_backslashes */
extern void T1278f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.file_system */
extern T0* T1278f9(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.unix_file_system */
extern T0* T1278f12(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.windows_file_system */
extern T0* T1278f11(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.execution_environment */
extern T0* T1278f8(GE_context* ac, T0* C);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.operating_system */
extern T0* T1278f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove */
extern void T142f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_left */
extern void T142f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_cursors_left */
extern void T142f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].remove_last */
extern void T142f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].move_last_cursors_after */
extern void T142f45(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T285f60(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].make_from_linear */
extern T0* T142c39(GE_context* ac, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T31f77(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T31f36(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T31f44(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f9(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T31f25(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T31f31(GE_context* ac, T0* C, T14 a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T285f180(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_EIFFEL_PREPARSER.build_provider_constraint */
extern T0* T285f180ac1(GE_context* ac, T0* a1, T0* a2);
extern T1 T285f180ot1(T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T471f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_EIFFEL_PREPARSER.add_universe_full_name */
extern void T285f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T298f357(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T298f305(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1582c24(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T298f104(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T34f358(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T34f348(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T34f103(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T122f28(GE_context* ac, T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T369f29(GE_context* ac, T0* C);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern T0* T122f30(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T121f31(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T121f33(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T285f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T298f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1582c23(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T298f29(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T34f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T34f28(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.reset */
extern void T285f185(GE_context* ac, T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T222f27(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T285f185p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T285f185p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T285f185p2(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T298f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1583c18(GE_context* ac, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1583f19(GE_context* ac, T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T34f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T285f59(GE_context* ac, T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1368c12(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1368f13(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1368f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T285f184(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T285f190(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T298f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T34f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T298f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T34f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T298f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T34f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T298f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T34f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T298f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T34f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T285f196(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T285f109(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T285f132(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T285f191(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T285f194(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T285f106(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].force_new */
extern void T1562f38(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].resize */
extern void T1562f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].clashes_resize */
extern void T1562f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].special_integer_ */
extern T0* T1562f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].key_storage_resize */
extern void T1562f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].item_storage_resize */
extern void T1562f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].slots_resize */
extern void T1562f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].new_capacity */
extern T6 T1562f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].found_key */
extern T0* T1562f26(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T285f131(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T285f133(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T285f197(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T1276f14(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T1276f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T285f130(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T285f129(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T298f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T34f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T298f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T34f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T298f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T34f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T298f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T34f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T285f193(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T285f104(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T285f103(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_note_keyword */
extern T1 T285f102(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_detachable_keyword */
extern T1 T285f101(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T285f100(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T297f65(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T285f128(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] STRING_8].replace_found_item */
extern void T1562f42(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T287f960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T287f944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T287f952(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T287f2155(GE_context* ac, T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T287f943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T287f942(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T285f99(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.use_attached_keyword */
extern T1 T285f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T285f195(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T285f189(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T298f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T34f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T285f192(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T285f87(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T285f188(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T285f86(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T285f85(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T285f187(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T285f56(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T285f126(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T285f183(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MASTER_CLASS.add_last_local_class */
extern void T496f70(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_non_override_class */
extern void T496f84(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_override_class */
extern void T496f83(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.add_last_local_ignored_class */
extern void T496f82(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T83f275(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T83f254(GE_context* ac, T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.same_pathnames */
extern T1 T122f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_pathname */
extern T1 T568f14(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_subpathname */
extern T1 T568f16(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.string_ */
extern T0* T568f18(GE_context* ac, T0* C);
/* KL_PATHNAME.string_equality_tester */
extern T0* T568f19(GE_context* ac, T0* C);
/* KL_WINDOWS_FILE_SYSTEM.same_pathnames */
extern T1 T121f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_PATHNAME.same_case_insensitive */
extern T1 T568f13(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.is_case_insensitive_subpathname */
extern T1 T568f15(GE_context* ac, T0* C, T0* a1);
/* KL_PATHNAME.case_insensitive_string_equality_tester */
extern T0* T568f17(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_if */
extern void T496f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_ignored_classes_do_if */
extern void T496f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].do_if */
extern void T293f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_non_override_classes_do_if */
extern void T496f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_MASTER_CLASS.local_override_classes_do_if */
extern void T496f87(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_universe */
extern T0* T285f55(GE_context* ac, T0* C);
/* detachable DS_CELL [detachable ET_CLASS].put */
extern void T1555f3(GE_context* ac, T0* C, T0* a1);
/* detachable DS_CELL [detachable ET_CLASS].make */
extern T0* T1555c2(GE_context* ac, T0* a1);
/* KL_DIRECTORY.reset */
extern void T369f42(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T285f54(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern T0* T285f124(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T285f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T285f123(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T285f122(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T285f121(GE_context* ac, T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T285f52(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T298f356(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T34f357(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T285f98(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.process */
extern void T458f72(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T232f67(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.reset */
extern void T1366f9(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.reset */
extern void T1327f9(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1366f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1056f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.process */
extern void T1327f10(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_class_assertion */
extern void T1056f102(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_cast_type */
extern void T1287f46(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_cast_type */
extern void T1286f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_cast_type */
extern void T1250f45(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T1287f50(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T1286f54(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T1250f48(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1364f12(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T764f77(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1364f13(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1056f104(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T764f78(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1056f109(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1600f7(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T1363f10(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1600f9(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1056f106(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T1363f12(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1056f103(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1915f26(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.set_index */
extern void T1914f26(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.set_index */
extern void T1913f21(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1789f6(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1775f18(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1600f8(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1364f11(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T1363f11(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIS_EXPRESSION.set_index */
extern void T1246f11(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T764f75(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1362f41(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1361f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1360f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1359f42(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1358f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1357f44(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T796f36(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.set_seed */
extern void T1769f42(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T1351f34(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T1350f34(GE_context* ac, T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T753f100(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T740f55(GE_context* ac, T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T734f53(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T692f105(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T1319f114(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T1318f111(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T1316f107(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T1315f113(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T1314f110(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T564f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T557f108(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T404f99(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T402f106(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T400f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_feature */
extern void T371f109(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T275f117(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T1319f115(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T1318f112(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T1316f108(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T1315f114(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T1314f111(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T564f106(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T557f109(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T404f100(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T402f107(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T400f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_implementation_class */
extern void T371f110(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T275f118(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T1319f112(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T1318f109(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T1316f105(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T1315f111(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T1314f108(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T564f103(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T557f106(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T404f97(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T402f104(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T400f101(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_preconditions */
extern void T371f107(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T275f115(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T1319f113(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T1318f110(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T1316f106(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T1315f112(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T1314f109(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T564f104(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T557f107(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T404f98(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T402f105(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T400f102(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_postconditions */
extern void T371f108(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T275f116(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T1319f116(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T1318f113(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T1316f109(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T1315f115(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T1314f112(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T564f107(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T557f110(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T404f101(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T402f108(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T400f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_precursor */
extern void T371f111(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T275f119(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T1319f117(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T1318f114(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T1316f110(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T1315f116(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T1314f113(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T564f108(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T557f111(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T404f102(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T402f109(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T400f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_precursors */
extern void T371f112(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T275f120(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T1319f108(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T1318f105(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T1316f101(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T1315f107(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T1314f104(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T564f98(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T557f101(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T404f92(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T402f99(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T400f96(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_version */
extern void T371f102(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T275f111(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T1319f100(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T1318f98(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T1316f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T1315f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T1314f97(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T564f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T557f94(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T404f86(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T402f90(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T400f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_clients */
extern void T371f95(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T275f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T1319f107(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T1318f104(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T1316f100(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T1315f106(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T1314f103(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T564f97(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T557f100(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T404f91(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T402f98(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T400f95(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_first_seed */
extern void T371f101(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T275f110(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T1319f118(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T1318f115(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T1316f111(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T1315f117(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T1314f114(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T564f109(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T557f112(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T404f103(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T402f110(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T400f107(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_other_seeds */
extern void T371f113(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T275f121(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_validity_checked */
extern void T1319f92(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_checked */
extern void T1318f87(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_checked */
extern void T1316f85(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_checked */
extern void T1315f88(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_checked */
extern void T1314f86(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_checked */
extern void T564f79(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_checked */
extern void T557f80(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_checked */
extern void T404f82(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_checked */
extern void T402f86(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_checked */
extern void T400f85(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_checked */
extern void T371f85(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_checked */
extern void T275f94(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_validity_error */
extern void T1319f93(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.set_validity_error */
extern void T1318f88(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.set_validity_error */
extern void T1316f86(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.set_validity_error */
extern void T1315f89(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.set_validity_error */
extern void T1314f87(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.set_validity_error */
extern void T564f80(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.set_validity_error */
extern void T557f81(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.set_validity_error */
extern void T404f83(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_validity_error */
extern void T402f87(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_validity_error */
extern void T400f86(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.set_validity_error */
extern void T371f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.set_validity_error */
extern void T275f95(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T1319f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T1318f86(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T1316f84(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T1315f87(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T1314f85(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T564f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T557f79(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T404f81(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T402f85(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T400f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.process */
extern void T371f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T275f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T1319f90(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T1318f85(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T1316f83(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T1315f86(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T1314f84(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T564f84(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T557f85(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T404f80(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T402f84(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T400f83(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.set_id */
extern void T371f83(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T275f92(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1362f40(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1361f46(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1360f42(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1359f41(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T1358f47(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T1357f43(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T1356f26(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.set_index */
extern void T1355f31(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T1354f23(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T1353f28(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T1352f24(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T1349f26(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T1348f23(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T1347f23(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T1346f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T1345f23(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T1344f27(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T1298f45(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T1297f45(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T1296f42(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T1295f42(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T1293f45(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T1292f45(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.set_index */
extern void T1291f67(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_index */
extern void T1290f67(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T1289f67(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T1288f67(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T1287f45(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T1286f49(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T1285f46(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T1250f44(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.set_index */
extern void T1151f28(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T1015f30(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T1012f31(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T983f24(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T969f30(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.set_index */
extern void T920f29(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T796f32(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T793f27(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.set_index */
extern void T767f35(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T756f32(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T403f67(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T364f29(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T355f23(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_index */
extern void T354f25(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.set_index */
extern void T353f26(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T346f35(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T327f31(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_index */
extern void T325f30(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_index */
extern void T324f28(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T319f36(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T199f114(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1915f25(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.reset */
extern void T1914f25(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.reset */
extern void T1913f20(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1775f20(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1362f48(GE_context* ac, T0* C);
extern T1 T1362f48ot1(T0* a1, T0** a2);
/* ET_POSTCONDITIONS.reset */
extern void T995f24(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset_validity_checked */
extern void T995f21(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T995f24p1(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T431f23(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset_validity_checked */
extern void T431f20(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.reset */
extern void T431f23p1(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T277f14(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1576f10(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T280f9(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T782f15(GE_context* ac, T0* C);
extern T1 T782f15ot1(T0* a1, T0** a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1361f56(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T373f14(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1577f10(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1577f6(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1577f4(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T958f9(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T958f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T958f5(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1577f5(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T958f4(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1361f56p1(GE_context* ac, T0* C);
extern T1 T1361f56p1ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1360f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1360f51p1(GE_context* ac, T0* C);
extern T1 T1360f51p1ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1359f49(GE_context* ac, T0* C);
extern T1 T1359f49ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1358f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T1358f57p1(GE_context* ac, T0* C);
extern T1 T1358f57p1ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1357f52(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T1357f52p1(GE_context* ac, T0* C);
extern T1 T1357f52p1ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T1356f29(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.reset */
extern void T1355f33(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T1354f25(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T1353f30(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T1352f25(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T1349f30(GE_context* ac, T0* C);
extern T1 T1349f30ot1(T0* a1, T0** a2);
extern T1 T1349f30ot2(T0* a1, T0** a2);
extern T1 T1349f30ot3(T0* a1, T0** a2);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T1348f25(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T1347f25(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T1346f25(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T1345f25(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T1344f33(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.reset_arguments */
extern void T1344f34(GE_context* ac, T0* C);
extern T1 T1344f34ot1(T0* a1, T0** a2);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T1298f50(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T1297f50(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T1296f46(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T1295f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T1293f50(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T1292f50(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.reset */
extern void T1291f73(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.reset */
extern void T1290f73(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T1289f73(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T1288f73(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T1287f48(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T1286f52(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T1285f49(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T1250f49(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.reset */
extern void T1151f31(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T1015f33(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1012f36(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T1012f9(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T1012f36p1(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset_arguments */
extern void T1012f37(GE_context* ac, T0* C);
extern T1 T1012f37ot1(T0* a1, T0** a2);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T983f26(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T969f35(GE_context* ac, T0* C);
extern T1 T969f35ot1(T0* a1, T0** a2);
/* ET_IF_EXPRESSION.reset */
extern void T920f31(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.reset */
extern void T868f8(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.reset */
extern void T865f8(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.conditional_expression */
extern T0* T865f5(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.conditional_expression */
extern T0* T920f12(GE_context* ac, T0* C);
/* ET_CALL_AGENT.reset */
extern void T796f37(GE_context* ac, T0* C);
extern T1 T796f37ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.reset */
extern void T793f29(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.reset_arguments */
extern void T793f30(GE_context* ac, T0* C);
extern T1 T793f30ot1(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.reset */
extern void T692f106(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset */
extern void T767f44(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.reset_unfolded_form */
extern void T767f45(GE_context* ac, T0* C);
/* ET_VOID.reset */
extern void T756f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T403f74(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T364f33(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T364f16(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T355f26(GE_context* ac, T0* C);
extern T1 T355f26ot1(T0* a1, T0** a2);
extern T1 T355f26ot2(T0* a1, T0** a2);
/* ET_OBJECT_EQUALITY_EXPRESSION.reset */
extern void T354f28(GE_context* ac, T0* C);
extern T1 T354f28ot1(T0* a1, T0** a2);
extern T1 T354f28ot2(T0* a1, T0** a2);
/* ET_OBJECT_TEST.reset */
extern void T353f28(GE_context* ac, T0* C);
/* ET_RESULT.reset */
extern void T346f37(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T327f35(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T325f34(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset */
extern void T325f34p1(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T325f35(GE_context* ac, T0* C);
extern T1 T325f35ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T324f34(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T324f34p1(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset */
extern void T324f34p0(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.reset_arguments */
extern void T324f35(GE_context* ac, T0* C);
extern T1 T324f35ot1(T0* a1, T0** a2);
/* ET_CURRENT.reset */
extern void T319f38(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1915f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FROM_EXPRESSION.process */
extern void T1914f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.process */
extern void T1913f19(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1775f19(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1362f39(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1361f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1360f41(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1359f40(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T1358f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T1357f42(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T1356f25(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.process */
extern void T1355f30(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T1354f22(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T1353f27(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T1352f23(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T1349f25(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T1348f22(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T1347f22(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T1346f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T1345f22(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T1344f26(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T1298f44(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T1297f44(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T1296f41(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T1295f41(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T1293f44(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T1292f44(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.process */
extern void T1291f66(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.process */
extern void T1290f66(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T1289f66(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T1288f66(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T1287f44(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T1286f48(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T1285f45(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T1250f43(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.process */
extern void T1151f27(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T1015f29(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T1012f30(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T983f23(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T969f29(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.process */
extern void T920f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T796f31(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T793f26(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.process */
extern void T767f34(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.process */
extern void T756f31(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T403f66(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T364f30(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T355f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.process */
extern void T354f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.process */
extern void T353f25(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.process */
extern void T346f32(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T327f33(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.process */
extern void T325f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.process */
extern void T324f29(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T319f33(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T199f117(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1547f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1547f17ot1(T0* a1, T0** a2);
extern T1 T1547f17ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T1547f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T1547f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T563f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1422f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T563f17p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T563f17p1ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T556f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T555f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T356f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T340f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T307f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T256f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T1547f18(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T563f19(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T556f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T555f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T356f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T340f61(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T307f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T256f59(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T1547f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T563f16(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T556f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T555f57(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T356f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T340f55(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T307f15(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T256f54(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T1547f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T563f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1422f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].force */
extern void T1689f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].fill_with */
extern void T1688f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].extend */
extern void T1688f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern T0* T1422f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].default_create */
extern T0* T1689c3(GE_context* ac);
/* ET_DYNAMIC_TARGET_LIST.resize */
extern void T1422f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1689f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].aliased_resized_area */
extern T0* T1688f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.new_capacity */
extern T6 T1422f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1422f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1422f3(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.index_of */
extern T6 T1422f5(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1422f10(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1422c9(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TARGET].make */
extern T0* T1689f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TARGET].make_empty */
extern T0* T1688c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T307f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T1757f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_unaliased_to_string */
extern void T1756f23(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T687f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_unaliased_to_string */
extern void T543f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T267f28(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T1757f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.append_to_string */
extern void T1756f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T687f31(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.append_to_string */
extern void T543f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T267f30(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T1757f22(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset */
extern void T1756f25(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T687f32(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset */
extern void T543f20(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T267f33(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T1757f23(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.reset_qualified_anchored_types */
extern void T1756f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T687f34(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.reset_qualified_anchored_types */
extern void T543f21(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset_qualified_anchored_types */
extern void T267f34(GE_context* ac, T0* C);
/* ET_LIBRARY.classes_do_all */
extern void T486f174(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].forth */
extern void T677f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_forth */
extern void T250f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].add_traversing_cursor */
extern void T250f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_next_cursor */
extern void T677f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_position */
extern void T677f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].remove_traversing_cursor */
extern void T250f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].set_after */
extern void T677f14(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_mapped */
extern T1 T496f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].item */
extern T0* T677f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_item */
extern T0* T250f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].after */
extern T1 T677f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].start */
extern void T677f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_start */
extern void T250f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_off */
extern T1 T250f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].off */
extern T1 T677f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].is_empty */
extern T1 T250f36(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T476f173(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_all */
extern void T476f173p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T247f196(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_all */
extern void T247f196p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T234f182(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_all */
extern void T234f182p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T215f173(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_all */
extern void T215f173p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_do_all */
extern void T191f200(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_all */
extern void T71f252(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_all */
extern void T65f262(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_all */
extern void T62f262(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.classes_do_all */
extern void T35f209(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_until */
extern void T486f175(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].go_after */
extern void T677f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_go_after */
extern void T250f64(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.classes_do_until */
extern void T476f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_until */
extern void T247f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_until */
extern void T234f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_until */
extern void T215f174(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_until */
extern void T191f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_until */
extern void T71f253(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_until */
extern void T65f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_until */
extern void T62f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_until */
extern void T35f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_until */
extern void T486f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T476f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_until */
extern void T247f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T234f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_until */
extern void T215f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_until */
extern void T191f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_until */
extern void T71f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_until */
extern void T65f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_until */
extern void T62f265(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_until */
extern void T35f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_all */
extern void T486f176(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_all */
extern void T250f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T476f175(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_all */
extern void T247f198(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T234f184(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_all */
extern void T215f175(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_classes_do_all */
extern void T191f202(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_all */
extern void T71f236(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_all */
extern void T65f192(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_all */
extern void T62f191(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_classes_do_all */
extern void T35f211(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.classes_do_if */
extern void T486f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T476f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.classes_do_if */
extern void T476f176p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T247f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.classes_do_if */
extern void T247f199p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T234f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.classes_do_if */
extern void T234f185p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T215f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.classes_do_if */
extern void T215f176p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.classes_do_if */
extern void T191f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.classes_do_if */
extern void T71f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.classes_do_if */
extern void T65f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.classes_do_if */
extern void T62f264(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.classes_do_if */
extern void T35f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if */
extern void T486f179(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].do_if */
extern void T250f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T476f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if */
extern void T247f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T234f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if */
extern void T215f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.master_classes_do_if */
extern void T191f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_if */
extern void T71f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_if */
extern void T65f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_if */
extern void T62f266(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.master_classes_do_if */
extern void T35f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIBRARY.master_classes_do_if_until */
extern void T486f180(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T476f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.master_classes_do_if_until */
extern void T247f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T234f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.master_classes_do_if_until */
extern void T215f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.master_classes_do_if_until */
extern void T191f206(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.master_classes_do_if_until */
extern void T71f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.master_classes_do_if_until */
extern void T65f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.master_classes_do_if_until */
extern void T62f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM.master_classes_do_if_until */
extern void T35f215(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_LIBRARY.universes_do_all */
extern void T191f208(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_all */
extern void T214f12(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.universes_do_all */
extern void T192f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.universes_do_all */
extern void T71f242(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.universes_do_all */
extern void T65f283(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.universes_do_all */
extern void T62f271(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.universes_do_all */
extern void T35f198(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.universes_do_if */
extern void T486f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.universes_do_if */
extern void T214f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ADAPTED_LIBRARIES.universes_do_if */
extern void T192f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.universes_do_if */
extern void T476f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLIES.universes_do_if */
extern void T475f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universes_do_if */
extern void T247f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.universes_do_if */
extern void T234f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.universes_do_if */
extern void T215f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.universes_do_if */
extern void T191f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_if */
extern void T71f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_if */
extern void T65f282(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_if */
extern void T62f272(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.universes_do_if */
extern void T35f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1479f70(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.process */
extern void T1382f71(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.process */
extern void T1332f75(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.process */
extern void T1331f79(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T1330f80(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T1303f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T912f80(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T542f74(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T276f107(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.process */
extern void T83f248(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T81f113(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1479f71(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.append_unaliased_to_string */
extern void T1382f70(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_unaliased_to_string */
extern void T1332f74(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_unaliased_to_string */
extern void T1331f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T1330f78(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T1303f86(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T912f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T542f72(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T276f105(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T83f251(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T81f111(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1479f69(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1479f44(GE_context* ac, T0* C);
/* ET_LIKE_N.append_to_string */
extern void T1382f69(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.append_to_string */
extern void T1332f73(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.append_to_string */
extern void T1331f78(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T1330f79(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T1303f87(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T1303f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T912f84(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T912f57(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T542f73(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T276f106(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T83f269(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T81f112(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1479f72(GE_context* ac, T0* C);
/* ET_LIKE_N.reset */
extern void T1382f72(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset */
extern void T1332f76(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset */
extern void T1331f80(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T1330f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.set_feature_name */
extern void T199f123(GE_context* ac, T0* C, T1 a1);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T1330f29(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T1303f84(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T1303f82(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T836f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T912f81(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T542f75(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T276f108(GE_context* ac, T0* C);
/* ET_CLASS.reset_type */
extern void T83f306(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset */
extern void T81f116(GE_context* ac, T0* C);
extern T1 T81f116ot1(T0* a1, T0** a2);
extern T1 T81f116ot2(T0* a1, T0** a2);
extern T1 T81f116ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER_TYPE.reset_qualified_anchored_types */
extern void T1479f73(GE_context* ac, T0* C);
/* ET_LIKE_N.reset_qualified_anchored_types */
extern void T1382f73(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.reset_qualified_anchored_types */
extern void T1332f77(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.reset_qualified_anchored_types */
extern void T1331f81(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.reset_qualified_anchored_types */
extern void T1330f82(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T1303f85(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_qualified_anchored_types */
extern void T912f82(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.reset_qualified_anchored_types */
extern void T542f76(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.reset_qualified_anchored_types */
extern void T276f109(GE_context* ac, T0* C);
/* ET_CLASS.reset_qualified_anchored_types */
extern void T83f307(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.reset_qualified_anchored_types */
extern void T81f117(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class */
extern void T1411f5(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class */
extern void T1410f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class */
extern void T1409f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class */
extern void T1408f5(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class */
extern void T1061f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class */
extern void T1060f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1059f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1054f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1053f15(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1052f18(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1051f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class */
extern void T1050f8(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1049f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1038f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1037f14(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T414f22(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T295f2(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T292f16(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T292f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.report_class_processed */
extern void T73f100(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_implementation_checked */
extern void T83f266(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].wipe_out */
extern void T709f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].slots_wipe_out */
extern void T709f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].clashes_wipe_out */
extern void T709f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_wipe_out */
extern void T709f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_wipe_out */
extern void T709f49(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].keep_head */
extern void T1469f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_NAMED_CLASS].set_count */
extern void T1469f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors_after */
extern void T709f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_next_cursor */
extern void T1412f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_after */
extern void T1412f10(GE_context* ac, T0* C);
/* ET_CLASS.set_suppliers */
extern void T83f265(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].extend */
extern void T709f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].forth */
extern void T1412f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_forth */
extern void T709f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].add_traversing_cursor */
extern void T709f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].set_position */
extern void T1412f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].remove_traversing_cursor */
extern void T709f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].put */
extern void T709f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].item */
extern T0* T1412f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_item */
extern T0* T709f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].after */
extern T1 T1412f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].start */
extern void T1412f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_start */
extern void T709f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_off */
extern T1 T709f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].off */
extern T1 T1412f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].is_empty */
extern T1 T709f23(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T292f22(GE_context* ac, T0* C, T1 a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T438f3(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.flat_mode */
extern T1 T292f11(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T409f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_validity_error */
extern void T950f33(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_validity_checked */
extern void T950f32(GE_context* ac, T0* C);
/* ET_INVARIANTS.assertion */
extern T0* T950f11(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T950f21(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.reset_validity_checked */
extern void T950f31(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T409f71(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_supplier_handler */
extern void T414f19(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T292f21(GE_context* ac, T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T292f24(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].wipe_out */
extern void T1065f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_wipe_out */
extern void T1065f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_wipe_out */
extern void T1065f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_wipe_out */
extern void T1065f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_wipe_out */
extern void T1065f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_PROCEDURE].keep_head */
extern void T1000f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PROCEDURE].set_count */
extern void T1000f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T1065f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1521f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1521f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].forth */
extern void T1065f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_forth */
extern void T1065f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T1065f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1521f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T1065f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_item */
extern T6 T1065f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T292f27(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T409f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_for_iteration */
extern T0* T1065f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_item */
extern T0* T1065f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_item */
extern T0* T1065f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].after */
extern T1 T1065f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_after */
extern T1 T1065f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1521f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].start */
extern void T1065f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_start */
extern void T1065f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].cursor_off */
extern T1 T1065f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1521f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].is_empty */
extern T1 T1065f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T409f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.build_preconditions_attachment_scope */
extern void T409f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.free_attachment_scope */
extern void T409f81(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.new_attachment_scope */
extern T0* T409f44(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.build_assertions_attachment_scope */
extern void T409f80(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.add_precursors_with_preconditions_recursive */
extern void T409f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.feature_checker */
extern T0* T409f40(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T292f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_IMPLEMENTATION_CHECKER.flat_dbc_mode */
extern T1 T292f12(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T409f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.set_validity_error */
extern void T995f23(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.set_validity_checked */
extern void T995f22(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.assertion */
extern T0* T995f7(GE_context* ac, T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T995f11(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T409f75(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T292f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].wipe_out */
extern void T1066f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_wipe_out */
extern void T1066f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_wipe_out */
extern void T1066f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_wipe_out */
extern void T1066f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_wipe_out */
extern void T1066f48(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_QUERY].keep_head */
extern void T1005f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUERY].set_count */
extern void T1005f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].move_all_cursors_after */
extern void T1066f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1522f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_after */
extern void T1522f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].forth */
extern void T1066f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_forth */
extern void T1066f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].add_traversing_cursor */
extern void T1066f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].set_position */
extern void T1522f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].remove_traversing_cursor */
extern void T1066f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_item */
extern T6 T1066f23(GE_context* ac, T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T292f26(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_for_iteration */
extern T0* T1066f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_item */
extern T0* T1066f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_item */
extern T0* T1066f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].after */
extern T1 T1066f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_after */
extern T1 T1066f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].after */
extern T1 T1522f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].start */
extern void T1066f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_start */
extern void T1066f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].cursor_off */
extern T1 T1066f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_QUERY].off */
extern T1 T1522f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].is_empty */
extern T1 T1066f21(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T409f73(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.suppliers_enabled */
extern T1 T292f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T298f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T34f202(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SYSTEM_PROCESSOR.report_class_postponed */
extern void T73f101(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.process_parent_class */
extern void T292f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T521f5(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT.parent */
extern T0* T520f10(GE_context* ac, T0* C);
/* ET_PARENT_LIST.item */
extern T0* T521f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents */
extern T0* T83f63(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.implicit_parent_clause */
extern T0* T83f97(GE_context* ac, T0* C);
/* ET_CLASS.is_system_object_class */
extern T1 T83f87(GE_context* ac, T0* C);
/* ET_CLASS.is_dotnet */
extern T1 T83f65(GE_context* ac, T0* C);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T83f98(GE_context* ac, T0* C);
/* ET_CLASS.is_any_class */
extern T1 T83f105(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.item */
extern T0* T988f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.parents_count */
extern T6 T83f62(GE_context* ac, T0* C);
/* ET_CLASS.has_explicit_conforming_parent */
extern T1 T83f96(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.has_conforming_parent */
extern T1 T988f5(GE_context* ac, T0* C);
/* ET_PARENT_LIST.has_conforming_parent */
extern T1 T521f10(GE_context* ac, T0* C);
/* ET_CLASS.set_checking_implementation */
extern void T83f267(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.interface_checked_successfully */
extern T1 T83f118(GE_context* ac, T0* C);
/* MUTEX.try_lock */
extern T1 T131f7(GE_context* ac, T0* C);
/* MUTEX.eif_thr_mutex_trylock */
extern T1 T131f8(GE_context* ac, T0* C, T14 a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T292f18(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T292f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_none_class */
extern void T292f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.process_class */
extern void T291f16(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T291f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].remove */
extern void T1058f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].remove_position */
extern void T1058f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_put */
extern void T1058f49(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_put */
extern void T1058f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_keep_head */
extern void T1058f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_keep_head */
extern void T1058f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_put */
extern void T1058f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_put */
extern void T1058f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_item */
extern T6 T1058f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].move_cursors_forth */
extern void T1058f43(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_position */
extern void T1519f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_next_cursor */
extern void T1519f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CLASS].set_after */
extern void T1519f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].internal_set_key_equality_tester */
extern void T1058f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_equality_tester */
extern T0* T1058f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_item */
extern T6 T1058f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].hash_position */
extern T6 T1058f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_item */
extern T0* T1058f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_item */
extern T0* T1058f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].search_position */
extern void T1058f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].last */
extern T0* T1058f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].is_empty */
extern T1 T1058f28(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T291f23(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1059f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T291f22(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T291f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T298f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T1072c782(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T298f26(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T34f205(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T34f25(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T298f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T1072c781(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T34f204(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T298f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T1072c780(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T298f25(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T34f203(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T34f24(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T836f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T836f10(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.current_universe */
extern T0* T291f14(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T912f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T912f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T687f7(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T1303f10(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T912f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T687f5(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signatures_validity */
extern void T291f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].wipe_out */
extern void T1039f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_wipe_out */
extern void T1039f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_wipe_out */
extern void T1039f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1039f60(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].keep_head */
extern void T900f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].set_count */
extern void T900f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1039f59(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].keep_head */
extern void T1481f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].set_count */
extern void T1481f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors_after */
extern void T1039f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_next_cursor */
extern void T1480f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_after */
extern void T1480f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].forth */
extern void T1039f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_forth */
extern void T1039f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].add_traversing_cursor */
extern void T1039f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_position */
extern void T1480f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1039f67(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T1039f26(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.check_signature_validity */
extern void T291f26(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1052f11(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T1513f10(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1514f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1514f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T1513f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1514f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set */
extern void T1513f11(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1052f15(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1052f15ot1(T0* a1);
extern T1 T1052f15ot2(T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T277f10(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_tuple_actual_parameters_unfolded */
extern void T1052f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attached_keyword */
extern T0* T82f777(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attached */
extern T0* T439c55(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T298f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T1072c905(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.upper_name */
extern T0* T81f77(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T298f100(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T34f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T34f99(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T298f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T1072c904(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.name */
extern T0* T1063f12(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T34f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1052f8(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1052f16(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T421f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T421f55(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].force */
extern void T1017f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].fill_with */
extern void T279f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_TYPE].extend */
extern void T279f10(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.resize */
extern void T421f60(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE].aliased_resized_area */
extern T0* T1017f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_TYPE].aliased_resized_area */
extern T0* T279f4(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.new_capacity */
extern T6 T421f18(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T421f14(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T1513f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T1513f9(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1514f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].cursor_off */
extern T1 T1514f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T1513f7(GE_context* ac, T0* C);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1514f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T1513c8(GE_context* ac, T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1063f11(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1063f17(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1052f14(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T298f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T1072c903(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T298f101(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T34f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T34f100(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T298f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T1072c902(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T34f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T298f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T1072c901(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T34f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1052f13(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
extern T1 T1052f13ot1(T0* a1);
extern T1 T1052f13ot2(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T298f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T1072c900(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T298f64(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T34f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T34f63(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T298f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T1072c899(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T34f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T298f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T1072c898(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T34f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_for_iteration */
extern T0* T1039f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_item */
extern T0* T1039f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T1039f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1039f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_after */
extern T1 T1039f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].after */
extern T1 T1480f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].start */
extern void T1039f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_start */
extern void T1039f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_off */
extern T1 T1039f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].off */
extern T1 T1480f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].is_empty */
extern T1 T1039f31(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_feature_adaptations */
extern void T291f25(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_inherited_features */
extern void T291f28(GE_context* ac, T0* C, T0* a1);
extern T1 T291f28ot1(T0* a1, T0** a2);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1064f33(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1064f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found_item */
extern T0* T1039f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].found */
extern T1 T1039f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search */
extern void T1039f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].search_position */
extern void T1039f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].hash_position */
extern T6 T1039f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1040f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T1039f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_item */
extern T6 T1039f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1047f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1499f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1499f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1499f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1499f45(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].keep_head */
extern void T788f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].set_count */
extern void T788f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1499f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1499f42(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T1714f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].set_after */
extern void T1714f7(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1047f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1500f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1500f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1500f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1500f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1500f54(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].keep_head */
extern void T1716f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].set_count */
extern void T1716f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1500f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T1715f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_after */
extern void T1715f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].forth */
extern void T1500f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1500f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1500f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].set_position */
extern void T1715f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1500f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1500f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1047f37(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T298f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T1072c896(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].after */
extern T1 T1723f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].forth */
extern void T1723f11(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_forth */
extern void T1504f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_position */
extern void T1723f13(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1504f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_next_cursor */
extern void T1723f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1504f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].item */
extern T0* T1723f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_item */
extern T0* T1504f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].start */
extern void T1723f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].cursor_start */
extern void T1504f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].set_after */
extern void T1723f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].is_empty */
extern T1 T1504f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].off */
extern T1 T1723f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].before */
extern T1 T1723f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].new_cursor */
extern T0* T1504f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PARENT_FEATURE].make */
extern T0* T1723c9(GE_context* ac, T0* a1);
/* ET_VALIDITY_ERROR.ast_position */
extern T0* T1072f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].first */
extern T0* T1504f7(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T298f98(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T34f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T34f97(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1372f17(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1063f20(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1064f18(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1372f33(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].force_last */
extern void T1514f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE].put_right */
extern void T1972f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_PARENT_FEATURE].make */
extern T0* T1972c3(GE_context* ac, T0* a1);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1514c7(GE_context* ac);
/* detachable DS_LINKED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1514f9(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1064f37(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1063f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1372f35(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1064f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1372f34(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1373f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].resize_with_default */
extern void T554f4(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* [attached] ARRAY [[attached] INTEGER_32].conservative_resize_with_default */
extern void T330f18(GE_context* ac, T0* C, T6 a1, T6 a2, T6 a3);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1373f5(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.has */
extern T1 T1373f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.make */
extern T0* T1373c9(GE_context* ac, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1064f38(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1372f18(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1064f19(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T298f338(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T1072c895(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T34f337(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1047f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1047f30(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].forth */
extern void T1503f16(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_forth */
extern void T1503f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1503f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1719f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1503f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].set */
extern void T1719f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].put_last */
extern void T1504f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].force */
extern void T1721f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].fill_with */
extern void T1722f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].extend */
extern void T1722f7(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1372f26(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1064f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1503f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1503f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].after */
extern T1 T1503f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1503f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].start */
extern void T1503f15(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_start */
extern void T1503f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1503f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].off */
extern T1 T1719f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].make */
extern T0* T1504c10(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PARENT_FEATURE].set_internal_cursor */
extern void T1504f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].make */
extern T0* T1721f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_PARENT_FEATURE].make_empty */
extern T0* T1722c4(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_PARENT_FEATURE].default_create */
extern T0* T1721c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_for_iteration */
extern T6 T1500f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_key */
extern T6 T1500f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1500f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1500f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1500f41(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1500f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T1500f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1500f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].after */
extern T1 T1715f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].start */
extern void T1500f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1500f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1500f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].off */
extern T1 T1715f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1500f28(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.item */
extern T6 T1373f6(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1047f36(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].force_new */
extern void T1500f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1500f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1500f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].force */
extern void T1718f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].fill_with */
extern void T1716f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].extend */
extern void T1716f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1500f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1500f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1500f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1500f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].resize */
extern void T1500f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1500f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1500f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1500f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1500f68(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1718f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_REPLICABLE_FEATURE].aliased_resized_area */
extern T0* T1716f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1500f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1500f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].replace_found_item */
extern void T1500f47(GE_context* ac, T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1502c6(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1503c12(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].set_internal_cursor */
extern void T1503f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1503f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1719c7(GE_context* ac, T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1502f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].force_last */
extern void T1503f13(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].put_right */
extern void T1720f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_ADAPTED_FEATURE].make */
extern T0* T1720c3(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found_item */
extern T0* T1500f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].found */
extern T1 T1500f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search */
extern void T1500f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_REPLICABLE_FEATURE, [attached] INTEGER_32].search_position */
extern void T1500f58(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1047f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T298f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T1072c888(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T298f91(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T34f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T34f90(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T298f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T1072c887(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T298f90(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T34f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T34f89(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].wipe_out */
extern void T1498f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1498f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1498f61(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1498f60(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].keep_head */
extern void T1707f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].set_count */
extern void T1707f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1498f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1498f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_next_cursor */
extern void T1711f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_after */
extern void T1711f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].forth */
extern void T1498f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_forth */
extern void T1498f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1498f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].set_position */
extern void T1711f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1498f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1498f26(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T298f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T1072c886(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T298f89(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T34f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T34f88(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_for_iteration */
extern T0* T1498f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_key */
extern T0* T1498f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1498f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_for_iteration */
extern T1 T1498f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_item */
extern T1 T1498f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_item */
extern T1 T1498f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T1498f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1498f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].after */
extern T1 T1711f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].start */
extern void T1498f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_start */
extern void T1498f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1498f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] BOOLEAN, [attached] ET_CALL_NAME].off */
extern T1 T1711f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].is_empty */
extern T1 T1498f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].wipe_out */
extern void T1497f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_wipe_out */
extern void T1497f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1497f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1497f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1497f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1497f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_next_cursor */
extern void T1710f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_after */
extern void T1710f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].forth */
extern void T1497f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_forth */
extern void T1497f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1497f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].set_position */
extern void T1710f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1497f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_item */
extern T6 T1497f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T298f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T1072c885(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T298f88(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T34f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T34f87(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1497f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_item */
extern T0* T1497f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_item */
extern T0* T1497f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].after */
extern T1 T1497f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_after */
extern T1 T1497f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].after */
extern T1 T1710f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].start */
extern void T1497f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_start */
extern void T1497f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].cursor_off */
extern T1 T1497f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_CALL_NAME].off */
extern T1 T1710f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].wipe_out */
extern void T1494f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_wipe_out */
extern void T1494f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_wipe_out */
extern void T1494f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_wipe_out */
extern void T1494f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_wipe_out */
extern void T1494f56(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_RENAME].keep_head */
extern void T1702f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_RENAME].set_count */
extern void T1702f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_all_cursors_after */
extern void T1494f55(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_next_cursor */
extern void T1701f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_after */
extern void T1701f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].forth */
extern void T1494f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_forth */
extern void T1494f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].add_traversing_cursor */
extern void T1494f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].set_position */
extern void T1701f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_traversing_cursor */
extern void T1494f73(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_item */
extern T6 T1494f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T298f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T1072c884(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T298f87(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T34f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T34f86(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_for_iteration */
extern T0* T1494f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_item */
extern T0* T1494f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_item */
extern T0* T1494f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T1494f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_after */
extern T1 T1494f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].after */
extern T1 T1701f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].start */
extern void T1494f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_start */
extern void T1494f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].cursor_off */
extern T1 T1494f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_RENAME, [attached] ET_CALL_NAME].off */
extern T1 T1701f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1499f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1499f52(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].force */
extern void T786f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].fill_with */
extern void T788f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].extend */
extern void T788f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1499f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].force */
extern void T899f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].fill_with */
extern void T900f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].extend */
extern void T900f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_put */
extern void T1499f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1499f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1499f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1499f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].resize */
extern void T1499f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1499f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1499f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1499f56(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T786f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ALIAS_NAME].aliased_resized_area */
extern T0* T788f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1499f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T899f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME].aliased_resized_area */
extern T0* T900f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1499f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1499f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1499f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1499f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].has */
extern T1 T1499f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search_position */
extern void T1499f40(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1043f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].put_last_new */
extern void T1039f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_put */
extern void T1039f86(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_put */
extern void T1039f85(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].force */
extern void T1484f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].fill_with */
extern void T1481f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].extend */
extern void T1481f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_put */
extern void T1039f79(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_put */
extern void T1039f80(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].compress */
extern void T1039f84(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_keep_head */
extern void T1039f89(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_keep_head */
extern void T1039f88(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].move_all_cursors */
extern void T1039f87(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1047f24(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1064f31(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1064c29(GE_context* ac, T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1064f30(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1372f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1373f4(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1373f3(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1373f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_ARRAY_ROUTINES [[attached] INTEGER_32].cloned_array */
extern T0* T554f1(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] INTEGER_32].twin */
extern T0* T330f9(GE_context* ac, T0* C);
/* [attached] ARRAY [[attached] INTEGER_32].copy */
extern void T330f19(GE_context* ac, T0* C, T0* a1);
/* [attached] SPECIAL [[attached] INTEGER_32].twin */
extern T0* T124f7(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1372f21(GE_context* ac, T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1372f20(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1063f29(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1064f34(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1064f23(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1064f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].replace_found_item */
extern void T1039f76(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1047f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1372f29(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1372f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1499f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1499f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].found */
extern T1 T1499f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE_NAME, [attached] ET_ALIAS_NAME].search */
extern void T1499f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1063f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1063f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].replace_found_item */
extern void T1498f46(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_put */
extern void T1498f54(GE_context* ac, T0* C, T1 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_item */
extern T1 T1498f25(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1063f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found_key */
extern T0* T1498f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].found */
extern T1 T1498f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search */
extern void T1498f45(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].search_position */
extern void T1498f53(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].hash_position */
extern T6 T1498f28(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_NAME_TESTER.test */
extern T1 T1495f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_item */
extern T6 T1498f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_found_item */
extern void T1497f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].remove_position */
extern void T1497f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_put */
extern void T1497f72(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_put */
extern void T1497f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].force */
extern void T1709f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].fill_with */
extern void T1707f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].extend */
extern void T1707f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1497f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1497f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_put */
extern void T1497f63(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_put */
extern void T1497f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].move_cursors_forth */
extern void T1497f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].search_position */
extern void T1497f52(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1497f68(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_equality_tester */
extern T0* T1497f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_item */
extern T6 T1497f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].hash_position */
extern T6 T1497f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_item */
extern T0* T1497f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].found_item */
extern T0* T1497f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].found */
extern T1 T1497f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].search */
extern void T1497f39(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1063f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_found_item */
extern void T1494f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].remove_position */
extern void T1494f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_put */
extern void T1494f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_put */
extern void T1494f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].force */
extern void T1708f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME].fill_with */
extern void T1702f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_RENAME].extend */
extern void T1702f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_keep_head */
extern void T1494f72(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_keep_head */
extern void T1494f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_put */
extern void T1494f62(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_put */
extern void T1494f61(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].move_cursors_forth */
extern void T1494f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search_position */
extern void T1494f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].internal_set_key_equality_tester */
extern void T1494f69(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_item */
extern T6 T1494f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].hash_position */
extern T6 T1494f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_item */
extern T0* T1494f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found_item */
extern T0* T1494f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].found */
extern T1 T1494f33(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1047f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].search */
extern void T1494f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1047f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1063f28(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1063f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].resize */
extern void T1039f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].clashes_resize */
extern void T1039f83(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T1039f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T1039f82(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T1039f81(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1484f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_FLATTENED_FEATURE].aliased_resized_area */
extern T0* T1481f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].slots_resize */
extern void T1039f78(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1047f35(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T298f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T1072c894(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T298f97(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T34f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T34f96(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].put_new */
extern void T1498f51(GE_context* ac, T0* C, T1 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_put */
extern void T1498f69(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_put */
extern void T1498f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_put */
extern void T1498f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T538f6(GE_context* ac, T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T538f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].resize */
extern void T1498f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].clashes_resize */
extern void T1498f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1498f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1498f67(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T1709f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CALL_NAME].aliased_resized_area */
extern T0* T1707f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1498f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] BOOLEAN, [attached] ET_CALL_NAME].slots_resize */
extern void T1498f63(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1047f34(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T298f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T1072c893(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T298f96(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T34f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T34f95(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1047f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T298f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T1072c892(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T298f95(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T34f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T34f94(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].is_empty */
extern T1 T1497f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1047f32(GE_context* ac, T0* C, T0* a1);
extern T1 T1047f32ot1(T0* a1, T0** a2);
extern T1 T1047f32ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T298f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T1072c891(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T298f94(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T34f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T34f93(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].put_new */
extern void T1497f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T897f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T897f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].resize */
extern void T1497f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].clashes_resize */
extern void T1497f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].special_integer_ */
extern T0* T1497f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].key_storage_resize */
extern void T1497f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].item_storage_resize */
extern void T1497f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CALL_NAME].slots_resize */
extern void T1497f61(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T298f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T1072c890(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T298f93(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T34f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T34f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.item */
extern T0* T537f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].is_empty */
extern T1 T1494f32(GE_context* ac, T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1047f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T298f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T1072c889(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T298f92(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T34f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T34f91(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].put_new */
extern void T1494f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T536f6(GE_context* ac, T0* C, T6 a1);
/* ET_RENAME.rename_pair */
extern T0* T1308f5(GE_context* ac, T0* C);
/* ET_RENAME_LIST.item */
extern T0* T536f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].resize */
extern void T1494f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].clashes_resize */
extern void T1494f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].special_integer_ */
extern T0* T1494f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].key_storage_resize */
extern void T1494f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].item_storage_resize */
extern void T1494f63(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_RENAME].aliased_resized_area */
extern T0* T1708f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_RENAME].aliased_resized_area */
extern T0* T1702f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_RENAME, [attached] ET_CALL_NAME].slots_resize */
extern void T1494f60(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1047f27(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T298f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T1072c883(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T298f57(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T34f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T34f56(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1048f20(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1508f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1508f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1508f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1508f43(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].keep_head */
extern void T1724f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].set_count */
extern void T1724f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1508f42(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].keep_head */
extern void T1727f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].set_count */
extern void T1727f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1508f40(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1730f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].set_after */
extern void T1730f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].wipe_out */
extern void T1506f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1506f47(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1506f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1506f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1506f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1506f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1725f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_FEATURE].set_after */
extern void T1725f7(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1048f23(GE_context* ac, T0* C, T0* a1);
extern T1 T1048f23ot1(T0* a1, T0** a2);
extern T1 T1048f23ot2(T0* a1, T0** a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1048f17(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T1308c6(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern T0* T82f694(GE_context* ac, T0* C);
/* ET_KEYWORD.make_as */
extern T0* T439c58(GE_context* ac);
/* ET_RENAME.tokens */
extern T0* T1308f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].has */
extern T1 T1039f40(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1048f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1048f15(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_universe */
extern T0* T1048f13(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features_from_parents */
extern void T1048f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1048f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1048f14(GE_context* ac, T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1048f25(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].forth */
extern void T1510f15(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_forth */
extern void T1510f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1510f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set_next_cursor */
extern void T1732f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1510f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].set */
extern void T1732f8(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1510f7(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_item */
extern T0* T1510f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].after */
extern T1 T1510f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_after */
extern T1 T1510f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].start */
extern void T1510f14(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_start */
extern void T1510f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].cursor_off */
extern T1 T1510f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].off */
extern T1 T1732f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1508f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1508f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].found */
extern T1 T1508f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search */
extern void T1508f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].search_position */
extern void T1508f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1508f22(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1505f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1508f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1508f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1508f23(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1048f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1048f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found_item */
extern T0* T1506f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1506f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].found */
extern T1 T1506f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search */
extern void T1506f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].search_position */
extern void T1506f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].hash_position */
extern T6 T1506f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1506f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_item */
extern T6 T1506f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1506f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_item */
extern T6 T1506f20(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1048f21(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1048f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1506f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_put */
extern void T1506f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1506f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1506f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1506f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].force */
extern void T1726f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].fill_with */
extern void T1724f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].extend */
extern void T1724f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].force_last_new */
extern void T1508f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_put */
extern void T1508f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_put */
extern void T1508f50(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].force */
extern void T1731f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].fill_with */
extern void T1727f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].extend */
extern void T1727f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_put */
extern void T1508f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_put */
extern void T1508f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].resize */
extern void T1508f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1508f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1508f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1508f55(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1726f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DOTNET_FEATURE].aliased_resized_area */
extern T0* T1724f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1508f54(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1731f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE]].aliased_resized_area */
extern T0* T1727f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1508f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE], [attached] ET_DOTNET_FEATURE].new_capacity */
extern T6 T1508f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1510c11(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].set_internal_cursor */
extern void T1510f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].new_cursor */
extern T0* T1510f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1732c7(GE_context* ac, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] ET_DOTNET_FEATURE].force_last */
extern void T1510f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE].put_right */
extern void T1733f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] ET_DOTNET_FEATURE].make */
extern T0* T1733c3(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].force_last_new */
extern void T1039f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T1039f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].resize */
extern void T1506f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].clashes_resize */
extern void T1506f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1506f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].key_storage_resize */
extern void T1506f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].item_storage_resize */
extern void T1506f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_FEATURE].slots_resize */
extern void T1506f48(GE_context* ac, T0* C, T6 a1);
/* ET_INTERFACE_CHECKER.resolve_signatures_unfolded_tuple_actual_parameters */
extern void T291f20(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T291f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_type */
extern void T1061f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.check_qualified_anchored_signatures_validity */
extern void T291f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_signatures_validity */
extern void T1060f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.reset_fatal_error */
extern void T1060f10(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.has_flattening_error */
extern T1 T83f61(GE_context* ac, T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T291f17(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T291f13(GE_context* ac, T0* C);
/* ET_CLASS.set_interface_checked */
extern void T83f250(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T290f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T290f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T290f35(GE_context* ac, T0* C);
extern T1 T290f35ot1(T0* a1, T0** a2);
extern T1 T290f35ot2(T0* a1, T0** a2);
/* ET_FEATURE_FLATTENER.check_kernel_features_validity */
extern void T290f46(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.forth_feature_name */
extern T0* T82f253(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.after_feature_name */
extern T0* T82f252(GE_context* ac, T0* C);
/* ET_CLASS.is_iteration_cursor_class */
extern T1 T83f116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_cursor_feature_name */
extern T0* T82f251(GE_context* ac, T0* C);
/* ET_CLASS.is_iterable_class */
extern T1 T83f115(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern T0* T82f250(GE_context* ac, T0* C);
/* ET_CLASS.is_disposable_class */
extern T1 T83f114(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern T0* T82f249(GE_context* ac, T0* C);
/* ET_CLASS.is_routine_class */
extern T1 T83f113(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T298f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T1072c833(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T298f55(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T34f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T34f54(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern T0* T82f248(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern T0* T82f247(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T290f27(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T290f45(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T848f6(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T1312f6(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T1311f5(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T848f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T290f44(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T298f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T1072c832(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T298f54(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T34f274(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T34f53(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T298f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T1072c831(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T34f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T298f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T1072c830(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T298f53(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T34f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T34f52(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T298f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T1072c829(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T34f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T298f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T1072c828(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T34f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T856f9(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T856f14(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T859f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T298f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T1072c827(GE_context* ac, T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T856f8(GE_context* ac, T0* C);
/* ET_CREATOR.first */
extern T0* T856f13(GE_context* ac, T0* C);
/* ET_CLIENTS.position */
extern T0* T820f12(GE_context* ac, T0* C);
/* ET_CLIENT.position */
extern T0* T534f5(GE_context* ac, T0* C);
/* ET_CLIENTS.first */
extern T0* T820f15(GE_context* ac, T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T820f14(GE_context* ac, T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T856f12(GE_context* ac, T0* C);
extern T1 T856f12ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T298f52(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T34f269(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T34f51(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T859f6(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T859f5(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T290f43(GE_context* ac, T0* C);
extern T1 T290f43ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T298f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T1072c826(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T298f51(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T34f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T34f50(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T298f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T1072c825(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T298f50(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T34f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T34f49(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T298f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T1072c824(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T298f49(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T34f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T34f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T298f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T1072c823(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T298f48(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T34f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T34f47(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T298f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T1072c822(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T34f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T298f260(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T1072f818(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T1072c817(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T298f44(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T34f260(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T34f43(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T298f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T1072c816(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T298f43(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T34f259(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T34f42(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T298f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T1072c815(GE_context* ac, T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1064f22(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T34f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].go_after */
extern void T1039f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_go_after */
extern void T1039f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T83f263(GE_context* ac, T0* C, T1 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].wipe_out */
extern void T1042f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_wipe_out */
extern void T1042f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_wipe_out */
extern void T1042f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1042f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1042f48(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].move_all_cursors_after */
extern void T1042f47(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_next_cursor */
extern void T1486f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].set_after */
extern void T1486f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T290f42(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].force_last_new */
extern void T1042f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_put */
extern void T1042f46(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_put */
extern void T1042f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_put */
extern void T1042f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_put */
extern void T1042f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_item */
extern T6 T1042f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].hash_position */
extern T6 T1042f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].resize */
extern void T1042f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_resize */
extern void T1042f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].special_integer_ */
extern T0* T1042f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_resize */
extern void T1042f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_resize */
extern void T1042f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].key_storage_item */
extern T0* T1042f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].clashes_item */
extern T6 T1042f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].slots_resize */
extern void T1042f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].new_capacity */
extern T6 T1042f30(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T298f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T1072c814(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.alias_lower_name */
extern T0* T1072f85(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T298f41(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T34f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T34f40(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T298f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T1072c813(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T34f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4b_error */
extern void T298f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4b */
extern T0* T1072c812(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T298f40(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav4b_error */
extern void T34f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav4_error */
extern T1 T34f39(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T298f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T1072c811(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T298f39(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T34f254(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T34f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T298f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T1072c810(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1063f18(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T34f253(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T298f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T1072c809(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T34f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4c_error */
extern void T298f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4c */
extern T0* T1072c808(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4c_error */
extern void T34f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T298f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T1072c807(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T34f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T298f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T1072c806(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T34f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T298f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T1072c805(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T34f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav4d_error */
extern void T298f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav4d */
extern T0* T1072c804(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav4d_error */
extern void T34f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T298f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T1072c803(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T34f246(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found_item */
extern T0* T1042f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].item_storage_item */
extern T0* T1042f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].found */
extern T1 T1042f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search */
extern void T1042f36(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_ALIAS_NAME].search_position */
extern void T1042f40(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_redeclared_signatures_checked */
extern void T83f262(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T290f41(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1051f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1511f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [detachable DS_LINKABLE [[attached] INTEGER_32]].wipe_out */
extern void T1128f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].keep_head */
extern void T1523f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable DS_LINKABLE [[attached] INTEGER_32]].set_count */
extern void T1523f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].wipe_out */
extern void T1734f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_wipe_out */
extern void T1734f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_wipe_out */
extern void T1734f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_wipe_out */
extern void T1734f41(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].keep_head */
extern void T1735f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].set_count */
extern void T1735f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_wipe_out */
extern void T1734f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1734f38(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T1889f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].set_after */
extern void T1889f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].wipe_out */
extern void T1512f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].move_all_cursors_after */
extern void T1512f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_next_cursor */
extern void T1737f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_after */
extern void T1737f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].reset */
extern void T1511f14(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T298f340(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T1072c897(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].forth */
extern void T1737f14(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_forth */
extern void T1512f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].set_position */
extern void T1737f15(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].add_traversing_cursor */
extern void T1512f19(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].remove_traversing_cursor */
extern void T1512f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].go_after */
extern void T1737f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_go_after */
extern void T1512f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].off */
extern T1 T1737f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].before */
extern T1 T1737f8(GE_context* ac, T0* C);
/* ET_CLASS.seeded_feature */
extern T0* T83f195(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].item */
extern T0* T1737f6(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_item */
extern T0* T1512f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].after */
extern T1 T1737f4(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_LIKE_FEATURE].start */
extern void T1737f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].cursor_start */
extern void T1512f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T298f99(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T34f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat2_error */
extern T1 T34f98(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1051f6(GE_context* ac, T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1051f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].is_empty */
extern T1 T1512f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].sort */
extern void T1511f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].put_last */
extern void T1512f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].force */
extern void T1736f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].fill_with */
extern void T1735f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].extend */
extern void T1735f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].item */
extern T0* T1512f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T298f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T1072c802(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T298f42(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T34f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd7_error */
extern T1 T34f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T298f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T1072c801(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T34f244(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T298f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T1072c800(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T34f243(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T298f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T1072c799(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T34f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav4a_error */
extern void T298f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav4a */
extern T0* T1072c798(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav4a_error */
extern void T34f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T298f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T1072c797(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T34f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T298f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T1072c796(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T298f38(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T34f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T34f37(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T298f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T1072c795(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T298f37(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T34f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T34f36(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T298f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T1072c794(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T298f36(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T34f237(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T34f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_signature_unfolded_tuple_actual_parameters */
extern void T290f40(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_type */
extern void T1050f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.check_signature_vtct_validity */
extern void T290f39(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1052f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T290f38(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T298f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T1072c821(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T298f47(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T34f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T34f46(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].item */
extern T0* T1039f41(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T298f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T1072c820(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T298f46(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T34f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T34f45(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1049f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].wipe_out */
extern void T707f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_all_cursors_after */
extern void T707f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_next_cursor */
extern void T1467f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_after */
extern void T1467f12(GE_context* ac, T0* C);
/* ET_CLASS.set_procedures */
extern void T83f261(GE_context* ac, T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T282f10(GE_context* ac, T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T282f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].force */
extern void T999f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PROCEDURE].fill_with */
extern void T1000f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PROCEDURE].extend */
extern void T1000f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].item */
extern T0* T707f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort */
extern void T1370f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].subsort_with_comparator */
extern void T1370f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].swap */
extern void T707f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].replace */
extern void T707f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1570f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern T0* T290f26(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_PROCEDURE].make */
extern T0* T1370c2(GE_context* ac, T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1570c2(GE_context* ac);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].wipe_out */
extern void T706f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_all_cursors_after */
extern void T706f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_next_cursor */
extern void T1466f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_after */
extern void T1466f12(GE_context* ac, T0* C);
/* ET_CLASS.set_queries */
extern void T83f260(GE_context* ac, T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T281f10(GE_context* ac, T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T281f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].force */
extern void T1004f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUERY].fill_with */
extern void T1005f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUERY].extend */
extern void T1005f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].item */
extern T0* T706f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].subsort */
extern void T1369f3(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].subsort_with_comparator */
extern void T1369f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].swap */
extern void T706f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].replace */
extern void T706f35(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1567f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern T0* T290f25(GE_context* ac, T0* C);
/* [attached] DS_QUICK_SORTER [[attached] ET_QUERY].make */
extern T0* T1369c2(GE_context* ac, T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1567c2(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].back */
extern void T1039f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_back */
extern void T1039f64(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].set_before */
extern void T1480f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_last */
extern void T706f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].resize */
extern void T706f24(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUERY].aliased_resized_area */
extern T0* T1004f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUERY].aliased_resized_area */
extern T0* T1005f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].new_capacity */
extern T6 T706f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].extendible */
extern T1 T706f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_last */
extern void T707f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].resize */
extern void T707f24(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T999f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PROCEDURE].aliased_resized_area */
extern T0* T1000f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].new_capacity */
extern T6 T707f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].extendible */
extern T1 T707f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T290f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T290f49(GE_context* ac, T0* C, T0* a1);
extern T1 T290f49ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T298f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T1072c840(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T298f59(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T34f282(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T34f58(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T298f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T1072c839(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T298f58(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T34f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T34f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T298f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T1072c838(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T34f280(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T298f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T1072c837(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T34f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T290f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1372f32(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1064f36(GE_context* ac, T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1372f31(GE_context* ac, T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1064f35(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1373f10(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1373f8(GE_context* ac, T0* C);
/* ET_FEATURE_IDS.remove */
extern void T1373f11(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.register_feature */
extern void T83f264(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1063f19(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T1323c7(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].wipe_out */
extern void T1057f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_wipe_out */
extern void T1057f60(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_wipe_out */
extern void T1057f59(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_wipe_out */
extern void T1057f58(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_wipe_out */
extern void T1057f57(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_all_cursors_after */
extern void T1057f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_next_cursor */
extern void T1516f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_after */
extern void T1516f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].forth */
extern void T1057f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_forth */
extern void T1057f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].add_traversing_cursor */
extern void T1057f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].set_position */
extern void T1516f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_traversing_cursor */
extern void T1057f70(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_item */
extern T6 T1057f23(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_LIST.put_first */
extern void T434f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_LIST.fixed_array */
extern T0* T434f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_for_iteration */
extern T0* T1057f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_item */
extern T0* T1057f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_item */
extern T0* T1057f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1057f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_after */
extern T1 T1057f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].after */
extern T1 T1516f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].start */
extern void T1057f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_start */
extern void T1057f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].cursor_off */
extern T1 T1057f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FEATURE, [attached] INTEGER_32].off */
extern T1 T1516f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].is_empty */
extern T1 T1057f33(GE_context* ac, T0* C);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T434c5(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove */
extern void T1057f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].remove_position */
extern void T1057f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_put */
extern void T1057f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_put */
extern void T1057f48(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_keep_head */
extern void T1057f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_keep_head */
extern void T1057f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_put */
extern void T1057f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_put */
extern void T1057f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].move_cursors_forth */
extern void T1057f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].internal_set_key_equality_tester */
extern void T1057f66(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_item */
extern T6 T1057f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].hash_position */
extern T6 T1057f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_item */
extern T6 T1057f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].search_position */
extern void T1057f47(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T820f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T522f9(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1063f16(GE_context* ac, T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1063f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T298f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T1072c836(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T34f278(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1063f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].force_last */
extern void T1057f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].resize */
extern void T1057f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].clashes_resize */
extern void T1057f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].special_integer_ */
extern T0* T1057f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].key_storage_resize */
extern void T1057f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].item_storage_resize */
extern void T1057f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].slots_resize */
extern void T1057f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FEATURE, [attached] INTEGER_32].new_capacity */
extern T6 T1057f22(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T290f54(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T298f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T1072c852(GE_context* ac, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.feature_lower_name */
extern T0* T1072f132(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T298f62(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T34f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T34f61(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1063f13(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T290f57(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T298f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T1072c863(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T298f69(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T34f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T34f68(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T298f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T1072c862(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T34f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T290f56(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T298f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T1072c861(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T298f68(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T34f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T34f67(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T298f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T1072c860(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T34f301(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T298f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T1072c859(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T298f67(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T34f300(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T34f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T290f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T298f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T1072c858(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T298f66(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T34f299(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T34f65(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T298f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T1072c857(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T34f298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vfav4e_error */
extern void T298f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfav4e */
extern T0* T1072c856(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vfav4e_error */
extern void T34f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T298f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T1072c855(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T34f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T298f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T1072c854(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T34f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T298f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T1072c853(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T298f65(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T34f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T34f64(GE_context* ac, T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1064f20(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T290f28(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T290f28ac1(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].wipe_out */
extern void T1045f16(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].keep_head */
extern void T1488f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].set_count */
extern void T1488f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_all_cursors_after */
extern void T1045f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_next_cursor */
extern void T1489f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_after */
extern void T1489f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].wipe_out */
extern void T1046f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_wipe_out */
extern void T1046f66(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_wipe_out */
extern void T1046f65(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1046f64(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1046f63(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_CLIENT].keep_head */
extern void T1493f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_CLIENT].set_count */
extern void T1493f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].move_all_cursors_after */
extern void T1046f62(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_next_cursor */
extern void T1491f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_after */
extern void T1491f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].back */
extern void T1046f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_back */
extern void T1046f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].add_traversing_cursor */
extern void T1046f72(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_position */
extern void T1491f12(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1046f71(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].set_before */
extern void T1491f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_item */
extern T6 T1046f31(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T820f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.fixed_array */
extern T0* T820f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_for_iteration */
extern T0* T1046f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T1046f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_item */
extern T0* T1046f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1046f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_before */
extern T1 T1046f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].before */
extern T1 T1491f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].finish */
extern void T1046f51(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_finish */
extern void T1046f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_off */
extern T1 T1046f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].off */
extern T1 T1491f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].is_empty */
extern T1 T1046f36(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].for_all */
extern T1 T1610f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T1831f8(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T1610f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].forth */
extern void T1491f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_forth */
extern void T1046f75(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T1831f7(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T1610f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].go_after */
extern void T1491f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_go_after */
extern void T1046f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].item */
extern T0* T1831f4(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_item */
extern T0* T1610f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].key */
extern T0* T1491f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_key */
extern T0* T1046f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_item */
extern T0* T1046f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T1831f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].after */
extern T1 T1491f8(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T1831f6(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T1610f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].start */
extern void T1491f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].cursor_start */
extern void T1046f73(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor */
extern T0* T1610f4(GE_context* ac, T0* C);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1831c5(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].keys */
extern T0* T1046f39(GE_context* ac, T0* C);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].make */
extern T0* T1610c8(GE_context* ac, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].set_internal_cursor */
extern void T1610f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_SPARSE_TABLE_KEYS [[attached] ET_CLIENT, [attached] ET_CLASS].new_cursor_with_table_cursor */
extern T0* T1610f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_SPARSE_TABLE_KEYS_CURSOR [[attached] ET_CLIENT, [attached] ET_CLASS].make_with_table_cursor */
extern T0* T1831c9(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].is_empty */
extern T1 T1045f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].force */
extern void T1046f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_put */
extern void T1046f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_put */
extern void T1046f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_put */
extern void T1046f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_item */
extern T6 T1046f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].hash_position */
extern T6 T1046f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].resize */
extern void T1046f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].clashes_resize */
extern void T1046f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].special_integer_ */
extern T0* T1046f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].key_storage_resize */
extern void T1046f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_resize */
extern void T1046f68(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1492f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLIENT].aliased_resized_area */
extern T0* T1493f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].slots_resize */
extern void T1046f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].new_capacity */
extern T6 T1046f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].item_storage_put */
extern void T1046f55(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT].force */
extern void T1492f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT].fill_with */
extern void T1493f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT].extend */
extern void T1493f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_CLIENT, [attached] ET_CLASS].search_position */
extern void T1046f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.client */
extern T0* T820f7(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T534f4(GE_context* ac, T0* C);
/* ET_CLIENTS.item */
extern T0* T820f10(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T522f4(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T522f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove */
extern void T1045f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_left */
extern void T1045f20(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_cursors_left */
extern void T1045f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLIENT_LIST].set_position */
extern void T1489f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].remove_last */
extern void T1045f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].move_last_cursors_after */
extern void T1045f22(GE_context* ac, T0* C);
/* ET_CLIENTS.is_none */
extern T1 T820f11(GE_context* ac, T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T522f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].item */
extern T0* T1045f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].first */
extern T0* T1045f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].force_last */
extern void T1045f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].force */
extern void T1487f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].fill_with */
extern void T1488f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].extend */
extern void T1488f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].resize */
extern void T1045f17(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1487f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_CLIENT_LIST].aliased_resized_area */
extern T0* T1488f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].new_capacity */
extern T6 T1045f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLIENT_LIST].extendible */
extern T1 T1045f10(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T897f9(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T1309f6(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T897f8(GE_context* ac, T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T1309f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T897f7(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T290f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T290f53(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1056f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T298f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T1072c835(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T995f14(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T995f16(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T995f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T298f56(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T34f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T34f55(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T995f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T298f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T1072c834(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T431f13(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T431f15(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T431f14(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T34f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T431f12(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T290f52(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T298f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T1072c851(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T34f292(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T298f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T1072c850(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T298f63(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T34f291(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T34f62(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T298f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T1072c849(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T34f290(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T298f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T1072f848(GE_context* ac, T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T1072c847(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T34f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T298f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T1072c846(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T34f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T298f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T1072c845(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T34f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T298f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T1072c844(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T298f61(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T34f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T34f60(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T298f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T1072c843(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T298f60(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T34f285(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T34f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T298f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T1072c842(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T34f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T298f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T1072c841(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T34f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1372f19(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_builtin_feature_validity */
extern void T290f50(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_feature_validity */
extern void T1055f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T298f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T1072c819(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T298f45(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T34f261(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T34f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T290f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1039f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_before */
extern T1 T1039f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].before */
extern T1 T1480f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].finish */
extern void T1039f50(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_FLATTENED_FEATURE, [attached] ET_FEATURE_NAME].cursor_finish */
extern void T1039f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T290f36(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T290f34(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1053f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T290f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1054f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1054f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T912f6(GE_context* ac, T0* C);
/* ET_CLASS.has_ancestors_error */
extern T1 T83f109(GE_context* ac, T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T290f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T290f23(GE_context* ac, T0* C);
/* ET_CLASS.set_features_flattened */
extern void T83f259(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T289f14(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T289f16(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T298f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T1072c787(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].after */
extern T1 T1068f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].forth */
extern void T1068f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_forth */
extern void T293f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].add_traversing_cursor */
extern void T293f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_traversing_cursor */
extern void T293f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].item */
extern T0* T1068f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_item */
extern T0* T293f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].start */
extern void T1068f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].cursor_start */
extern void T293f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].off */
extern T1 T1068f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_CLASS].before */
extern T1 T1068f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T298f30(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T34f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T34f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].first */
extern T0* T293f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T289f21(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].wipe_out */
extern void T1035f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].wipe_out */
extern void T1473f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_wipe_out */
extern void T1473f46(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_wipe_out */
extern void T1473f45(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1473f44(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1473f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].move_all_cursors_after */
extern void T1473f41(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_next_cursor */
extern void T1698f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_CLASS].set_after */
extern void T1698f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].wipe_out */
extern void T293f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].reset */
extern void T1035f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].is_empty */
extern T1 T293f10(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T289f20(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1037f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T289f19(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1038f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1038f15(GE_context* ac, T0* C);
extern T1 T1038f15ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T298f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T1072c882(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].after */
extern T1 T1700f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].forth */
extern void T1700f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_forth */
extern void T1478f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_position */
extern void T1700f14(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1478f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1700f11(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1478f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].item */
extern T0* T1700f4(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1478f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].start */
extern void T1700f12(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].cursor_start */
extern void T1478f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].set_after */
extern void T1700f10(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].is_empty */
extern T1 T1478f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].off */
extern T1 T1700f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FORMAL_PARAMETER].before */
extern T1 T1700f8(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].first */
extern T0* T1478f8(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T298f86(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T34f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T34f85(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T1477f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T1699f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1699f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1699f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1699f39(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].keep_head */
extern void T913f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].set_count */
extern void T913f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1699f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1699f36(GE_context* ac, T0* C);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1887f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].set_after */
extern void T1887f7(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].wipe_out */
extern void T1478f13(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1478f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].reset */
extern void T1477f14(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T1303f80(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T912f78(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].item */
extern T0* T1478f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T298f324(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T1072c881(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T34f323(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_PROCESSOR.older_or_same_ise_version */
extern T1 T73f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.ise_6_1_latest */
extern T0* T1038f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].sort */
extern void T1477f11(GE_context* ac, T0* C);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].put_last */
extern void T1478f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].force */
extern void T911f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].fill_with */
extern void T913f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].extend */
extern void T913f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].count */
extern T6 T1477f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1038f14(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T298f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T1072c880(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T298f85(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T34f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T34f84(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T298f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T1072c879(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T298f84(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T34f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T34f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1038f8(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1038f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.current_universe */
extern T0* T1038f7(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T289f18(GE_context* ac, T0* C);
/* ET_CLASS.set_conforming_ancestors */
extern void T83f258(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T83f257(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].wipe_out */
extern void T1036f43(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_wipe_out */
extern void T1036f54(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_wipe_out */
extern void T1036f53(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_wipe_out */
extern void T1036f52(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_wipe_out */
extern void T1036f51(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].keep_head */
extern void T1383f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].set_count */
extern void T1383f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].move_all_cursors_after */
extern void T1036f49(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_next_cursor */
extern void T1474f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_after */
extern void T1474f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].forth */
extern void T1036f42(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_forth */
extern void T1036f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].add_traversing_cursor */
extern void T1036f63(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].set_position */
extern void T1474f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].remove_traversing_cursor */
extern void T1036f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_item */
extern T6 T1036f39(GE_context* ac, T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T438f8(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].force */
extern void T1384f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].fill_with */
extern void T1383f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].extend */
extern void T1383f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_for_iteration */
extern T0* T1036f22(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_item */
extern T0* T1036f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_item */
extern T0* T1036f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1036f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_after */
extern T1 T1036f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].after */
extern T1 T1474f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].start */
extern void T1036f41(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_start */
extern void T1036f47(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].cursor_off */
extern T1 T1036f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_BASE_TYPE, [attached] ET_CLASS].off */
extern T1 T1474f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].is_empty */
extern T1 T1036f24(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T289f23(GE_context* ac, T0* C, T0* a1, T1 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].force_new */
extern void T1036f45(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_put */
extern void T1036f60(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_put */
extern void T1036f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_put */
extern void T1036f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_put */
extern void T1036f57(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_item */
extern T6 T1036f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].hash_position */
extern T6 T1036f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].resize */
extern void T1036f56(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].clashes_resize */
extern void T1036f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].special_integer_ */
extern T0* T1036f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_resize */
extern void T1036f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].item_storage_resize */
extern void T1036f65(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T1384f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_BASE_TYPE].aliased_resized_area */
extern T0* T1383f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].key_storage_item */
extern T0* T1036f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].slots_resize */
extern void T1036f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].new_capacity */
extern T6 T1036f35(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T298f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T1072c793(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T298f35(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T34f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T34f34(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found_item */
extern T0* T1036f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].found */
extern T1 T1036f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search */
extern void T1036f44(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_BASE_TYPE, [attached] ET_CLASS].search_position */
extern void T1036f55(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T298f235(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T1072c792(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T298f34(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T34f235(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T34f33(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T298f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T1072c791(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T298f33(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T34f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T34f32(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T298f233(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T1072c790(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T298f32(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T34f233(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T34f31(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T298f232(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T1072c789(GE_context* ac, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T298f31(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T34f232(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T34f30(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T298f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T1072c788(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T34f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_LIST.is_conforming */
extern T1 T521f6(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T289f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].sort */
extern void T1035f12(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T289f17(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_universe */
extern T0* T289f11(GE_context* ac, T0* C);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T289f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force_relation */
extern void T1035f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put_indexed_relation */
extern void T1035f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].count */
extern T6 T1035f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].index_of */
extern T6 T1035f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found_item */
extern T6 T1473f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_item */
extern T6 T1473f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].found */
extern T1 T1473f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search */
extern void T1473f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].search_position */
extern void T1473f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].hash_position */
extern T6 T1473f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_item */
extern T0* T1473f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_item */
extern T6 T1473f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_item */
extern T6 T1473f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].force */
extern void T1035f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].put */
extern void T1035f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].put_new */
extern void T1473f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_put */
extern void T1473f54(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_put */
extern void T1473f53(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_put */
extern void T1473f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_put */
extern void T1473f49(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].resize */
extern void T1473f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].clashes_resize */
extern void T1473f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].special_integer_ */
extern T0* T1473f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].key_storage_resize */
extern void T1473f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].item_storage_resize */
extern void T1473f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].slots_resize */
extern void T1473f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].capacity */
extern T6 T1035f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_CLASS].has */
extern T1 T1035f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_CLASS].has */
extern T1 T1473f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T289f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T289f10(GE_context* ac, T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T83f256(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.process_class */
extern void T288f7(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.internal_process_class */
extern void T288f9(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.check_cluster_dependence_constraints */
extern void T288f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcdep_error */
extern void T298f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcdep */
extern T0* T1582c26(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].forth */
extern void T1830f11(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_forth */
extern void T1665f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].add_traversing_cursor */
extern void T1665f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_next_cursor */
extern void T1830f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].remove_traversing_cursor */
extern void T1665f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].set_after */
extern void T1830f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].key */
extern T0* T1830f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_key */
extern T0* T1665f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].after */
extern T1 T1830f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].start */
extern void T1830f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_start */
extern void T1665f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].cursor_off */
extern T1 T1665f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] LX_WILDCARD, [attached] STRING_8].off */
extern T1 T1830f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].is_empty */
extern T1 T1665f29(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T298f106(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcdep_error */
extern void T34f360(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcdep_error */
extern T1 T34f105(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcpro_error */
extern void T298f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLUSTER_ERROR.make_gcpro */
extern T0* T1582c25(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T298f105(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcpro_error */
extern void T34f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gcpro_error */
extern T1 T34f104(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T1 T1278f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1278f10ac1(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* Creation of agent #2 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1278f10ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1278f10ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_CLUSTER_DEPENDENCE_CONSTRAINT.has_group */
extern T0* T1278f10ac4(GE_context* ac, T0* a1, T0* a2);
extern T1 T1278f10ot1(T0* a1, T0** a2);
/* [attached] PREDICATE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T1821f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [[attached] LX_WILDCARD]].set_rout_disp_final */
extern void T1818f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.matches_pathname */
extern T1 T1278f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* LX_DFA_WILDCARD.recognizes */
extern T1 T1664f12(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.longest_end_position */
extern T6 T1664f13(GE_context* ac, T0* C, T0* a1, T6 a2);
/* LX_DFA_WILDCARD.is_compiled */
extern T1 T1664f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].there_exists */
extern T1 T142f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.string_ */
extern T0* T1278f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] LX_WILDCARD, [attached] STRING_8].there_exists */
extern T1 T1665f30(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.group_pathname */
extern T0* T1278f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.first_non_override_overridden_class */
extern T0* T83f172(GE_context* ac, T0* C);
/* ET_CLASS.master_class_in_universe */
extern T0* T83f204(GE_context* ac, T0* C);
/* ET_PROVIDER_CHECKER.scm_mapped_cluster */
extern T0* T288f5(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.set_fatal_error */
extern void T288f8(GE_context* ac, T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.error_handler */
extern T0* T288f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T287f978(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.internal_process_class */
extern void T287f1139(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset_preparsed */
extern void T83f255(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T300f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvscn1b_error */
extern void T298f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvscn1b */
extern T0* T1072c785(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T298f28(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvscn1b_error */
extern void T34f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvscn1_error */
extern T1 T34f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T287f701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.parse_file */
extern void T287f1142(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T287f1143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T287f1153(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T287f1152(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T287f1151(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_801_1000 */
extern void T287f1177(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_926 */
extern void T287f2119(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T287f2127(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].force */
extern void T698f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].resize */
extern void T698f14(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].new_capacity */
extern T6 T698f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].extendible */
extern T1 T698f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_925 */
extern void T287f2118(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_924 */
extern void T287f2117(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_923 */
extern void T287f2116(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_922 */
extern void T287f2115(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].force */
extern void T744f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].fill_with */
extern void T746f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].extend */
extern void T746f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T1293f46(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T1292f46(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T297f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T287f710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_921 */
extern void T287f2114(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T1293f43(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T1292f43(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_920 */
extern void T287f2113(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_919 */
extern void T287f2112(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_918 */
extern void T287f2111(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_917 */
extern void T287f2110(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_916 */
extern void T287f2109(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_915 */
extern void T287f2108(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].force */
extern void T736f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].fill_with */
extern void T738f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].extend */
extern void T738f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_914 */
extern void T287f2107(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_913 */
extern void T287f2106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_912 */
extern void T287f2105(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_911 */
extern void T287f2104(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_910 */
extern void T287f2103(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_909 */
extern void T287f2102(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_908 */
extern void T287f2101(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].force */
extern void T722f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].fill_with */
extern void T724f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].extend */
extern void T724f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_907 */
extern void T287f2100(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_906 */
extern void T287f2099(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].force */
extern void T728f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].fill_with */
extern void T730f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].extend */
extern void T730f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_905 */
extern void T287f2098(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T728f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].aliased_resized_area */
extern T0* T730f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_904 */
extern void T287f2097(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_903 */
extern void T287f2096(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_902 */
extern void T287f2095(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_901 */
extern void T287f2094(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].force */
extern void T742f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].fill_with */
extern void T743f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].extend */
extern void T743f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_900 */
extern void T287f2093(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T742f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].aliased_resized_area */
extern T0* T743f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_899 */
extern void T287f2092(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_898 */
extern void T287f2091(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_897 */
extern void T287f2090(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_896 */
extern void T287f2089(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_895 */
extern void T287f2088(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_894 */
extern void T287f2087(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_893 */
extern void T287f2086(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_892 */
extern void T287f2085(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_891 */
extern void T287f2084(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_890 */
extern void T287f2083(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_889 */
extern void T287f2082(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_888 */
extern void T287f2081(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_887 */
extern void T287f2080(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_886 */
extern void T287f2079(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_885 */
extern void T287f2078(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_884 */
extern void T287f2077(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_883 */
extern void T287f2076(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_882 */
extern void T287f2075(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_881 */
extern void T287f2074(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_880 */
extern void T287f2073(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_879 */
extern void T287f2072(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_878 */
extern void T287f2071(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_877 */
extern void T287f2070(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_876 */
extern void T287f2069(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_875 */
extern void T287f2068(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_874 */
extern void T287f2067(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].force */
extern void T776f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].fill_with */
extern void T777f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].extend */
extern void T777f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T776f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].aliased_resized_area */
extern T0* T777f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T297f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1364c10(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern T0* T82f1507(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T764c72(GE_context* ac);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T764f74(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T764f57(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1364f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_873 */
extern void T287f2066(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_872 */
extern void T287f2065(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_871 */
extern void T287f2064(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].force */
extern void T778f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].fill_with */
extern void T780f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].extend */
extern void T780f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T778f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].aliased_resized_area */
extern T0* T780f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T287f2128(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].replace */
extern void T698f12(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T297f325(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_870 */
extern void T287f2063(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].force */
extern void T781f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].fill_with */
extern void T783f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].extend */
extern void T783f10(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T782f13(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern T0* T782f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_869 */
extern void T287f2062(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T781f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].aliased_resized_area */
extern T0* T783f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T297f324(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T782c12(GE_context* ac, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T782f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T782f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T287f884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T287f886(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].item */
extern T0* T702f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_868 */
extern void T287f2061(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_867 */
extern void T287f2060(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T287f2131(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].force */
extern void T702f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].force */
extern void T718f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL].fill_with */
extern void T719f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL].extend */
extern void T719f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].resize */
extern void T702f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T718f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SYMBOL].aliased_resized_area */
extern T0* T719f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].new_capacity */
extern T6 T702f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].extendible */
extern T1 T702f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_866 */
extern void T287f2059(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T287f2125(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T287f2130(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].remove */
extern void T702f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_SYMBOL].keep_head */
extern void T719f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL].set_count */
extern void T719f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_865 */
extern void T287f2058(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_864 */
extern void T287f2057(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_863 */
extern void T287f2056(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].force */
extern void T784f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].fill_with */
extern void T785f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].extend */
extern void T785f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T784f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].aliased_resized_area */
extern T0* T785f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T297f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T1363c9(GE_context* ac, T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T1363f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_862 */
extern void T287f2055(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_861 */
extern void T287f2054(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_860 */
extern void T287f2053(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_859 */
extern void T287f2052(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T287f933(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_unqualified_call_expression */
extern T0* T297f348(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_object_test_local */
extern void T199f126(GE_context* ac, T0* C, T1 a1);
/* ET_OBJECT_TEST_LIST.index_of_name */
extern T6 T1283f4(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.set_across_cursor */
extern void T199f125(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_COMPONENT_LIST.index_of_name */
extern T6 T1284f4(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1577f9(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T958f8(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T373f4(GE_context* ac, T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T373f7(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_local */
extern void T199f124(GE_context* ac, T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T373f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1576f9(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T280f8(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T277f8(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_858 */
extern void T287f2051(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_closure */
extern void T287f2139(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T704f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].force */
extern void T1462f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].fill_with */
extern void T1461f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].extend */
extern void T1461f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].resize */
extern void T704f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1462f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].aliased_resized_area */
extern T0* T1461f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].new_capacity */
extern T6 T704f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].extendible */
extern T1 T704f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].force */
extern void T703f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].force */
extern void T1460f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].fill_with */
extern void T1459f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].extend */
extern void T1459f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].resize */
extern void T703f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1460f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].aliased_resized_area */
extern T0* T1459f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].new_capacity */
extern T6 T703f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].extendible */
extern T1 T703f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T700f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].force */
extern void T963f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].fill_with */
extern void T964f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].extend */
extern void T964f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].resize */
extern void T700f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T963f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].aliased_resized_area */
extern T0* T964f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T700f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T700f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T699f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].force */
extern void T909f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].fill_with */
extern void T910f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].extend */
extern void T910f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].resize */
extern void T699f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T909f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T910f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T699f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T699f7(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_857 */
extern void T287f2050(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_856 */
extern void T287f2049(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].force */
extern void T940f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].fill_with */
extern void T942f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].extend */
extern void T942f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T940f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].aliased_resized_area */
extern T0* T942f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_inline_agent */
extern void T287f2150(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_end_closure */
extern void T287f2154(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].remove */
extern void T704f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].keep_head */
extern void T1461f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_COMPONENT_LIST].set_count */
extern void T1461f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].item */
extern T0* T704f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].is_empty */
extern T1 T704f6(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.wipe_out */
extern void T1284f10(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].keep_head */
extern void T1159f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_ACROSS_COMPONENT_LIST.fixed_array */
extern T0* T1284f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].remove */
extern void T703f13(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].keep_head */
extern void T1459f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBJECT_TEST_LIST].set_count */
extern void T1459f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].item */
extern T0* T703f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].is_empty */
extern T1 T703f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.wipe_out */
extern void T1283f10(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].keep_head */
extern void T1153f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_OBJECT_TEST_LIST.fixed_array */
extern T0* T1283f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].remove */
extern void T700f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].keep_head */
extern void T964f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_LIST].set_count */
extern void T964f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].item */
extern T0* T700f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T700f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].remove */
extern void T699f12(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].keep_head */
extern void T910f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_LIST].set_count */
extern void T910f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T699f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T699f5(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.cloned_across_component_list */
extern T0* T1284f3(GE_context* ac, T0* C);
/* ET_ACROSS_COMPONENT_LIST.put_last */
extern void T1284f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].force */
extern void T1159f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].fill_with */
extern void T1158f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].extend */
extern void T1158f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.make_with_capacity */
extern T0* T1284c9(GE_context* ac, T6 a1);
/* ET_OBJECT_TEST_LIST.cloned_object_test_list */
extern T0* T1283f3(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_LIST.put_last */
extern void T1283f12(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].force */
extern void T1153f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].fill_with */
extern void T1152f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].extend */
extern void T1152f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.make_with_capacity */
extern T0* T1283c9(GE_context* ac, T6 a1);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T297f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1362f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1362f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1362f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1362f42(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1362c36(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1362f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1362f47(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1600c6(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern T0* T82f873(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T713c13(GE_context* ac);
/* ET_AGENT_KEYWORD.make_token */
extern void T713f15(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T713f16(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T713f7(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1362f14(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T297f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_855 */
extern void T287f2048(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_854 */
extern void T287f2047(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T297f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1361f54(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1361f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1361f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_keys */
extern void T1361f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1361f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1361f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1361f48(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1361c42(GE_context* ac, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1361f55(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1361f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T297f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_COMPOUND.set_keyword */
extern void T372f10(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern T0* T82f731(GE_context* ac, T0* C);
/* ET_KEYWORD.make_once */
extern T0* T439c43(GE_context* ac);
/* ET_AST_FACTORY.tokens */
extern T0* T297f358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_853 */
extern void T287f2046(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_852 */
extern void T287f2045(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T297f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1360f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1360f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1360f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1360f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1360f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1360f44(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1360c38(GE_context* ac, T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1360f50(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1360f15(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_851 */
extern void T287f2044(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_850 */
extern void T287f2043(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T297f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1359f46(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1359f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1359f44(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1359f43(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1359c37(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1359f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1359f48(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1359f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T297f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_849 */
extern void T287f2042(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_848 */
extern void T287f2041(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T297f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1358f55(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1358f54(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T1358f53(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_keys */
extern void T1358f52(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T1358f51(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1358f50(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1358f49(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T1358c43(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1358f56(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1358f19(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_847 */
extern void T287f2040(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_846 */
extern void T287f2039(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T297f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T1357f50(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1357f49(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T1357f48(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T1357f47(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1357f46(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1357f45(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T1357c39(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1357f51(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1357f16(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_845 */
extern void T287f2038(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_844 */
extern void T287f2037(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_inline_agent_actual_arguments */
extern void T287f2149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_843 */
extern void T287f2036(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].force */
extern void T795f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].fill_with */
extern void T797f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].extend */
extern void T797f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T795f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].aliased_resized_area */
extern T0* T797f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T297f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T796f34(GE_context* ac, T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T796c33(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T796f8(GE_context* ac, T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T796c30(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T297f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_842 */
extern void T287f2035(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_841 */
extern void T287f2034(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].force */
extern void T766f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].fill_with */
extern void T768f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].extend */
extern void T768f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T766f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].aliased_resized_area */
extern T0* T768f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_expression_header */
extern T0* T287f932(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_COMPONENT_LIST.force_last */
extern void T1284f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_COMPONENT_LIST.resize */
extern void T1284f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1159f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ACROSS_COMPONENT].aliased_resized_area */
extern T0* T1158f3(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.new_capacity */
extern T6 T1284f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_COMPONENT_LIST.capacity */
extern T6 T1284f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_component_list */
extern T0* T287f950(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_across_all_expression */
extern T0* T297f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ACROSS_EXPRESSION.set_variant_part */
extern void T767f40(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_invariant_part */
extern void T767f39(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.make_all */
extern T0* T767c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACROSS_EXPRESSION.create_unfolded_form */
extern void T767f43(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.across_keyword */
extern T0* T82f865(GE_context* ac, T0* C);
/* ET_KEYWORD.make_across */
extern T0* T439c50(GE_context* ac);
/* ET_ACROSS_EXPRESSION.tokens */
extern T0* T767f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.true_keyword */
extern T0* T82f283(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.make */
extern T0* T1295c40(GE_context* ac);
/* ET_TRUE_CONSTANT.make_token */
extern void T1295f44(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T1295f45(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T1295f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_840 */
extern void T287f2033(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_all_expression */
extern T0* T287f931(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_end_keyword */
extern void T767f41(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_all */
extern void T767f42(GE_context* ac, T0* C, T1 a1);
/* ET_ACROSS_EXPRESSION.set_iteration_conditional */
extern void T767f37(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_EXPRESSION.set_until_conditional */
extern void T767f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_conditional */
extern T0* T297f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1580c4(GE_context* ac, T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T439f23(GE_context* ac, T0* C);
/* ET_KEYWORD.is_if */
extern T1 T439f22(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_839 */
extern void T287f2032(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_some_expression */
extern T0* T287f930(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACROSS_EXPRESSION.set_some */
extern void T767f38(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_838 */
extern void T287f2031(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_837 */
extern void T287f2030(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_836 */
extern void T287f2029(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_835 */
extern void T287f2028(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_834 */
extern void T287f2027(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_833 */
extern void T287f2026(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].force */
extern void T1014f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].fill_with */
extern void T1016f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].extend */
extern void T1016f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.put_first */
extern void T1015f31(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].force */
extern void T901f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].fill_with */
extern void T903f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].extend */
extern void T903f10(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern T0* T1015f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_832 */
extern void T287f2025(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1014f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].aliased_resized_area */
extern T0* T1016f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T297f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T1015f32(GE_context* ac, T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T1015c28(GE_context* ac, T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T1015f28p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern T0* T82f878(GE_context* ac, T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T439c49(GE_context* ac);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T1015f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T287f883(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].item */
extern T0* T701f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_831 */
extern void T287f2024(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_830 */
extern void T287f2023(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T287f2126(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].force */
extern void T701f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].force */
extern void T710f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD].fill_with */
extern void T711f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD].extend */
extern void T711f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].resize */
extern void T701f12(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T710f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD].aliased_resized_area */
extern T0* T711f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].new_capacity */
extern T6 T701f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].extendible */
extern T1 T701f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_829 */
extern void T287f2022(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T287f2124(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].remove */
extern void T701f10(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_KEYWORD].keep_head */
extern void T711f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD].set_count */
extern void T711f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_828 */
extern void T287f2021(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_827 */
extern void T287f2020(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].force */
extern void T977f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].fill_with */
extern void T978f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].extend */
extern void T978f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_826 */
extern void T287f2019(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T977f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].aliased_resized_area */
extern T0* T978f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T297f313(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T327f34(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_825 */
extern void T287f2018(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_824 */
extern void T287f2017(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_823 */
extern void T287f2016(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_822 */
extern void T287f2015(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_821 */
extern void T287f2014(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].force */
extern void T968f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].fill_with */
extern void T970f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].extend */
extern void T970f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.put_first */
extern void T969f32(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T969f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_820 */
extern void T287f2013(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T968f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].aliased_resized_area */
extern T0* T970f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T297f312(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T969f33(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T969c28(GE_context* ac, T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T969f28p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern T0* T82f689(GE_context* ac, T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T385c89(GE_context* ac);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern T0* T82f876(GE_context* ac, T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T385c82(GE_context* ac);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T969f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_819 */
extern void T287f2012(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_818 */
extern void T287f2011(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.set_cast_type */
extern void T969f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_817 */
extern void T287f2010(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_816 */
extern void T287f2009(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_815 */
extern void T287f2008(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_814 */
extern void T287f2007(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].force */
extern void T982f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].fill_with */
extern void T984f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].extend */
extern void T984f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T982f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].aliased_resized_area */
extern T0* T984f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T297f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T983f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T983c22(GE_context* ac, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T983f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_813 */
extern void T287f2006(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].force */
extern void T772f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].fill_with */
extern void T773f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].extend */
extern void T773f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_812 */
extern void T287f2005(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T772f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].aliased_resized_area */
extern T0* T773f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T297f310(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_ARGUMENT_LIST.make_bracketed_with_capacity */
extern T0* T320c17(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_811 */
extern void T287f2004(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_810 */
extern void T287f2003(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].force */
extern void T792f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].fill_with */
extern void T794f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].extend */
extern void T794f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T792f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].aliased_resized_area */
extern T0* T794f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_809 */
extern void T287f2002(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T297f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T793c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_808 */
extern void T287f2001(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_807 */
extern void T287f2000(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_806 */
extern void T287f1999(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_805 */
extern void T287f1998(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_804 */
extern void T287f1997(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_803 */
extern void T287f1996(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T287f2121(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_17_11_0 */
extern T0* T287f929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_802 */
extern void T287f1995(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_801 */
extern void T287f1994(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T287f1176(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_800 */
extern void T287f1993(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_799 */
extern void T287f1992(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_798 */
extern void T287f1991(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_797 */
extern void T287f1990(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T287f928(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.register_inline_constant */
extern void T83f294(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T1356f28(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T297f356(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T1356f27(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T1356c24(GE_context* ac, T0* a1);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T1356f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_796 */
extern void T287f1989(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_795 */
extern void T287f1988(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_794 */
extern void T287f1987(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_793 */
extern void T287f1986(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_792 */
extern void T287f1985(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_791 */
extern void T287f1984(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_790 */
extern void T287f1983(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_789 */
extern void T287f1982(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_788 */
extern void T287f1981(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_787 */
extern void T287f1980(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_786 */
extern void T287f1979(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_785 */
extern void T287f1978(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_784 */
extern void T287f1977(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_object_test */
extern T0* T287f927(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_OBJECT_TEST_LIST.force_last */
extern void T1283f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_LIST.resize */
extern void T1283f13(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1153f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_NAMED_OBJECT_TEST].aliased_resized_area */
extern T0* T1152f3(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.new_capacity */
extern T6 T1283f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_LIST.capacity */
extern T6 T1283f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_object_test_list */
extern T0* T287f951(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_named_object_test */
extern T0* T297f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NAMED_OBJECT_TEST.set_attached_keyword */
extern void T1151f29(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.make */
extern T0* T1151c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NAMED_OBJECT_TEST.make_object_test */
extern void T1151f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NAMED_OBJECT_TEST.tokens */
extern T0* T1151f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_783 */
extern void T287f1976(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_782 */
extern void T287f1975(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_test */
extern T0* T297f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.set_attached_keyword */
extern void T353f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST.make */
extern T0* T353c24(GE_context* ac, T0* a1, T0* a2);
/* ET_OBJECT_TEST.tokens */
extern T0* T353f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_781 */
extern void T287f1974(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_780 */
extern void T287f1973(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_old_object_test */
extern T0* T287f926(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_AST_FACTORY.new_old_object_test */
extern T0* T297f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_OLD_OBJECT_TEST.set_left_brace */
extern void T1355f32(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_OBJECT_TEST.make */
extern T0* T1355c29(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern T0* T82f686(GE_context* ac, T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T385c86(GE_context* ac);
/* ET_OLD_OBJECT_TEST.tokens */
extern T0* T1355f12(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_1_0 */
extern T0* T287f914(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_779 */
extern void T287f1972(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T297f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T1354f24(GE_context* ac, T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T1354c21(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern T0* T82f1506(GE_context* ac, T0* C);
/* ET_KEYWORD.make_old */
extern T0* T439c46(GE_context* ac);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T1354f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_778 */
extern void T287f1971(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T297f305(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T1353c26(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T297f306(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T734f50(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T734f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_777 */
extern void T287f1970(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_776 */
extern void T287f1969(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T287f925(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T287f925ot1(T0* a1, T0** a2);
extern T1 T287f925ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T297f353(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T753f98(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T753f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_775 */
extern void T287f1968(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T287f924(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T287f924ot1(T0* a1, T0** a2);
extern T1 T287f924ot2(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T297f352(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T753f97(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_774 */
extern void T287f1967(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_773 */
extern void T287f1966(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_772 */
extern void T287f1965(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_771 */
extern void T287f1964(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_770 */
extern void T287f1963(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_769 */
extern void T287f1962(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_768 */
extern void T287f1961(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_767 */
extern void T287f1960(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_766 */
extern void T287f1959(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_765 */
extern void T287f1958(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T297f304(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T1352c22(GE_context* ac, T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T1352f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_764 */
extern void T287f1957(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_763 */
extern void T287f1956(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_762 */
extern void T287f1955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_761 */
extern void T287f1954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_760 */
extern void T287f1953(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_759 */
extern void T287f1952(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_object_equality_expression */
extern T0* T297f303(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T354c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_758 */
extern void T287f1951(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_757 */
extern void T287f1950(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T297f302(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T355c21(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_756 */
extern void T287f1949(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_755 */
extern void T287f1948(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T297f297(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T1349c24(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_754 */
extern void T287f1947(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T297f301(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T1351f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T1351c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern T0* T82f698(GE_context* ac, T0* C);
/* ET_KEYWORD.make_else */
extern T0* T439c62(GE_context* ac);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern T0* T82f1505(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T740c47(GE_context* ac);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T740f53(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T740f54(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T740f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T1351f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_753 */
extern void T287f1946(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T297f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T1350f33(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T1350c32(GE_context* ac);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern T0* T82f702(GE_context* ac, T0* C);
/* ET_KEYWORD.make_then */
extern T0* T439c66(GE_context* ac);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern T0* T82f1504(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T740c49(GE_context* ac);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T1350f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_752 */
extern void T287f1945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_751 */
extern void T287f1944(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T287f1943(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T287f1942(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T287f1941(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T287f1940(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T287f1939(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T287f1938(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T287f1937(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T287f1936(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T287f1935(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T287f1934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T287f1933(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T297f299(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T753f96(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T287f1932(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T297f298(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T753f95(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T287f1931(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T297f296(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T734f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T287f1930(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T287f1929(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T287f1928(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].force */
extern void T1033f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WRITABLE].fill_with */
extern void T1034f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WRITABLE].extend */
extern void T1034f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1033f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WRITABLE].aliased_resized_area */
extern T0* T1034f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T287f1927(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T287f923(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T287f1926(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T297f295(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T1348f24(GE_context* ac, T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T1348c21(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern T0* T82f1503(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T385c78(GE_context* ac);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T1348f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T287f1925(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T297f294(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T1347f24(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T1347c21(GE_context* ac);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T1347f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T287f1924(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T297f293(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T1346f24(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T1346c21(GE_context* ac);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T1346f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T287f1923(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_feature_address */
extern T0* T287f922(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T287f922ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T297f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T1345f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T1345c21(GE_context* ac, T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T1345f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T287f1922(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T297f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T287f1921(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T287f1920(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T297f291(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T287f1919(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T287f1918(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T287f1917(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T287f1916(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T287f1915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T287f1914(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_expression */
extern T0* T297f288(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.new_dot_feature_name */
extern T0* T287f913(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T287f1913(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern T0* T287f895(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T287f1912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T287f1911(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T287f1910(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T287f1909(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T287f1908(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T287f1907(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T287f1906(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T287f1905(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T287f921(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T287f1904(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T297f290(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T1344f29(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T1344f28(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T1344c25(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern T0* T82f1502(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T716c18(GE_context* ac);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T716f20(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T716f21(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T716f7(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T1344f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T297f286(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T287f1903(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T287f1902(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].force */
extern void T1011f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].fill_with */
extern void T1013f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].extend */
extern void T1013f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1011f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].aliased_resized_area */
extern T0* T1013f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T297f289(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T1012f32(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T1012c29(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T1012f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T287f1901(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T287f1900(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T287f1899(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T287f1898(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T287f1897(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T287f1896(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T287f1895(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].force */
extern void T946f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].fill_with */
extern void T948f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].extend */
extern void T948f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T946f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].aliased_resized_area */
extern T0* T948f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T297f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T1343f9(GE_context* ac, T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T1343c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T1343f10(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T287f1894(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T287f1893(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T297f285(GE_context* ac, T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T1341f11(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T1341f10(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T1341c9(GE_context* ac, T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T1341f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T287f1892(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T287f1891(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_call_instruction */
extern T0* T297f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T287f1890(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T287f1889(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T287f920(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_unqualified_call_instruction */
extern T0* T297f350(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.make */
extern T0* T1564c6(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T287f1888(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].force */
extern void T971f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].fill_with */
extern void T973f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].extend */
extern void T973f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T971f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].aliased_resized_area */
extern T0* T973f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T297f283(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T287f1887(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].force */
extern void T974f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].fill_with */
extern void T976f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].extend */
extern void T976f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T975f10(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern T0* T975f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T287f1886(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T974f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].aliased_resized_area */
extern T0* T976f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T297f282(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T975c9(GE_context* ac, T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T975f5(GE_context* ac, T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T975f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T287f1885(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T287f1884(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T287f1883(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T287f1882(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T287f1881(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].force */
extern void T861f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].fill_with */
extern void T863f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].extend */
extern void T863f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T861f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].aliased_resized_area */
extern T0* T863f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T297f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T862c5(GE_context* ac, T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T862f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T297f280(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern T0* T82f706(GE_context* ac, T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T439c70(GE_context* ac);
/* ET_COMPOUND.make */
extern T0* T372c9(GE_context* ac);
/* ET_COMPOUND.make */
extern void T372f9p1(GE_context* ac, T0* C);
/* ET_COMPOUND.fixed_array */
extern T0* T372f6(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern T0* T82f695(GE_context* ac, T0* C);
/* ET_KEYWORD.make_do */
extern T0* T439c59(GE_context* ac);
/* ET_COMPOUND.tokens */
extern T0* T372f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T287f1880(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].force */
extern void T824f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].fill_with */
extern void T826f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].extend */
extern void T826f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T824f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].aliased_resized_area */
extern T0* T826f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T287f1879(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T287f1878(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].force */
extern void T769f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].fill_with */
extern void T771f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].extend */
extern void T771f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T769f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].aliased_resized_area */
extern T0* T771f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_across_instruction_header */
extern T0* T287f919(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_across_instruction */
extern T0* T297f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ACROSS_INSTRUCTION.set_variant_part */
extern void T770f21(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_invariant_part */
extern void T770f20(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.make */
extern T0* T770c16(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ACROSS_INSTRUCTION.create_unfolded_form */
extern void T770f23(GE_context* ac, T0* C);
/* ET_ACROSS_INSTRUCTION.tokens */
extern T0* T770f14(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T287f1877(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].force */
extern void T806f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].fill_with */
extern void T808f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].extend */
extern void T808f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T806f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].aliased_resized_area */
extern T0* T808f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T287f1876(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_choice_attribute_constant */
extern T0* T287f918(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T287f1875(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T287f1874(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T287f1873(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].force */
extern void T803f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE].fill_with */
extern void T805f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE].extend */
extern void T805f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE].aliased_resized_area */
extern T0* T803f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE].aliased_resized_area */
extern T0* T805f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T297f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T1340c7(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern T0* T82f691(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T385c91(GE_context* ac);
/* ET_CHOICE_RANGE.tokens */
extern T0* T1340f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T287f1872(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T287f1871(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].force */
extern void T809f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].fill_with */
extern void T811f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].extend */
extern void T811f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T809f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].aliased_resized_area */
extern T0* T811f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T297f278(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T287f1870(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].force */
extern void T812f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].fill_with */
extern void T814f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].extend */
extern void T814f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.put_first */
extern void T813f9(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.fixed_array */
extern T0* T813f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T287f1869(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T812f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].aliased_resized_area */
extern T0* T814f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T297f277(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T813f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T813c8(GE_context* ac, T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T813f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern T0* T82f703(GE_context* ac, T0* C);
/* ET_KEYWORD.make_when */
extern T0* T439c67(GE_context* ac);
/* ET_CHOICE_LIST.tokens */
extern T0* T813f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T287f1868(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T287f1867(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T287f1866(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T287f1865(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T287f1864(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].force */
extern void T1027f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART].fill_with */
extern void T1029f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART].extend */
extern void T1029f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1027f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WHEN_PART].aliased_resized_area */
extern T0* T1029f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part */
extern T0* T297f276(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T1028c3(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T287f1863(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].force */
extern void T1030f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].fill_with */
extern void T1032f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].extend */
extern void T1032f10(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.put_first */
extern void T1031f6(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern T0* T1031f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T287f1862(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1030f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].aliased_resized_area */
extern T0* T1032f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T297f275(GE_context* ac, T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T1031c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T287f1861(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T287f1860(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T287f1859(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].force */
extern void T943f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].fill_with */
extern void T945f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].extend */
extern void T945f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T943f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].aliased_resized_area */
extern T0* T945f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T297f274(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T944f8(GE_context* ac, T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T944c7(GE_context* ac, T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T944f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T287f1858(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T287f1857(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].force */
extern void T864f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].fill_with */
extern void T866f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].extend */
extern void T866f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T864f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].aliased_resized_area */
extern T0* T866f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression */
extern T0* T297f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ELSEIF_EXPRESSION.make */
extern T0* T865c7(GE_context* ac, T0* a1, T0* a2);
/* ET_ELSEIF_EXPRESSION.tokens */
extern T0* T865f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T287f1856(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].force */
extern void T867f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].fill_with */
extern void T869f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].extend */
extern void T869f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.put_first */
extern void T868f7(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.fixed_array */
extern T0* T868f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T287f1855(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T867f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].aliased_resized_area */
extern T0* T869f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_expression_list */
extern T0* T297f272(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_EXPRESSION_LIST.make_with_capacity */
extern T0* T868c6(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T287f1854(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T287f1853(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].force */
extern void T919f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].fill_with */
extern void T921f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].extend */
extern void T921f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T919f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].aliased_resized_area */
extern T0* T921f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_expression */
extern T0* T297f271(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_IF_EXPRESSION.set_elseif_parts */
extern void T920f30(GE_context* ac, T0* C, T0* a1);
/* ET_IF_EXPRESSION.make */
extern T0* T920c27(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.tokens */
extern T0* T920f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T287f1852(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T287f1851(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].force */
extern void T870f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].fill_with */
extern void T872f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].extend */
extern void T872f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T870f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].aliased_resized_area */
extern T0* T872f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T297f270(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T871c4(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T287f1850(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].force */
extern void T873f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].fill_with */
extern void T875f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].extend */
extern void T875f10(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T874f6(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern T0* T874f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T287f1849(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T873f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].aliased_resized_area */
extern T0* T875f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T297f269(GE_context* ac, T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T874c5(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T287f1848(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T287f1847(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].force */
extern void T922f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].fill_with */
extern void T924f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].extend */
extern void T924f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T922f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].aliased_resized_area */
extern T0* T924f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T297f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T923f10(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T923f9(GE_context* ac, T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T923c8(GE_context* ac, T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T923f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T287f1846(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T287f1845(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T287f1844(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T287f1843(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].force */
extern void T852f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].fill_with */
extern void T854f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].extend */
extern void T854f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T852f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].aliased_resized_area */
extern T0* T854f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creation_region */
extern T0* T297f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATION_REGION.set_right_symbol */
extern void T853f7(GE_context* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.set_left_symbol */
extern void T853f6(GE_context* ac, T0* C, T0* a1);
/* ET_CREATION_REGION.make */
extern T0* T853c5(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.greater_than_symbol */
extern T0* T82f875(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T753c89(GE_context* ac);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T753f99(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.less_than_symbol */
extern T0* T82f874(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T753c90(GE_context* ac);
/* ET_CREATION_REGION.tokens */
extern T0* T853f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T287f1842(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T287f1841(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].force */
extern void T850f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].fill_with */
extern void T851f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].extend */
extern void T851f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T850f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].aliased_resized_area */
extern T0* T851f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T297f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_EXPRESSION.set_creation_region */
extern void T364f32(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T364f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T297f263(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T287f1840(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T287f1839(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T297f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CREATE_INSTRUCTION.set_creation_region */
extern void T1339f14(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T1339f13(GE_context* ac, T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T1339c12(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T1339f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T287f1838(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T287f1837(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T287f1836(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T287f1835(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T297f262(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T1338f12(GE_context* ac, T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T1338c11(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern T0* T82f1501(GE_context* ac, T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T385c77(GE_context* ac);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T1338f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T287f1834(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T287f1833(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T287f1832(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T287f1831(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].force */
extern void T800f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].fill_with */
extern void T802f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].extend */
extern void T802f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T800f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].aliased_resized_area */
extern T0* T802f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T287f917(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].remove_last */
extern void T705f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].keep_head */
extern void T1463f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].set_count */
extern void T1463f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T705f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_next_cursor */
extern void T1465f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ASSERTION_ITEM].set_after */
extern void T1465f6(GE_context* ac, T0* C);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T801f11(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].force */
extern void T1464f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].fill_with */
extern void T1463f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].extend */
extern void T1463f10(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern T0* T801f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].item */
extern T0* T705f10(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T297f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T801f13(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.set_then_compound */
extern void T801f12(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T801c10(GE_context* ac, T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T801f10p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern T0* T82f705(GE_context* ac, T0* C);
/* ET_KEYWORD.make_check */
extern T0* T439c69(GE_context* ac);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T801f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].remove_last */
extern void T296f29(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].move_last_cursors_after */
extern void T296f30(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] INTEGER_32].last */
extern T6 T296f13(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T287f1830(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T287f1829(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T287f1828(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T287f1827(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_check_instruction */
extern void T287f2148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_assertions */
extern void T287f2153(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T287f1826(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T297f261(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T287f1825(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T287f1824(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T287f1823(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T287f1822(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_across_instruction */
extern T0* T287f916(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ACROSS_INSTRUCTION.set_end_keyword */
extern void T770f22(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_loop_compound */
extern void T770f19(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_until_conditional */
extern void T770f18(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.set_from_compound */
extern void T770f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T287f1821(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T297f260(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_has_old_variant_syntax */
extern void T1336f13(GE_context* ac, T0* C, T1 a1);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T1336f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T1336f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T1336c10(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T1336f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.ise_6_3_7_4554 */
extern T0* T287f915(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T287f1820(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_instruction_old_syntax */
extern T0* T297f259(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T287f1819(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T287f1818(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T287f1817(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T287f1816(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T297f257(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T1335c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern T0* T82f693(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T385c93(GE_context* ac);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T1335f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T287f1815(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T297f256(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T1334c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern T0* T82f692(GE_context* ac, T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T385c92(GE_context* ac);
/* ET_ASSIGNMENT.tokens */
extern T0* T1334f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T287f1814(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T297f255(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T1333c15(GE_context* ac, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T1333f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T287f1813(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T287f1812(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T287f1811(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T287f1810(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T287f1809(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].force */
extern void T822f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_COMPOUND].fill_with */
extern void T823f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_COMPOUND].extend */
extern void T823f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T822f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_COMPOUND].aliased_resized_area */
extern T0* T823f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T287f1808(GE_context* ac, T0* C);
/* ET_COMPOUND.put_first */
extern void T372f11(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T287f1807(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T297f254(GE_context* ac, T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T372c12(GE_context* ac, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T372f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T287f1806(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T287f1805(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T287f1804(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T287f1803(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_empty_compound */
extern T0* T297f253(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T287f1802(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T287f1801(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T297f252(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern T0* T82f700(GE_context* ac, T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T439c64(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T287f1800(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T287f1799(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T287f1798(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T297f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern T0* T82f699(GE_context* ac, T0* C);
/* ET_KEYWORD.make_from */
extern T0* T439c63(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T287f1797(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T297f250(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern T0* T82f715(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T439c79(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T287f1796(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T297f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T287f1795(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T287f1794(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T297f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T287f1175(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T287f1793(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T287f1792(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute_compound */
extern T0* T297f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern T0* T82f729(GE_context* ac, T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T439c93(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T287f1791(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T297f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T287f1790(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].force */
extern void T1001f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].fill_with */
extern void T1003f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].extend */
extern void T1003f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1001f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].aliased_resized_area */
extern T0* T1003f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_qualified_like_type */
extern T0* T297f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.make */
extern T0* T1332c72(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_attachment_symbol_separate_keyword */
extern T0* T297f135(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.make */
extern T0* T1305c18(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T287f1789(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T287f1788(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T287f1787(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T287f1786(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attachment_separate_keywords */
extern T0* T297f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T287f1785(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T287f1784(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T287f1783(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T287f1782(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T287f1781(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_qualified_like_braced_type */
extern T0* T297f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_like_keyword */
extern void T1331f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.make */
extern T0* T1331c75(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.tokens */
extern T0* T1331f36(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T287f1780(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T287f1779(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T287f1778(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T287f1777(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T287f1776(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T287f1775(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T287f1774(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T287f1773(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T287f1772(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T287f1771(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T287f1770(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T287f1769(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].force */
extern void T954f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].fill_with */
extern void T956f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].extend */
extern void T956f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T954f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].aliased_resized_area */
extern T0* T956f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T287f1768(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_like_current */
extern T0* T297f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T542f71(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T287f1767(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T287f1766(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T287f1765(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T287f1764(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T287f1763(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T287f1762(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T287f1761(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T287f1760(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T287f1759(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_universe */
extern T0* T287f912(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T287f1758(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_like_feature */
extern T0* T287f911(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T297f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T1330f77(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T1330c76(GE_context* ac, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.tokens */
extern T0* T1330f32(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T287f1757(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T287f1756(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T287f1755(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T287f1754(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T287f1753(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T287f1752(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T287f1751(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T287f1750(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T287f1749(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T287f1748(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T287f1747(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T287f1746(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T287f1745(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T694f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T691f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T297f242(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T297f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1328c10(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T287f1744(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T287f1743(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].force */
extern void T774f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].fill_with */
extern void T775f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].extend */
extern void T775f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T287f2147(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T297f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1578c10(GE_context* ac, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T267f15(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T297f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T287f1742(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T287f1741(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T287f1740(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T287f1739(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T287f1738(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T774f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T775f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T297f237(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T267f31(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T287f1737(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T287f1736(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T287f1735(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T287f1734(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T287f1733(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T287f1732(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T297f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T287f1731(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T287f1730(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T287f910(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T297f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T276f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T287f934(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T287f1729(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T287f909(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T297f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T297f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T297f344(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1479c68(GE_context* ac, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_CLASS.formal_parameter */
extern T0* T83f171(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T687f18(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T287f1728(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T287f1727(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T287f1726(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T287f1725(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T287f1724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T287f1723(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T287f1722(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T287f1721(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T287f1720(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T287f1719(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T287f1718(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T287f1717(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T287f1716(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T287f1715(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T287f1714(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T287f1713(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T287f1712(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T287f1711(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T287f1710(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T287f1709(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T287f1708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T287f1707(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T287f1706(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T287f1705(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T287f1704(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T287f1703(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T287f1702(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T287f1701(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T287f1700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T287f1699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T287f1698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T287f1697(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T287f1696(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T287f1695(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T287f1694(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T287f1693(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T287f1692(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T287f1691(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T287f1690(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T287f1689(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T287f1688(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T287f1687(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T287f1686(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T287f1685(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T287f1684(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T287f1683(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T287f1682(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T287f1681(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T287f1680(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T287f1679(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T287f1678(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T287f1677(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T287f1676(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T287f1675(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T287f1674(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T287f1673(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T287f1672(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T287f1671(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T287f1670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T287f1669(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T287f1668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T287f1667(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T287f1666(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T287f1665(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T287f1664(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T287f1663(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T287f1662(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T287f1661(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T287f1660(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T287f1659(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T287f1658(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T287f1657(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T287f1656(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T287f1655(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T287f1654(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T287f1653(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T287f1652(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T287f1651(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T287f1650(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T287f1649(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T287f1648(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T287f1647(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T287f1646(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T287f1645(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T287f1644(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].force */
extern void T1024f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VARIANT].fill_with */
extern void T1026f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VARIANT].extend */
extern void T1026f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T287f1643(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1024f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_VARIANT].aliased_resized_area */
extern T0* T1026f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T287f1642(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant */
extern T0* T297f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T1025f6(GE_context* ac, T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T1025c5(GE_context* ac, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern T0* T82f721(GE_context* ac, T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T439c85(GE_context* ac);
/* ET_VARIANT.tokens */
extern T0* T1025f4(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T297f122(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T287f1641(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T287f1640(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].force */
extern void T965f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].fill_with */
extern void T967f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].extend */
extern void T967f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T965f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].aliased_resized_area */
extern T0* T967f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T287f908(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T966f10(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T966f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T297f343(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T966f11(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T966c9(GE_context* ac, T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T966f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern T0* T82f730(GE_context* ac, T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T439c94(GE_context* ac);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T966f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T287f1639(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T287f1638(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T287f1637(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T287f1636(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_loop_invariant */
extern void T287f2146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T287f1635(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T287f1634(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].force */
extern void T949f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INVARIANTS].fill_with */
extern void T951f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INVARIANTS].extend */
extern void T951f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T949f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INVARIANTS].aliased_resized_area */
extern T0* T951f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T287f907(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.wipe_out_last_across_components_stack */
extern void T287f1158(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].wipe_out */
extern void T704f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_ACROSS_COMPONENT_LIST].i_th */
extern T0* T704f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_object_tests_stack */
extern void T287f1157(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].wipe_out */
extern void T703f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_OBJECT_TEST_LIST].i_th */
extern T0* T703f5(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.wipe_out_last_local_variables_stack */
extern void T287f1156(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T700f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wipe_out_last_formal_arguments_stack */
extern void T287f1155(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T699f10(GE_context* ac, T0* C);
/* ET_INVARIANTS.set_across_components */
extern void T950f28(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.set_object_tests */
extern void T950f27(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T950f26(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T950f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_invariants */
extern T0* T297f342(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T950f29(GE_context* ac, T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T950c25(GE_context* ac, T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T950f30(GE_context* ac, T0* C, T6 a1);
/* ET_INVARIANTS.tokens */
extern T0* T950f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T287f1633(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T287f1632(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T287f1631(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T287f1630(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_invariant */
extern void T287f2145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T287f1629(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].force */
extern void T994f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].fill_with */
extern void T996f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].extend */
extern void T996f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T994f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].aliased_resized_area */
extern T0* T996f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T287f906(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T995f18(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T995f10(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T297f341(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T995f20(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T995f19(GE_context* ac, T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T995c17(GE_context* ac, T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T995f17p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern T0* T82f877(GE_context* ac, T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T439c51(GE_context* ac);
/* ET_POSTCONDITIONS.tokens */
extern T0* T995f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T287f1628(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T287f1627(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T287f1626(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T287f1625(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T287f1624(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_postcondition */
extern void T287f2144(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T287f1623(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].force */
extern void T997f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].fill_with */
extern void T998f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].extend */
extern void T998f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T997f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].aliased_resized_area */
extern T0* T998f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T287f905(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T431f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T431f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T297f340(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T431f19(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T431f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T431c16(GE_context* ac, T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T431f16p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern T0* T82f825(GE_context* ac, T0* C);
/* ET_KEYWORD.make_require */
extern T0* T439c54(GE_context* ac);
/* ET_PRECONDITIONS.tokens */
extern T0* T431f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T287f1622(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T287f1621(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T287f1620(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T287f1619(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T287f1618(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.start_precondition */
extern void T287f2143(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T287f1617(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_class_assertion */
extern void T287f2142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.add_untagged_assertion */
extern void T287f2152(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T287f2152ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].force_last */
extern void T705f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].resize */
extern void T705f18(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1464f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ASSERTION_ITEM].aliased_resized_area */
extern T0* T1463f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].new_capacity */
extern T6 T705f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].extendible */
extern T1 T705f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].replace */
extern void T705f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T297f328(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.set_untagged_assertion */
extern void T1366f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].last */
extern T0* T705f9(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_class_assertion */
extern T0* T297f235(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.set_class_keyword */
extern void T1327f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_ASSERTION.make */
extern T0* T1327c7(GE_context* ac);
/* ET_CLASS_ASSERTION.tokens */
extern T0* T1327f2(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T287f1616(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T287f1615(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T287f2141(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T287f2141ot1(T0* a1, T0** a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T297f327(GE_context* ac, T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1366c7(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T287f1179(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T287f1183(GE_context* ac, T0* C);
/* ET_FILE_POSITION.column */
extern T6 T1368f3(GE_context* ac, T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1368f6(GE_context* ac, T0* C);
/* ET_FILE_POSITION.is_null */
extern T1 T1368f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T287f700(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T287f1614(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T287f1613(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T287f2140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T287f1612(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T287f1611(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T287f1610(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T287f1609(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T287f1608(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T287f1607(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T287f1606(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T287f1605(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].force */
extern void T960f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].fill_with */
extern void T962f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].extend */
extern void T962f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T960f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].aliased_resized_area */
extern T0* T962f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T297f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T297f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T958c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T287f1604(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T287f1603(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].force */
extern void T957f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].fill_with */
extern void T959f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].extend */
extern void T959f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T957f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].aliased_resized_area */
extern T0* T959f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T297f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1577c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern T0* T287f902(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T287f1602(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T297f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T287f1601(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T373f12(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern T0* T373f10(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T287f1600(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T287f1599(GE_context* ac, T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1577f8(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T373f6(GE_context* ac, T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T373f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T287f1598(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T287f1597(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T287f903(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T297f339(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T373f13(GE_context* ac, T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T373c11(GE_context* ac, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T373f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern T0* T82f708(GE_context* ac, T0* C);
/* ET_KEYWORD.make_local */
extern T0* T439c72(GE_context* ac);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T373f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T287f1596(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T287f1595(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T287f1594(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T287f1174(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T287f1593(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T287f1592(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T287f1591(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].force */
extern void T906f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].fill_with */
extern void T908f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].extend */
extern void T908f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T906f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].aliased_resized_area */
extern T0* T908f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T297f230(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T297f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T280c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T287f1590(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T287f1589(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].force */
extern void T904f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].fill_with */
extern void T905f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].extend */
extern void T905f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T904f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].aliased_resized_area */
extern T0* T905f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T297f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1576c7(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T287f1588(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T297f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T287f1587(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T277f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern T0* T277f11(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T287f1586(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T287f1585(GE_context* ac, T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1576f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T277f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T287f1584(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T287f1583(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T287f901(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T297f338(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T277c12(GE_context* ac, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T277f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T277f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T287f1582(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T287f1581(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T287f1580(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T287f1579(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T287f1578(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T287f1577(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T287f900(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T287f949(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T297f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T1324f45(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T1324c44(GE_context* ac, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T1324f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern T0* T1324f15(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern T0* T82f704(GE_context* ac, T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T439c68(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T287f1576(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_parenthesis_name */
extern T0* T297f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T787f64(GE_context* ac, T0* C, T0* a1);
/* ET_ALIAS_NAME.make_parenthesis */
extern T0* T787c84(GE_context* ac, T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T787f62(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T287f1575(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T297f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T787c83(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T287f1574(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T287f1573(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T297f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T787c82(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T287f1572(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T297f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T787c81(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T287f1571(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T297f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T787c80(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T287f1570(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T297f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T787c79(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T287f1569(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T297f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T787c78(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T287f1568(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T297f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T787c77(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T287f1567(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T297f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T787c76(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T287f1566(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T297f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T787c75(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T287f1565(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T297f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T787c74(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T287f1564(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T297f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T787c73(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T287f1563(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T297f213(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T787c72(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T287f1562(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T297f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T787c71(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T287f1561(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T297f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T787c70(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T287f1560(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T297f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T787c69(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T287f1559(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T297f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T787c68(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T287f1558(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T297f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T787c67(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T287f1557(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T297f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T787c66(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T287f1556(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T297f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T787c65(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T287f1555(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T297f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T787c63(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T287f1554(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].force */
extern void T885f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].fill_with */
extern void T886f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].extend */
extern void T886f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T885f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].aliased_resized_area */
extern T0* T886f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T297f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T287f1553(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T287f1552(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T287f899(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T287f948(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T297f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T1251f69(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T1251c68(GE_context* ac, T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T1251f24(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern T0* T1251f30(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern T0* T82f707(GE_context* ac, T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T439c71(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T287f1551(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T287f1550(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T287f898(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T287f947(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T297f185(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T1321f69(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T1321c68(GE_context* ac, T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T1321f28(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern T0* T1321f33(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern T0* T82f713(GE_context* ac, T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T439c77(GE_context* ac);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T287f1549(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T287f1548(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T287f1547(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T287f1546(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T287f1545(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T287f1544(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T287f1543(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T287f1542(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T287f1541(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T287f1540(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T287f1539(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T287f1538(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T287f1537(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T287f1536(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T287f1535(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T287f1534(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T287f1533(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T297f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T1322f85(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T1322c101(GE_context* ac, T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T1322f60(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T287f1532(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T297f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T1322c100(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T287f1531(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T297f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T1322c99(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T287f1530(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T297f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T1322c98(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T287f1529(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T297f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T1322c97(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T287f1528(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T297f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T1322c96(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T287f1527(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T297f196(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T1322c95(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T287f1526(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T297f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T1322c94(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T287f1525(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T297f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T1322c93(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T287f1524(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T297f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T1322c92(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T287f1523(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T297f192(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T1322c91(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T287f1522(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T297f191(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T1322c90(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T287f1521(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T297f190(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T1322c89(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T287f1520(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T297f189(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T1322c88(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T287f1519(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T297f188(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T1322c87(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T287f1518(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T297f187(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T1322c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T287f1517(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T297f186(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T1322c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T287f1516(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T287f1515(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T297f184(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T1320f85(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T1320c87(GE_context* ac, T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T1320f34(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T287f1514(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T297f183(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T1320c86(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T287f1513(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T297f182(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T1320c84(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T287f1512(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T287f1511(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].force */
extern void T789f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ASSIGNER].fill_with */
extern void T791f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_ASSIGNER].extend */
extern void T791f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T789f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_ASSIGNER].aliased_resized_area */
extern T0* T791f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_assigner */
extern T0* T297f181(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T287f1510(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T287f1509(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].force */
extern void T887f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].fill_with */
extern void T889f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].extend */
extern void T889f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T887f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].aliased_resized_area */
extern T0* T889f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T297f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T287f1508(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T287f1507(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].force */
extern void T758f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].fill_with */
extern void T760f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].extend */
extern void T760f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T287f1506(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T758f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].aliased_resized_area */
extern T0* T760f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T287f1505(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T287f1504(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T287f1503(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T287f897(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T297f337(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T1319f101(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T1319f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T1319f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T1319f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T1319f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T1319f95(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern T0* T82f697(GE_context* ac, T0* C);
/* ET_KEYWORD.make_is */
extern T0* T439c61(GE_context* ac);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T1319c86(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T1319f41(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T287f1502(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T287f1501(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T297f179(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T564f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T564f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T564f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T564f87(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T564f86(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T287f1500(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T287f1499(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T297f178(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T1318f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T1318f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T1318f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T1318f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_keys */
extern void T1318f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T1318f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T1318f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T1318f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T1318f90(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T1318c81(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T1318f43(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T287f1498(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T287f1497(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T297f177(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T557f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T557f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T557f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T557f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T557f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T557f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T557f88(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T557f87(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T287f1496(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T287f1495(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T287f896(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_AST_FACTORY.new_external_function */
extern T0* T297f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T275f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T275f102(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T275f101(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T275f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T275f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T275f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T275f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T275c88(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T275f59(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T287f1494(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T287f1493(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T287f1492(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T287f1491(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T297f175(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T1316f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T1316f92(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T1316f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T1316f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T1316f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T1316f88(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T1316c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.make */
extern void T1316f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T1316f47(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T287f1490(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T287f1489(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T287f1488(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T287f1487(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T297f174(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17, T0* a18);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T1315f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T1315f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T1315f98(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T1315f97(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_keys */
extern void T1315f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T1315f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T1315f94(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T1315f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T1315f92(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T1315f91(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T1315c82(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T1315f48(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T287f1486(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T287f1485(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T287f1484(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T287f1483(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T297f172(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T1314f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T1314f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T1314f95(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T1314f94(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T1314f93(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T1314f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T1314f91(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T1314f90(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T1314f89(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T1314c80(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T1314f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T287f1482(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T287f1481(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T287f1480(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T287f1479(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T297f171(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T402f89(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T402c80(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T403c64(GE_context* ac, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T403f72(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T403f71(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern T0* T82f823(GE_context* ac, T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T439c53(GE_context* ac);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T402f50(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T287f1478(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T287f1477(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T297f170(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T400f88(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T400c79(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T400f48(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T287f1476(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T287f1475(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_attribute */
extern T0* T297f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_EXTENDED_ATTRIBUTE.set_first_indexing */
extern void T371f96(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_rescue_clause */
extern void T371f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_postconditions */
extern void T371f93(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_compound */
extern void T371f92(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_locals */
extern void T371f91(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_preconditions */
extern void T371f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_obsolete_message */
extern void T371f89(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_assigner */
extern void T371f88(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.make */
extern T0* T371c79(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.make */
extern void T371f79p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTENDED_ATTRIBUTE.tokens */
extern T0* T371f48(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T287f1474(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T297f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T404f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T404c76(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T404f43(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T287f1473(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T287f1472(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T287f2138(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].back */
extern void T707f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_back */
extern void T707f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].add_traversing_cursor */
extern void T707f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_traversing_cursor */
extern void T707f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].set_position */
extern void T1467f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left */
extern void T707f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].force_left_cursor */
extern void T707f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put */
extern void T707f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_right */
extern void T707f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_right */
extern void T707f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].put_last */
extern void T707f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].index */
extern T6 T1467f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_index */
extern T6 T707f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].forth */
extern void T707f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_forth */
extern void T707f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].before */
extern T1 T707f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_before */
extern T1 T707f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].before */
extern T1 T1467f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T287f894(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T287f1471(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T297f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T287f1470(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T287f1469(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T287f1468(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T287f2137(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].finish */
extern void T707f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].cursor_finish */
extern void T707f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].off */
extern T1 T1467f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_PROCEDURE].after */
extern T1 T1467f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T287f1467(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T287f1466(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T287f2136(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].back */
extern void T706f21(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_back */
extern void T706f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].add_traversing_cursor */
extern void T706f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_traversing_cursor */
extern void T706f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].set_position */
extern void T1466f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left */
extern void T706f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].force_left_cursor */
extern void T706f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].put */
extern void T706f31(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_right */
extern void T706f34(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_right */
extern void T706f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].put_last */
extern void T706f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].index */
extern T6 T1466f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_index */
extern T6 T706f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].forth */
extern void T706f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_forth */
extern void T706f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].before */
extern T1 T706f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_before */
extern T1 T706f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].before */
extern T1 T1466f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T287f893(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T287f1465(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T287f1464(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T287f1463(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T287f1462(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T287f2135(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].finish */
extern void T706f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].cursor_finish */
extern void T706f25(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].off */
extern T1 T1466f5(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_QUERY].after */
extern T1 T1466f7(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T287f1461(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T287f1460(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T287f1459(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T287f1458(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T287f1457(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T287f1456(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].force */
extern void T890f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].fill_with */
extern void T892f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].extend */
extern void T892f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T890f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].aliased_resized_area */
extern T0* T892f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T297f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T891c4(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern T0* T82f718(GE_context* ac, T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T439c82(GE_context* ac);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T891f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T287f892(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T287f890(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T297f334(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T287f946(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T287f1455(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T287f1454(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T287f1453(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T287f1452(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].force */
extern void T893f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].fill_with */
extern void T895f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].extend */
extern void T895f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T894f5(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern T0* T894f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T287f1451(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T893f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].aliased_resized_area */
extern T0* T895f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T297f164(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T894c4(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T287f1450(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T287f2134(GE_context* ac, T0* C);
extern T1 T287f2134ot1(T0* a1, T0** a2);
/* ET_REGULAR_INTEGER_CONSTANT.set_value */
extern void T403f70(GE_context* ac, T0* C, T11 a1);
/* NATURAL_64.out */
extern T0* T11f6(GE_context* ac, T11* C);
/* STRING_8.append_natural_64 */
extern void T17f79(GE_context* ac, T0* C, T11 a1);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T287f1449(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T287f1448(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T287f1447(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].force */
extern void T1018f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].fill_with */
extern void T1020f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].extend */
extern void T1020f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1018f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].aliased_resized_area */
extern T0* T1020f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T297f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T287f1446(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].force */
extern void T1021f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].fill_with */
extern void T1023f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].extend */
extern void T1023f10(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1414f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T287f1445(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1021f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].aliased_resized_area */
extern T0* T1023f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T297f162(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1414f11(GE_context* ac, T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1414c9(GE_context* ac, T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1414f9p1(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T287f1444(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T287f1443(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T287f1442(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T287f1441(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].force */
extern void T841f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].fill_with */
extern void T843f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].extend */
extern void T843f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T841f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].aliased_resized_area */
extern T0* T843f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T297f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T1312c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T1312f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T287f1440(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T297f160(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T1311c8(GE_context* ac, T0* a1, T0* a2);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T1311f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T287f1439(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].force */
extern void T844f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].fill_with */
extern void T846f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].extend */
extern void T846f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T844f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].aliased_resized_area */
extern T0* T846f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T297f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T287f1438(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].force */
extern void T847f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].fill_with */
extern void T849f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].extend */
extern void T849f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T848f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern T0* T848f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T287f1437(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T847f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].aliased_resized_area */
extern T0* T849f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T297f158(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T848c8(GE_context* ac, T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T848f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern T0* T82f717(GE_context* ac, T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T439c81(GE_context* ac);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T848f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T287f1436(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T287f1435(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T287f1434(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T287f1433(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T287f1432(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T287f1431(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T901f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].aliased_resized_area */
extern T0* T903f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T297f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T287f1430(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].force */
extern void T855f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR].fill_with */
extern void T857f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR].extend */
extern void T857f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.put_first */
extern void T856f17(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR.fixed_array */
extern T0* T856f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T287f1429(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR].aliased_resized_area */
extern T0* T855f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATOR].aliased_resized_area */
extern T0* T857f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_creator */
extern T0* T297f157(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T856c16(GE_context* ac, T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T856f18(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern T0* T82f722(GE_context* ac, T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T439c86(GE_context* ac);
/* ET_CREATOR.tokens */
extern T0* T856f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T287f1428(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T287f1427(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T287f1426(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T287f1425(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T287f1424(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T287f1423(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T287f1422(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T287f1421(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T287f1420(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T287f1419(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T287f1418(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T287f1417(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T287f1416(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T287f1415(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].force */
extern void T858f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].fill_with */
extern void T860f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].extend */
extern void T860f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T858f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].aliased_resized_area */
extern T0* T860f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T287f1414(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T859f10(GE_context* ac, T0* C, T0* a1);
/* ET_CREATOR_LIST.fixed_array */
extern T0* T859f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T287f1413(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T297f156(GE_context* ac, T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T859c9(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T287f1412(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T287f1411(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T287f1410(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T287f1409(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].force */
extern void T952f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].fill_with */
extern void T953f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].extend */
extern void T953f10(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T538f9(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T538f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T287f1408(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T952f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].aliased_resized_area */
extern T0* T953f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T297f154(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T538c8(GE_context* ac, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T538f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern T0* T82f727(GE_context* ac, T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T439c91(GE_context* ac);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T538f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T287f1407(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T287f1406(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T287f1405(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T287f1404(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T287f1403(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T287f1402(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T287f1401(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T287f1400(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T287f1399(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T287f1398(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T287f1397(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T287f1396(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T287f1395(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T287f1394(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T287f1173(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T287f1393(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T287f1392(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T287f1391(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].force */
extern void T819f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENTS].fill_with */
extern void T821f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CLIENTS].extend */
extern void T821f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T819f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLIENTS].aliased_resized_area */
extern T0* T821f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_clients */
extern T0* T297f153(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T820f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T820c19(GE_context* ac, T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T820f19p1(GE_context* ac, T0* C, T6 a1);
/* ET_CLIENTS.tokens */
extern T0* T820f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T287f1390(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T287f1389(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T287f1388(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T817f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].aliased_resized_area */
extern T0* T818f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T287f891(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T297f335(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T287f1387(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T287f1386(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T287f1385(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T287f1384(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T287f1383(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T287f1382(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T297f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T820c16(GE_context* ac);
/* ET_CLIENTS.make */
extern void T820f16p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T287f1381(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T287f1380(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T287f1379(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].force */
extern void T896f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].fill_with */
extern void T898f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].extend */
extern void T898f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.put_first */
extern void T897f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T897f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T287f1378(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T896f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].aliased_resized_area */
extern T0* T898f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T297f150(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T897c10(GE_context* ac, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T897f12(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T287f1377(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T287f1376(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].force */
extern void T876f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT].fill_with */
extern void T878f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT].extend */
extern void T878f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT].aliased_resized_area */
extern T0* T876f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPORT].aliased_resized_area */
extern T0* T878f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_null_export */
extern T0* T297f151(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T287f1375(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T287f1374(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T287f1373(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T287f1372(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T297f149(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T1309c7(GE_context* ac, T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern T0* T82f1479(GE_context* ac, T0* C);
/* ET_KEYWORD.make_all */
extern T0* T439c45(GE_context* ac);
/* ET_ALL_EXPORT.tokens */
extern T0* T1309f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T287f1371(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].force */
extern void T879f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].fill_with */
extern void T880f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].extend */
extern void T880f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T879f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].aliased_resized_area */
extern T0* T880f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T287f1370(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T537f8(GE_context* ac, T0* C, T0* a1);
/* ET_EXPORT_LIST.fixed_array */
extern T0* T537f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T287f1369(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T297f148(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T537c7(GE_context* ac, T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T537f7p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern T0* T82f712(GE_context* ac, T0* C);
/* ET_KEYWORD.make_export */
extern T0* T439c76(GE_context* ac);
/* ET_EXPORT_LIST.tokens */
extern T0* T537f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T287f1368(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T287f1367(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T287f1366(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T287f1365(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T287f1364(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T287f1363(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].force */
extern void T1006f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].fill_with */
extern void T1008f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].extend */
extern void T1008f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1006f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].aliased_resized_area */
extern T0* T1008f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T297f147(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T287f1362(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T297f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T287f1361(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].force */
extern void T1009f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].fill_with */
extern void T1010f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].extend */
extern void T1010f10(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.put_first */
extern void T536f9(GE_context* ac, T0* C, T0* a1);
/* ET_RENAME_LIST.fixed_array */
extern T0* T536f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T287f1360(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1009f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].aliased_resized_area */
extern T0* T1010f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_renames */
extern T0* T297f145(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T536c8(GE_context* ac, T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T536f8p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern T0* T82f714(GE_context* ac, T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T439c78(GE_context* ac);
/* ET_RENAME_LIST.tokens */
extern T0* T536f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T287f1359(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T287f1358(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T287f1357(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T287f1356(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T287f1355(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T990f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].aliased_resized_area */
extern T0* T991f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T297f144(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T287f1354(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].force */
extern void T992f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].fill_with */
extern void T993f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].extend */
extern void T993f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T287f1353(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T287f1352(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T992f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].aliased_resized_area */
extern T0* T993f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_parents */
extern T0* T297f143(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T287f1351(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T287f1350(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].force */
extern void T985f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT].fill_with */
extern void T986f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT].extend */
extern void T986f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT].aliased_resized_area */
extern T0* T985f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT].aliased_resized_area */
extern T0* T986f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T287f889(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T297f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T83f170(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T687f17(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T287f1349(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T287f1348(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T287f1347(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T287f1346(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T287f1345(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T287f1344(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T287f1343(GE_context* ac, T0* C);
/* ET_PARENT_LIST.set_clients_clause */
extern void T521f13(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T287f1342(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T287f1341(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].force */
extern void T987f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].fill_with */
extern void T989f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].extend */
extern void T989f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T987f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].aliased_resized_area */
extern T0* T989f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T287f1340(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.put_first */
extern void T988f7(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CLAUSE_LIST.fixed_array */
extern T0* T988f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T287f1339(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_parent_clauses */
extern T0* T297f142(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CLAUSE_LIST.make_with_capacity */
extern T0* T988c6(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T287f1338(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T287f1337(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T287f1336(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].force */
extern void T979f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBSOLETE].fill_with */
extern void T981f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_OBSOLETE].extend */
extern void T981f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T979f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_OBSOLETE].aliased_resized_area */
extern T0* T981f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T297f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T287f1335(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T287f1334(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].force */
extern void T829f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].fill_with */
extern void T831f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].extend */
extern void T831f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T829f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T831f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T297f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T297f138(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T1306c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T287f1333(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T287f1332(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].force */
extern void T832f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].fill_with */
extern void T834f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].extend */
extern void T834f10(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T287f2133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T833f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern T0* T833f8(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T297f139(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1307c6(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T833f7(GE_context* ac, T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T833f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T287f1331(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T287f1330(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T287f1329(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T832f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T834f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T297f136(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T833f14(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T833c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T833f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T833f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T287f1328(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T287f1327(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T287f1326(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T287f1325(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T287f1324(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T287f1323(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T297f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T287f1322(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T287f888(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T297f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T1304c7(GE_context* ac, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T297f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1563c8(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T287f1321(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T287f1320(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T287f1319(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T287f1318(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T287f1317(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T287f1316(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T287f1315(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].force */
extern void T838f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].fill_with */
extern void T840f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].extend */
extern void T840f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T838f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].aliased_resized_area */
extern T0* T840f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T287f1314(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T287f1313(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T287f1312(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T287f1311(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T287f1310(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T287f1309(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T287f1308(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T287f1307(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T287f1306(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T287f1305(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T287f1304(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T287f1303(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T287f1302(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T287f1301(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T287f1300(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T287f1299(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T287f1298(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T287f1297(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T287f1296(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T287f1295(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T287f1294(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T287f1293(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T287f1292(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T287f1291(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T287f1290(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T287f1289(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T287f1288(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T287f1287(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T287f1286(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T287f1285(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T287f1284(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T287f1283(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T287f1282(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T287f1281(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T287f1280(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T287f1279(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T287f1278(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T287f1277(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T287f1276(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T287f1275(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T287f1274(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T287f1273(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T287f1272(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T287f1271(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T287f1270(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T287f1269(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].force */
extern void T835f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].fill_with */
extern void T837f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].extend */
extern void T837f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T836f13(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T836f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T287f1268(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T835f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].aliased_resized_area */
extern T0* T837f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T297f133(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T836c12(GE_context* ac, T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T836f12p1(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T836f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T287f1267(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T287f1266(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T287f1265(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T287f1264(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T287f1263(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T911f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER].aliased_resized_area */
extern T0* T913f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T287f2132(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].force_last */
extern void T708f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].resize */
extern void T708f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T708f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].extendible */
extern T1 T708f7(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T297f132(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T1303f77(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T1303c76(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T1303f79(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern T0* T82f690(GE_context* ac, T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T385c90(GE_context* ac);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T1303f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T287f887(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T287f1262(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T287f1261(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T287f1260(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T287f1259(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T287f1258(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T287f1257(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T297f131(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T912f76(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T912c75(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T287f1256(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T287f1255(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T287f1254(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].force */
extern void T914f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].fill_with */
extern void T916f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].extend */
extern void T916f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T914f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].aliased_resized_area */
extern T0* T916f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T297f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T287f1253(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].force */
extern void T917f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].fill_with */
extern void T918f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].extend */
extern void T918f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T687f28(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T1303f78(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T912f77(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T687f9(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T687f28p1(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern T0* T687f8(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T287f1252(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T917f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].aliased_resized_area */
extern T0* T918f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T297f129(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T687f29(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T687c26(GE_context* ac, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T687f26p1(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T687f6(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T287f1251(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T287f1250(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T287f2129(GE_context* ac, T0* C, T0* a1);
extern T1 T287f2129ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].wipe_out */
extern void T708f11(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].keep_head */
extern void T840f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_TYPE].set_count */
extern void T840f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T708f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1468f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_CONSTRAINT_TYPE].set_after */
extern void T1468f6(GE_context* ac, T0* C);
/* ET_CLASS.set_formal_parameters */
extern void T83f280(GE_context* ac, T0* C, T0* a1);
extern T1 T83f280ot1(T0* a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T687f27(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T914f5(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].keep_head */
extern void T916f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_ITEM].set_count */
extern void T916f9(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T1303f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [detachable ET_CONSTRAINT_TYPE].item */
extern T0* T708f6(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T287f1249(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T287f1248(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T287f1247(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T287f1246(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T287f1245(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T287f1244(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T287f1243(GE_context* ac, T0* C);
/* ET_CLASS.set_external_keyword */
extern void T83f278(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T83f277(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T83f291(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T83f276(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T287f885(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_name */
extern void T83f293(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T83f292(GE_context* ac, T0* C);
/* ET_CLASS.reset_parsed */
extern void T83f274(GE_context* ac, T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T83f273(GE_context* ac, T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T83f272(GE_context* ac, T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T83f271(GE_context* ac, T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T83f270(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.set_modified */
extern void T496f68(GE_context* ac, T0* C, T1 a1);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T287f945(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T287f955(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T287f954(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T287f953(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvscn1a_error */
extern void T298f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvscn1a */
extern T0* T1072c786(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvscn1a_error */
extern void T34f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MASTER_CLASS.first_local_class */
extern T0* T496f26(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_local_class */
extern T1 T496f25(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_hidden_class */
extern T1 T496f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].has */
extern T1 T293f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_ignored_class */
extern T1 T496f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_non_override_class */
extern T1 T496f28(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_local_override_class */
extern T1 T496f27(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T287f1242(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T287f1241(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T287f1240(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T287f1239(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].force */
extern void T934f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].fill_with */
extern void T936f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].extend */
extern void T936f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T934f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].aliased_resized_area */
extern T0* T936f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T297f128(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T287f1238(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].force */
extern void T931f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].fill_with */
extern void T933f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].extend */
extern void T933f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T931f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].aliased_resized_area */
extern T0* T933f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T297f127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T1302c9(GE_context* ac, T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T1302f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T287f1237(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T287f1236(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T287f1235(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T287f1234(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T287f1233(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T287f1232(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T287f1231(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T287f1230(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].force */
extern void T937f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].fill_with */
extern void T939f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].extend */
extern void T939f10(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.put_first */
extern void T938f10(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_TERM_LIST.fixed_array */
extern T0* T938f3(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T287f1229(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T937f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].aliased_resized_area */
extern T0* T939f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T297f126(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_TERM_LIST.make_with_capacity */
extern T0* T938c9(GE_context* ac, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T287f1228(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].force */
extern void T928f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].fill_with */
extern void T930f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].extend */
extern void T930f10(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T297f124(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T287f1227(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T287f1226(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T928f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].aliased_resized_area */
extern T0* T930f4(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T297f123(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TAGGED_INDEXING.make */
extern T0* T1300c5(GE_context* ac, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T287f1225(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T297f125(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING.make */
extern T0* T1301c5(GE_context* ac, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T287f1224(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T287f1223(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].force */
extern void T925f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].fill_with */
extern void T927f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].extend */
extern void T927f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T925f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].aliased_resized_area */
extern T0* T927f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T287f1222(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.put_first */
extern void T926f12(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.fixed_array */
extern T0* T926f5(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T287f1221(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T287f1220(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T287f1219(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T297f121(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_INDEXING_LIST.set_indexing_keyword */
extern void T926f13(GE_context* ac, T0* C, T0* a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern T0* T926c11(GE_context* ac, T6 a1);
/* ET_INDEXING_LIST.make_with_capacity */
extern void T926f11p1(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern T0* T82f725(GE_context* ac, T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T439c89(GE_context* ac);
/* ET_INDEXING_LIST.tokens */
extern T0* T926f4(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T287f1218(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T287f1217(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T287f1216(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T287f1215(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T287f1214(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T287f1213(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T287f1212(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T287f1211(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T287f1210(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T287f1209(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T287f1208(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T287f1207(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T287f1206(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T287f1205(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T287f1204(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T287f1203(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T287f1202(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T287f1201(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T287f2123(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].forth */
extern void T709f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].put_last */
extern void T709f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].compress */
extern void T709f56(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_keep_head */
extern void T709f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_storage_keep_head */
extern void T709f65(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].move_all_cursors */
extern void T709f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].key_storage_put */
extern void T709f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].item_for_iteration */
extern T0* T709f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].after */
extern T1 T709f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_after */
extern T1 T709f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].start */
extern void T709f38(GE_context* ac, T0* C);
/* ET_CLASS.set_providers */
extern void T83f279(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T287f1200(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T287f2122(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CLASS.set_parsed */
extern void T83f252(GE_context* ac, T0* C);
/* ET_CLASS.set_end_keyword */
extern void T83f290(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T83f289(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T83f288(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T83f287(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T83f286(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T83f285(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_parent_clauses */
extern void T83f284(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T83f283(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T287f1199(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T287f1198(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T287f1197(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T287f1196(GE_context* ac, T0* C);
/* ET_CLASS.set_first_indexing */
extern void T83f282(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T287f1195(GE_context* ac, T0* C);
/* ET_CLASS.set_leading_break */
extern void T83f281(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T287f1194(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T287f1150(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].force */
extern void T763f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].fill_with */
extern void T765f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].extend */
extern void T765f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T763f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].aliased_resized_area */
extern T0* T765f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].force */
extern void T761f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].fill_with */
extern void T762f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].extend */
extern void T762f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T761f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].aliased_resized_area */
extern T0* T762f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].force */
extern void T755f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VOID].fill_with */
extern void T757f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_VOID].extend */
extern void T757f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_VOID].aliased_resized_area */
extern T0* T755f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_VOID].aliased_resized_area */
extern T0* T757f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].force */
extern void T752f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].fill_with */
extern void T754f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].extend */
extern void T754f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T752f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].aliased_resized_area */
extern T0* T754f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].force */
extern void T749f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].fill_with */
extern void T751f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].extend */
extern void T751f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T749f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].aliased_resized_area */
extern T0* T751f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].force */
extern void T747f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RESULT].fill_with */
extern void T748f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_RESULT].extend */
extern void T748f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_RESULT].aliased_resized_area */
extern T0* T747f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_RESULT].aliased_resized_area */
extern T0* T748f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T744f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].aliased_resized_area */
extern T0* T746f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].force */
extern void T739f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].fill_with */
extern void T741f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].extend */
extern void T741f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T739f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].aliased_resized_area */
extern T0* T741f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T736f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].aliased_resized_area */
extern T0* T738f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].force */
extern void T733f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].fill_with */
extern void T735f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].extend */
extern void T735f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T733f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].aliased_resized_area */
extern T0* T735f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].force */
extern void T731f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CURRENT].fill_with */
extern void T732f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_CURRENT].extend */
extern void T732f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_CURRENT].aliased_resized_area */
extern T0* T731f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_CURRENT].aliased_resized_area */
extern T0* T732f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].force */
extern void T725f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BREAK].fill_with */
extern void T727f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_BREAK].extend */
extern void T727f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BREAK].aliased_resized_area */
extern T0* T725f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BREAK].aliased_resized_area */
extern T0* T727f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T722f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].aliased_resized_area */
extern T0* T724f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].force */
extern void T720f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSITION].fill_with */
extern void T721f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_POSITION].extend */
extern void T721f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_POSITION].aliased_resized_area */
extern T0* T720f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_POSITION].aliased_resized_area */
extern T0* T721f3(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].force */
extern void T715f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].fill_with */
extern void T717f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].extend */
extern void T717f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T715f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].aliased_resized_area */
extern T0* T717f4(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].force */
extern void T712f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].fill_with */
extern void T714f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].extend */
extern void T714f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T712f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].aliased_resized_area */
extern T0* T714f4(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.accept */
extern void T287f1149(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T287f1147(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T287f1172(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1600_1799 */
extern void T287f1171(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T287f1193(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1400_1599 */
extern void T287f1170(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T287f1169(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T287f1168(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T287f1167(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T287f1166(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T287f1165(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T287f1164(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T287f1163(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T287f1146(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T287f1162(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T287f1192(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T287f1181(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T297f15(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T297f14(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T297f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T1293f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T1293c42(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T1293f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T287f956(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T297f12(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T1292f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T1292c42(GE_context* ac, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T1292f49(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_binary_integer_constant */
extern T0* T297f11(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.set_position */
extern void T1291f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_BINARY_INTEGER_CONSTANT.make */
extern T0* T1291c64(GE_context* ac, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.compute_value */
extern void T1291f72(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.make_leaf */
extern void T1291f71(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_octal_integer_constant */
extern T0* T297f10(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.set_position */
extern void T1290f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_OCTAL_INTEGER_CONSTANT.make */
extern T0* T1290c64(GE_context* ac, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.compute_value */
extern void T1290f72(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.make_leaf */
extern void T1290f71(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T297f9(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T1289f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T1289c64(GE_context* ac, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T1289f72(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T1289f71(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T297f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T1288f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T1288c64(GE_context* ac, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T1288f72(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T1288f71(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T297f7(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T403f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T298f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T34f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T298f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T34f219(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T298f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T34f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T298f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T34f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T298f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T34f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T297f6(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T1287f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T287f959(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T1287c43(GE_context* ac, T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T1287f49(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T287f963(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T297f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T1286f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T287f958(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T1286c47(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T1286f53(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T287f726(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T287f724(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T287f2156(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T287f722(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T287f1191(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T297f4(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T1250f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T1250c42(GE_context* ac, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T1250f47(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T298f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T34f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T297f3(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T1285f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T287f957(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T1285c44(GE_context* ac, T0* a1, T3 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T1285f50(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T287f1190(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T297f120(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T1298f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T1298c43(GE_context* ac, T3 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T1298f48(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T298f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T34f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T298f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T34f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T287f1189(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T297f119(GE_context* ac, T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T1297f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T1297c43(GE_context* ac, T3 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T1297f48(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T298f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T34f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T297f2(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T734f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T734c47(GE_context* ac, T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T734f10(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T734f51(GE_context* ac, T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T734f52(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T287f1182(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T287f1188(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T287f1187(GE_context* ac, T0* C, T6 a1);
/* ET_AST_FACTORY.new_detachable_keyword */
extern T0* T297f118(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T439f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.use_detachable_keyword */
extern T1 T287f859(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T297f117(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_reference */
extern T0* T439c57(GE_context* ac);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T287f857(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T297f116(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T716f19(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T297f115(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T297f114(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T287f853(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T297f113(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern T0* T82f728(GE_context* ac, T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T439c92(GE_context* ac);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T297f112(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T297f111(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T297f110(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern T0* T82f726(GE_context* ac, T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T439c90(GE_context* ac);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T297f109(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T297f108(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern T0* T82f724(GE_context* ac, T0* C);
/* ET_KEYWORD.make_external */
extern T0* T439c88(GE_context* ac);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T297f107(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T439c56(GE_context* ac);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T297f106(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T297f105(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_attached_keyword */
extern T0* T297f104(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.use_attached_keyword */
extern T1 T287f842(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T297f103(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T297f102(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T297f101(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern T0* T82f720(GE_context* ac, T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T439c84(GE_context* ac);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T297f100(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T297f99(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T740f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T740c52(GE_context* ac);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T297f98(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T297f97(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T297f96(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T319f37(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T297f95(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T297f94(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern T0* T82f716(GE_context* ac, T0* C);
/* ET_KEYWORD.make_select */
extern T0* T439c80(GE_context* ac);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T297f93(GE_context* ac, T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T346f36(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T297f92(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T297f91(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T297f90(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T297f89(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T439c52(GE_context* ac);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T297f88(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T297f87(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T297f86(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern T0* T82f711(GE_context* ac, T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T439c75(GE_context* ac);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T297f85(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T297f84(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern T0* T82f710(GE_context* ac, T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T439c74(GE_context* ac);
/* ET_AST_FACTORY.new_across_keyword */
extern T0* T297f83(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T297f82(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern T0* T82f709(GE_context* ac, T0* C);
/* ET_KEYWORD.make_until */
extern T0* T439c73(GE_context* ac);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T297f81(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T297f80(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T750f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T750c13(GE_context* ac);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T750f15(GE_context* ac, T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T750f16(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T750f7(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T297f79(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T297f78(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T297f77(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T1296f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T1296c40(GE_context* ac);
/* ET_FALSE_CONSTANT.make_token */
extern void T1296f44(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T1296f45(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T1296f8(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T297f76(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T297f75(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T297f74(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T297f73(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T297f72(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T713f14(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T297f71(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T297f70(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T756f33(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T756c30(GE_context* ac);
/* ET_VOID.make_token */
extern void T756f34(GE_context* ac, T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T756f35(GE_context* ac, T0* C);
/* ET_VOID.tokens */
extern T0* T756f5(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T297f69(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T1295f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T297f68(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_some_keyword */
extern T0* T297f67(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.make_some */
extern T0* T439c48(GE_context* ac);
/* ET_AST_FACTORY.new_note_keyword */
extern T0* T297f66(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.note_keyword */
extern T0* T82f701(GE_context* ac, T0* C);
/* ET_KEYWORD.make_note */
extern T0* T439c65(GE_context* ac);
/* ET_EIFFEL_PARSER.use_note_keyword */
extern T1 T287f801(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T297f64(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T297f63(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T297f62(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T297f61(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T297f60(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T740c51(GE_context* ac);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T297f59(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T297f58(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T740c50(GE_context* ac);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T297f57(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T297f56(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T297f55(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T297f54(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T297f53(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T297f52(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern T0* T82f696(GE_context* ac, T0* C);
/* ET_KEYWORD.make_if */
extern T0* T439c60(GE_context* ac);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T297f51(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T297f50(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T297f1(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T287f1186(GE_context* ac, T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T297f49(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T297f48(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T297f47(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T297f46(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T297f45(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T385f76(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T297f44(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T753f84(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T753c94(GE_context* ac);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T297f43(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T297f42(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T753c93(GE_context* ac);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T297f41(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T753c92(GE_context* ac);
/* ET_AST_FACTORY.new_not_tilde_symbol */
extern T0* T297f40(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_tilde */
extern T0* T385c81(GE_context* ac);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T297f39(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T385c80(GE_context* ac);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T297f38(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T753c91(GE_context* ac);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T287f708(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T287f1185(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T287f1184(GE_context* ac, T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T297f37(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_tilde */
extern T0* T385c79(GE_context* ac);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T297f36(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T297f35(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T297f34(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T692f103(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T297f33(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T297f32(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T297f31(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T297f30(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T297f29(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T764f73(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T297f28(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T297f27(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T297f26(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern T0* T82f685(GE_context* ac, T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T385c85(GE_context* ac);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T297f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T82f684(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T759c4(GE_context* ac);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T759f5(GE_context* ac, T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T759f3(GE_context* ac, T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T297f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern T0* T82f683(GE_context* ac, T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T385c84(GE_context* ac);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T297f23(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T297f22(GE_context* ac, T0* C, T0* a1);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T297f21(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T385c75(GE_context* ac);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T297f20(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T753c88(GE_context* ac);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T297f19(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T753c87(GE_context* ac);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T297f18(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T753c86(GE_context* ac);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T297f17(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T753c85(GE_context* ac);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T297f16(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T753c83(GE_context* ac);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T287f707(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T287f1161(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T287f1180(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T287f670(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T287f1160(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T287f669(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T287f668(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T287f1159(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T287f1145(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T287f1154(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T287f1178(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T287f2120(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T287f2151(GE_context* ac, T0* C);
/* [attached] SPECIAL [detachable ET_WRITABLE].keep_head */
extern void T1034f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WRITABLE].set_count */
extern void T1034f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].keep_head */
extern void T1032f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART_LIST].set_count */
extern void T1032f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].keep_head */
extern void T1029f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_WHEN_PART].set_count */
extern void T1029f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].keep_head */
extern void T1026f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VARIANT].set_count */
extern void T1026f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].keep_head */
extern void T1023f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_LIST].set_count */
extern void T1023f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].keep_head */
extern void T1020f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_TYPE_ITEM].set_count */
extern void T1020f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].keep_head */
extern void T1016f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STRIP_EXPRESSION].set_count */
extern void T1016f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].keep_head */
extern void T1013f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_STATIC_CALL_EXPRESSION].set_count */
extern void T1013f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].keep_head */
extern void T1010f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_LIST].set_count */
extern void T1010f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].keep_head */
extern void T1008f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RENAME_ITEM].set_count */
extern void T1008f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].keep_head */
extern void T1003f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_LIKE_IDENTIFIER].set_count */
extern void T1003f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].keep_head */
extern void T998f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECONDITIONS].set_count */
extern void T998f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].keep_head */
extern void T996f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSTCONDITIONS].set_count */
extern void T996f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].keep_head */
extern void T993f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_LIST].set_count */
extern void T993f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].keep_head */
extern void T991f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_ITEM].set_count */
extern void T991f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].keep_head */
extern void T989f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT_CLAUSE_LIST].set_count */
extern void T989f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].keep_head */
extern void T986f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENT].set_count */
extern void T986f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].keep_head */
extern void T984f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PARENTHESIZED_EXPRESSION].set_count */
extern void T984f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].keep_head */
extern void T981f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_OBSOLETE].set_count */
extern void T981f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].keep_head */
extern void T978f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_TUPLE].set_count */
extern void T978f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].keep_head */
extern void T976f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_LIST].set_count */
extern void T976f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].keep_head */
extern void T973f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING_ITEM].set_count */
extern void T973f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].keep_head */
extern void T970f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_ARRAY].set_count */
extern void T970f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].keep_head */
extern void T967f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOOP_INVARIANTS].set_count */
extern void T967f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].keep_head */
extern void T962f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE_ITEM].set_count */
extern void T962f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].keep_head */
extern void T959f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LOCAL_VARIABLE].set_count */
extern void T959f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].keep_head */
extern void T956f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_LIKE_TYPE].set_count */
extern void T956f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].keep_head */
extern void T953f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_FEATURE_NAME_LIST].set_count */
extern void T953f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].keep_head */
extern void T951f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INVARIANTS].set_count */
extern void T951f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].keep_head */
extern void T948f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSTRUCTION].set_count */
extern void T948f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].keep_head */
extern void T945f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INSPECT_INSTRUCTION].set_count */
extern void T945f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].keep_head */
extern void T942f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INLINE_AGENT].set_count */
extern void T942f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].keep_head */
extern void T939f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_LIST].set_count */
extern void T939f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].keep_head */
extern void T936f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM_ITEM].set_count */
extern void T936f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].keep_head */
extern void T933f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_TERM].set_count */
extern void T933f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].keep_head */
extern void T930f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_ITEM].set_count */
extern void T930f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].keep_head */
extern void T927f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INDEXING_LIST].set_count */
extern void T927f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].keep_head */
extern void T924f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_INSTRUCTION].set_count */
extern void T924f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].keep_head */
extern void T921f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_IF_EXPRESSION].set_count */
extern void T921f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].keep_head */
extern void T918f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_LIST].set_count */
extern void T918f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].keep_head */
extern void T908f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT_ITEM].set_count */
extern void T908f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].keep_head */
extern void T905f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_ARGUMENT].set_count */
extern void T905f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].keep_head */
extern void T903f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_NAME_ITEM].set_count */
extern void T903f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].keep_head */
extern void T898f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_EXPORT].set_count */
extern void T898f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].keep_head */
extern void T895f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE_LIST].set_count */
extern void T895f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].keep_head */
extern void T892f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FEATURE_CLAUSE].set_count */
extern void T892f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].keep_head */
extern void T889f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTERNAL_ALIAS].set_count */
extern void T889f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].keep_head */
extern void T886f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXTENDED_FEATURE_NAME].set_count */
extern void T886f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].keep_head */
extern void T880f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT_LIST].set_count */
extern void T880f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].keep_head */
extern void T878f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_EXPORT].set_count */
extern void T878f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].keep_head */
extern void T875f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART_LIST].set_count */
extern void T875f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].keep_head */
extern void T872f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_PART].set_count */
extern void T872f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].keep_head */
extern void T869f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION_LIST].set_count */
extern void T869f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].keep_head */
extern void T866f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ELSEIF_EXPRESSION].set_count */
extern void T866f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].keep_head */
extern void T863f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_DEBUG_INSTRUCTION].set_count */
extern void T863f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].keep_head */
extern void T860f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR_LIST].set_count */
extern void T860f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].keep_head */
extern void T857f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATOR].set_count */
extern void T857f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].keep_head */
extern void T854f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATION_REGION].set_count */
extern void T854f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].keep_head */
extern void T851f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CREATE_EXPRESSION].set_count */
extern void T851f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].keep_head */
extern void T849f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_LIST].set_count */
extern void T849f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].keep_head */
extern void T846f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE_ITEM].set_count */
extern void T846f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].keep_head */
extern void T843f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONVERT_FEATURE].set_count */
extern void T843f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].keep_head */
extern void T837f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_CREATOR].set_count */
extern void T837f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].keep_head */
extern void T834f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].set_count */
extern void T834f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T831f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].set_count */
extern void T831f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].keep_head */
extern void T826f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CONDITIONAL].set_count */
extern void T826f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].keep_head */
extern void T823f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_COMPOUND].set_count */
extern void T823f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].keep_head */
extern void T821f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENTS].set_count */
extern void T821f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].keep_head */
extern void T818f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CLIENT_ITEM].set_count */
extern void T818f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].keep_head */
extern void T814f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_LIST].set_count */
extern void T814f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].keep_head */
extern void T811f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_ITEM].set_count */
extern void T811f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].keep_head */
extern void T808f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE_CONSTANT].set_count */
extern void T808f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].keep_head */
extern void T805f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHOICE].set_count */
extern void T805f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].keep_head */
extern void T802f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHECK_INSTRUCTION].set_count */
extern void T802f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].keep_head */
extern void T799f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUALIFIED_CALL_EXPRESSION].set_count */
extern void T799f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].keep_head */
extern void T797f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CALL_AGENT].set_count */
extern void T797f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].keep_head */
extern void T794f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_EXPRESSION].set_count */
extern void T794f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].keep_head */
extern void T791f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ASSIGNER].set_count */
extern void T791f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].keep_head */
extern void T785f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_TARGET].set_count */
extern void T785f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].keep_head */
extern void T783f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_LIST].set_count */
extern void T783f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].keep_head */
extern void T780f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND_ITEM].set_count */
extern void T780f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].keep_head */
extern void T777f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_ARGUMENT_OPERAND].set_count */
extern void T777f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].keep_head */
extern void T775f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_PARAMETER_LIST].set_count */
extern void T775f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].keep_head */
extern void T691f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ACTUAL_PARAMETER_ITEM].set_count */
extern void T691f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].keep_head */
extern void T773f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACTUAL_ARGUMENT_LIST].set_count */
extern void T773f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].keep_head */
extern void T771f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_INSTRUCTION].set_count */
extern void T771f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].keep_head */
extern void T768f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_ACROSS_EXPRESSION].set_count */
extern void T768f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].keep_head */
extern void T765f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_QUESTION_MARK_SYMBOL].set_count */
extern void T765f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].keep_head */
extern void T762f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BRACKET_SYMBOL].set_count */
extern void T762f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].keep_head */
extern void T760f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SEMICOLON_SYMBOL].set_count */
extern void T760f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].keep_head */
extern void T757f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_VOID].set_count */
extern void T757f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].keep_head */
extern void T754f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_SYMBOL_OPERATOR].set_count */
extern void T754f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].keep_head */
extern void T751f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RETRY_INSTRUCTION].set_count */
extern void T751f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].keep_head */
extern void T748f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_RESULT].set_count */
extern void T748f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].keep_head */
extern void T746f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_REAL_CONSTANT].set_count */
extern void T746f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].keep_head */
extern void T743f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_MANIFEST_STRING].set_count */
extern void T743f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].keep_head */
extern void T741f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_KEYWORD_OPERATOR].set_count */
extern void T741f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].keep_head */
extern void T738f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_INTEGER_CONSTANT].set_count */
extern void T738f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].keep_head */
extern void T735f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FREE_OPERATOR].set_count */
extern void T735f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].keep_head */
extern void T732f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CURRENT].set_count */
extern void T732f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].keep_head */
extern void T730f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_CHARACTER_CONSTANT].set_count */
extern void T730f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].keep_head */
extern void T727f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BREAK].set_count */
extern void T727f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].keep_head */
extern void T724f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_BOOLEAN_CONSTANT].set_count */
extern void T724f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].keep_head */
extern void T721f5(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_POSITION].set_count */
extern void T721f8(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].keep_head */
extern void T717f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_PRECURSOR_KEYWORD].set_count */
extern void T717f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].keep_head */
extern void T714f6(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_AGENT_KEYWORD].set_count */
extern void T714f9(GE_context* ac, T0* C, T6 a1);
/* ET_EIFFEL_PARSER.abort */
extern void T287f1148(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T287f1144(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].wipe_out */
extern void T705f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T705f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_SYMBOL].wipe_out */
extern void T702f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [detachable ET_KEYWORD].wipe_out */
extern void T701f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_STACK [[attached] INTEGER_32].wipe_out */
extern void T698f9(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T287f1144p1(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T287f1144p0(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T287f1144p2(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T287f699(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T287f940(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_preparsed */
extern void T83f253(GE_context* ac, T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T83f106(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T287f698(GE_context* ac, T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T287f1138(GE_context* ac, T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_none_class */
extern void T287f1137(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1056f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_identifier */
extern void T428f6(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_identifier */
extern void T424f11(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T409f121(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_cursor_validity */
extern void T409f134(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_COMPONENT_LIST.across_component */
extern T0* T1284f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T409f48(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_across_cursor */
extern void T409f141(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T421f61(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T421f15(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T421f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found_item */
extern T0* T425f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].found */
extern T1 T425f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search */
extern void T425f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].search_position */
extern void T425f65(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].hash_position */
extern T6 T425f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_INSTRUCTION.hash_code */
extern T6 T770f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.hash_code */
extern T6 T767f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_item */
extern T0* T425f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_item */
extern T6 T425f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen9b_error */
extern void T298f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen9b */
extern T0* T1072c919(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen9_error */
extern T1 T298f109(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen9b_error */
extern void T34f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen9_error */
extern T1 T34f108(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen9a_error */
extern void T298f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen9a */
extern T0* T1072c918(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen9a_error */
extern void T34f366(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.across_component */
extern T0* T426f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].item */
extern T0* T1160f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T409f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_local_validity */
extern void T409f133(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_OBJECT_TEST_LIST.object_test */
extern T0* T1283f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_object_test_local */
extern void T409f140(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found_item */
extern T0* T422f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].found */
extern T1 T422f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search */
extern void T422f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].search_position */
extern void T422f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].hash_position */
extern T6 T422f32(GE_context* ac, T0* C, T0* a1);
/* ET_NAMED_OBJECT_TEST.hash_code */
extern T6 T1151f23(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.hash_code */
extern T6 T1355f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_item */
extern T0* T422f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_item */
extern T6 T422f34(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_veen8b_error */
extern void T298f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen8b */
extern T0* T1072c917(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_veen8_error */
extern T1 T298f108(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen8b_error */
extern void T34f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_veen8_error */
extern T1 T34f107(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen8a_error */
extern void T298f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen8a */
extern T0* T1072c916(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen8a_error */
extern void T34f364(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST_SCOPE.object_test */
extern T0* T423f4(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].item */
extern T0* T1154f7(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T409f132(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T409f139(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vevi0a_error */
extern void T298f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vevi0a */
extern T0* T1072c915(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vevi_error */
extern T1 T298f71(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vevi0a_error */
extern void T34f363(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vevi_error */
extern T1 T34f70(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded */
extern T1 T421f37(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable */
extern T1 T421f36(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_like_current */
extern T0* T82f824(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE.has_local_variable */
extern T1 T427f8(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached */
extern T1 T421f35(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T298f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T1072c914(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T298f107(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T34f362(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T34f106(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T298f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T1072c913(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T34f361(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T409f131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T409f138(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTACHMENT_SCOPE.has_formal_argument */
extern T1 T427f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T80f180(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_validity */
extern void T80f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T80f65(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor */
extern void T80f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T80f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_validity */
extern void T80f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_local */
extern void T80f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T80f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T80f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T80f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T80f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T76f971(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T76f977(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T199f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T76f976(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T199f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_object_test_local */
extern void T76f975(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test_local_name */
extern void T76f981(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1056f45(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current */
extern void T428f7(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current */
extern void T424f12(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T409f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T409f195(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T409f251(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0f_error */
extern void T298f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0f */
extern T0* T1072c922(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vucr_error */
extern T1 T298f72(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vucr0f_error */
extern void T34f370(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vucr_error */
extern T1 T34f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T80f276(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T80f362(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T80f421(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T80f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T303f16(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.process_current */
extern void T76f972(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T76f978(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_expression */
extern void T1056f42(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1056f94(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_qualified_call_expression */
extern void T428f24(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_qualified_call_expression */
extern void T424f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_expression */
extern void T409f160(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T409f213(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f213ot1(T0* a1, T0** a2);
extern T1 T409f213ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T298f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T1072c921(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T298f111(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T34f369(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T34f110(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_expression_validity */
extern void T409f264(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T409f321(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.formal_parameter_type */
extern T0* T83f213(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1908f11(GE_context* ac, T0* C, T0* a1, T6 a2);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1908f7(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1908f10(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].force */
extern void T1981f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].fill_with */
extern void T1980f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].extend */
extern void T1980f8(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1908f9(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1981f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].aliased_resized_area */
extern T0* T1980f4(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1908c8(GE_context* ac, T6 a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].set_internal_cursor */
extern void T1908f12(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [detachable ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1908f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1982c3(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1981f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [detachable ET_FORMAL_PARAMETER_TYPE].make_empty */
extern T0* T1980c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [detachable ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1981c3(GE_context* ac);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T298f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T1072c969(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T298f117(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T34f417(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T34f116(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuta2b_error */
extern void T298f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuta2b */
extern T0* T1072c968(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T298f115(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuta2b_error */
extern void T34f416(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuta2_error */
extern T1 T34f114(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.is_entity_attached */
extern T1 T409f52(GE_context* ac, T0* C, T0* a1);
extern T1 T409f52ot1(T0* a1);
extern T1 T409f52ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.has_attribute */
extern T1 T427f10(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.has_result */
extern T1 T427f6(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T421f38(GE_context* ac, T0* C, T0* a1);
extern T1 T421f38ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T421f58(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T421f56(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.put */
extern void T421f59(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T421f16(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T298f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T1072c929(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T298f112(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T34f377(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T34f111(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_query_call_expression_validity */
extern void T409f247(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.reset_fatal_error */
extern void T409f307(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_query_call_type_validity */
extern void T409f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T409f308ot1(T0* a1, T0** a2);
extern T1 T409f308ot2(T0* a1, T0** a2);
extern T1 T409f308ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T409f273(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_validity */
extern void T409f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T409f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f306ot1(T0* a1, T0** a2);
extern T1 T409f306ot2(T0* a1);
extern T1 T409f306ot3(T0* a1, T0** a2);
extern T1 T409f306ot4(T0* a1);
extern T1 T409f306ot5(T0* a1, T0** a2);
extern T1 T409f306ot6(T0* a1, T0** a2);
extern T1 T409f306ot7(T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T298f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T1072c1011(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T298f116(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T34f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T34f115(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T298f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T1072c936(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T34f384(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T298f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T1072c1010(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T298f144(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T34f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T34f143(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_basic */
extern T1 T83f166(GE_context* ac, T0* C);
/* ET_CLASS_CODES.is_basic */
extern T1 T440f34(GE_context* ac, T0* C, T8 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put */
extern void T1787f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T320f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.item */
extern T0* T1787f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T320f5(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.convert_expression */
extern T0* T409f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T409f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONVERT_BUILTIN_EXPRESSION.make */
extern T0* T1913c18(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1915c23(GE_context* ac, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T409f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.make */
extern T0* T1914c23(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_universe */
extern T0* T409f56(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T414f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T83f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type_with_type_marks */
extern T1 T1414f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TOKEN_CONSTANTS.attached_separate_type_mark */
extern T0* T82f1508(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_type */
extern T0* T82f745(GE_context* ac, T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T83f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T421f41(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context_with_type_marks */
extern T1 T421f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T421f17(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T298f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T1072c1009(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T34f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T298f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T1072c937(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T34f385(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T298f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T1072c1008(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T34f456(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make */
extern T0* T1787c13(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_MANIFEST_TUPLE.make */
extern T0* T327c36(GE_context* ac);
/* ET_MANIFEST_TUPLE.make */
extern void T327f36p1(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.put_first */
extern void T1787f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T1787f12(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1787f17(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T1787f17p1(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T1787f11(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.tuple_argument_position */
extern T6 T409f59(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T409f272(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T298f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T1072c971(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T298f130(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T34f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T34f129(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T298f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T1072c935(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T34f383(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vuta2a_error */
extern void T298f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuta2a */
extern T0* T1072c934(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vuta2a_error */
extern void T34f382(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_query_parenthesis_call_validity */
extern void T409f192(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f192ot1(T0* a1, T0** a2);
extern T1 T409f192ot2(T0* a1, T0** a2);
extern T1 T409f192ot3(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_expression_validity */
extern void T409f250(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f250ot1(T0* a1, T0** a2);
extern T1 T409f250ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_feature_call_instruction_validity */
extern void T409f249(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f249ot1(T0* a1, T0** a2);
extern T1 T409f249ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T298f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T1072c920(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T298f110(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T34f368(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T34f109(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_instruction_validity */
extern void T409f191(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T409f245(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_expression_validity */
extern void T409f248(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T409f310(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T409f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T298f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T1072c1012(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T34f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vucr0d_error */
extern void T298f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0d */
extern T0* T1072c959(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0d_error */
extern void T34f407(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.set_parenthesis_call_position */
extern void T409f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENTHESIS_SYMBOL.set_position */
extern void T1769f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_CLASS.named_feature */
extern T0* T83f175(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_SYMBOL.make */
extern T0* T1769c41(GE_context* ac);
/* ET_PARENTHESIS_SYMBOL.make_leaf */
extern void T1769f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.tokens */
extern T0* T1769f34(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_query_call_expression_validity */
extern void T409f263(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.free_overloaded_queries */
extern void T409f320(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force_last */
extern void T418f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].force */
extern void T1138f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].fill_with */
extern void T1139f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extend */
extern void T1139f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].resize */
extern void T418f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T1138f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].aliased_resized_area */
extern T0* T1139f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].new_capacity */
extern T6 T418f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].extendible */
extern T1 T418f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].first */
extern T0* T706f14(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T409f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].keep_first */
extern void T706f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].keep_first */
extern void T707f38(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.free_overloaded_features */
extern void T409f305(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force_last */
extern void T419f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].force */
extern void T1141f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].fill_with */
extern void T1143f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extend */
extern void T1143f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].resize */
extern void T419f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T1141f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].aliased_resized_area */
extern T0* T1143f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].new_capacity */
extern T6 T419f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].extendible */
extern T1 T419f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].has */
extern T1 T1142f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove */
extern void T1142f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_left */
extern void T1142f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_cursors_left */
extern void T1142f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_position */
extern void T1921f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].remove_last */
extern void T1142f19(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_last_cursors_after */
extern void T1142f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_next_cursor */
extern void T1921f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].set_after */
extern void T1921f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].item */
extern T0* T1142f11(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T421f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].wipe_out */
extern void T1142f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].move_all_cursors_after */
extern void T1142f18(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].force_last */
extern void T1142f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].resize */
extern void T1142f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_capacity */
extern T6 T1142f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].extendible */
extern T1 T1142f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_overloaded_features */
extern T0* T409f57(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].remove_last */
extern void T419f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].keep_head */
extern void T1143f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_count */
extern void T1143f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].move_last_cursors_after */
extern void T419f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_next_cursor */
extern void T1144f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].set_after */
extern void T1144f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].last */
extern T0* T419f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].make */
extern T0* T1142c12(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].set_internal_cursor */
extern void T1142f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_FEATURE].new_cursor */
extern T0* T1142f8(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_FEATURE].make */
extern T0* T1921c5(GE_context* ac, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_FEATURE]].is_empty */
extern T1 T419f9(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove */
extern void T706f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_left */
extern void T706f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_cursors_left */
extern void T706f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].remove_last */
extern void T706f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].move_last_cursors_after */
extern void T706f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove */
extern void T707f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_left */
extern void T707f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_cursors_left */
extern void T707f40(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].remove_last */
extern void T707f39(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].move_last_cursors_after */
extern void T707f42(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_QUERY].is_empty */
extern T1 T706f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T83f309(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T281f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T281f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_queries */
extern T0* T409f58(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].remove_last */
extern void T418f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].keep_head */
extern void T1139f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_count */
extern void T1139f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].move_last_cursors_after */
extern void T418f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_next_cursor */
extern void T1140f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].set_after */
extern void T1140f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].last */
extern T0* T418f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_QUERY]].is_empty */
extern T1 T418f9(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.set_boolean_operator */
extern void T1353f29(GE_context* ac, T0* C, T1 a1);
/* ET_CLASS.is_boolean_class */
extern T1 T83f132(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T409f91(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_expression */
extern void T80f294(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T80f380(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f380ot1(T0* a1, T0** a2);
extern T1 T80f380ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_expression_validity */
extern void T80f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T80f475(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f475ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T80f339(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T80f82(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_entity_attached */
extern T1 T80f75(GE_context* ac, T0* C, T0* a1);
extern T1 T80f75ot1(T0* a1);
extern T1 T80f75ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_expression_validity */
extern void T80f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.reset_fatal_error */
extern void T80f348(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_call_type_validity */
extern void T80f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f413ot1(T0* a1, T0** a2);
extern T1 T80f413ot2(T0* a1, T0** a2);
extern T1 T80f413ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T80f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f412ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_validity */
extern void T80f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T80f233(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f233ot1(T0* a1, T0** a2);
extern T1 T80f233ot2(T0* a1);
extern T1 T80f233ot3(T0* a1, T0** a2);
extern T1 T80f233ot4(T0* a1);
extern T1 T80f233ot5(T0* a1, T0** a2);
extern T1 T80f233ot6(T0* a1, T0** a2);
extern T1 T80f233ot7(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.convert_expression */
extern T0* T80f76(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T80f513(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T80f473(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T80f415(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe */
extern T0* T80f79(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tuple_argument_position */
extern T6 T80f81(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T80f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_parenthesis_call_validity */
extern void T80f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f227ot1(T0* a1, T0** a2);
extern T1 T80f227ot2(T0* a1, T0** a2);
extern T1 T80f227ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_expression_validity */
extern void T80f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f334ot1(T0* a1, T0** a2);
extern T1 T80f334ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_feature_call_instruction_validity */
extern void T80f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f333ot1(T0* a1, T0** a2);
extern T1 T80f333ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_instruction_validity */
extern void T80f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T80f235(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T351c11(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_expression_validity */
extern void T80f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T80f414(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f414ot1(T0* a1, T0** a2);
extern T1 T80f414ot2(T0* a1, T0** a2);
extern T1 T80f414ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T80f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T80f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T80f360(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_parenthesis_call_position */
extern void T80f330(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_query_call_expression_validity */
extern void T80f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_queries */
extern void T80f231(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T80f230(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T1 a5, T1 a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_features */
extern void T80f338(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_features */
extern T0* T80f80(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_queries */
extern T0* T80f74(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T80f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T80f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T80f143(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_qualified_call_expression */
extern void T76f973(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T76f979(GE_context* ac, T0* C, T0* a1);
extern T1 T76f979ot1(T0* a1, T0** a2);
extern T1 T76f979ot2(T0* a1, T0** a2);
extern T1 T76f979ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T76f984(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T76f983(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T76f982(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1056f46(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result */
extern void T428f8(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result */
extern void T424f13(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T409f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T409f197(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T409f253(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0b_error */
extern void T298f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0b */
extern T0* T1072c928(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0b_error */
extern void T34f376(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T298f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T1072c927(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T34f375(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T298f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T1072c926(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T34f374(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T298f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T1072c925(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T34f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T298f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T1072c924(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T34f372(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T298f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T1072c923(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T34f371(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T80f278(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T80f364(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T80f423(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T76f974(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T76f980(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_value */
extern void T76f985(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_DYNAMIC_PRECURSOR.is_once_per_process */
extern T1 T343f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_once_per_process */
extern T1 T263f20(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_prefixes */
extern T0* T76f441(GE_context* ac, T0* C);
/* ET_C_GENERATOR.once_kind */
extern T6 T76f440(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_real_64_class */
extern T1 T83f145(GE_context* ac, T0* C);
/* ET_CLASS.is_real_32_class */
extern T1 T83f144(GE_context* ac, T0* C);
/* ET_CLASS.is_pointer_class */
extern T1 T83f143(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_64_class */
extern T1 T83f142(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_32_class */
extern T1 T83f141(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_16_class */
extern T1 T83f140(GE_context* ac, T0* C);
/* ET_CLASS.is_natural_8_class */
extern T1 T83f139(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_64_class */
extern T1 T83f138(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_32_class */
extern T1 T83f137(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_16_class */
extern T1 T83f136(GE_context* ac, T0* C);
/* ET_CLASS.is_integer_8_class */
extern T1 T83f135(GE_context* ac, T0* C);
/* ET_CLASS.is_character_32_class */
extern T1 T83f134(GE_context* ac, T0* C);
/* ET_CLASS.is_character_8_class */
extern T1 T83f133(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found_item */
extern T6 T329f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_item */
extern T6 T329f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].found */
extern T1 T329f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].search */
extern void T329f50(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_expression */
extern void T1056f84(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T428f48(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_unqualified_call_expression */
extern void T424f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_expression */
extern void T409f184(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T409f237(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f237ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T298f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T1072c949(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T298f123(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T34f397(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T34f122(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T298f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T1072c948(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T34f396(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_expression_validity */
extern void T409f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0c_error */
extern void T298f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0c */
extern T0* T1072c1000(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T298f140(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuao0c_error */
extern void T34f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuao_error */
extern T1 T34f139(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuao0a_error */
extern void T298f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0a */
extern T0* T1072c999(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0a_error */
extern void T34f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuao0b_error */
extern void T298f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuao0b */
extern T0* T1072c998(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuao0b_error */
extern void T34f446(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_object_test_local_parenthesis_call_validity */
extern void T409f346(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_identifier_parenthesis_call_validity */
extern void T409f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f353ot1(T0* a1, T0** a2);
extern T1 T409f353ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_expression_validity */
extern void T409f295(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0c_error */
extern void T298f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0c */
extern T0* T1072c997(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T298f139(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuac0c_error */
extern void T34f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuac_error */
extern T1 T34f138(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuac0a_error */
extern void T298f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0a */
extern T0* T1072c996(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0a_error */
extern void T34f444(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuac0b_error */
extern void T298f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuac0b */
extern T0* T1072c995(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuac0b_error */
extern void T34f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_across_cursor_parenthesis_call_validity */
extern void T409f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_expression_validity */
extern void T409f294(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T298f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T1072c994(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T298f138(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T34f442(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T34f137(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T298f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T1072c993(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T34f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_local_variable_parenthesis_call_validity */
extern void T409f344(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_expression_validity */
extern void T409f293(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T298f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T1072c992(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T298f137(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T34f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T34f136(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T298f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T1072c991(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T34f439(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_parenthesis_call_validity */
extern void T409f343(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_expression */
extern void T80f318(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T80f404(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f404ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_expression_validity */
extern void T80f460(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_local_parenthesis_call_validity */
extern void T80f359(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_identifier_parenthesis_call_validity */
extern void T80f419(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f419ot1(T0* a1, T0** a2);
extern T1 T80f419ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_expression_validity */
extern void T80f459(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_cursor_parenthesis_call_validity */
extern void T80f358(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_expression_validity */
extern void T80f458(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_parenthesis_call_validity */
extern void T80f357(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_expression_validity */
extern void T80f457(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_parenthesis_call_validity */
extern void T80f356(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_unqualified_call_expression */
extern void T76f986(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T76f1042(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1042ot1(T0* a1, T0** a2);
extern T1 T76f1042ot2(T0* a1, T0** a2);
extern T1 T76f1042ot3(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T325f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T343f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T263f25(GE_context* ac, T0* C);
/* ET_C_GENERATOR.in_target */
extern T1 T76f445(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_EXPRESSION].is_empty */
extern T1 T309f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T343f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T263f24(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_expression_static_call */
extern void T76f1100(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T76f1100ot1(T0* a1, T0** a2);
extern T1 T76f1100ot2(T0* a1, T0** a2);
extern T1 T76f1100ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.set_static_generated */
extern void T343f34(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static_generated */
extern void T263f40(GE_context* ac, T0* C, T1 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1056f44(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_tuple */
extern void T428f5(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_tuple */
extern void T424f10(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T409f143(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T409f196(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f196ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T409f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T80f277(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T80f363(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f363ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T80f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f422ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_universe_impl */
extern T0* T80f59(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T76f987(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T76f1043(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1043ot1(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T328f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T328f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T328f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T328f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T328f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T328f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T328f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T328f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T328f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T328f61(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1101f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].aliased_resized_area */
extern T0* T1100f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T328f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T328f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T328f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T328f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_TUPLE_TYPE].force */
extern void T1101f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].fill_with */
extern void T1100f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_TUPLE_TYPE].extend */
extern void T1100f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T328f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T328f30(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_object_test */
extern void T1056f73(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_test */
extern void T428f36(GE_context* ac, T0* C, T0* a1);
extern T1 T428f36ot1(T0* a1);
extern T1 T428f36ot2(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE.add_name */
extern void T427f16(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_attribute */
extern void T427f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].force_last */
extern void T177f81(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE.add_formal_argument */
extern void T427f21(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_local_variable */
extern void T427f20(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.add_result */
extern void T427f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_test */
extern void T424f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_test */
extern void T409f172(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_test_validity */
extern void T409f225(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_test */
extern void T409f278(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_object_test_type */
extern void T409f277(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T409f104(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T414f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_test */
extern void T80f306(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_test_validity */
extern void T80f392(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test */
extern void T80f442(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_constant_expression */
extern void T80f177(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].force_last */
extern void T411f62(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_DYNAMIC_TYPE].new_capacity */
extern T6 T411f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_test_type */
extern void T80f441(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T80f159(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_object_test */
extern void T76f988(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_object_test */
extern void T76f1044(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].force_last */
extern void T314f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].force */
extern void T1086f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].fill_with */
extern void T1085f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].extend */
extern void T1085f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].resize */
extern void T314f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1086f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_OBJECT_TEST].aliased_resized_area */
extern T0* T1085f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].new_capacity */
extern T6 T314f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_OBJECT_TEST].extendible */
extern T1 T314f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_object_equality_expression */
extern void T1056f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_object_equality_expression */
extern void T428f32(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_object_equality_expression */
extern void T424f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_object_equality_expression */
extern void T409f168(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_object_equality_expression_validity */
extern void T409f221(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_object_equality_expression */
extern void T409f275(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0b_error */
extern void T298f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0b */
extern T0* T1072c939(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T298f118(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0b_error */
extern void T34f387(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T34f117(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_left */
extern void T354f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.set_right */
extern void T354f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.name */
extern T0* T354f11(GE_context* ac, T0* C);
/* ET_IDENTIFIER.twin */
extern T0* T199f97(GE_context* ac, T0* C);
/* ET_IDENTIFIER.copy */
extern void T199f129(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.tokens */
extern T0* T354f18(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_object_equality_expression */
extern void T80f302(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_equality_expression_validity */
extern void T80f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_object_equality_expression */
extern void T80f439(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_object_equality_expression_target_dynamic_types */
extern void T80f477(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.make */
extern T0* T1907c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_object_equality_expression */
extern void T76f989(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1056f68(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_equality_expression */
extern void T428f31(GE_context* ac, T0* C, T0* a1);
extern T1 T428f31ot1(T0* a1);
extern T1 T428f31ot2(T0* a1);
extern T1 T428f31ot3(T0* a1, T0** a2);
extern T1 T428f31ot4(T0* a1);
extern T1 T428f31ot5(T0* a1);
extern T1 T428f31ot6(T0* a1, T0** a2);
/* ET_BRACKET_SYMBOL.is_equal_symbol */
extern T1 T692f92(GE_context* ac, T0* C);
/* ET_SYMBOL.is_equal_symbol */
extern T1 T385f68(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_equality_expression */
extern void T424f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T409f167(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T409f220(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T409f274(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T298f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T1072c938(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T34f386(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EQUALITY_EXPRESSION.set_left */
extern void T355f25(GE_context* ac, T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.set_right */
extern void T355f24(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T80f301(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T80f387(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T80f438(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_equality_expression_target_dynamic_types */
extern void T80f476(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.make */
extern T0* T1906c6(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_equality_expression */
extern void T76f990(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1056f60(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_create_expression */
extern void T428f22(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_create_expression */
extern void T424f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T409f158(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T409f211(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T409f259(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f259ot1(T0* a1, T0** a2);
extern T1 T409f259ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T298f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T1072c967(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T34f415(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T298f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T1072c966(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T298f129(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T34f414(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T34f128(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T836f8(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc1a_error */
extern void T298f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1a */
extern T0* T1072c965(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T298f128(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc1a_error */
extern void T34f413(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc1_error */
extern T1 T34f127(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T298f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T1072c964(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T298f127(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T34f412(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T34f126(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T409f318(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T414f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T414f21ot1(T0* a1, T0** a2);
extern T1 T414f21ot2(T0* a1, T0** a2);
extern T1 T414f21ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T298f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T1072c1024(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T298f151(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T34f472(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T34f150(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.current_system */
extern T0* T414f14(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern T0* T414f13(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T298f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T1072c1023(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T34f471(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T836f9(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T414f11(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T414f23(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.type_position */
extern T0* T1914f21(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.type_position */
extern T0* T364f17(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T409f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1067f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T298f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T1072c963(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T34f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.free_overloaded_procedures */
extern void T409f243(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force_last */
extern void T417f13(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].force */
extern void T1135f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].fill_with */
extern void T1136f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extend */
extern void T1136f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].resize */
extern void T417f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T1135f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].aliased_resized_area */
extern T0* T1136f3(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].new_capacity */
extern T6 T417f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].extendible */
extern T1 T417f6(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].first */
extern T0* T707f14(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE].is_empty */
extern T1 T707f13(GE_context* ac, T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T83f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T282f14(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T282f14ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.new_overloaded_procedures */
extern T0* T409f51(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].remove_last */
extern void T417f15(GE_context* ac, T0* C);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].keep_head */
extern void T1136f9(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_count */
extern void T1136f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].move_last_cursors_after */
extern void T417f16(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_next_cursor */
extern void T1137f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].set_after */
extern void T1137f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].last */
extern T0* T417f10(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] DS_ARRAYED_LIST [[attached] ET_PROCEDURE]].is_empty */
extern T1 T417f9(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.column */
extern T6 T1974f3(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.line */
extern T6 T1974f2(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_position */
extern T0* T1914f20(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T364f15(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.creation_call */
extern T0* T1914f19(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T80f292(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T80f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T80f429(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f429ot1(T0* a1, T0** a2);
extern T1 T80f429ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T80f346(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T80f345(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_overloaded_procedures */
extern void T80f328(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_overloaded_procedures */
extern T0* T80f78(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_create_expression */
extern void T76f991(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T76f1045(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_extended_attribute */
extern void T1056f14(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_extended_attribute */
extern void T1055f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_extended_attribute */
extern void T409f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_extended_attribute_validity */
extern void T409f86(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0a_error */
extern void T298f308(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0a */
extern T0* T1072c865(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0a_error */
extern void T34f307(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T409f98(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0e_error */
extern void T298f307(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0e */
extern T0* T1072c864(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0e_error */
extern void T34f306(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_COMPOUND.has_non_null_instruction */
extern T1 T372f7(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T409f97(GE_context* ac, T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T372f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T409f96(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T409f103(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1067f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T409f102(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T409f101(GE_context* ac, T0* C, T0* a1);
extern T1 T409f101ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T298f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T1072c876(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T298f81(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T34f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T34f80(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T298f318(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T1072c875(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T298f80(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T34f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T34f79(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T298f317(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T1072c874(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T34f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_across_components_validity */
extern void T409f95(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_object_tests_validity */
extern void T409f94(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3a_error */
extern void T298f316(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuot3a */
extern T0* T1072c873(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T298f79(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot3a_error */
extern void T34f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuot3_error */
extern T1 T34f78(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_6_4_7_7252 */
extern T0* T409f45(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T409f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1067f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T409f92(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_query_type_validity */
extern void T409f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T409f100(GE_context* ac, T0* C, T0* a1);
extern T1 T409f100ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_extended_attribute */
extern void T80f120(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_extended_attribute_validity */
extern void T80f131(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T80f150(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T80f149(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T80f148(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T80f158(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T80f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T80f156(GE_context* ac, T0* C, T0* a1);
extern T1 T80f156ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_components_validity */
extern void T80f147(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_object_tests_validity */
extern void T80f146(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_4_7_7252 */
extern T0* T80f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T80f145(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T80f144(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_type_validity */
extern void T80f142(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T80f155(GE_context* ac, T0* C, T0* a1);
extern T1 T80f155ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_extended_attribute */
extern void T76f992(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_extended_attribute */
extern void T76f1046(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T76f1050(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T76f1101(GE_context* ac, T0* C, T0* a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.set_name */
extern void T325f31(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T76f1114(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1056f15(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_constant_attribute */
extern void T1055f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T409f83(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T409f87(GE_context* ac, T0* C, T0* a1);
extern T1 T409f87ot1(T0* a1, T0** a2);
extern T1 T409f87ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T298f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T1072c871(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T298f77(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T34f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T34f76(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T298f313(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T1072c870(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T298f76(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T34f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T34f75(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T1293f48(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T1292f48(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T298f312(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T1072c869(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T298f75(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T34f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T34f74(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3b_error */
extern void T298f311(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vqmc3b */
extern T0* T1072c868(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T753f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vqmc3b_error */
extern void T34f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T409f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T409f112(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T409f111(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T409f110(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T409f109(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T409f108(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T409f107(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T409f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvwmc2a_error */
extern void T298f321(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvwmc2a */
extern T0* T1072c878(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T298f83(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvwmc2a_error */
extern void T34f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvwmc2_error */
extern T1 T34f82(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T409f105(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0a_error */
extern void T298f320(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0a */
extern T0* T1072c877(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.type_name */
extern T0* T1072f283(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T298f82(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwmq0a_error */
extern void T34f319(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwmq_error */
extern T1 T34f81(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T298f310(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T1072c867(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T298f74(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T34f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T34f73(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T298f309(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T1072c866(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T298f73(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T34f308(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T34f72(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T80f121(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T80f132(GE_context* ac, T0* C, T0* a1);
extern T1 T80f132ot1(T0* a1, T0** a2);
extern T1 T80f132ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T80f151(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T80f167(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T80f166(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T80f165(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T80f164(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T80f163(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T80f162(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T80f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T80f160(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T76f993(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T76f1047(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1056f16(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_unique_attribute */
extern void T1055f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T409f84(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T409f88(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T298f315(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T1072c872(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T298f78(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T34f314(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T34f77(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T80f122(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T80f133(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T76f994(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T76f1048(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1056f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_integer_constant */
extern void T428f10(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_integer_constant */
extern void T424f15(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T409f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T409f199(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T80f280(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T80f366(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T76f995(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T76f1049(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_constant */
extern void T76f1102(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_integer_value */
extern void T76f1115(GE_context* ac, T0* C, T11 a1, T1 a2, T0* a3, T1 a4);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_64 */
extern void T302f12(GE_context* ac, T0* C, T11 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_64 */
extern void T304f13(GE_context* ac, T0* C, T11 a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1056f17(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_attribute */
extern void T1055f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T409f85(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T409f89(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T80f123(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T80f134(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T76f996(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_current */
extern void T1411f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_current */
extern void T1410f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_current */
extern void T1409f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_current */
extern void T1408f6(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_current */
extern void T1061f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1060f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1059f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1054f16(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1053f16(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1052f19(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1051f12(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_current */
extern void T1050f9(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1049f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1038f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1038f28(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1038f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T298f528(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T1072c1073(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T34f527(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1037f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1037f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1037f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T298f522(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T1072c1068(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T298f173(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T34f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T34f172(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1037f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1037f12(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_like_current */
extern void T414f27(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T414f34(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1056f18(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1056f24(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_procedure */
extern void T1055f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T409f113(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T409f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T409f136(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T409f194(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1067f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T409f193(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T80f124(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T80f135(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T80f152(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T80f169(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T80f168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T76f997(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T76f1051(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T76f1103(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_address_routine */
extern void T76f1111(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T76f452(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_address_routine_name */
extern void T76f1112(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_internal_routine */
extern void T76f1116(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_assign_completed_to_once_status */
extern void T76f1148(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T76f1131(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_assign_last_exception_to_once_exception */
extern void T76f1155(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_exception */
extern void T76f1159(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_compound */
extern void T76f1154(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T76f1104(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T76f1153(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T76f1120(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1120ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.current_universe */
extern T0* T76f466(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T76f1118(GE_context* ac, T0* C, T1 a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T76f1149(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_result_to_once_value */
extern void T76f1147(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_called_to_once_status */
extern void T76f1146(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_once_value */
extern void T76f1145(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status */
extern void T76f1144(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_status_is_completed */
extern void T76f1143(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_statement */
extern void T76f1142(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assign_called_to_thread_safe_once_status */
extern void T76f1141(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_exception_to_thread_safe_once_exception */
extern void T76f1140(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_exception */
extern void T76f1156(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_result_to_thread_safe_once_value */
extern void T76f1139(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_value */
extern void T76f1157(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_assign_once_value_to_result */
extern void T76f1138(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_unlock */
extern void T76f1137(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex */
extern void T76f1158(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_lock */
extern void T76f1136(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_once_mutex_try_lock */
extern void T76f1135(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_return_thread_safe_once_value */
extern void T76f1134(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_raise_thread_safe_once_exception_if_any */
extern void T76f1133(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* ET_C_GENERATOR.print_thread_safe_once_status */
extern void T76f1132(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].force_last */
extern void T329f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_put */
extern void T329f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_put */
extern void T329f55(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_put */
extern void T329f54(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].resize */
extern void T329f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].clashes_resize */
extern void T329f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].special_integer_ */
extern T0* T329f33(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].key_storage_resize */
extern void T329f59(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_resize */
extern void T329f58(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].slots_resize */
extern void T329f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].new_capacity */
extern T6 T329f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FEATURE].item_storage_put */
extern void T329f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1056f12(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_procedure */
extern void T1055f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T409f114(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T409f124(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T80f125(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T80f136(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T76f998(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T76f1052(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1056f56(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_void */
extern void T428f18(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_void */
extern void T424f23(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T409f154(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T409f207(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T409f257(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T80f288(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T80f374(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T80f427(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T76f999(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T76f1053(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_expression */
extern void T1056f89(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1056f93(GE_context* ac, T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T966f6(GE_context* ac, T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T966f8(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_across_expression */
extern void T428f53(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_across_expression */
extern void T424f58(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_expression */
extern void T409f189(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_expression_validity */
extern void T409f241(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_across_expression */
extern void T409f304(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_found_item */
extern void T425f63(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].remove_position */
extern void T425f66(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_put */
extern void T425f71(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_put */
extern void T425f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_keep_head */
extern void T425f75(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_keep_head */
extern void T425f74(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_put */
extern void T425f69(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_put */
extern void T425f70(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].move_cursors_forth */
extern void T425f73(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].internal_set_key_equality_tester */
extern void T425f72(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.remove_across_components */
extern void T426f10(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].prune_last */
extern void T1160f15(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.build_negated_scope */
extern void T424f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE_BUILDER.build_negated_scope */
extern void T428f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T409f303(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T298f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T1072c1007(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T298f143(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T34f455(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T34f142(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T409f302(GE_context* ac, T0* C, T0* a1);
/* ET_ACROSS_CURSOR_SCOPE.add_across_component */
extern void T426f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].force_last */
extern void T1160f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].resize */
extern void T1160f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T1160f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ACROSS_COMPONENT].extendible */
extern T1 T1160f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_across_component_header_validity */
extern void T409f301(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T409f135(GE_context* ac, T0* C, T0* a1);
/* ET_PARENTHESIS_INSTRUCTION.parenthesis_call */
extern T0* T1765f4(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T409f190(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].force_last */
extern void T425f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].resize */
extern void T425f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].clashes_resize */
extern void T425f79(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].special_integer_ */
extern T0* T425f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].key_storage_resize */
extern void T425f78(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].item_storage_resize */
extern void T425f77(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].slots_resize */
extern void T425f76(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_ACROSS_COMPONENT].new_capacity */
extern T6 T425f31(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_across_cursor_declaration */
extern void T409f347(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ACROSS_CURSOR_SCOPE.hidden_across_component */
extern T0* T426f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2e_error */
extern void T298f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2e */
extern T0* T1072c1006(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_voit2_error */
extern T1 T298f142(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit2e_error */
extern void T34f454(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_voit2_error */
extern T1 T34f141(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.hidden_object_test */
extern T0* T423f5(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_voit2d_error */
extern void T298f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2d */
extern T0* T1072c1005(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2d_error */
extern void T34f453(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].remove_last */
extern void T416f15(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].move_last_cursors_after */
extern void T416f17(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_next_cursor */
extern void T1134f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INLINE_AGENT].set_after */
extern void T1134f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_voit2c_error */
extern void T298f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2c */
extern T0* T1072c1004(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2c_error */
extern void T34f452(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit2b_error */
extern void T298f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2b */
extern T0* T1072c1003(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2b_error */
extern void T34f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].item */
extern T0* T416f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].force_last */
extern void T416f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].resize */
extern void T416f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].new_capacity */
extern T6 T416f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].extendible */
extern T1 T416f10(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_voit2a_error */
extern void T298f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_voit2a */
extern T0* T1072c1002(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_voit2a_error */
extern void T34f450(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_voit1a_error */
extern void T298f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_voit1a */
extern T0* T1072c1001(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_voit1_error */
extern T1 T298f141(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_voit1a_error */
extern void T34f449(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_voit1_error */
extern T1 T34f140(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_expression */
extern void T80f323(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_expression_validity */
extern void T80f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_expression */
extern void T80f465(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f337(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T80f337p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f336(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T80f336p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_component_header_validity */
extern void T80f228(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T80f202(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_dotnet_procedure_call_instruction_validity */
extern void T80f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_across_cursor_declaration */
extern void T80f335(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_across_expression */
extern void T76f1000(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_expression */
extern void T76f1054(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1056f43(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.process */
extern void T1787f16(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unfolded_tuple_actual_argument_list */
extern void T1056f108(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.process */
extern void T320f20(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_bracket_expression */
extern void T428f37(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_bracket_expression */
extern void T424f42(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T409f173(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T409f226(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T80f307(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T80f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T76f1001(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T76f1055(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1056f77(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f77ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1056f99(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_call_agent */
extern void T428f41(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_call_agent */
extern void T424f46(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T409f177(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T409f230(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f230ot1(T0* a1, T0** a2);
extern T1 T409f230ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T409f284(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T409f284ot1(T0* a1, T0** a2);
extern T1 T409f284ot2(T0* a1, T0** a2);
/* ET_CALL_AGENT.is_procedure */
extern T1 T796f16(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T298f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T1072c976(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T298f133(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T34f424(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T34f132(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T409f334(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T409f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T409f333(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T409f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T409f340(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T409f340ot1(T0* a1, T0** a2);
extern T1 T409f340ot2(T0* a1, T0** a2);
extern T1 T409f340ot3(T0* a1, T0** a2);
extern T1 T409f340ot4(T0* a1, T0** a2);
extern T1 T409f340ot5(T0* a1, T0** a2);
extern T1 T409f340ot6(T0* a1, T0** a2);
extern T1 T409f340ot7(T0* a1, T0** a2);
extern T1 T409f340ot8(T0* a1, T0** a2);
extern T1 T409f340ot9(T0* a1, T0** a2);
extern T1 T409f340ot10(T0* a1, T0** a2);
extern T1 T409f340ot11(T0* a1, T0** a2);
extern T1 T409f340ot12(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T298f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T1072c1022(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T298f150(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T34f470(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T34f149(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T298f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T1072c1021(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T34f469(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T298f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T1072c1020(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T298f149(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T34f468(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T34f148(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T298f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T1072c1019(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T34f467(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T782f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T782f9(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T298f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T1072c1018(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T298f148(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T34f466(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T34f147(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T298f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T1072c1017(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T34f465(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T267f32(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resize */
extern void T267f35(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.new_capacity */
extern T6 T267f24(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T267f23(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T409f339(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1788f8(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].force */
extern void T1930f3(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].fill_with */
extern void T1929f6(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].extend */
extern void T1929f7(GE_context* ac, T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern T0* T1788f6(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1930c2(GE_context* ac);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1789c5(GE_context* ac, T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1788c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1930f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_empty */
extern T0* T1929c4(GE_context* ac, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T298f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T1072c1016(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T298f147(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T34f464(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T34f146(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T409f332(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T409f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T796f35(GE_context* ac, T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T409f283(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T409f283ot1(T0* a1, T0** a2);
extern T1 T409f283ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T409f331(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T409f330(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T409f329(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T409f282(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T298f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T1072c975(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T34f423(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T409f328(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T409f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T409f327(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T409f348(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vucr0j_error */
extern void T298f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0j */
extern T0* T1072c974(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0j_error */
extern void T34f422(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T80f311(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T80f397(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f397ot1(T0* a1, T0** a2);
extern T1 T80f397ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T80f448(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f448ot1(T0* a1, T0** a2);
extern T1 T80f448ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T80f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T80f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f501ot1(T0* a1, T0** a2);
extern T1 T80f501ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T80f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T303f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T80f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T80f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T80f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f505ot1(T0* a1, T0** a2);
extern T1 T80f505ot2(T0* a1, T0** a2);
extern T1 T80f505ot3(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T80f508(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f508ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T80f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f492ot1(T0* a1, T0** a2);
extern T1 T80f492ot2(T0* a1, T0** a2);
extern T1 T80f492ot3(T0* a1, T0** a2);
extern T1 T80f492ot4(T0* a1, T0** a2);
extern T1 T80f492ot5(T0* a1, T0** a2);
extern T1 T80f492ot6(T0* a1, T0** a2);
extern T1 T80f492ot7(T0* a1, T0** a2);
extern T1 T80f492ot8(T0* a1, T0** a2);
extern T1 T80f492ot9(T0* a1, T0** a2);
extern T1 T80f492ot10(T0* a1, T0** a2);
extern T1 T80f492ot11(T0* a1, T0** a2);
extern T1 T80f492ot12(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T80f491(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T80f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T80f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T80f447(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f447ot1(T0* a1, T0** a2);
extern T1 T80f447ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T80f483(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T80f482(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T80f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T80f446(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T80f480(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T80f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T80f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f504ot1(T0* a1, T0** a2);
extern T1 T80f504ot2(T0* a1, T0** a2);
extern T1 T80f504ot3(T0* a1, T0** a2);
extern T1 T80f504ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T80f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T80f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T80f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T76f1002(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T76f1057(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T76f1106(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1106ot1(T0* a1, T0** a2);
extern T1 T76f1106ot2(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].force_last */
extern void T317f14(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].force */
extern void T1095f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT].fill_with */
extern void T1094f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_AGENT].extend */
extern void T1094f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].resize */
extern void T317f15(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_AGENT].aliased_resized_area */
extern T0* T1095f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_AGENT].aliased_resized_area */
extern T0* T1094f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].new_capacity */
extern T6 T317f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_AGENT].extendible */
extern T1 T317f8(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T76f1056(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T76f1105(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1105ot1(T0* a1, T0** a2);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_name */
extern void T321f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_INSTRUCTION.set_target */
extern void T321f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_CALL_EXPRESSION.set_name */
extern void T324f31(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_expression */
extern void T1056f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression_list */
extern void T1056f98(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION.process */
extern void T865f9(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_expression */
extern void T1056f110(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_EXPRESSION_LIST.item */
extern T0* T868f4(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_if_expression */
extern void T428f23(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_if_expression */
extern void T424f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_expression */
extern void T409f159(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_expression_validity */
extern void T409f212(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.free_common_ancestor_types */
extern void T409f262(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].keep_first */
extern void T420f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_all_cursors_after */
extern void T420f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].item */
extern T0* T420f11(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_if_expression */
extern void T409f261(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.update_common_ancestor_type_list */
extern void T409f260(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].remove */
extern void T420f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_left */
extern void T420f21(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NESTED_TYPE_CONTEXT].move_cursors_left */
extern void T420f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_NESTED_TYPE_CONTEXT].set_position */
extern void T1147f8(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_expression */
extern void T80f293(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_expression_validity */
extern void T80f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_common_ancestor_types */
extern void T80f432(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_if_expression */
extern void T80f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_if_expression_dynamic_types */
extern void T80f474(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.update_common_ancestor_type_list */
extern void T80f430(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.process_if_expression */
extern void T76f1003(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_expression */
extern void T76f1058(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1056f75(GE_context* ac, T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T969f11(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T969f16(GE_context* ac, T0* C, T6 a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_array */
extern void T428f39(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_array */
extern void T424f44(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T409f175(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T409f228(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_untyped_manifest_array_validity */
extern void T409f280(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f280ot1(T0* a1, T0** a2);
extern T1 T409f280ot2(T0* a1, T0** a2);
/* ET_MANIFEST_ARRAY.put */
extern void T969f34(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T409f326(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T81f83(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.conforms_to_context_with_type_marks */
extern T1 T81f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.tokens */
extern T0* T81f28(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.check_typed_manifest_array_validity */
extern void T409f279(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T409f279ot1(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vwma2a_error */
extern void T298f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vwma2a */
extern T0* T1072c973(GE_context* ac, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T298f132(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma2a_error */
extern void T34f421(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vwma2_error */
extern T1 T34f131(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwma1a_error */
extern void T298f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwma1a */
extern T0* T1072c972(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T298f131(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwma1a_error */
extern void T34f420(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwma1_error */
extern T1 T34f130(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T80f309(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T80f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_untyped_manifest_array_validity */
extern void T80f444(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f444ot1(T0* a1, T0** a2);
extern T1 T80f444ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T80f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f478ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_manifest_array_validity */
extern void T80f443(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f443ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T76f1004(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T76f1059(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1059ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1056f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_parenthesized_expression */
extern void T428f38(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_parenthesized_expression */
extern void T424f43(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T409f174(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T409f227(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T80f308(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T80f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T76f1005(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T76f1060(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1056f62(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_static_call_expression */
extern void T428f25(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_static_call_expression */
extern void T424f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T409f161(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T409f214(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_static_query_call_expression_validity */
extern void T409f267(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T409f324(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_feature_validity */
extern void T409f323(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T409f323ot1(T0* a1, T0** a2);
extern T1 T409f323ot2(T0* a1, T0** a2);
extern T1 T409f323ot3(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vuno5a_error */
extern void T298f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuno5a */
extern T0* T1072c1015(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T298f146(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno5a_error */
extern void T34f463(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vuno5_error */
extern T1 T34f145(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_implicitly_static */
extern T1 T1319f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin_static */
extern T1 T1319f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.string_ */
extern T0* T1319f49(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T1319f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_implicitly_static */
extern T1 T275f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin_static */
extern T1 T275f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.string_ */
extern T0* T275f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T275f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_implicitly_static */
extern T1 T402f34(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_implicitly_static */
extern T1 T400f32(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuno5b_error */
extern void T298f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuno5b */
extern T0* T1072c1014(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuno5b_error */
extern void T34f462(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuno3a_error */
extern void T298f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuno3a */
extern T0* T1072c1013(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T298f145(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuno3a_error */
extern void T34f461(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuno3_error */
extern T1 T34f144(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T409f322(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1067f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_parenthesis_call_validity */
extern void T409f266(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T409f266ot1(T0* a1, T0** a2);
extern T1 T409f266ot2(T0* a1, T0** a2);
/* ET_STATIC_CALL_INSTRUCTION.set_parenthesis_call */
extern void T1343f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.set_parenthesis_call */
extern void T1012f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_query_call_expression_validity */
extern void T409f265(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T80f295(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T80f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_query_call_expression_validity */
extern void T80f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T80f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_feature_validity */
extern void T80f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f353ot1(T0* a1, T0** a2);
extern T1 T80f353ot2(T0* a1, T0** a2);
extern T1 T80f353ot3(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T80f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_parenthesis_call_validity */
extern void T80f244(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T80f244ot1(T0* a1, T0** a2);
extern T1 T80f244ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_query_call_expression_validity */
extern void T80f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T76f1006(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T76f1061(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1056f76(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_strip_expression */
extern void T428f40(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_strip_expression */
extern void T424f45(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T409f176(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T409f229(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T409f281(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T298f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T1072c943(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T298f121(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T34f391(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T34f120(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T298f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T1072c942(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T298f120(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T34f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T34f119(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T298f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T1072c941(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T34f389(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T1015f15(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T1015f21(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T80f310(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T80f396(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T80f445(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T76f1007(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T76f1062(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_named_object_test */
extern void T1056f87(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_named_object_test */
extern void T428f51(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_named_object_test */
extern void T424f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE.add_object_test */
extern void T423f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T1154f15(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].resize */
extern void T1154f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T1154f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_NAMED_OBJECT_TEST].extendible */
extern T1 T1154f8(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuot1f_error */
extern void T298f520(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1f */
extern T0* T1072c1066(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T298f125(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot1f_error */
extern void T34f519(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuot1_error */
extern T1 T34f124(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.error_handler */
extern T0* T424f7(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE_BUILDER.set_fatal_error */
extern void T424f60(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_named_object_test */
extern void T409f187(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_named_object_test_validity */
extern void T409f239(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_named_object_test */
extern void T409f300(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot4b_error */
extern void T298f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4b */
extern T0* T1072c958(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T298f126(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuot4b_error */
extern void T34f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuot4_error */
extern T1 T34f125(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuot4a_error */
extern void T298f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuot4a */
extern T0* T1072c957(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuot4a_error */
extern void T34f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.ise_6_3_7_5660 */
extern T0* T409f54(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuot1e_error */
extern void T298f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1e */
extern T0* T1072c956(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1e_error */
extern void T34f404(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1d_error */
extern void T298f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1d */
extern T0* T1072c955(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1d_error */
extern void T34f403(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1c_error */
extern void T298f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1c */
extern T0* T1072c954(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1c_error */
extern void T34f402(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1b_error */
extern void T298f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1b */
extern T0* T1072c953(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1b_error */
extern void T34f401(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuot1a_error */
extern void T298f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot1a */
extern T0* T1072c952(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot1a_error */
extern void T34f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].force_last */
extern void T422f61(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_put */
extern void T422f67(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_put */
extern void T422f66(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_put */
extern void T422f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].resize */
extern void T422f64(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].clashes_resize */
extern void T422f71(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].special_integer_ */
extern T0* T422f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].key_storage_resize */
extern void T422f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_resize */
extern void T422f69(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].slots_resize */
extern void T422f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].new_capacity */
extern T6 T422f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_NESTED_TYPE_CONTEXT, [attached] ET_NAMED_OBJECT_TEST].item_storage_put */
extern void T422f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_named_object_test */
extern void T80f321(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_named_object_test_validity */
extern void T80f406(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_named_object_test */
extern void T80f464(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_named_object_test_dynamic_types */
extern void T80f495(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_6_3_7_5660 */
extern T0* T80f86(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_named_object_test */
extern void T76f1008(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1056f47(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_manifest_string */
extern void T428f9(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_manifest_string */
extern void T424f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T409f145(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T409f198(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T409f254(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T409f312(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T409f311(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0d_error */
extern void T298f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0d */
extern T0* T1072c960(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0d_error */
extern void T34f408(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T80f279(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T80f365(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T80f424(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T80f468(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T80f496(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_manifest_string_area_dynamic_type */
extern void T80f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T80f467(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T76f1009(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T76f1063(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T76f1107(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1056f49(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T428f11(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_integer_constant */
extern void T424f16(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T409f147(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T409f200(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T80f281(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T80f367(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T76f1010(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T76f1064(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1056f50(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T428f12(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_hexadecimal_integer_constant */
extern void T424f17(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T409f148(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T409f201(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T80f282(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T80f368(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T76f1011(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T76f1065(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_octal_integer_constant */
extern void T1056f51(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_octal_integer_constant */
extern void T428f13(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_octal_integer_constant */
extern void T424f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_octal_integer_constant */
extern void T409f149(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_octal_integer_constant_validity */
extern void T409f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_octal_integer_constant */
extern void T80f283(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_octal_integer_constant_validity */
extern void T80f369(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_octal_integer_constant */
extern void T76f1012(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_octal_integer_constant */
extern void T76f1066(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_binary_integer_constant */
extern void T1056f52(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_binary_integer_constant */
extern void T428f14(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_binary_integer_constant */
extern void T424f19(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_binary_integer_constant */
extern void T409f150(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_binary_integer_constant_validity */
extern void T409f203(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_binary_integer_constant */
extern void T80f284(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_binary_integer_constant_validity */
extern void T80f370(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_binary_integer_constant */
extern void T76f1013(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_binary_integer_constant */
extern void T76f1067(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1056f53(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_regular_real_constant */
extern void T428f15(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_regular_real_constant */
extern void T424f20(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T409f151(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T409f204(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T409f255(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T409f314(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T409f313(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0b_error */
extern void T298f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0b */
extern T0* T1072c961(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0b_error */
extern void T34f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T80f285(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T80f371(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T80f425(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T80f470(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T80f469(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T76f1014(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T76f1068(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T1292f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1056f54(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_underscored_real_constant */
extern void T428f16(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_underscored_real_constant */
extern void T424f21(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T409f152(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T409f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T80f286(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T80f372(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T76f1015(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T76f1069(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T1293f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1056f55(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_true_constant */
extern void T428f17(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_true_constant */
extern void T424f22(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T409f153(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T409f206(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T409f256(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T80f287(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T80f373(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T80f426(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_true_constant */
extern void T76f1016(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T76f1070(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1056f57(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_false_constant */
extern void T428f19(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_false_constant */
extern void T424f24(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T409f155(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T409f208(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T80f289(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T80f375(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T76f1017(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T76f1071(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1056f58(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c1_character_constant */
extern void T428f20(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c1_character_constant */
extern void T424f25(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T409f156(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T409f209(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T409f258(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T409f316(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T409f315(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vwmq0c_error */
extern void T298f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwmq0c */
extern T0* T1072c962(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwmq0c_error */
extern void T34f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T80f290(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T80f376(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T80f428(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T80f472(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T80f471(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T76f1018(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T76f1072(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character_8 */
extern void T76f1108(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_natural_32 */
extern void T302f11(GE_context* ac, T0* C, T10 a1);
/* KL_STRING_OUTPUT_STREAM.put_natural_32 */
extern void T304f12(GE_context* ac, T0* C, T10 a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1056f59(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c2_character_constant */
extern void T428f21(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c2_character_constant */
extern void T424f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T409f157(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T409f210(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T80f291(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T80f377(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T76f1019(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1056f19(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_do_function */
extern void T1055f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T409f115(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T409f125(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vevi0c_error */
extern void T298f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0c */
extern T0* T1072c906(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0c_error */
extern void T34f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T80f126(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T80f137(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T76f1020(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T76f1073(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T76f1109(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1056f20(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_function */
extern void T1055f53(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T409f116(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T409f126(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vucr0b_error */
extern void T298f350(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vucr0b */
extern T0* T1072c907(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vucr0b_error */
extern void T34f351(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_once_keys_validity */
extern void T409f137(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok2a_error */
extern void T298f355(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2a */
extern T0* T1072c912(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T298f103(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok2a_error */
extern void T34f356(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vvok2_error */
extern T1 T34f102(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_process_key */
extern T1 T1667f10(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.is_expected_key */
extern T1 T1667f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_STANDARD_ONCE_KEYS.string_ */
extern T0* T1667f7(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.is_thread_key */
extern T1 T1667f9(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1b_error */
extern void T298f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1b */
extern T0* T1072c911(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T298f102(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vvok1b_error */
extern void T34f355(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vvok1_error */
extern T1 T34f101(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vvok1a_error */
extern void T298f353(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1a */
extern T0* T1072c910(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1a_error */
extern void T34f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STANDARD_ONCE_KEYS.is_object_key */
extern T1 T1667f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.standard_once_keys */
extern T0* T409f50(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.default_create */
extern T0* T1667c12(GE_context* ac);
/* ET_MANIFEST_STRING_LIST.manifest_string */
extern T0* T975f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.item */
extern T0* T975f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].wipe_out */
extern void T430f12(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].move_all_cursors_after */
extern void T430f13(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_next_cursor */
extern void T1165f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_INDEXING_TERM].set_after */
extern void T1165f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vvok2b_error */
extern void T298f352(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vvok2b */
extern T0* T1072c909(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vvok2b_error */
extern void T34f353(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vvok1c_error */
extern void T298f351(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vvok1c */
extern T0* T1072c908(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vvok1c_error */
extern void T34f352(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].item */
extern T0* T430f7(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.append_tagged_indexing_terms_to_list */
extern void T926f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.append_indexing_terms_to_list */
extern void T938f11(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].force_last */
extern void T430f14(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].resize */
extern void T430f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].new_capacity */
extern T6 T430f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INDEXING_TERM].extendible */
extern T1 T430f8(GE_context* ac, T0* C, T6 a1);
/* ET_INDEXING_LIST.string_ */
extern T0* T926f8(GE_context* ac, T0* C);
/* ET_INDEXING.tag */
extern T0* T1301f4(GE_context* ac, T0* C);
/* ET_INDEXING.indexing_clause */
extern T0* T1301f2(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.indexing_clause */
extern T0* T1300f3(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T80f127(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T80f138(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_keys_validity */
extern void T80f153(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.standard_once_keys */
extern T0* T80f63(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_once_function */
extern void T76f1021(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T76f1074(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1056f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_deferred_function */
extern void T1055f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T409f117(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T409f127(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T80f128(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T80f139(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T76f1022(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T76f1075(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1056f22(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_once_procedure */
extern void T1055f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T409f118(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T409f128(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_once_per_object */
extern T1 T1318f63(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_object_key */
extern T1 T1667f1(GE_context* ac, T0* C, T0* a1);
/* ET_STANDARD_ONCE_KEYS.has_expected_key */
extern T1 T1667f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.standard_once_keys */
extern T0* T1318f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T80f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T80f140(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T76f1023(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T76f1076(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1056f23(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_procedure */
extern void T1055f56(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_external_feature_validity */
extern void T1055f21(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_feature_validity */
extern void T1055f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T298f529(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T1072c1074(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T298f175(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T34f528(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T34f174(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.error_handler */
extern T0* T1055f9(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.set_fatal_error */
extern void T1055f48(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.unknown_builtin_reported */
extern T1 T1055f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T1319f106(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T275f109(GE_context* ac, T0* C, T8 a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_feature_validity */
extern void T1055f47(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_BUILTIN_FEATURE_CHECKER.check_expected_builtin_feature_validity */
extern void T1055f50(GE_context* ac, T0* C, T0* a1, T8 a2, T0* a3);
/* ET_BUILTIN_FEATURE_CHECKER.check_signature_validity */
extern void T1055f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T298f530(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T1072c1075(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T298f176(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T34f529(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T34f175(GE_context* ac, T0* C, T0* a1);
/* [attached] ARRAY [[attached] ET_TYPE].count */
extern T6 T278f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found_item */
extern T0* T1741f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_item */
extern T0* T1741f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].found */
extern T1 T1741f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search */
extern void T1741f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].search_position */
extern void T1741f40(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].hash_position */
extern T6 T1741f23(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_item */
extern T0* T1741f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_item */
extern T6 T1741f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_item */
extern T6 T1741f26(GE_context* ac, T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern T0* T82f1475(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern T0* T82f1473(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern T0* T82f1471(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern T0* T82f1432(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.quotient_feature_name */
extern T0* T82f1428(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.product_feature_name */
extern T0* T82f1426(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.power_feature_name */
extern T0* T82f1424(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.plus_feature_name */
extern T0* T82f1012(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern T0* T82f1010(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.opposite_feature_name */
extern T0* T82f1421(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.minus_feature_name */
extern T0* T82f1419(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_positive_infinity_feature_name */
extern T0* T82f1461(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_negative_infinity_feature_name */
extern T0* T82f1459(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_nan_feature_name */
extern T0* T82f1457(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_less_feature_name */
extern T0* T82f1417(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identity_feature_name */
extern T0* T82f1411(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern T0* T82f1453(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern T0* T82f1451(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern T0* T82f1449(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.register_builtin_feature */
extern void T1055f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T8 a4, T0* a5);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].force_last */
extern void T1741f36(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_put */
extern void T1741f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_put */
extern void T1741f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_put */
extern void T1741f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].resize */
extern void T1741f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].clashes_resize */
extern void T1741f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].special_integer_ */
extern T0* T1741f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].key_storage_resize */
extern void T1741f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_resize */
extern void T1741f48(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T1893f1(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].aliased_resized_area */
extern T0* T1890f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].slots_resize */
extern void T1741f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_modulus */
extern T6 T1741f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_capacity */
extern T6 T1741f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].item_storage_put */
extern void T1741f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].force */
extern void T1893f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].fill_with */
extern void T1890f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].extend */
extern void T1890f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].unset_found_item */
extern void T1741f39(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern T0* T82f1447(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].force_last */
extern void T1515f43(GE_context* ac, T0* C, T0* a1, T8 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_put */
extern void T1515f49(GE_context* ac, T0* C, T8 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_put */
extern void T1515f48(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_put */
extern void T1515f47(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_item */
extern T6 T1515f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].hash_position */
extern T6 T1515f23(GE_context* ac, T0* C, T8 a1);
/* NATURAL_8.hash_code */
extern T6 T8f20(GE_context* ac, T8* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].resize */
extern void T1515f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_resize */
extern void T1515f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].special_integer_ */
extern T0* T1515f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_resize */
extern void T1515f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_resize */
extern void T1515f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1740f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].aliased_resized_area */
extern T0* T1742f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].key_storage_item */
extern T8 T1515f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].clashes_item */
extern T6 T1515f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].slots_resize */
extern void T1515f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].new_capacity */
extern T6 T1515f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_put */
extern void T1515f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].force */
extern void T1740f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].fill_with */
extern void T1742f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME]].extend */
extern void T1742f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search_position */
extern void T1515f44(GE_context* ac, T0* C, T8 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_key_equality_tester */
extern void T1741f35(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.feature_name_tester */
extern T0* T1055f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_map */
extern T0* T1741c34(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_with_equality_testers */
extern void T1741f38(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_sparse_container */
extern void T1741f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].set_internal_cursor */
extern void T1741f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].new_cursor */
extern T0* T1741f30(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make */
extern T0* T1894c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_slots */
extern void T1741f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_clashes */
extern void T1741f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_key_storage */
extern void T1741f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME].make_item_storage */
extern void T1741f51(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make */
extern T0* T1893f2(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].make_empty */
extern T0* T1890c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8]].default_create */
extern T0* T1893c3(GE_context* ac);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found_item */
extern T0* T1515f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].item_storage_item */
extern T0* T1515f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].found */
extern T1 T1515f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] DS_HASH_TABLE [[attached] TUPLE [detachable ARRAY [[attached] ET_TYPE], detachable ET_TYPE, [attached] NATURAL_8], [attached] ET_FEATURE_NAME], [attached] NATURAL_8].search */
extern void T1515f42(GE_context* ac, T0* C, T8 a1);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_real_n_ref_feature_validity */
extern void T1055f46(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern T0* T82f978(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.positive_infinity_feature_name */
extern T0* T82f1444(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.negative_infinity_feature_name */
extern T0* T82f1442(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.nan_feature_name */
extern T0* T82f1440(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern T0* T82f911(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern T0* T82f906(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern T0* T82f903(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern T0* T82f900(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern T0* T82f895(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_feature_validity */
extern void T1055f45(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern T0* T82f1438(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern T0* T82f1436(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern T0* T82f1434(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern T0* T82f986(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern T0* T82f984(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_remainder_feature_name */
extern T0* T82f1415(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_quotient_feature_name */
extern T0* T82f1413(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern T0* T82f1409(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern T0* T82f1407(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern T0* T82f1405(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern T0* T82f1403(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern T0* T82f1401(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern T0* T82f1399(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern T0* T82f1397(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern T0* T82f1395(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern T0* T82f1393(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern T0* T82f1391(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern T0* T82f1389(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern T0* T82f1387(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern T0* T82f1385(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern T0* T82f1383(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_integer_n_ref_feature_validity */
extern void T1055f44(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern T0* T82f892(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_tuple_feature_validity */
extern void T1055f43(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern T0* T82f1380(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern T0* T82f94(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern T0* T82f1377(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern T0* T82f1375(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern T0* T82f1373(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern T0* T82f1371(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern T0* T82f1369(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern T0* T82f1367(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern T0* T82f1365(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern T0* T82f1363(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern T0* T82f1361(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern T0* T82f1359(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern T0* T82f1357(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern T0* T82f1355(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern T0* T82f1353(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern T0* T82f1351(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern T0* T82f96(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern T0* T82f1348(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern T0* T82f1346(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern T0* T82f1344(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern T0* T82f1342(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern T0* T82f1340(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern T0* T82f1338(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern T0* T82f1336(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern T0* T82f1334(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern T0* T82f1332(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern T0* T82f1330(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern T0* T82f1328(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern T0* T82f1326(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern T0* T82f1323(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern T0* T82f1321(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern T0* T82f1319(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_function_feature_validity */
extern void T1055f42(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.detachable_separate_formal_parameter_type */
extern T0* T1055f11(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_item_feature_name */
extern T0* T82f1317(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_procedure_feature_validity */
extern void T1055f41(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.fast_call_feature_name */
extern T0* T82f1315(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_platform_feature_validity */
extern void T1055f40(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern T0* T82f1313(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern T0* T82f1311(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern T0* T82f1309(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern T0* T82f1307(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vxworks_feature_name */
extern T0* T82f1305(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern T0* T82f1303(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern T0* T82f1301(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern T0* T82f1299(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_scoop_capable_feature_name */
extern T0* T82f1297(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern T0* T82f1295(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern T0* T82f1293(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_64_bits_feature_name */
extern T0* T82f1291(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern T0* T82f1289(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern T0* T82f1287(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern T0* T82f1285(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern T0* T82f1283(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern T0* T82f891(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_runtime_feature_validity */
extern void T1055f39(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.unmark_object_feature_name */
extern T0* T82f1280(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.unlock_marking_feature_name */
extern T0* T82f1278(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_at_feature_name */
extern T0* T82f1277(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_reference_field_feature_name */
extern T0* T82f1276(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_at_feature_name */
extern T0* T82f1274(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_64_field_feature_name */
extern T0* T82f1272(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_at_feature_name */
extern T0* T82f1270(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_real_32_field_feature_name */
extern T0* T82f1268(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pre_ecma_mapping_feature_name */
extern T0* T82f1266(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_at_feature_name */
extern T0* T82f1264(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_pointer_field_feature_name */
extern T0* T82f1262(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_at_feature_name */
extern T0* T82f1260(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_64_field_feature_name */
extern T0* T82f1258(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_at_feature_name */
extern T0* T82f1256(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_32_field_feature_name */
extern T0* T82f1254(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_at_feature_name */
extern T0* T82f1252(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_16_field_feature_name */
extern T0* T82f1250(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_at_feature_name */
extern T0* T82f1248(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_natural_8_field_feature_name */
extern T0* T82f1246(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_at_feature_name */
extern T0* T82f1244(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_64_field_feature_name */
extern T0* T82f1242(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_at_feature_name */
extern T0* T82f1240(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_32_field_feature_name */
extern T0* T82f1238(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_at_feature_name */
extern T0* T82f1236(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_16_field_feature_name */
extern T0* T82f1234(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_at_feature_name */
extern T0* T82f1232(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_integer_8_field_feature_name */
extern T0* T82f1230(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_at_feature_name */
extern T0* T82f1228(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_32_field_feature_name */
extern T0* T82f1226(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_at_feature_name */
extern T0* T82f1224(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_character_8_field_feature_name */
extern T0* T82f1222(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_at_feature_name */
extern T0* T82f1220(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.set_boolean_field_feature_name */
extern T0* T82f1218(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.mark_object_feature_name */
extern T0* T82f1216(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.lock_marking_feature_name */
extern T0* T82f1214(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_id_from_name_feature_name */
extern T0* T82f1212(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_conforms_to_feature_name */
extern T0* T82f1210(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.storable_version_of_type_feature_name */
extern T0* T82f1208(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_offset_feature_name */
extern T0* T82f1207(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_at_feature_name */
extern T0* T82f1206(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.reference_field_feature_name */
extern T0* T82f1205(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_at_feature_name */
extern T0* T82f1203(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_64_field_feature_name */
extern T0* T82f1201(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_at_feature_name */
extern T0* T82f1199(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.real_32_field_feature_name */
extern T0* T82f1197(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_offset_feature_name */
extern T0* T82f1195(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raw_reference_field_at_feature_name */
extern T0* T82f1193(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pre_ecma_mapping_status_feature_name */
extern T0* T82f1191(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_at_feature_name */
extern T0* T82f1189(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.pointer_field_feature_name */
extern T0* T82f1187(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.persistent_field_count_of_type_feature_name */
extern T0* T82f1185(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.once_objects_feature_name */
extern T0* T82f1183(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.object_size_feature_name */
extern T0* T82f1181(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_type_instance_of_feature_name */
extern T0* T82f1180(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_tuple_instance_of_feature_name */
extern T0* T82f1179(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_special_of_reference_instance_of_feature_name */
extern T0* T82f1178(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.new_instance_of_feature_name */
extern T0* T82f1177(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_at_feature_name */
extern T0* T82f1175(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_field_feature_name */
extern T0* T82f1173(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_at_feature_name */
extern T0* T82f1171(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_field_feature_name */
extern T0* T82f1169(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_at_feature_name */
extern T0* T82f1167(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_field_feature_name */
extern T0* T82f1165(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_at_feature_name */
extern T0* T82f1163(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_field_feature_name */
extern T0* T82f1161(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_type_feature_name */
extern T0* T82f1159(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_tuple_feature_name */
extern T0* T82f1157(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_type_feature_name */
extern T0* T82f1155(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_or_basic_type_feature_name */
extern T0* T82f1153(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_reference_feature_name */
extern T0* T82f1151(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_of_expanded_feature_name */
extern T0* T82f1149(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_copy_semantics_item_feature_name */
extern T0* T82f1147(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_special_feature_name */
extern T0* T82f1145(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_object_marked_feature_name */
extern T0* T82f1143(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_transient_of_type_feature_name */
extern T0* T82f1141(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_field_expanded_of_type_feature_name */
extern T0* T82f1139(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_expanded_feature_name */
extern T0* T82f956(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_copy_semantics_field_feature_name */
extern T0* T82f1136(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_type_feature_name */
extern T0* T82f1134(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_at_feature_name */
extern T0* T82f1132(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_field_feature_name */
extern T0* T82f1130(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_at_feature_name */
extern T0* T82f1128(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_field_feature_name */
extern T0* T82f1126(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_at_feature_name */
extern T0* T82f1124(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_field_feature_name */
extern T0* T82f1122(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_at_feature_name */
extern T0* T82f1120(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_field_feature_name */
extern T0* T82f1118(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.in_assertion_feature_name */
extern T0* T82f1116(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern T0* T82f948(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_of_type_feature_name */
extern T0* T82f1113(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_of_type_feature_name */
extern T0* T82f1111(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_type_of_type_feature_name */
extern T0* T82f1109(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_static_type_of_type_feature_name */
extern T0* T82f1107(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_offset_of_type_feature_name */
extern T0* T82f1105(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_name_of_type_feature_name */
extern T0* T82f1103(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.field_count_of_type_feature_name */
extern T0* T82f1101(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_gen_param_id_feature_name */
extern T0* T82f1099(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_at_offset_feature_name */
extern T0* T82f1097(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.dynamic_type_feature_name */
extern T0* T82f1095(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.detachable_type_feature_name */
extern T0* T82f1093(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.compiler_version_feature_name */
extern T0* T82f1091(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.check_assert_feature_name */
extern T0* T82f1089(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_at_feature_name */
extern T0* T82f1087(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_32_field_feature_name */
extern T0* T82f1085(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_at_feature_name */
extern T0* T82f1083(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_8_field_feature_name */
extern T0* T82f1081(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_at_feature_name */
extern T0* T82f1079(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.boolean_field_feature_name */
extern T0* T82f1077(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.attached_type_feature_name */
extern T0* T82f1075(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ise_runtime_class_name */
extern T0* T82f890(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_identified_routines_feature_validity */
extern void T1055f38(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern T0* T82f1073(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern T0* T82f1072(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern T0* T82f1071(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern T0* T82f889(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_ise_exception_manager_feature_validity */
extern void T1055f37(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.developer_raise_feature_name */
extern T0* T82f1069(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_factory_feature_validity */
extern void T1055f36(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.exception_manager_feature_name */
extern T0* T82f1066(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_manager_factory_class_name */
extern T0* T82f888(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_exception_manager_feature_validity */
extern void T1055f35(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_is_ignored_feature_name */
extern T0* T82f1063(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.raise_feature_name */
extern T0* T82f1061(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ignore_feature_name */
extern T0* T82f1059(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.catch_feature_name */
extern T0* T82f1057(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.type_of_code_feature_name */
extern T0* T82f1055(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_raisable_feature_name */
extern T0* T82f1052(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignored_feature_name */
extern T0* T82f1050(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_ignorable_feature_name */
extern T0* T82f1048(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_caught_feature_name */
extern T0* T82f1046(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.exception_from_code_feature_name */
extern T0* T82f1044(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_memory_feature_validity */
extern void T1055f34(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.free_feature_name */
extern T0* T82f1041(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.find_referers_feature_name */
extern T0* T82f1039(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.memory_class_name */
extern T0* T82f887(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_com_failure_feature_validity */
extern void T1055f33(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.cwin_local_free_feature_name */
extern T0* T82f1036(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.cwin_error_text_feature_name */
extern T0* T82f1034(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.character_size_feature_name */
extern T0* T82f1032(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_facility_feature_name */
extern T0* T82f1030(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_code_feature_name */
extern T0* T82f1028(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.ccom_hresult_feature_name */
extern T0* T82f1026(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.c_strlen_feature_name */
extern T0* T82f1024(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.com_failure_class_name */
extern T0* T82f886(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_arguments_32_feature_validity */
extern void T1055f32(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.i_th_argument_string_feature_name */
extern T0* T82f1021(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.i_th_argument_pointer_feature_name */
extern T0* T82f1019(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern T0* T82f1017(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.arguments_32_class_name */
extern T0* T82f885(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_feature_validity */
extern void T1055f31(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern T0* T82f1014(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_default_pointer_feature_name */
extern T0* T82f1008(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern T0* T82f1006(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_pointer_ref_feature_validity */
extern void T1055f30(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern T0* T82f884(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_feature_validity */
extern void T1055f29(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.negated_feature_name */
extern T0* T82f1002(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implication_feature_name */
extern T0* T82f1000(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_semistrict_feature_name */
extern T0* T82f998(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_exclusive_feature_name */
extern T0* T82f996(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.disjuncted_feature_name */
extern T0* T82f994(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_semistrict_feature_name */
extern T0* T82f992(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conjuncted_feature_name */
extern T0* T82f990(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_boolean_ref_feature_validity */
extern void T1055f28(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern T0* T82f883(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_feature_validity */
extern void T1055f27(GE_context* ac, T0* C, T0* a1, T8 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern T0* T82f982(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern T0* T82f980(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_character_n_ref_feature_validity */
extern void T1055f26(GE_context* ac, T0* C, T0* a1, T0* a2, T8 a3);
/* ET_BUILTIN_FEATURE_CHECKER.current_universe */
extern T0* T1055f7(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_special_feature_validity */
extern void T1055f25(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.set_count_feature_name */
extern T0* T82f976(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern T0* T82f93(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.make_empty_feature_name */
extern T0* T82f973(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.extend_feature_name */
extern T0* T82f97(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern T0* T82f969(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern T0* T82f965(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern T0* T82f963(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_type_feature_validity */
extern void T1055f24(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern T0* T82f960(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.runtime_name_feature_name */
extern T0* T82f958(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deferred_feature_name */
extern T0* T82f954(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_attached_feature_name */
extern T0* T82f952(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.has_default_feature_name */
extern T0* T82f950(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_type_feature_name */
extern T0* T82f946(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.default_feature_name */
extern T0* T82f944(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.check_builtin_any_feature_validity */
extern void T1055f23(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern T0* T82f941(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern T0* T82f938(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern T0* T82f936(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern T0* T82f934(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern T0* T82f932(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern T0* T82f930(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern T0* T82f927(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern T0* T82f925(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern T0* T82f923(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern T0* T82f921(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern T0* T82f919(GE_context* ac, T0* C);
/* ET_BUILTIN_FEATURE_CHECKER.string_ */
extern T0* T1055f6(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T409f119(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T409f129(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T80f130(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f141(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T80f154(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T80f175(GE_context* ac, T0* C, T0* a1);
extern T1 T80f175ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure */
extern void T80f174(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_set_is_ignored */
extern void T80f173(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.argument_type_set */
extern T0* T80f66(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_raise */
extern void T80f172(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_ignore */
extern void T80f171(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_catch */
extern void T80f170(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T1319f69(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T80f141p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T76f1024(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T76f1077(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T76f1110(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T76f1129(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T76f1128(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T76f1127(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].item */
extern T0* T147f15(GE_context* ac, T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T56c11(GE_context* ac, T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T76f1126(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T76f1125(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T76f1124(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T76f1123(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T76f1152(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T76f1197(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T76f1256(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1256ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T76f1255(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_basic_expanded_item_body */
extern void T76f1258(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1258ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T76f1254(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T76f1253(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T76f1252(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T76f1251(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T76f1250(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T76f1249(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T76f1248(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T76f1247(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T76f1246(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T76f1245(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T76f1244(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T76f1243(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T76f1242(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T76f1196(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_set_count_body */
extern void T76f1241(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1241ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_special_extend_body */
extern void T76f1240(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1240ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_procedure_body */
extern void T76f1195(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T76f1194(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_procedure_body */
extern void T76f1193(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_procedure_body */
extern void T76f1192(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_procedure_body */
extern void T76f1191(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_set_pre_ecma_mapping_body */
extern void T76f1239(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_exception_manager_procedure_body */
extern void T76f1190(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_procedure_body */
extern void T76f1189(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_procedure_body */
extern void T76f1188(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_procedure_body */
extern void T76f1187(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_set_is_ignored_body */
extern void T76f1238(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_raise_body */
extern void T76f1237(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_ignore_body */
extern void T76f1236(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_catch_body */
extern void T76f1235(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_procedure_body */
extern void T76f1186(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_procedure_body */
extern void T76f1185(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_procedure_body */
extern void T76f1184(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T76f1183(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T76f1151(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T76f1182(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_type_body */
extern void T76f1234(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T76f1200(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T76f1199(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T76f1181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T76f1233(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T76f1233ac1(GE_context* ac, T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
extern T1 T76f1233ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T76f1232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_basic_expanded_item_body */
extern void T76f1257(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1257ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T76f1231(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T76f1230(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T76f1229(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T76f1228(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T76f1227(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T76f1226(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T76f1225(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1225ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T76f1224(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T76f1223(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T76f1222(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T76f1221(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T76f1220(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T76f1219(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T76f1218(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T76f1180(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T76f1217(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1217ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_external_builtin_real_n_ref_function_body */
extern void T76f1179(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_real_n_function_body */
extern void T76f1178(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_real_n_out_body */
extern void T76f1216(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_ref_function_body */
extern void T76f1177(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T76f1176(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T76f1215(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T76f1175(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_memory_function_body */
extern void T76f1174(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_ise_runtime_function_body */
extern void T76f1173(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_pre_ecma_mapping_status_body */
extern void T76f1214(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_ise_runtime_in_assertion_body */
extern void T76f1213(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_ref_function_body */
extern void T76f1172(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_integer_n_function_body */
extern void T76f1171(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_routines_function_body */
extern void T76f1170(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T76f1169(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_factory_function_body */
extern void T76f1168(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_factory_exception_manager_body */
extern void T76f1212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_exception_manager_function_body */
extern void T76f1167(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_type_of_code_body */
extern void T76f1211(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_last_exception_body */
extern void T76f1210(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_raisable_body */
extern void T76f1209(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignored_body */
extern void T76f1208(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_ignorable_body */
extern void T76f1207(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_is_caught_body */
extern void T76f1206(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_exception_manager_exception_from_code_body */
extern void T76f1205(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_com_failure_function_body */
extern void T76f1166(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_ref_function_body */
extern void T76f1165(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_character_n_function_body */
extern void T76f1164(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_ref_function_body */
extern void T76f1163(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T76f1162(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_32_function_body */
extern void T76f1161(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T76f1160(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T76f1204(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1204ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T76f1203(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1203ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T76f1202(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1202ot1(T0* a1, T0** a2);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T76f1201(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T76f1198(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T1319f68(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T76f1122(GE_context* ac, T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T1754f1(GE_context* ac, T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T76f467(GE_context* ac, T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T1754c2(GE_context* ac);
/* UC_UTF8_STRING.has_substring */
extern T1 T1265f64(GE_context* ac, T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f44(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T76f1121(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T76f1150(GE_context* ac, T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T338f300(GE_context* ac, T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T76f1119(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inline_routine_name */
extern void T76f1117(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T76f1117ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_feature */
extern void T1411f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_feature */
extern void T1410f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_feature */
extern void T1409f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_feature */
extern void T1408f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_feature */
extern void T1061f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1060f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_like_feature_validity */
extern void T1060f22(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2b_error */
extern void T298f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat2b */
extern T0* T1072c1030(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat2b_error */
extern void T34f478(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1060f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1060f24(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.index */
extern T6 T1330f30(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1059f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1054f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1053f17(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1052f23(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1051f15(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1051f22(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force_relation */
extern void T1511f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put_indexed_relation */
extern void T1511f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].force */
extern void T1511f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].put */
extern void T1511f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].put_new */
extern void T1734f36(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_put */
extern void T1734f51(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_put */
extern void T1734f50(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_put */
extern void T1734f45(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_put */
extern void T1734f46(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_item */
extern T6 T1734f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].hash_position */
extern T6 T1734f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T1330f74(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_item */
extern T6 T1734f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].resize */
extern void T1734f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].clashes_resize */
extern void T1734f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].special_integer_ */
extern T0* T1734f23(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_resize */
extern void T1734f48(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1736f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LIKE_FEATURE].aliased_resized_area */
extern T0* T1735f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_resize */
extern void T1734f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].key_storage_item */
extern T0* T1734f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].slots_resize */
extern void T1734f44(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_LIKE_FEATURE].resize */
extern void T1512f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].capacity */
extern T6 T1511f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].count */
extern T6 T1511f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_LIKE_FEATURE].index_of */
extern T6 T1511f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found_item */
extern T6 T1734f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].item_storage_item */
extern T6 T1734f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].found */
extern T1 T1734f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search */
extern void T1734f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_LIKE_FEATURE].search_position */
extern void T1734f59(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_feature */
extern void T1050f10(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1049f14(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1049f21(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T298f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T1072c1032(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T298f156(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T34f480(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat1_error */
extern T1 T34f155(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T298f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T1072c1031(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T34f479(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1049f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1049f23(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T1330f84(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T1330f83(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1038f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1037f16(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T414f28(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T414f35(GE_context* ac, T0* C, T0* a1);
extern T1 T414f35ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_braced_type */
extern void T1411f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_qualified_like_identifier_validity */
extern void T1411f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_braced_type */
extern void T1410f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_qualified_like_identifier_validity */
extern void T1410f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.set_fatal_error */
extern void T1410f17(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_flattening_error */
extern T1 T496f35(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.features_flattened */
extern T1 T496f34(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_braced_type */
extern void T1409f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_qualified_like_identifier_validity */
extern void T1409f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_braced_type */
extern void T1408f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_qualified_like_identifier_validity */
extern void T1408f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_braced_type */
extern void T1061f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_qualified_like_identifier */
extern void T1061f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1060f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T1060f23(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1c_error */
extern void T298f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1c */
extern T0* T1072c1033(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1c_error */
extern void T34f481(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.resolve_identifier_type */
extern void T1332f78(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolve_identifier_type */
extern void T1331f82(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.seed */
extern T6 T1332f34(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.seed */
extern T6 T1331f33(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.process_qualified_like_braced_type */
extern void T1059f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_braced_type */
extern void T1054f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_braced_type */
extern void T1053f18(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_braced_type */
extern void T1052f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_tuple_actual_parameters_unfolded */
extern void T1052f31(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_qualified_like_identifier_vtct_validity */
extern void T1052f30(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T1051f16(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_qualified_like_identifier_to_sorter */
extern void T1051f23(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_braced_type */
extern void T1050f11(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_qualified_like_identifier */
extern void T1050f18(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_braced_type */
extern void T1049f15(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_qualified_like_identifier */
extern void T1049f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_braced_type */
extern void T1038f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_braced_type */
extern void T1037f17(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_braced_type */
extern void T414f29(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_qualified_like_identifier_validity */
extern void T414f36(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.report_qualified_anchored_type_supplier */
extern void T414f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.report_qualified_anchored_type_supplier */
extern void T1067f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_qualified_like_type */
extern void T1411f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_qualified_like_type */
extern void T1410f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_qualified_like_type */
extern void T1409f8(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_qualified_like_type */
extern void T1408f9(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_qualified_like_type */
extern void T1061f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1060f17(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_qualified_like_type */
extern void T1059f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_qualified_like_type */
extern void T1054f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_qualified_like_type */
extern void T1053f19(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_qualified_like_type */
extern void T1052f25(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_qualified_like_type */
extern void T1051f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_qualified_like_type */
extern void T1050f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_qualified_like_type */
extern void T1049f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_qualified_like_type */
extern void T1038f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_qualified_like_type */
extern void T1037f18(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_qualified_like_type */
extern void T414f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1056f63(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1056f97(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T298f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T1072c1079(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.tokens */
extern T0* T1072f767(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T298f114(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T34f534(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T34f113(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T298f533(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T1072c1078(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T1341f8(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T34f533(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T1344f30(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T1341f17(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T716f22(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T298f532(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T1072c1077(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T34f532(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T298f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T1072c1076(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T298f177(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T34f531(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T34f176(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1056f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1056f101(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.current_universe */
extern T0* T1056f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T199f104(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_precursor_expression */
extern void T428f26(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_precursor_expression */
extern void T424f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T409f162(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T409f215(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f215ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_query_expression_validity */
extern void T409f269(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].force_last */
extern void T1066f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_put */
extern void T1066f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_put */
extern void T1066f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_item */
extern T6 T1066f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].hash_position */
extern T6 T1066f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].resize */
extern void T1066f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].clashes_resize */
extern void T1066f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].special_integer_ */
extern T0* T1066f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_resize */
extern void T1066f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_resize */
extern void T1066f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_storage_item */
extern T0* T1066f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].slots_resize */
extern void T1066f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].new_capacity */
extern T6 T1066f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].item_storage_put */
extern void T1066f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].search_position */
extern void T1066f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_QUERY].key_equality_tester */
extern T0* T1066f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T409f325(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vucr0h_error */
extern void T298f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0h */
extern T0* T1072c970(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0h_error */
extern void T34f418(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_precursor_parenthesis_call_validity */
extern void T409f268(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T409f268ot1(T0* a1, T0** a2);
extern T1 T409f268ot2(T0* a1, T0** a2);
/* ET_PRECURSOR_INSTRUCTION.set_parenthesis_call */
extern void T1341f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.set_parenthesis_call */
extern void T1344f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.ancestor */
extern T0* T83f197(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T438f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_generic */
extern T1 T81f15(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T298f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T1072c932(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T34f380(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T298f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T1072c931(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T34f379(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T298f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T1072c930(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T298f113(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T34f378(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T34f112(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T80f296(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T80f382(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_query_expression_validity */
extern void T80f350(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T80f417(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T343f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T263f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T344f9(GE_context* ac, T0* C, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].force */
extern void T1764f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].fill_with */
extern void T1763f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].extend */
extern void T1763f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern T0* T344f4(GE_context* ac, T0* C);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1764c3(GE_context* ac);
/* ET_DYNAMIC_PRECURSOR_LIST.resize */
extern void T344f10(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1764f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].aliased_resized_area */
extern T0* T1763f4(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.new_capacity */
extern T6 T344f6(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T344f5(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T344f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T344c7(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_DYNAMIC_PRECURSOR].make */
extern T0* T1764f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_DYNAMIC_PRECURSOR].make_empty */
extern T0* T1763c5(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T343c33(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T343f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T343f42ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T343f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T343f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_parenthesis_call_validity */
extern void T80f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T80f241ot1(T0* a1, T0** a2);
extern T1 T80f241ot2(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T76f1025(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T76f1078(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1056f85(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_feature_address */
extern void T428f49(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_feature_address */
extern void T424f54(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T409f185(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T409f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T298f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T1072c951(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T298f124(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T34f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T34f123(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T409f299(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T409f298(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0e_error */
extern void T298f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0e */
extern T0* T1072c950(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0e_error */
extern void T34f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T409f297(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T409f271(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T409f270(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T80f319(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T80f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T80f463(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_address */
extern void T343f43(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_address */
extern void T263f41(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T80f462(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T80f461(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T80f437(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T80f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T76f1026(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T76f1079(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1079ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T342f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1056f64(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_current_address */
extern void T428f27(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_current_address */
extern void T424f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T409f163(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T409f216(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0g_error */
extern void T298f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0g */
extern T0* T1072c933(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0g_error */
extern void T34f381(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T80f297(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T80f383(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T76f1027(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T76f1080(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1080ot1(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1056f65(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_result_address */
extern void T428f28(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_result_address */
extern void T424f33(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T409f164(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T409f217(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T80f298(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T80f384(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T76f1028(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T76f1081(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1056f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_expression_address */
extern void T428f29(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_expression_address */
extern void T424f34(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T409f165(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T409f218(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T80f299(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T80f385(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T76f1029(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T76f1082(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1056f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_expression */
extern void T428f30(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_expression */
extern void T424f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T409f166(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T409f219(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f219ot1(T0* a1, T0** a2);
extern T1 T409f219ot2(T0* a1, T0** a2);
extern T1 T409f219ot3(T0* a1, T0** a2);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1775c17(GE_context* ac, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T421f40(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_context_with_type_marks */
extern T1 T421f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ATTACHMENT_SCOPE.is_subset */
extern T1 T427f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].go_after */
extern void T177f79(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] INTEGER_32].cursor_go_after */
extern void T177f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T1349f29(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_left */
extern void T1349f28(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_boolean_operator */
extern void T1349f27(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T80f300(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T80f386(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f386ot1(T0* a1, T0** a2);
extern T1 T80f386ot2(T0* a1, T0** a2);
extern T1 T80f386ot3(T0* a1, T0** a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T76f1030(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T76f1083(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1056f70(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_manifest_type */
extern void T428f33(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_manifest_type */
extern void T424f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T409f169(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T409f222(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T409f276(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T80f303(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T80f389(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T80f440(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T76f1031(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T76f1084(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1056f71(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_prefix_expression */
extern void T428f34(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_prefix_expression */
extern void T424f39(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T409f170(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T409f223(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T80f304(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T80f390(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T76f1032(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T76f1085(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1056f72(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_expression */
extern void T428f35(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_expression */
extern void T424f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T409f171(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T409f224(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T298f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T1072c940(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T298f119(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T34f388(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T34f118(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T80f305(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T80f391(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T76f1033(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T76f1086(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_object_test */
extern void T1056f86(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_old_object_test */
extern void T428f50(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_old_object_test */
extern void T424f55(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_object_test */
extern void T409f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_object_test */
extern void T80f320(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_old_object_test */
extern void T76f1034(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1056f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_manifest_string */
extern void T428f52(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_manifest_string */
extern void T424f57(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T409f188(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T409f240(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T80f322(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T80f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T76f1035(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T76f1087(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].force_last */
extern void T332f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_put */
extern void T332f66(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].force */
extern void T1111f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].fill_with */
extern void T1109f9(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].extend */
extern void T1109f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_put */
extern void T332f65(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_put */
extern void T332f64(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_item */
extern T6 T332f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].hash_position */
extern T6 T332f33(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T1356f20(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].resize */
extern void T332f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].clashes_resize */
extern void T332f70(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].special_integer_ */
extern T0* T332f37(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].key_storage_resize */
extern void T332f69(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1111f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INLINE_CONSTANT].aliased_resized_area */
extern T0* T1109f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_resize */
extern void T332f68(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].slots_resize */
extern void T332f67(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].new_capacity */
extern T6 T332f32(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].item_storage_put */
extern void T332f62(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] ET_DYNAMIC_TYPE, [attached] ET_INLINE_CONSTANT].search_position */
extern void T332f61(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1056f78(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f78ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T428f42(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_function_inline_agent */
extern void T424f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T409f178(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T409f231(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T409f291(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T409f341(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].last */
extern T0* T416f7(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_INLINE_AGENT].is_empty */
extern T1 T416f6(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vevi0d_error */
extern void T298f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vevi0d */
extern T0* T1072c945(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vevi0d_error */
extern void T34f393(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T409f290(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T409f338(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1067f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T409f337(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1h_error */
extern void T298f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1h */
extern T0* T1072c990(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T298f134(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1h_error */
extern void T34f438(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T34f133(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1f_error */
extern void T298f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1f */
extern T0* T1072c989(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1f_error */
extern void T34f437(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T298f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T1072c988(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T34f436(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T298f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T1072c987(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T34f435(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T298f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T1072c986(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T298f136(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T34f434(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T34f135(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T298f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T1072c985(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T298f135(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T34f433(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T34f134(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T298f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T1072c984(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T34f432(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.check_inline_agent_across_components_validity */
extern void T409f289(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_inline_agent_object_tests_validity */
extern void T409f288(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuot3b_error */
extern void T298f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuot3b */
extern T0* T1072c983(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuot3b_error */
extern void T34f431(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T409f287(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1067f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T409f286(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T409f285(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T409f336(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1067f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T409f335(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1g_error */
extern void T298f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1g */
extern T0* T1072c982(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1g_error */
extern void T34f430(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1e_error */
extern void T298f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1e */
extern T0* T1072c981(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1e_error */
extern void T34f429(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T298f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T1072c980(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T34f428(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T298f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T1072c979(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T34f427(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T298f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T1072c978(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T34f426(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T298f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T1072c977(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T34f425(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vucr0i_error */
extern void T298f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vucr0i */
extern T0* T1072c944(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vucr0i_error */
extern void T34f392(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_CURSOR_SCOPE.hide_across_components */
extern void T426f8(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_CURSOR_SCOPE.count */
extern T6 T426f4(GE_context* ac, T0* C);
/* ET_OBJECT_TEST_SCOPE.hide_object_tests */
extern void T423f9(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T80f312(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T80f398(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T80f455(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T80f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T80f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
extern T1 T80f502ot1(T0* a1, T0** a2);
extern T1 T80f502ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T80f507(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T80f454(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T80f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T80f489(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_across_components_validity */
extern void T80f453(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_object_tests_validity */
extern void T80f452(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T80f451(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T80f450(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T80f449(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T80f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T80f487(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T76f1036(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T76f1089(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T76f1088(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T76f1113(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T76f1130(GE_context* ac, T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1056f79(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f79ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T428f43(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_function_inline_agent */
extern void T424f48(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T409f179(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T409f232(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3a_error */
extern void T298f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3a */
extern T0* T1072c946(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T298f122(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir3a_error */
extern void T34f394(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vpir3_error */
extern T1 T34f121(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_indexing */
extern T0* T1358f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T80f313(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T80f399(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T76f1037(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T76f1091(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_object */
extern T1 T1358f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.standard_once_keys */
extern T0* T1358f34(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T76f1090(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1056f80(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f80ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T428f44(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_function_inline_agent */
extern void T424f49(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T409f180(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T409f233(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpir3b_error */
extern void T298f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpir3b */
extern T0* T1072c947(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpir3b_error */
extern void T34f395(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T80f314(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T80f400(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T76f1038(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T76f1093(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T76f1092(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1056f81(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f81ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T428f45(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_do_procedure_inline_agent */
extern void T424f50(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T409f181(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T409f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T409f292(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T409f342(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T80f315(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T80f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T80f456(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T80f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T76f1039(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T76f1095(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T76f1094(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1056f82(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f82ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T428f46(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_once_procedure_inline_agent */
extern void T424f51(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T409f182(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T409f235(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_indexing */
extern T0* T1361f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T80f316(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T80f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T76f1040(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T76f1097(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_object */
extern T1 T1361f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.standard_once_keys */
extern T0* T1361f33(GE_context* ac, T0* C);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T76f1096(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1056f83(GE_context* ac, T0* C, T0* a1);
extern T1 T1056f83ot1(T0* a1, T0** a2);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T428f47(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_external_procedure_inline_agent */
extern void T424f52(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T409f183(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T409f236(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T80f317(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T80f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T76f1041(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T76f1099(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T76f1098(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_like_n */
extern void T1411f16(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_like_n */
extern void T1410f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_like_n */
extern void T1409f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_like_n */
extern void T1408f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_like_n */
extern void T1061f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1060f18(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_n */
extern void T1059f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_n */
extern void T1054f22(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_n */
extern void T1053f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_n */
extern void T1052f26(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_n */
extern void T1051f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_like_n */
extern void T1050f13(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_n */
extern void T1049f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_n */
extern void T1038f26(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_n */
extern void T1037f19(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_n */
extern void T414f31(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter_type */
extern void T1411f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter_type */
extern void T1410f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter_type */
extern void T1409f14(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter_type */
extern void T1408f10(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter_type */
extern void T1061f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1060f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1059f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1054f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1053f21(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1052f27(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1051f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter_type */
extern void T1050f14(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1049f18(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1038f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1038f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T298f527(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T1072c1069(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T34f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T298f526(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3f */
extern T0* T1072c1072(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T34f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T298f525(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T34f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T298f524(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T1072c1071(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T34f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].force_relation */
extern void T1477f15(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1477f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].force */
extern void T1477f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].put */
extern void T1477f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].put_new */
extern void T1699f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_put */
extern void T1699f57(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_put */
extern void T1699f56(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_put */
extern void T1699f51(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_put */
extern void T1699f52(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_item */
extern T6 T1699f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].hash_position */
extern T6 T1699f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T1303f75(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T912f74(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1699f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].resize */
extern void T1699f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].clashes_resize */
extern void T1699f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1699f26(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1699f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1699f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1699f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].slots_resize */
extern void T1699f50(GE_context* ac, T0* C, T6 a1);
/* detachable DS_ARRAYED_LIST [[attached] ET_FORMAL_PARAMETER].resize */
extern void T1478f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].capacity */
extern T6 T1477f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TOPOLOGICAL_SORTER [[attached] ET_FORMAL_PARAMETER].index_of */
extern T6 T1477f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].found_item */
extern T6 T1699f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1699f30(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].found */
extern T1 T1699f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].search */
extern void T1699f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_FORMAL_PARAMETER].search_position */
extern void T1699f59(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T298f523(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T1072c1070(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T34f522(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1037f20(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T414f32(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_class_type */
extern void T1411f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_class_type_validity */
extern void T1411f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.set_fatal_error */
extern void T1411f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_class_type */
extern void T1410f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_actual_parameters_validity */
extern void T1410f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_class_type */
extern void T1409f10(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_class_type_validity */
extern void T1409f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.set_fatal_error */
extern void T1409f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.has_ancestors_error */
extern T1 T496f40(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.ancestors_built */
extern T1 T496f39(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_class_type */
extern void T1408f4(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_class_type_validity */
extern void T1408f12(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_syntax_error */
extern T1 T496f47(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_parsed */
extern T1 T496f46(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.set_fatal_error */
extern void T1408f15(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.is_preparsed */
extern T1 T496f38(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_class_type */
extern void T1061f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_class_type */
extern void T1061f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_2 */
extern void T81f115(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.make */
extern T0* T1757c19(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.make */
extern T0* T1756c22(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* ET_CLASS_TYPE.resolve_unfolded_tuple_actual_parameters_1 */
extern void T81f114(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.position */
extern T0* T1756f10(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_position */
extern T0* T82f812(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.tokens */
extern T0* T1756f20(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.current_universe */
extern T0* T1061f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1060f13(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.check_actual_parameters_validity */
extern void T1060f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1059f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1059f11(GE_context* ac, T0* C, T0* a1);
extern T1 T1059f11ot1(T0* a1, T0** a2);
extern T1 T1059f11ot2(T0* a1, T0** a2);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].force_last */
extern void T1058f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].resize */
extern void T1058f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].clashes_resize */
extern void T1058f55(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].special_integer_ */
extern T0* T1058f31(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].key_storage_resize */
extern void T1058f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].item_storage_resize */
extern void T1058f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].slots_resize */
extern void T1058f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_CLASS].new_capacity */
extern T6 T1058f30(GE_context* ac, T0* C, T6 a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1059f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1059f12(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1054f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1054f13(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T298f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T1072c1029(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T298f155(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T34f477(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T34f154(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1054f7(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_2 */
extern void T83f296(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1054f14(GE_context* ac, T0* C);
/* ET_CLASS.resolve_unfolded_tuple_actual_parameters_1 */
extern void T83f295(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.current_universe */
extern T0* T1054f6(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1053f11(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1053f12(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1053f8(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1053f7(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1053f13(GE_context* ac, T0* C);
/* ET_PARENT_CHECKER2.current_universe */
extern T0* T1053f6(GE_context* ac, T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1052f20(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_tuple_actual_parameters_unfolded */
extern void T1052f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1052f21(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1051f13(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1051f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_class_type */
extern void T1050f15(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_class_type */
extern void T1050f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.current_universe */
extern T0* T1050f5(GE_context* ac, T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1049f11(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1049f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.reset_fatal_error */
extern void T1049f13(GE_context* ac, T0* C, T1 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1038f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1038f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T298f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T1072c1028(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T298f154(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T34f476(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T34f153(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T1303f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T439f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T912f10(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T298f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T1072c1027(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T34f475(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T1303f11(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T439f15(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T912f9(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T298f474(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T1072c1026(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T298f153(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T34f474(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T34f152(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T298f473(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T1072c1025(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T298f152(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T34f473(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T34f151(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1037f10(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1037f11(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.current_universe */
extern T0* T1037f7(GE_context* ac, T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T414f24(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T414f25(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.reset_fatal_error */
extern void T414f26(GE_context* ac, T0* C, T1 a1);
/* ET_TYPE_CHECKER.current_universe */
extern T0* T414f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1056f13(GE_context* ac, T0* C, T0* a1);
/* ET_BUILTIN_FEATURE_CHECKER.process_external_function */
extern void T1055f14(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T409f120(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T409f130(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T80f179(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f197(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_warning_message */
extern void T298f482(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_warning_message */
extern void T34f482(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T80f219(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.result_type_set */
extern T0* T80f67(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T80f218(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_type */
extern void T80f275(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_default */
extern void T80f274(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T80f273(GE_context* ac, T0* C, T0* a1);
extern T1 T80f273ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T80f272(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_type_conforms_to */
extern void T80f271(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.set_ise_runtime_type_conforms_to_feature */
extern void T72f101(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_storable_version_of_type */
extern void T80f270(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at_offset */
extern void T80f269(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field_at */
extern void T80f268(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_reference_field */
extern void T80f267(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_type_instance_of */
extern void T80f266(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_tuple_instance_of */
extern void T80f265(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_special_of_reference_instance_of */
extern void T80f264(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_ise_runtime_new_instance_of */
extern void T80f263(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_object_id */
extern void T80f262(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_routines_eif_id_object */
extern void T80f261(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T80f260(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_factory_exception_manager */
extern void T80f259(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_type_of_code */
extern void T80f258(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_last_exception */
extern void T80f257(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_raisable */
extern void T80f256(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignored */
extern void T80f255(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_ignorable */
extern void T80f254(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_is_caught */
extern void T80f253(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_exception_manager_exception_from_code */
extern void T80f252(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function */
extern void T80f251(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T80f250(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T275f84(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T80f197p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T76f1259(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T76f1279(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_tuple_type */
extern void T1411f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_tuple_type_validity */
extern void T1411f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_tuple_type */
extern void T1410f19(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_tuple_type */
extern void T1409f15(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_tuple_type_validity */
extern void T1409f18(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_tuple_type */
extern void T1408f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_tuple_type_validity */
extern void T1408f14(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_tuple_type */
extern void T1061f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.resolve_tuple_type */
extern void T1061f20(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1060f20(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1059f13(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1054f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1054f24(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1053f14(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1053f23(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1052f28(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_tuple_actual_parameters_unfolded */
extern void T1052f33(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1052f32(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1051f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_tuple_type */
extern void T1050f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.resolve_tuple_type */
extern void T1050f20(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1049f19(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1038f25(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1038f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1037f13(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1037f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T298f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T1072c1067(GE_context* ac, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T298f172(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T34f520(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T34f171(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T414f33(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T414f37(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_qualified_call_instruction */
extern void T1056f36(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_qualified_call_instruction */
extern void T409f122(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_qualified_call_instruction */
extern void T80f181(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_qualified_call_instruction */
extern void T76f1260(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1056f26(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T409f354(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T409f373(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T298f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T1072c1034(GE_context* ac, T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T750f9(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T298f157(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T34f483(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T34f156(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T80f182(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T80f203(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T76f1261(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T76f1280(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_across_instruction */
extern void T1056f40(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_across_instruction */
extern void T409f355(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_across_instruction_validity */
extern void T409f374(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_component_no_from_validity */
extern void T409f391(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_across_instruction */
extern void T80f183(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_across_instruction_validity */
extern void T80f204(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_component_no_from_validity */
extern void T80f229(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_across_instruction */
extern void T76f1262(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_across_instruction */
extern void T76f1281(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1056f39(GE_context* ac, T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T801f8(GE_context* ac, T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T801f9(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T409f356(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T409f375(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.set_code_unreachable */
extern void T427f17(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T80f184(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f205(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T80f205p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T76f1263(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T76f1282(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1056f35(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T409f357(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T409f376(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T80f185(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f206(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T80f206p1(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T76f1264(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T76f1283(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_formal_parameter */
extern void T1411f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_formal_parameter */
extern void T1410f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_formal_parameter */
extern void T1409f16(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_formal_parameter */
extern void T1408f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_formal_parameter */
extern void T1061f17(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1060f21(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1059f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1054f15(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1053f22(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1052f29(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1051f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_formal_parameter */
extern void T1050f17(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1049f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1038f19(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1037f21(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T414f39(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1056f33(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1056f95(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T871f6(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1056f111(GE_context* ac, T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T874f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T409f358(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T409f377(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T80f186(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T80f207(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T76f1265(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T76f1284(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1056f34(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1056f96(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1056f100(GE_context* ac, T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T1031f4(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T409f359(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T409f378(GE_context* ac, T0* C, T0* a1);
extern T1 T409f378ot1(T0* a1, T0** a2);
extern T1 T409f378ot2(T0* a1, T0** a2);
extern T1 T409f378ot3(T0* a1, T0** a2);
extern T1 T409f378ot4(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T298f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T1072c1037(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T298f159(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T34f486(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T34f158(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2b_error */
extern void T298f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vomb2b */
extern T0* T1072c1036(GE_context* ac, T0* a1, T0* a2, T0* a3);
extern T1 T1072f1036ot1(T0* a1, T0** a2);
extern T1 T1072f1036ot2(T0* a1, T0** a2);
/* ET_ERROR_HANDLER.report_vomb2b_error */
extern void T34f485(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.choice_constant */
extern T0* T409f60(GE_context* ac, T0* C, T0* a1);
extern T1 T409f60ot1(T0* a1, T0** a2);
extern T1 T409f60ot2(T0* a1, T0** a2);
extern T1 T409f60ot3(T0* a1, T0** a2);
extern T1 T409f60ot4(T0* a1, T0** a2);
extern T1 T409f60ot5(T0* a1, T0** a2);
extern T1 T409f60ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.integer_choice_constant */
extern T0* T409f64(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.character_choice_constant */
extern T0* T409f63(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T325f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments_count */
extern T6 T199f106(GE_context* ac, T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T199f110(GE_context* ac, T0* C);
/* ET_CHOICE_LIST.choice */
extern T0* T813f6(GE_context* ac, T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T813f7(GE_context* ac, T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T298f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T1072c1035(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T298f158(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T34f484(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T34f157(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T80f187(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T80f208(GE_context* ac, T0* C, T0* a1);
extern T1 T80f208ot1(T0* a1, T0** a2);
extern T1 T80f208ot2(T0* a1, T0** a2);
extern T1 T80f208ot3(T0* a1, T0** a2);
extern T1 T80f208ot4(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.choice_constant */
extern T0* T80f73(GE_context* ac, T0* C, T0* a1);
extern T1 T80f73ot1(T0* a1, T0** a2);
extern T1 T80f73ot2(T0* a1, T0** a2);
extern T1 T80f73ot3(T0* a1, T0** a2);
extern T1 T80f73ot4(T0* a1, T0** a2);
extern T1 T80f73ot5(T0* a1, T0** a2);
extern T1 T80f73ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.integer_choice_constant */
extern T0* T80f88(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.character_choice_constant */
extern T0* T80f87(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T76f1266(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T76f1285(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1285ot1(T0* a1, T0** a2);
extern T1 T76f1285ot2(T0* a1, T0** a2);
extern T1 T76f1285ot3(T0* a1, T0** a2);
extern T1 T76f1285ot4(T0* a1, T0** a2);
extern T1 T76f1285ot5(T0* a1, T0** a2);
extern T1 T76f1285ot6(T0* a1, T0** a2);
/* INTEGER_32.abs */
extern T6 T6f31(GE_context* ac, T6* C);
/* INTEGER_32.abs_ref */
extern T6 T6f32(GE_context* ac, T6* C);
/* ET_C_GENERATOR.choice_constant */
extern T0* T76f498(GE_context* ac, T0* C, T0* a1);
extern T1 T76f498ot1(T0* a1, T0** a2);
extern T1 T76f498ot2(T0* a1, T0** a2);
extern T1 T76f498ot3(T0* a1, T0** a2);
extern T1 T76f498ot4(T0* a1, T0** a2);
extern T1 T76f498ot5(T0* a1, T0** a2);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1056f90(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_c3_character_constant */
extern void T428f55(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_c3_character_constant */
extern void T424f61(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T409f360(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T409f379(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T80f324(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T80f409(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T76f1267(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1056f91(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_verbatim_string */
extern void T428f56(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_verbatim_string */
extern void T424f62(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T409f361(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T409f380(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T80f325(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T80f410(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T76f1268(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T76f1286(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1056f92(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_special_manifest_string */
extern void T428f57(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_special_manifest_string */
extern void T424f63(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T409f362(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T409f381(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T80f326(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T80f411(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T76f1269(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T76f1287(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.process_constrained_formal_parameter */
extern void T1411f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.process_constrained_formal_parameter */
extern void T1410f21(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.process_constrained_formal_parameter */
extern void T1409f17(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.process_constrained_formal_parameter */
extern void T1408f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER2.process_constrained_formal_parameter */
extern void T1061f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1060f25(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1059f22(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1054f23(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1053f24(GE_context* ac, T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1052f34(GE_context* ac, T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1051f24(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS_RESOLVER1.process_constrained_formal_parameter */
extern void T1050f21(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1049f24(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1038f27(GE_context* ac, T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1037f25(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T414f40(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1056f27(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T409f363(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T409f382(GE_context* ac, T0* C, T0* a1);
extern T1 T409f382ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T409f393(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T298f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T1072c1039(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T298f161(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T34f488(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T34f160(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T1333f19(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T298f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T1072c1038(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T298f160(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T34f487(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T34f159(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T1333f18(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T409f392(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T80f188(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T80f209(GE_context* ac, T0* C, T0* a1);
extern T1 T80f209ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T80f234(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T80f232(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T76f1270(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T76f1288(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1056f28(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T409f364(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T409f383(GE_context* ac, T0* C, T0* a1);
extern T1 T409f383ot1(T0* a1);
extern T1 T409f383ot2(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T409f395(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_name */
extern void T427f19(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_attribute */
extern void T427f25(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_formal_argument */
extern void T427f24(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_local_variable */
extern void T427f23(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE.remove_result */
extern void T427f18(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T298f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T1072c1040(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T298f162(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T34f489(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T34f161(GE_context* ac, T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T1334f8(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T409f394(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T409f394ot1(T0* a1, T0** a2);
extern T1 T409f394ot2(T0* a1, T0** a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T298f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T1072c1049(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T298f165(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T34f498(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T34f164(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T298f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T1072c1048(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T34f497(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T298f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T1072c1047(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T298f164(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T34f496(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T34f163(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T298f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T1072c1046(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T34f495(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T409f408(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vucr0c_error */
extern void T298f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vucr0c */
extern T0* T1072c1045(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vucr0c_error */
extern void T34f494(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T298f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T1072c1044(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T34f493(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T409f407(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T409f406(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T80f189(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T80f210(GE_context* ac, T0* C, T0* a1);
extern T1 T80f210ot1(T0* a1);
extern T1 T80f210ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T80f237(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T80f343(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T80f236(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f236ot1(T0* a1, T0** a2);
extern T1 T80f236ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T80f342(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T80f341(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T80f340(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T76f1271(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T76f1289(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.is_result */
extern T1 T199f93(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1056f29(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T409f365(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T409f384(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T409f396(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T298f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T1072c1041(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T298f163(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T34f490(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T34f162(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T421f48(GE_context* ac, T0* C);
/* ET_SYSTEM_PROCESSOR.newer_or_same_ise_version */
extern T1 T73f47(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern T0* T409f61(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T80f190(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T80f211(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T80f238(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T80f344(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T80f77(GE_context* ac, T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T76f1272(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T76f1290(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1056f30(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T409f366(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T409f385(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T80f191(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T80f212(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T76f1273(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T76f1291(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1056f31(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T409f367(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T409f386(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T409f397(GE_context* ac, T0* C, T0* a1);
extern T1 T409f397ot1(T0* a1, T0** a2);
extern T1 T409f397ot2(T0* a1, T0** a2);
extern T1 T409f397ot3(T0* a1, T0** a2);
extern T1 T409f397ot4(T0* a1, T0** a2);
extern T1 T409f397ot5(T0* a1);
extern T1 T409f397ot6(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T409f409(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T298f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T1072c1055(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T34f504(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T298f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T1072c1054(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T34f503(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc1b_error */
extern void T298f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc1b */
extern T0* T1072c1053(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T1339f10(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T1338f9(GE_context* ac, T0* C);
/* ET_ERROR_HANDLER.report_vgcc1b_error */
extern void T34f502(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T298f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T1072c1052(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T34f501(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.is_type_valid */
extern T1 T409f62(GE_context* ac, T0* C, T0* a1);
/* ET_TYPE_CHECKER.set_class_interface_error_only */
extern void T414f41(GE_context* ac, T0* C, T1 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T298f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T1072c1051(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T298f166(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T34f500(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T34f165(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T298f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T1072c1050(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T34f499(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.first */
extern T0* T421f49(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T1339f8(GE_context* ac, T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T1339f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T365f4(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T1787f8(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T320f12(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T1338f7(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T1338f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T80f192(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T80f213(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T80f239(GE_context* ac, T0* C, T0* a1);
extern T1 T80f239ot1(T0* a1, T0** a2);
extern T1 T80f239ot2(T0* a1, T0** a2);
extern T1 T80f239ot3(T0* a1, T0** a2);
extern T1 T80f239ot4(T0* a1, T0** a2);
extern T1 T80f239ot5(T0* a1);
extern T1 T80f239ot6(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T80f347(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T80f416(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T1339f9(GE_context* ac, T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T1338f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.is_type_valid */
extern T1 T80f83(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T76f1274(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T76f1292(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T76f1297(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1056f32(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T409f368(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T409f387(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T80f193(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T80f214(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T76f1275(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T76f1293(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1056f37(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T409f369(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T409f388(GE_context* ac, T0* C, T0* a1);
extern T1 T409f388ot1(T0* a1, T0** a2);
/* ET_FEATURE_CHECKER.check_precursor_procedure_instruction_validity */
extern void T409f398(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].force_last */
extern void T1065f54(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_put */
extern void T1065f59(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_put */
extern void T1065f58(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_item */
extern T6 T1065f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].hash_position */
extern T6 T1065f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].resize */
extern void T1065f57(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].clashes_resize */
extern void T1065f63(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].special_integer_ */
extern T0* T1065f32(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_resize */
extern void T1065f62(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_resize */
extern void T1065f61(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_storage_item */
extern T0* T1065f31(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].slots_resize */
extern void T1065f60(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].new_capacity */
extern T6 T1065f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].item_storage_put */
extern void T1065f56(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].search_position */
extern void T1065f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_PROCEDURE].key_equality_tester */
extern T0* T1065f30(GE_context* ac, T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T409f410(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T298f491(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T1072c1042(GE_context* ac, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T34f491(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T80f194(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T80f215(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_procedure_instruction_validity */
extern void T80f240(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T80f349(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T76f1276(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T76f1294(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1056f38(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T409f370(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T409f389(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_procedure_call_instruction_validity */
extern void T409f400(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T409f411(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_static_dotnet_procedure_call_instruction_validity */
extern void T409f399(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T80f195(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T80f216(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_procedure_call_instruction_validity */
extern void T80f243(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T80f354(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_dotnet_procedure_call_instruction_validity */
extern void T80f242(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T76f1277(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T76f1295(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction_static_call */
extern void T76f1298(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_unqualified_call_instruction */
extern void T1056f41(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unqualified_call_instruction */
extern void T409f371(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T409f390(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T298f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T1072c1043(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T34f492(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_instruction_validity */
extern void T409f405(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T409f412(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_object_test_local_call_instruction_validity */
extern void T409f404(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuio0c_error */
extern void T298f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0c */
extern T0* T1072c1065(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T298f170(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuio0c_error */
extern void T34f514(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuio_error */
extern T1 T34f169(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuio0a_error */
extern void T298f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0a */
extern T0* T1072c1064(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0a_error */
extern void T34f513(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuio0b_error */
extern void T298f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuio0b */
extern T0* T1072c1063(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuio0b_error */
extern void T34f512(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_across_cursor_call_instruction_validity */
extern void T409f403(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuic0c_error */
extern void T298f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0c */
extern T0* T1072c1062(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T298f169(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuic0c_error */
extern void T34f511(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuic_error */
extern T1 T34f168(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuic0a_error */
extern void T298f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0a */
extern T0* T1072c1061(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0a_error */
extern void T34f510(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuic0b_error */
extern void T298f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuic0b */
extern T0* T1072c1060(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuic0b_error */
extern void T34f509(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_local_variable_call_instruction_validity */
extern void T409f402(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T298f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T1072c1059(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T298f168(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T34f508(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T34f167(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T298f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T1072c1058(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T34f507(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_unqualified_formal_argument_call_instruction_validity */
extern void T409f401(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T298f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T1072c1057(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T298f167(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T34f506(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T34f166(GE_context* ac, T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T298f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T1072c1056(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T34f505(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unqualified_call_instruction */
extern void T80f196(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T80f217(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_instruction_validity */
extern void T80f249(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T80f361(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T80f361ot1(T0* a1, T0** a2);
extern T1 T80f361ot2(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_object_test_local_call_instruction_validity */
extern void T80f248(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_across_cursor_call_instruction_validity */
extern void T80f247(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_local_variable_call_instruction_validity */
extern void T80f246(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_formal_argument_call_instruction_validity */
extern void T80f245(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_unqualified_call_instruction */
extern void T76f1278(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T76f1296(GE_context* ac, T0* C, T0* a1);
extern T1 T76f1296ot1(T0* a1, T0** a2);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T1564f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1056f107(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_infix_cast_expression */
extern void T428f58(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_infix_cast_expression */
extern void T424f64(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T409f413(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T409f414(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T80f512(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T80f516(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T76f1299(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T76f1300(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_builtin_expression */
extern void T1056f112(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T428f59(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_builtin_expression */
extern void T424f65(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_builtin_expression */
extern void T409f415(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_builtin_expression_validity */
extern void T409f418(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_builtin_expression */
extern void T80f518(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_builtin_expression_validity */
extern void T80f521(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_builtin_expression */
extern void T76f1301(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_builtin_expression */
extern void T76f1304(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_from_expression */
extern void T1056f113(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_from_expression */
extern void T428f60(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_from_expression */
extern void T424f66(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_from_expression */
extern void T409f416(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_from_expression_validity */
extern void T409f419(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_from_expression */
extern void T80f519(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_from_expression_validity */
extern void T80f522(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_from_expression */
extern void T76f1302(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_from_expression */
extern void T76f1305(GE_context* ac, T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1056f114(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SCOPE_BUILDER.process_convert_to_expression */
extern void T428f61(GE_context* ac, T0* C, T0* a1);
/* ET_OBJECT_TEST_SCOPE_BUILDER.process_convert_to_expression */
extern void T424f67(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T409f417(GE_context* ac, T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T409f420(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T80f520(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T80f523(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T76f1303(GE_context* ac, T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T76f1306(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T1316f82(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T1315f85(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T1314f83(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T404f79(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T402f83(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T400f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_frozen_keyword */
extern void T371f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T275f91(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_object_tests */
extern void T1316f80(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_object_tests */
extern void T1315f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_object_tests */
extern void T1314f81(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_object_tests */
extern void T404f77(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_object_tests */
extern void T402f81(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_object_tests */
extern void T400f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_object_tests */
extern void T371f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_object_tests */
extern void T275f89(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_across_components */
extern void T1316f81(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_across_components */
extern void T1315f84(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_across_components */
extern void T1314f82(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_across_components */
extern void T404f78(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_across_components */
extern void T402f82(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_across_components */
extern void T400f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_across_components */
extern void T371f81(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_across_components */
extern void T275f90(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset_validity_checked */
extern void T1316f87(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_validity_checked */
extern void T1315f90(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_validity_checked */
extern void T1314f88(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_validity_checked */
extern void T404f84(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_validity_checked */
extern void T402f88(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_validity_checked */
extern void T400f87(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_validity_checked */
extern void T371f87(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_validity_checked */
extern void T275f96(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1316f102(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T1316f102p1(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1315f108(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T1315f108p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1314f105(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset */
extern void T1314f105p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T404f93(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset */
extern void T404f93p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T402f100(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T402f100p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T400f97(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T400f97p1(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T371f103(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset */
extern void T371f103p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T275f112(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T275f112p1(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T1316f103(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1316f112(GE_context* ac, T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset_qualified_anchored_types */
extern void T277f15(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T1315f109(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1315f118(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T1314f106(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_signature_qualified_anchored_types */
extern void T1314f115(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T404f94(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T404f96(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T402f101(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T402f103(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T400f98(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T400f100(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_features_flattened */
extern void T371f104(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_signature_qualified_anchored_types */
extern void T371f106(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T275f113(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_signature_qualified_anchored_types */
extern void T275f122(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_interface_checked */
extern void T1316f104(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1315f110(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.reset_after_interface_checked */
extern void T1315f110p1(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1314f107(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.reset_after_interface_checked */
extern void T1314f107p1(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.reset_after_interface_checked */
extern void T404f95(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_interface_checked */
extern void T402f102(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_interface_checked */
extern void T400f99(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T371f105(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.reset_after_interface_checked */
extern void T371f105p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_interface_checked */
extern void T275f114(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T1319f89(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T1318f84(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T564f83(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T557f84(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_object_tests */
extern void T1319f87(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_object_tests */
extern void T1318f82(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_object_tests */
extern void T564f81(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_object_tests */
extern void T557f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_across_components */
extern void T1319f88(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_across_components */
extern void T1318f83(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_across_components */
extern void T564f82(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_across_components */
extern void T557f83(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_validity_checked */
extern void T1319f94(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_validity_checked */
extern void T1318f89(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_validity_checked */
extern void T564f85(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_validity_checked */
extern void T557f86(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T1319f109(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T1318f106(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T564f99(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T557f102(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T1319f110(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1319f119(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T1318f107(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T1318f116(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T564f100(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T564f102(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T557f103(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_signature_qualified_anchored_types */
extern void T557f105(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_interface_checked */
extern void T1319f111(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1318f108(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.reset_after_interface_checked */
extern void T1318f108p1(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_interface_checked */
extern void T564f101(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T557f104(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.reset_after_interface_checked */
extern void T557f104p1(GE_context* ac, T0* C);
/* ET_INFIX_NAME.set_seed */
extern void T1322f102(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T1321f72(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T1320f88(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T1251f72(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T199f113(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_NAME.reset */
extern void T1322f105(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T1321f73(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.reset */
extern void T1320f91(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T1251f73(GE_context* ac, T0* C);
/* ET_IDENTIFIER.reset */
extern void T199f127(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T556f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T555f64(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T356f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T340f62(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T256f60(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_hash_code */
extern void T556f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_hash_code */
extern void T555f55(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_hash_code */
extern void T356f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_hash_code */
extern void T340f53(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_hash_code */
extern void T256f52(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T556f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T555f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T356f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T340f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T256f53(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_attribute_position */
extern void T556f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T342f14(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FEATURE_LIST.index_of */
extern T6 T342f8(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_attribute_position */
extern void T555f65(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_SPECIAL_TYPE.set_attribute_position */
extern void T356f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TUPLE_TYPE.set_attribute_position */
extern void T340f63(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE.set_attribute_position */
extern void T256f61(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T556f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T555f53(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T356f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T340f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T256f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T556f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T555f54(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T356f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T340f52(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T256f51(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.use_all_attributes */
extern void T556f67(GE_context* ac, T0* C, T0* a1);
extern T1 T556f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.use_all_attributes */
extern void T555f67(GE_context* ac, T0* C, T0* a1);
extern T1 T555f67ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_SPECIAL_TYPE.use_all_attributes */
extern void T356f64(GE_context* ac, T0* C, T0* a1);
extern T1 T356f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TUPLE_TYPE.use_all_attributes */
extern void T340f64(GE_context* ac, T0* C, T0* a1);
extern T1 T340f64ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_TYPE.use_all_attributes */
extern void T256f62(GE_context* ac, T0* C, T0* a1);
extern T1 T256f62ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T556f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T555f68(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T356f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T340f65(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T256f63(GE_context* ac, T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_equality_expression */
extern void T556f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_EQUALITY_EXPRESSION.set_next */
extern void T1906f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_equality_expression */
extern void T555f70(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_equality_expression */
extern void T356f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_equality_expression */
extern void T340f67(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_equality_expression */
extern void T256f65(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_object_equality_expression */
extern void T556f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_OBJECT_EQUALITY_EXPRESSION.set_next */
extern void T1907f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_object_equality_expression */
extern void T555f71(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_object_equality_expression */
extern void T356f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_object_equality_expression */
extern void T340f68(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_object_equality_expression */
extern void T256f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T556f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T555f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T356f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T340f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T256f58(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T556f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T555f69(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T356f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T340f66(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T256f64(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T556f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T555f58(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T356f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T340f56(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T256f56(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.export_classes */
extern void T247f195(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].key */
extern T0* T677f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] ET_MASTER_CLASS, [attached] ET_CLASS_NAME].cursor_key */
extern T0* T250f35(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.actual_intrinsic_class */
extern T0* T496f42(GE_context* ac, T0* C);
/* ET_CLASS.actual_intrinsic_class */
extern T0* T83f207(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.export_classes */
extern void T234f181(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.export_classes */
extern void T217f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_namespace */
extern void T200f13(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_namespace */
extern void T191f122(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_namespace */
extern void T65f160(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_ecf_version */
extern void T200f14(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_ecf_version */
extern void T191f123(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_ecf_version */
extern void T65f161(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_description */
extern void T200f15(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_description */
extern void T191f124(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_description */
extern void T65f162(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_notes */
extern void T200f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_notes */
extern void T191f125(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_notes */
extern void T65f163(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_targets */
extern void T200f17(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_targets */
extern void T191f126(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_targets */
extern void T65f164(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_read_only */
extern void T200f18(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_LIBRARY.set_read_only */
extern void T191f127(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM.set_read_only */
extern void T65f165(GE_context* ac, T0* C, T1 a1);
/* ET_ECF_SYSTEM_CONFIG.set_uuid */
extern void T200f19(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_uuid */
extern void T191f128(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_uuid */
extern void T65f166(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM_CONFIG.set_library_target */
extern void T200f20(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.set_library_target */
extern void T191f129(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.set_library_target */
extern void T65f167(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T589f2(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T586f27(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T162f14(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T161f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T161f9p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T589f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T586f29(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T162f16(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T162f24(GE_context* ac, T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T158f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_last */
extern void T1262f9(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].put_right */
extern void T1816f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE]].make */
extern T0* T1816c3(GE_context* ac, T0* a1);
/* [attached] DS_PAIR [[attached] XM_POSITION, [attached] XM_NODE].make */
extern T0* T1263c3(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last_in_document */
extern T0* T1550c4(GE_context* ac, T0* a1, T0* a2);
/* XM_COMMENT.make_last */
extern T0* T1550c3(GE_context* ac, T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T157f27(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T1257f13(GE_context* ac, T0* C, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].force_last */
extern void T1257f13p1(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] XM_ELEMENT_NODE].make */
extern T0* T1795c3(GE_context* ac, T0* a1);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].before_addition */
extern void T1257f18(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T157f29(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T157f19(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].last */
extern T0* T1257f8(GE_context* ac, T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T157f18(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_ELEMENT_NODE].is_empty */
extern T1 T1257f7(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T161f11(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T161f11p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T589f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T586f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T162f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1551c5(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1551c4(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T161f12(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T161f12p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T589f6(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T586f31(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T162f18(GE_context* ac, T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1552c3(GE_context* ac, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T161f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T161f13p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T589f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T586f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1423f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].force_last */
extern void T1691f10(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].put_right */
extern void T1885f5(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].attach_left */
extern void T1885f6(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].make */
extern T0* T1885c4(GE_context* ac, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1423f8(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].set_equality_tester */
extern void T55f105(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1423f9(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T162f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T157c26(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T156f15(GE_context* ac, T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T156f16(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] XM_DOCUMENT_NODE].go_after */
extern void T1549f14(GE_context* ac, T0* C);
/* [attached] XM_LINKED_LIST [[attached] XM_DOCUMENT_NODE].cursor_go_after */
extern void T1255f28(GE_context* ac, T0* C, T0* a1);
/* XM_ELEMENT.make_last */
extern T0* T157c25(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T162f8(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].force_last */
extern void T590f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_put */
extern void T590f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_put */
extern void T590f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_item */
extern T6 T590f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].hash_position */
extern T6 T590f20(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T553f6(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].resize */
extern void T590f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_resize */
extern void T590f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].special_integer_ */
extern T0* T590f29(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_resize */
extern void T590f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_resize */
extern void T590f46(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1428f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].aliased_resized_area */
extern T0* T1429f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_storage_item */
extern T0* T590f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_item */
extern T0* T590f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].clashes_item */
extern T6 T590f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].slots_resize */
extern void T590f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].new_capacity */
extern T6 T590f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item_storage_put */
extern void T590f41(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] XM_NAMESPACE].force */
extern void T1428f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].fill_with */
extern void T1429f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] XM_NAMESPACE].extend */
extern void T1429f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].search_position */
extern void T590f40(GE_context* ac, T0* C, T0* a1);
/* detachable KL_EQUALITY_TESTER [[attached] XM_NAMESPACE].test */
extern T1 T1426f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].key_equality_tester */
extern T0* T590f25(GE_context* ac, T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T553f5(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].item */
extern T0* T590f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] XM_NAMESPACE].has */
extern T1 T590f30(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T161f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T161f14p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T589f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T586f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1423f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_last */
extern void T1691f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_last_cell */
extern void T1691f14(GE_context* ac, T0* C, T0* a1);
/* detachable DS_BILINKABLE [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].forget_right */
extern void T1885f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_last_cursors_after */
extern void T1691f13(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_next_cursor */
extern void T1692f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_after */
extern void T1692f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].wipe_out */
extern void T1691f12(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].move_all_cursors_after */
extern void T1691f15(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1423f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern T0* T1423f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T586f33p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1423f2(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].back */
extern void T1692f11(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_back */
extern void T1691f18(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].add_traversing_cursor */
extern void T1691f19(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].remove_traversing_cursor */
extern void T1691f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set */
extern void T1692f14(GE_context* ac, T0* C, T0* a1, T1 a2, T1 a3);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].go_before */
extern void T1692f10(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_go_before */
extern void T1691f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].set_before */
extern void T1692f15(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_off */
extern T1 T1691f7(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].off */
extern T1 T1692f7(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].item */
extern T0* T1692f6(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST_CURSOR [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].finish */
extern void T1692f9(GE_context* ac, T0* C);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].cursor_finish */
extern void T1691f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern T0* T1423f6(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T586f10(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T162f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T157f16(GE_context* ac, T0* C);
extern T1 T157f16ot1(T0* a1, T0** a2);
/* XM_ELEMENT.is_root_node */
extern T1 T157f17(GE_context* ac, T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T156f8(GE_context* ac, T0* C);
/* XM_DOCUMENT.parent */
extern T0* T156f9(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T161f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T161f16p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T589f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T586f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1423f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8].force_new */
extern void T55f106(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_BILINKED_LIST [[attached] DS_HASH_TABLE [[attached] STRING_8, [attached] STRING_8]].last */
extern T0* T1691f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1423f4(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T586f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].force */
extern void T1425f7(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1423f13(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T586f9(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T586f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T586f25(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern T0* T586f21(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T162f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T198c5(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T161f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T161f18p1(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T589f3(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T586f28(GE_context* ac, T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T162f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T161f10(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T161f10p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T589f7(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T586f32(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T586f32p1(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T586f14(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T586f39(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T586f43(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].remove */
extern void T1425f8(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].wipe_out */
extern void T1425f9(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T586f19(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern T0* T586f24(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern T0* T586f18(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern T0* T586f17(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T586f16(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern T0* T586f23(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].item */
extern T0* T1425f5(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T586f12(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] STRING_8].is_empty */
extern T1 T1425f4(GE_context* ac, T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1423f5(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T162f20(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T161f15(GE_context* ac, T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T161f15p1(GE_context* ac, T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T589f11(GE_context* ac, T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T586f36(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T162f22(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T161f17(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T161f17p1(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T589f12(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T586f44(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T162f25(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T161f19(GE_context* ac, T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T586f41(GE_context* ac, T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T162f13(GE_context* ac, T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T161f8(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T339f32(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T304f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T302f5(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T339f37(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T339f37p1(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T304f10(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T304f10p1(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T302f6(GE_context* ac, T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T302f6p1(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T339f30(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T339f42(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T339f49(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T304f8(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T304f3(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T302f9(GE_context* ac, T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T339f33(GE_context* ac, T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T304f5(GE_context* ac, T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T302f4(GE_context* ac, T0* C);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T339f31(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T339f43(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T339f50(GE_context* ac, T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T304f7(GE_context* ac, T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T302f7(GE_context* ac, T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T339f36(GE_context* ac, T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_integer_64 */
extern void T339f45(GE_context* ac, T0* C, T7 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T304f9(GE_context* ac, T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer_64 */
extern void T304f11(GE_context* ac, T0* C, T7 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T302f8(GE_context* ac, T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer_64 */
extern void T302f10(GE_context* ac, T0* C, T7 a1);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T51f25(GE_context* ac, T0* C);
/* AP_STRING_OPTION.reset */
extern void T47f28(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T46f28(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].make */
extern T0* T154c8(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].set_internal_cursor */
extern void T154f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].new_cursor */
extern T0* T154f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] INTEGER_32].make */
extern T0* T585c3(GE_context* ac, T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T45f31(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].make */
extern T0* T151c8(GE_context* ac);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].set_internal_cursor */
extern void T151f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].new_cursor */
extern T0* T151f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST_CURSOR [[attached] BOOLEAN].make */
extern T0* T583c3(GE_context* ac, T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T44f31(GE_context* ac, T0* C);
/* AP_FLAG.reset */
extern void T42f22(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T51f26(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T51f27(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T51f18(GE_context* ac, T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T143f11(GE_context* ac, T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T51f17(GE_context* ac, T0* C, T0* a1);
/* AP_PARSER.full_help_text */
extern T0* T39f35(GE_context* ac, T0* C);
/* AP_PARSER.option_help_text */
extern T0* T39f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].sort */
extern void T1899f3(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].sort_with_comparator */
extern void T1899f4(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].subsort_with_comparator */
extern void T1899f5(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].swap */
extern void T140f28(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].replace */
extern void T140f27(GE_context* ac, T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1898f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T36f18(GE_context* ac, T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1898f2(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] AP_OPTION].item */
extern T0* T140f16(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_QUICK_SORTER [[attached] AP_OPTION].make */
extern T0* T1899c2(GE_context* ac, T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1898c3(GE_context* ac);
/* AP_STRING_OPTION.record_occurrence */
extern void T47f29(GE_context* ac, T0* C, T0* a1);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T46f29(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] INTEGER_32].force_last */
extern void T154f10(GE_context* ac, T0* C, T6 a1);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T45f32(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern T0* T45f22(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].set_equality_tester */
extern void T142f41(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern T0* T45f23(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] STRING_8].has */
extern T1 T142f19(GE_context* ac, T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.true_strings */
extern T0* T45f21(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] BOOLEAN].force_last */
extern void T151f10(GE_context* ac, T0* C, T1 a1);
/* detachable DS_LINKABLE [[attached] BOOLEAN].put_right */
extern void T582f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] BOOLEAN].make */
extern T0* T582c3(GE_context* ac, T1 a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T44f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].has */
extern T1 T147f14(GE_context* ac, T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T42f24(GE_context* ac, T0* C, T0* a1);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1279f10(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T1266f32(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].remove */
extern void T1653f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].wipe_out */
extern void T1653f8(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T1266f35(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T1266f37(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T1266f38(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].force */
extern void T1653f7(GE_context* ac, T0* C, T2 a1);
/* detachable DS_LINKABLE [[attached] CHARACTER_8].put_right */
extern void T1876f4(GE_context* ac, T0* C, T0* a1);
/* detachable DS_LINKABLE [[attached] CHARACTER_8].make */
extern T0* T1876c3(GE_context* ac, T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T1266f24(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern T0* T1266f27(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1654f7(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1654f6(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1654f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1654f4(GE_context* ac, T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1654f3(GE_context* ac, T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern T0* T1266f22(GE_context* ac, T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1654c16(GE_context* ac);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T1266f26(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T1266f25(GE_context* ac, T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T1266f36(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T1266f34(GE_context* ac, T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T1264f31(GE_context* ac, T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T1264f30(GE_context* ac, T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1654f2(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1654f1(GE_context* ac, T0* C, T6 a1, T6 a2);
/* KL_STDIN_FILE.read_character */
extern void T696f13(GE_context* ac, T0* C);
/* CONSOLE.read_character */
extern void T1379f30(GE_context* ac, T0* C);
/* CONSOLE.console_readchar */
extern T2 T1379f14(GE_context* ac, T0* C, T14 a1);
/* CONSOLE.end_of_file */
extern T1 T1379f11(GE_context* ac, T0* C);
/* CONSOLE.console_eof */
extern T1 T1379f13(GE_context* ac, T0* C, T14 a1);
/* KL_STDIN_FILE.console */
extern T0* T696f7(GE_context* ac, T0* C);
/* STD_FILES.input */
extern T0* T394f5(GE_context* ac, T0* C);
/* CONSOLE.make_open_stdin */
extern T0* T1379c29(GE_context* ac, T0* a1);
/* CONSOLE.set_read_mode */
extern void T1379f32(GE_context* ac, T0* C);
/* KL_STDIN_FILE.io */
extern T0* T696f9(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T31f67(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T31f71(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T31f26(GE_context* ac, T0* C, T14 a1);
/* KL_STRING_INPUT_STREAM.close */
extern void T1279f11(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T1266f33(GE_context* ac, T0* C);
/* KL_STDIN_FILE.close */
extern void T696f14(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T31f62(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_recursive_until */
extern void T71f161(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f161ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_do_recursive_until */
extern T0* T71f161ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.universes_do_recursive_until */
extern void T71f176(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].forth */
extern void T497f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_forth */
extern void T497f51(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].add_traversing_cursor */
extern void T497f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_next_cursor */
extern void T1400f10(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_position */
extern void T1400f11(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T497f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].set_after */
extern void T1400f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].item_for_iteration */
extern T0* T497f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_item */
extern T0* T497f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].go_after */
extern void T497f39(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_go_after */
extern void T497f50(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_off */
extern T1 T497f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].off */
extern T1 T1400f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].after */
extern T1 T497f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_after */
extern T1 T497f28(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].after */
extern T1 T1400f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].start */
extern void T497f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].cursor_start */
extern void T497f49(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].is_empty */
extern T1 T497f31(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.add_universe_recursive */
extern void T71f231(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f231ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.add_universe_recursive */
extern T0* T71f231ac2(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_LIBRARY]].set_rout_disp_final */
extern void T488f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_LIBRARY.add_universe_recursive */
extern void T191f197(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T191f197ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.add_universe_recursive */
extern T0* T191f197ac2(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_universe_recursive */
extern void T486f171(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T486f171ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.add_universe_recursive */
extern T0* T486f171ac2(GE_context* ac, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_all */
extern void T214f9(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T192f9(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make */
extern T0* T497c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].set_internal_cursor */
extern void T497f48(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].new_cursor */
extern T0* T497f35(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_UNIVERSE].make */
extern T0* T1400c8(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_slots */
extern void T497f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_clashes */
extern void T497f45(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_key_storage */
extern void T497f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].make_item_storage */
extern void T497f43(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].make */
extern T0* T1403f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_UNIVERSE].make_empty */
extern T0* T1401c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1403c3(GE_context* ac);
/* ET_LACE_SYSTEM.initial_universes_capacity */
extern T6 T71f137(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.universes_do_recursive */
extern void T71f168(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_UNIVERSE].do_all */
extern void T497f37(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive_until */
extern void T65f170(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f170ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_do_recursive_until */
extern T0* T65f170ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.universes_do_recursive_until */
extern void T65f180(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.add_universe_recursive */
extern void T65f187(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f187ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.add_universe_recursive */
extern T0* T65f187ac2(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.initial_universes_capacity */
extern T6 T65f136(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.universes_do_recursive */
extern void T65f172(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive_until */
extern void T62f159(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f159ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_do_recursive_until */
extern T0* T62f159ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.universes_do_recursive_until */
extern void T62f178(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.add_universe_recursive */
extern void T62f186(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f186ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.add_universe_recursive */
extern T0* T62f186ac2(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.initial_universes_capacity */
extern T6 T62f132(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.universes_do_recursive */
extern void T62f171(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T71f159(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T71f159ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_do_recursive */
extern void T65f168(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_recursive */
extern T0* T65f168ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T62f157(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T62f157ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f160(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.build_scm_write_mappings */
extern void T71f171(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_write_mappings */
extern T0* T71f171ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_CLUSTER]].set_rout_disp_final */
extern void T499f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.build_scm_write_mapping */
extern void T71f234(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern void T71f233(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T71f233ac1(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_INTERNAL_UNIVERSE]].set_rout_disp_final */
extern void T482f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.internal_universes_do_recursive */
extern void T71f172(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].do_all */
extern void T501f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_item */
extern T0* T501f24(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_item */
extern T6 T501f22(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.add_internal_universe_recursive */
extern void T71f235(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.add_internal_universe_recursive */
extern T0* T71f235ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_internal_universe_recursive */
extern void T191f198(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_internal_universe_recursive */
extern T0* T191f198ac1(GE_context* ac, T0* a1);
/* ET_LIBRARY.add_internal_universe_recursive */
extern void T486f172(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_internal_universe_recursive */
extern T0* T486f172ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].force_last */
extern void T501f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_put */
extern void T501f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_put */
extern void T501f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_item */
extern T6 T501f29(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].hash_position */
extern T6 T501f26(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].resize */
extern void T501f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].clashes_resize */
extern void T501f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].special_integer_ */
extern T0* T501f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_resize */
extern void T501f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_resize */
extern void T501f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1406f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].aliased_resized_area */
extern T0* T1407f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_storage_item */
extern T0* T501f20(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].slots_resize */
extern void T501f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_modulus */
extern T6 T501f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_capacity */
extern T6 T501f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].item_storage_put */
extern void T501f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].force */
extern void T1406f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].fill_with */
extern void T1407f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].extend */
extern void T1407f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].search_position */
extern void T501f33(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].key_equality_tester */
extern T0* T501f19(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].unset_found_item */
extern void T501f38(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].has */
extern T1 T501f17(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T501c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].set_internal_cursor */
extern void T501f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].new_cursor */
extern T0* T501f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1404c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_slots */
extern void T501f37(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_clashes */
extern void T501f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_key_storage */
extern void T501f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_INTERNAL_UNIVERSE].make_item_storage */
extern void T501f34(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].make */
extern T0* T1406f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_INTERNAL_UNIVERSE].make_empty */
extern T0* T1407c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_INTERNAL_UNIVERSE].default_create */
extern T0* T1406c3(GE_context* ac);
/* ET_LACE_SYSTEM.build_scm_read_mappings */
extern void T71f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.build_scm_read_mappings */
extern T0* T71f170ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.build_scm_read_mapping */
extern void T71f232(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern void T73f99(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM_PROCESSOR.check_master_class_validity */
extern T0* T73f99ac1(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.process */
extern void T496f69(GE_context* ac, T0* C, T0* a1);
/* ET_AST_NULL_PROCESSOR.process_master_class */
extern void T295f4(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.process_master_class */
extern void T286f8(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_master_class_validity */
extern void T286f9(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.check_overriding_classes_validity */
extern void T286f12(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0d_error */
extern void T298f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_universe_error */
extern void T298f519(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.make_vscn0d */
extern T0* T1909c21(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS.upper_name */
extern T0* T496f49(GE_context* ac, T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T298f171(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0d_error */
extern void T34f516(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_universe_error */
extern void T34f530(GE_context* ac, T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T34f170(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS_CHECKER.current_universe */
extern T0* T286f6(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.error_handler */
extern T0* T286f5(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.set_fatal_error */
extern void T286f13(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_intrinsic_classes_validity */
extern void T286f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS_CHECKER.check_overridden_class_validity */
extern void T286f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T298f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0c */
extern T0* T1909c23(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T34f518(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T298f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNIVERSE_ERROR.make_vscn0b */
extern T0* T1909c22(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T34f517(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T298f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNIVERSE_ERROR.make_vscn0a */
extern T0* T1909c20(GE_context* ac, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T34f515(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_MASTER_CLASS_CHECKER.reset_fatal_error */
extern void T286f10(GE_context* ac, T0* C, T1 a1);
/* ET_LACE_SYSTEM.preparse_recursive */
extern void T71f160p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.preparse_recursive */
extern T0* T71f160p1ac8(GE_context* ac);
/* ET_ECF_LIBRARY.import_classes */
extern void T191f196(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f196ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f196ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.import_classes */
extern T0* T191f196ac3(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] ET_ADAPTED_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T506f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_ECF_ADAPTED_LIBRARY.export_classes */
extern void T211f36(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_imported_classes */
extern void T496f66(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_imported_class */
extern void T496f79(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_adapted */
extern void T214f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_DOTNET_ASSEMBLY].do_all */
extern void T668f11(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.import_classes */
extern void T486f170(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LIBRARY.import_classes */
extern T0* T486f170ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LIBRARY.import_classes */
extern T0* T486f170ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.import_classes */
extern T0* T486f170ac3(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T191f195(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.preparse */
extern void T191f195p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f195p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f195p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f195p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_LIBRARY.preparse */
extern T0* T191f195p1ac4(GE_context* ac, T0* a1);
/* ET_MASTER_CLASS.remove_unknown_local_classes */
extern void T496f65(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.remove_local_ignored_class */
extern void T496f78(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_first */
extern void T293f32(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].delete */
extern void T293f31(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_non_override_class */
extern void T496f77(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.remove_local_override_class */
extern void T496f76(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove */
extern void T293f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_left */
extern void T293f35(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_cursors_left */
extern void T293f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].remove_last */
extern void T293f33(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].move_last_cursors_after */
extern void T293f36(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.reset_local_modified_classes */
extern void T496f64(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T496f64ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T496f64ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T496f64ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T496f64ac4(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #5 in feature ET_MASTER_CLASS.reset_local_modified_classes */
extern T0* T496f64ac5(GE_context* ac);
/* ET_MASTER_CLASS.reset_local_modified_class */
extern void T496f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T122f29(GE_context* ac, T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T121f32(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.file_system */
extern T0* T496f32(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.unix_file_system */
extern T0* T496f45(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.windows_file_system */
extern T0* T496f44(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.operating_system */
extern T0* T496f43(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed_and_errors */
extern void T83f297(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T83f298(GE_context* ac, T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T848f10(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T1312f10(GE_context* ac, T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1414f12(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T1311f9(GE_context* ac, T0* C);
/* ET_CREATOR_LIST.reset */
extern void T859f11(GE_context* ac, T0* C);
/* ET_CREATOR.reset */
extern void T856f19(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T950f34(GE_context* ac, T0* C);
/* ET_INVARIANTS.reset */
extern void T950f34p1(GE_context* ac, T0* C);
/* ET_PARENT_CLAUSE_LIST.reset */
extern void T988f8(GE_context* ac, T0* C);
/* ET_PARENT_LIST.reset */
extern void T521f14(GE_context* ac, T0* C);
/* ET_PARENT.reset */
extern void T520f12(GE_context* ac, T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T538f10(GE_context* ac, T0* C);
/* ET_EXPORT_LIST.reset */
extern void T537f9(GE_context* ac, T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T897f13(GE_context* ac, T0* C);
/* ET_ALL_EXPORT.reset */
extern void T1309f8(GE_context* ac, T0* C);
/* ET_RENAME_LIST.reset */
extern void T536f10(GE_context* ac, T0* C);
/* ET_RENAME.reset */
extern void T1308f7(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T282f11(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset */
extern void T281f11(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_ignored_classes_do_all */
extern void T496f74(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_CLASS].do_all */
extern void T293f29(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_all */
extern void T496f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_all */
extern void T496f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTERS.do_all */
extern void T652f4(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T486f169(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.preparse */
extern void T486f169p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.preparse */
extern T0* T486f169p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LIBRARY.preparse */
extern T0* T486f169p1ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.preparse */
extern T0* T486f169p1ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LIBRARY.preparse */
extern T0* T486f169p1ac4(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLIES.put_last */
extern void T475f6(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].force_last */
extern void T1395f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].resize */
extern void T1395f15(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].new_capacity */
extern T6 T1395f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].extendible */
extern T1 T1395f7(GE_context* ac, T0* C, T6 a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_DOTNET_ASSEMBLY]].set_rout_disp_final */
extern void T478f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern void T71f175(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_LACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T71f175ac31(GE_context* ac, T1 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T510f6(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T510f8(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T510f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_NAMED_CLASS].go_after */
extern void T1412f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_NAMED_CLASS].cursor_go_after */
extern void T709f73(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.has_interface_error */
extern T1 T496f37(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.interface_checked */
extern T1 T496f36(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T510f9(GE_context* ac, T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T510f7(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T510f4(GE_context* ac, T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T83f305(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T509f8(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T509f10(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T509f13(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER3.check_type_validity */
extern void T1411f3(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T509f12(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.check_qualified_anchored_signatures_validity */
extern void T509f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_signatures_validity */
extern void T1410f6(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.check_feature_signatures_validity */
extern void T1410f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T509f9(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T509f6(GE_context* ac, T0* C);
/* ET_CLASS.unset_interface_error */
extern void T83f304(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T508f7(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T508f9(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T508f12(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_feature_signatures_validity */
extern void T508f13(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.check_type_validity */
extern void T1409f3(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T508f11(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T508f10(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T508f8(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T508f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T83f303(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T507f7(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T507f9(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T507f11(GE_context* ac, T0* C);
/* ET_CLASS_TYPE_STATUS_CHECKER1.check_type_validity */
extern void T1408f3(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T507f10(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T507f8(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T507f5(GE_context* ac, T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T83f302(GE_context* ac, T0* C);
/* ET_CLASS.not_implementation_checked */
extern T1 T83f179(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T83f301(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_interface_checked */
extern void T282f13(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_interface_checked */
extern void T281f13(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T83f300(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset_constraint_creation_procedures */
extern void T687f33(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.reset_constraint_creation_procedures */
extern void T912f79(GE_context* ac, T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T282f12(GE_context* ac, T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T281f12(GE_context* ac, T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T83f299(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_system_processor */
extern T0* T82f91(GE_context* ac, T0* C);
/* ET_MASTER_CLASS.local_classes_do_unless_actual */
extern void T496f67(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_non_override_classes_do_unless_actual */
extern void T496f81(GE_context* ac, T0* C, T0* a1);
/* ET_MASTER_CLASS.local_override_classes_do_unless_actual */
extern void T496f80(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T510c5(GE_context* ac, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T510f3(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T509c7(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER3.make */
extern T0* T1411c2(GE_context* ac);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.make */
extern T0* T1410c5(GE_context* ac, T0* a1);
/* ET_QUALIFIED_ANCHORED_TYPE_STATUS_CHECKER.tokens */
extern T0* T1410f4(GE_context* ac, T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T509f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T509f5(GE_context* ac, T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T508c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER2.make */
extern T0* T1409c2(GE_context* ac);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T508f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T508f4(GE_context* ac, T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T507c6(GE_context* ac, T0* a1);
/* ET_CLASS_TYPE_STATUS_CHECKER1.make */
extern T0* T1408c2(GE_context* ac);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T507f6p1(GE_context* ac, T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T507f4(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_do_if_recursive */
extern void T71f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_if_recursive */
extern T0* T71f238ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.master_classes_do_recursive */
extern void T71f237(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive */
extern T0* T71f237ac1(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.classes_modified_recursive */
extern T1 T71f138(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f138ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f138ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f138ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.classes_modified_recursive */
extern T0* T71f138ac4(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE].set_rout_disp_final */
extern void T1192f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_MASTER_CLASS]].set_rout_disp_final */
extern void T1191f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] KL_AGENT_ROUTINES [[attached] ANY].call */
extern void T1188f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_TRISTATE.set_true */
extern void T1187f4(GE_context* ac, T0* C);
/* UT_TRISTATE.is_true */
extern T1 T1187f2(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T71f241(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f241ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T71f241ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_LACE_SYSTEM.any_actions */
extern T0* T71f127(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ANY].default_create */
extern T0* T1188c1(GE_context* ac);
/* UT_TRISTATE.make_false */
extern T0* T1187c3(GE_context* ac);
/* UT_TRISTATE.set_false */
extern void T1187f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.import_classes */
extern void T71f174(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f174ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f174ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T71f174ac3(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.preparse */
extern void T71f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f173ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f173ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f173ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_LACE_SYSTEM.preparse */
extern T0* T71f173ac4(GE_context* ac, T0* a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T231f8(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T192f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T192f7ac1(GE_context* ac, T0* a1);
/* ET_ECF_LIBRARY.add_library_recursive */
extern void T191f199(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.add_library_recursive */
extern T0* T191f199ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].force_last */
extern void T654f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_put */
extern void T654f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_put */
extern void T654f42(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_item */
extern T6 T654f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].hash_position */
extern T6 T654f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].resize */
extern void T654f41(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_resize */
extern void T654f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].special_integer_ */
extern T0* T654f27(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_resize */
extern void T654f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_resize */
extern void T654f45(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1452f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_LIBRARY].aliased_resized_area */
extern T0* T1453f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_storage_item */
extern T0* T654f26(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_item */
extern T0* T654f17(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].clashes_item */
extern T6 T654f28(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].slots_resize */
extern void T654f44(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_modulus */
extern T6 T654f21(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_capacity */
extern T6 T654f19(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].item_storage_put */
extern void T654f40(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].force */
extern void T1452f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIBRARY].fill_with */
extern void T1453f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_LIBRARY].extend */
extern void T1453f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].search_position */
extern void T654f39(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].key_equality_tester */
extern T0* T654f25(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].unset_found_item */
extern void T654f36(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].has */
extern T1 T654f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.add_library_recursive */
extern void T486f173(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.add_library_recursive */
extern T0* T486f173ac1(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].do_all */
extern void T654f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make */
extern T0* T654c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].set_internal_cursor */
extern void T654f37(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].new_cursor */
extern T0* T654f24(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_LIBRARY].make */
extern T0* T1451c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_slots */
extern void T654f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_clashes */
extern void T654f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_key_storage */
extern void T654f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_LIBRARY].make_item_storage */
extern void T654f32(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].make */
extern T0* T1452f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_LIBRARY].make_empty */
extern T0* T1453c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_LIBRARY].default_create */
extern T0* T1452c3(GE_context* ac);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern void T214f7(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_DOTNET_ASSEMBLIES.do_recursive */
extern T0* T214f7ac1(GE_context* ac, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T300f4(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLIES.dotnet_assembly */
extern T0* T475f2(GE_context* ac, T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLIES.count */
extern T6 T475f3(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].do_all */
extern void T474f32(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T474c30(GE_context* ac, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].set_internal_cursor */
extern void T474f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].new_cursor */
extern T0* T474f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET_CURSOR [[attached] ET_DOTNET_ASSEMBLY].make */
extern T0* T1391c4(GE_context* ac, T0* a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_slots */
extern void T474f36(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_clashes */
extern void T474f35(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_key_storage */
extern void T474f34(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_SET [[attached] ET_DOTNET_ASSEMBLY].make_item_storage */
extern void T474f33(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f169(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mappings */
extern void T65f175(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_write_mappings */
extern T0* T65f175ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_write_mapping */
extern void T65f190(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern void T65f189(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.clusters_do_explicit_recursive */
extern T0* T65f189ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.internal_universes_do_recursive */
extern void T65f176(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.add_internal_universe_recursive */
extern void T65f191(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.add_internal_universe_recursive */
extern T0* T65f191ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mappings */
extern void T65f174(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.build_scm_read_mappings */
extern T0* T65f174ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.build_scm_read_mapping */
extern void T65f188(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.preparse_recursive */
extern void T65f169p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.preparse_recursive */
extern T0* T65f169p1ac8(GE_context* ac);
/* ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern void T65f179(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_ECF_SYSTEM.reset_classes_incremental_recursive */
extern T0* T65f179ac31(GE_context* ac, T1 a1);
/* ET_ECF_SYSTEM.classes_do_if_recursive */
extern void T65f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_do_if_recursive */
extern T0* T65f194ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive */
extern void T65f193(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive */
extern T0* T65f193ac1(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.classes_modified_recursive */
extern T1 T65f147(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f147ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f147ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f147ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.classes_modified_recursive */
extern T0* T65f147ac4(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern void T65f251(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f251ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T65f251ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_ECF_SYSTEM.any_actions */
extern T0* T65f137(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.import_classes */
extern void T65f178(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f178ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f178ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.import_classes */
extern T0* T65f178ac3(GE_context* ac, T0* a1);
/* ET_ECF_SYSTEM.preparse */
extern void T65f177(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f177ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f177ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f177ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_ECF_SYSTEM.preparse */
extern T0* T65f177ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f158(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mappings */
extern void T62f173(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_write_mappings */
extern T0* T62f173ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_write_mapping */
extern void T62f189(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern void T62f188(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.clusters_do_explicit_recursive */
extern T0* T62f188ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.internal_universes_do_recursive */
extern void T62f174(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.add_internal_universe_recursive */
extern void T62f190(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.add_internal_universe_recursive */
extern T0* T62f190ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mappings */
extern void T62f172(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.build_scm_read_mappings */
extern T0* T62f172ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.build_scm_read_mapping */
extern void T62f187(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.preparse_recursive */
extern void T62f158p1(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac2(GE_context* ac);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac3(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac4(GE_context* ac, T0* a1);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac5(GE_context* ac, T0* a1);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac6(GE_context* ac, T0* a1);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.preparse_recursive */
extern T0* T62f158p1ac8(GE_context* ac);
/* ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern void T62f177(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac4(GE_context* ac);
/* Creation of agent #5 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac5(GE_context* ac);
/* Creation of agent #6 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac6(GE_context* ac);
/* Creation of agent #7 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac7(GE_context* ac);
/* Creation of agent #8 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac8(GE_context* ac);
/* Creation of agent #9 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac9(GE_context* ac);
/* Creation of agent #10 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac10(GE_context* ac);
/* Creation of agent #11 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac11(GE_context* ac);
/* Creation of agent #12 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac12(GE_context* ac);
/* Creation of agent #13 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac13(GE_context* ac);
/* Creation of agent #14 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac14(GE_context* ac);
/* Creation of agent #15 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac15(GE_context* ac);
/* Creation of agent #16 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac16(GE_context* ac);
/* Creation of agent #17 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac17(GE_context* ac);
/* Creation of agent #18 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac18(GE_context* ac);
/* Creation of agent #19 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac19(GE_context* ac);
/* Creation of agent #20 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac20(GE_context* ac);
/* Creation of agent #21 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac21(GE_context* ac);
/* Creation of agent #22 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac22(GE_context* ac);
/* Creation of agent #23 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac23(GE_context* ac, T0* a1);
/* Creation of agent #24 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac24(GE_context* ac);
/* Creation of agent #25 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac25(GE_context* ac, T0* a1);
/* Creation of agent #26 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac26(GE_context* ac);
/* Creation of agent #27 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac27(GE_context* ac, T0* a1);
/* Creation of agent #28 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac28(GE_context* ac);
/* Creation of agent #29 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac29(GE_context* ac, T0* a1);
/* Creation of agent #30 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac30(GE_context* ac);
/* Creation of agent #31 in feature ET_XACE_SYSTEM.reset_classes_incremental_recursive */
extern T0* T62f177ac31(GE_context* ac, T1 a1);
/* ET_XACE_SYSTEM.classes_do_if_recursive */
extern void T62f193(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_if_recursive */
extern T0* T62f193ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive */
extern void T62f192(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive */
extern T0* T62f192ac1(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.classes_modified_recursive */
extern T1 T62f133(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f133ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f133ac2(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f133ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.classes_modified_recursive */
extern T0* T62f133ac4(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern void T62f252(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f252ac1(GE_context* ac, T0* a1, T0* a2);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_if_recursive_until */
extern T0* T62f252ac2(GE_context* ac, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM.any_actions */
extern T0* T62f150(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.import_classes */
extern void T62f176(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f176ac1(GE_context* ac);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f176ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T62f176ac3(GE_context* ac, T0* a1);
/* ET_XACE_SYSTEM.preparse */
extern void T62f175(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f175ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f175ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f175ac3(GE_context* ac);
/* Creation of agent #4 in feature ET_XACE_SYSTEM.preparse */
extern T0* T62f175ac4(GE_context* ac, T0* a1);
/* ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern void T71f169(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f169ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T71f169ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern void T65f173(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f173ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.master_classes_do_recursive_until */
extern T0* T65f173ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern void T62f251(GE_context* ac, T0* C, T0* a1, T0* a2);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f251ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.master_classes_do_recursive_until */
extern T0* T62f251ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T71f243(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_default_create_seed */
extern void T65f253(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T62f253(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T35f199(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T71f244(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_copy_seed */
extern void T65f254(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T62f254(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T35f200(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_is_equal_seed */
extern void T71f245(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_is_equal_seed */
extern void T65f255(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_is_equal_seed */
extern void T62f255(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_is_equal_seed */
extern void T35f201(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T71f246(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_routine_call_seed */
extern void T65f256(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T62f256(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T35f202(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T71f247(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_function_item_seed */
extern void T65f257(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T62f257(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T35f203(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T71f248(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_dispose_seed */
extern void T65f258(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T62f258(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T35f204(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T71f249(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iterable_new_cursor_seed */
extern void T65f259(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iterable_new_cursor_seed */
extern void T62f259(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iterable_new_cursor_seed */
extern void T35f205(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T71f250(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_after_seed */
extern void T65f260(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_after_seed */
extern void T62f260(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_after_seed */
extern void T35f206(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T71f251(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.set_iteration_cursor_forth_seed */
extern void T65f261(GE_context* ac, T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_iteration_cursor_forth_seed */
extern void T62f261(GE_context* ac, T0* C, T6 a1);
/* ET_SYSTEM.set_iteration_cursor_forth_seed */
extern void T35f207(GE_context* ac, T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_class */
extern void T71f239(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T83f247(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_SYSTEM.register_class */
extern void T65f249(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T62f249(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.register_class */
extern void T35f196(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_throwing_exception */
extern void T120f7(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_throwing_exception */
extern void T119f7(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_throwing_exception */
extern void T118f11(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_throwing_exception */
extern void T117f7(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_throwing_exception */
extern void T116f7(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_throwing_exception */
extern void T115f7(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_throwing_exception */
extern void T114f7(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_throwing_exception */
extern void T113f7(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_throwing_exception */
extern void T112f7(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_throwing_exception */
extern void T111f7(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_throwing_exception */
extern void T110f7(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_throwing_exception */
extern void T109f7(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_throwing_exception */
extern void T108f7(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_throwing_exception */
extern void T107f7(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_throwing_exception */
extern void T106f7(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_throwing_exception */
extern void T105f7(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_throwing_exception */
extern void T104f7(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_throwing_exception */
extern void T101f10(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_throwing_exception */
extern void T100f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_throwing_exception */
extern void T99f8(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_throwing_exception */
extern void T98f10(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_throwing_exception */
extern void T97f8(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_throwing_exception */
extern void T96f8(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_throwing_exception */
extern void T95f11(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_throwing_exception */
extern void T93f7(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_throwing_exception */
extern void T91f11(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_throwing_exception */
extern void T89f7(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_exception_trace */
extern void T120f8(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_exception_trace */
extern void T119f8(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_exception_trace */
extern void T118f12(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_exception_trace */
extern void T117f8(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_exception_trace */
extern void T116f8(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_exception_trace */
extern void T115f8(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_exception_trace */
extern void T114f8(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_exception_trace */
extern void T113f8(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_exception_trace */
extern void T112f8(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_exception_trace */
extern void T111f8(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_exception_trace */
extern void T110f8(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_exception_trace */
extern void T109f8(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_exception_trace */
extern void T108f8(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_exception_trace */
extern void T107f8(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_exception_trace */
extern void T106f8(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_exception_trace */
extern void T105f8(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_exception_trace */
extern void T104f8(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_exception_trace */
extern void T101f11(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_exception_trace */
extern void T100f16(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_exception_trace */
extern void T99f10(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_exception_trace */
extern void T98f12(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_exception_trace */
extern void T97f10(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_exception_trace */
extern void T96f10(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_exception_trace */
extern void T95f9(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_exception_trace */
extern void T93f8(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_exception_trace */
extern void T91f12(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_exception_trace */
extern void T89f8(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_description */
extern void T120f9(GE_context* ac, T0* C, T0* a1);
/* C_STRING.set_count */
extern void T29f8(GE_context* ac, T0* C, T6 a1);
/* UTF_CONVERTER.utf_32_string_into_utf_8_0_pointer */
extern void T565f12(GE_context* ac, T565* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_description */
extern void T119f9(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_description */
extern void T118f13(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_description */
extern void T117f9(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_description */
extern void T116f9(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_description */
extern void T115f9(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_description */
extern void T114f9(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_description */
extern void T113f9(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_description */
extern void T112f9(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_description */
extern void T111f9(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_description */
extern void T110f9(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_description */
extern void T109f9(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_description */
extern void T108f9(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_description */
extern void T107f9(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_description */
extern void T106f9(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_description */
extern void T105f9(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_description */
extern void T104f9(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_description */
extern void T101f12(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_description */
extern void T100f17(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_description */
extern void T99f11(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_description */
extern void T98f13(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_description */
extern void T97f11(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_description */
extern void T96f11(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_description */
extern void T95f12(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_description */
extern void T93f9(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_description */
extern void T91f13(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_description */
extern void T89f9(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_recipient_name */
extern void T120f10(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_recipient_name */
extern void T119f10(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_recipient_name */
extern void T118f14(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_recipient_name */
extern void T117f10(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_recipient_name */
extern void T116f10(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_recipient_name */
extern void T115f10(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_recipient_name */
extern void T114f10(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_recipient_name */
extern void T113f10(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_recipient_name */
extern void T112f10(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_recipient_name */
extern void T111f10(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_recipient_name */
extern void T110f10(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_recipient_name */
extern void T109f10(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_recipient_name */
extern void T108f10(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_recipient_name */
extern void T107f10(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_recipient_name */
extern void T106f10(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_recipient_name */
extern void T105f10(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_recipient_name */
extern void T104f10(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_recipient_name */
extern void T101f13(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_recipient_name */
extern void T100f18(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_recipient_name */
extern void T99f12(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_recipient_name */
extern void T98f14(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_recipient_name */
extern void T97f12(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_recipient_name */
extern void T96f12(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_recipient_name */
extern void T95f13(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_recipient_name */
extern void T93f10(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_recipient_name */
extern void T91f14(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_recipient_name */
extern void T89f10(GE_context* ac, T0* C, T0* a1);
/* SERIALIZATION_FAILURE.set_type_name */
extern void T120f11(GE_context* ac, T0* C, T0* a1);
/* ADDRESS_APPLIED_TO_MELTED_FEATURE.set_type_name */
extern void T119f11(GE_context* ac, T0* C, T0* a1);
/* DEVELOPER_EXCEPTION.set_type_name */
extern void T118f15(GE_context* ac, T0* C, T0* a1);
/* MISMATCH_FAILURE.set_type_name */
extern void T117f11(GE_context* ac, T0* C, T0* a1);
/* EXCEPTION_IN_SIGNAL_HANDLER_FAILURE.set_type_name */
extern void T116f11(GE_context* ac, T0* C, T0* a1);
/* VOID_ASSIGNED_TO_EXPANDED.set_type_name */
extern void T115f11(GE_context* ac, T0* C, T0* a1);
/* EXTERNAL_FAILURE.set_type_name */
extern void T114f11(GE_context* ac, T0* C, T0* a1);
/* CREATE_ON_DEFERRED.set_type_name */
extern void T113f11(GE_context* ac, T0* C, T0* a1);
/* RESUMPTION_FAILURE.set_type_name */
extern void T112f11(GE_context* ac, T0* C, T0* a1);
/* RESCUE_FAILURE.set_type_name */
extern void T111f11(GE_context* ac, T0* C, T0* a1);
/* LOOP_INVARIANT_VIOLATION.set_type_name */
extern void T110f11(GE_context* ac, T0* C, T0* a1);
/* VARIANT_VIOLATION.set_type_name */
extern void T109f11(GE_context* ac, T0* C, T0* a1);
/* BAD_INSPECT_VALUE.set_type_name */
extern void T108f11(GE_context* ac, T0* C, T0* a1);
/* CHECK_VIOLATION.set_type_name */
extern void T107f11(GE_context* ac, T0* C, T0* a1);
/* FLOATING_POINT_FAILURE.set_type_name */
extern void T106f11(GE_context* ac, T0* C, T0* a1);
/* POSTCONDITION_VIOLATION.set_type_name */
extern void T105f11(GE_context* ac, T0* C, T0* a1);
/* PRECONDITION_VIOLATION.set_type_name */
extern void T104f11(GE_context* ac, T0* C, T0* a1);
/* EIFFEL_RUNTIME_PANIC.set_type_name */
extern void T101f14(GE_context* ac, T0* C, T0* a1);
/* COM_FAILURE.set_type_name */
extern void T100f19(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_FAILURE.set_type_name */
extern void T99f13(GE_context* ac, T0* C, T0* a1);
/* IO_FAILURE.set_type_name */
extern void T98f15(GE_context* ac, T0* C, T0* a1);
/* OPERATING_SYSTEM_SIGNAL_FAILURE.set_type_name */
extern void T97f13(GE_context* ac, T0* C, T0* a1);
/* INVARIANT_VIOLATION.set_type_name */
extern void T96f13(GE_context* ac, T0* C, T0* a1);
/* NO_MORE_MEMORY.set_type_name */
extern void T95f14(GE_context* ac, T0* C, T0* a1);
/* OLD_VIOLATION.set_type_name */
extern void T93f11(GE_context* ac, T0* C, T0* a1);
/* ROUTINE_FAILURE.set_type_name */
extern void T91f15(GE_context* ac, T0* C, T0* a1);
/* VOID_TARGET.set_type_name */
extern void T89f11(GE_context* ac, T0* C, T0* a1);
/* [attached] LX_SYMBOL_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T1995f3(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_EPSILON_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T1993f2(GE_context* ac, T0* C, T6 a1);
/* [attached] LX_SYMBOL_CLASS_TRANSITION [[attached] LX_NFA_STATE].labeled */
extern T1 T1991f3(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.name */
extern T0* T1332f40(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.name */
extern T0* T1331f39(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.name */
extern T0* T1914f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T1343f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T1012f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T365f3(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.arguments */
extern T0* T1914f15(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_INSTRUCTION.target */
extern T0* T1564f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.target */
extern T0* T325f12(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1361f25(GE_context* ac, T0* C);
/* ET_STANDARD_ONCE_KEYS.has_process_key */
extern T1 T1667f2(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_once_per_process */
extern T1 T1360f23(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1358f26(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_once_per_process */
extern T1 T1357f24(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T1333f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T1324f10(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T1321f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T734f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.operator_name */
extern T0* T1324f11(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.operator_name */
extern T0* T1321f34(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.operator_name */
extern T0* T1251f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T1324f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T787f58(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T713f9(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_name */
extern T0* T1213f40(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1213f60(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_name */
extern T0* T1213f60p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_name */
extern T0* T191f113(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.string_ */
extern T0* T191f117(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].is_empty */
extern T1 T1272f10(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_name */
extern T0* T541f16(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.relative_name */
extern T0* T541f19(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.string_ */
extern T0* T541f15(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_name */
extern T0* T458f30(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T458f47(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_name */
extern T0* T458f47p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.full_name */
extern T0* T436f17(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.relative_name */
extern T0* T436f20(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.string_ */
extern T0* T436f16(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_name */
extern T0* T232f50(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T232f52(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_name */
extern T0* T232f52p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.parent */
extern T0* T541f17(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.parent */
extern T0* T436f18(GE_context* ac, T0* C);
/* ET_NONE_GROUP.absolute_pathname */
extern T0* T541f18(GE_context* ac, T0* C);
/* ET_NONE_GROUP.file_system */
extern T0* T541f23(GE_context* ac, T0* C);
/* ET_NONE_GROUP.unix_file_system */
extern T0* T541f27(GE_context* ac, T0* C);
/* ET_NONE_GROUP.windows_file_system */
extern T0* T541f26(GE_context* ac, T0* C);
/* ET_NONE_GROUP.operating_system */
extern T0* T541f25(GE_context* ac, T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T541f22(GE_context* ac, T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T541f24(GE_context* ac, T0* C);
/* ET_NONE_GROUP.execution_environment */
extern T0* T541f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.absolute_pathname */
extern T0* T436f19(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.file_system */
extern T0* T436f24(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.unix_file_system */
extern T0* T436f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.windows_file_system */
extern T0* T436f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.operating_system */
extern T0* T436f26(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T436f23(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T436f25(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.execution_environment */
extern T0* T436f22(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.kind_lower_name */
extern T0* T1213f48(GE_context* ac, T0* C);
/* ET_LIBRARY.kind_lower_name */
extern T0* T486f99(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_lower_name */
extern T0* T458f37(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_lower_name */
extern T0* T232f49(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_lower_name */
extern T0* T191f119(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.last_position */
extern T0* T1974f4(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T1298f42(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T1297f42(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T1296f39(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T1295f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T1293f41(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T1292f41(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_position */
extern T0* T1291f63(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_position */
extern T0* T1290f63(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T1289f63(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T1288f63(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T1287f38(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T1286f42(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T1285f43(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T1250f39(GE_context* ac, T0* C);
/* ET_VOID.last_position */
extern T0* T756f29(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T716f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T692f101(GE_context* ac, T0* C);
/* ET_KEYWORD.last_position */
extern T0* T439f35(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T403f63(GE_context* ac, T0* C);
/* ET_SYMBOL.last_position */
extern T0* T385f71(GE_context* ac, T0* C);
/* ET_RESULT.last_position */
extern T0* T346f30(GE_context* ac, T0* C);
/* ET_CURRENT.last_position */
extern T0* T319f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T199f102(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1372f25(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1064f27(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1372f22(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1064f24(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1502f4(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1372f23(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1064f25(GE_context* ac, T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1502f5(GE_context* ac, T0* C);
/* [attached] DS_LINKED_LIST [[attached] ET_ADAPTED_FEATURE].first */
extern T0* T1503f8(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1372f24(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1064f26(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.overridden_type_mark */
extern T0* T1479f35(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T1303f38(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.overridden_type_mark */
extern T0* T912f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_CLUSTER].item */
extern T0* T1622f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_XACE_CLUSTER].item */
extern T0* T1389f9(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_LACE_CLUSTER].item */
extern T0* T674f9(GE_context* ac, T0* C, T6 a1);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1366f3(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1362f24(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1361f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1360f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1359f26(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1358f31(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1357f28(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T1356f13(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.assertion */
extern T0* T1355f19(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T1354f12(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T1353f17(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T1352f13(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T1349f15(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T1348f12(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T1347f12(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T1346f12(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T1345f12(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T1344f16(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.assertion */
extern T0* T1327f3(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T1298f20(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T1297f20(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T1296f21(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T1295f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T1293f23(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T1292f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.assertion */
extern T0* T1291f39(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.assertion */
extern T0* T1290f39(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T1289f39(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T1288f39(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T1287f15(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T1286f15(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T1285f13(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T1250f21(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.assertion */
extern T0* T1151f16(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T1015f17(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T1012f16(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T983f13(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T969f18(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.assertion */
extern T0* T920f18(GE_context* ac, T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T796f18(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T793f16(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.assertion */
extern T0* T767f23(GE_context* ac, T0* C);
/* ET_VOID.assertion */
extern T0* T756f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T403f43(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T364f19(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T355f12(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.assertion */
extern T0* T354f13(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.assertion */
extern T0* T353f15(GE_context* ac, T0* C);
/* ET_RESULT.assertion */
extern T0* T346f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T327f19(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T325f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.assertion */
extern T0* T324f17(GE_context* ac, T0* C);
/* ET_CURRENT.assertion */
extern T0* T319f20(GE_context* ac, T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T199f81(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1366f6(GE_context* ac, T0* C);
/* ET_CLASS_ASSERTION.position */
extern T0* T1327f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.lower_name */
extern T0* T476f97(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T247f111(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T234f104(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_DOTNET_ASSEMBLY.lower_name */
extern T0* T217f23(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.lower_name */
extern T0* T215f97(GE_context* ac, T0* C);
/* ET_ECF_ADAPTED_LIBRARY.lower_name */
extern T0* T211f21(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.parenthesis_call */
extern T0* T1915f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.parenthesis_call */
extern T0* T1353f13(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.parenthesis_call */
extern T0* T1246f7(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.parenthesis_call */
extern T0* T793f13(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1915f21(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T1353f14(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.arguments_count */
extern T6 T1246f8(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T793f14(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.arguments_count */
extern T6 T324f15(GE_context* ac, T0* C);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_aware */
extern T1 T1242f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_aware */
extern T1 T1241f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_capability_aware */
extern T1 T1239f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_aware */
extern T1 T1238f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_capability_aware */
extern T1 T1237f2(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_capability_aware */
extern T1 T1236f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_aware */
extern T1 T1235f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.string_ */
extern T0* T1235f6(GE_context* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_aware */
extern T1 T1234f3(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_capability_supported */
extern T1 T1242f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_capability_supported */
extern T1 T1241f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_PLATFORM_CONDITION.is_capability_supported */
extern T1 T1239f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_capability_supported */
extern T1 T1238f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_DOTNET_CONDITION.is_capability_supported */
extern T1 T1237f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CUSTOM_CONDITION.is_capability_supported */
extern T1 T1236f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T1 T1235f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1235f4ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_CONCURRENCY_CONDITION.is_capability_supported */
extern T0* T1235f4ac2(GE_context* ac, T0* a1);
/* [attached] PROCEDURE [[attached] TUPLE [[attached] STRING_8]].set_rout_disp_final */
extern void T2034f7(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* [attached] DS_HASH_SET [[attached] STRING_8].go_after */
extern void T78f82(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].cursor_go_after */
extern void T78f78(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].put_last */
extern void T78f81(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].compress */
extern void T78f84(GE_context* ac, T0* C);
/* [attached] DS_HASH_SET [[attached] STRING_8].move_all_cursors */
extern void T78f85(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].do_all */
extern void T147f27(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].append_last */
extern void T78f80(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].extend_last */
extern void T78f83(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].extendible */
extern T1 T78f38(GE_context* ac, T0* C, T6 a1);
/* ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1235f8(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.supported_concurrency_capability_values */
extern T0* T1235f8ac1(GE_context* ac, T0* a1);
/* UC_UTF8_STRING.has */
extern T1 T1265f66(GE_context* ac, T0* C, T2 a1);
/* [attached] DS_HASH_SET [[attached] STRING_8].set_hash_function */
extern void T78f79(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CONCURRENCY_CONDITION.case_insensitive_string_equality_tester */
extern T0* T1235f7(GE_context* ac, T0* C);
/* ET_ECF_BUILD_CONDITION.is_capability_supported */
extern T1 T1234f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_enabled */
extern T1 T1242f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_MSIL_CLR_VERSION_CONDITION.is_included */
extern T1 T1242f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_enabled */
extern T1 T1241f5(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_COMPILER_VERSION_CONDITION.is_included */
extern T1 T1241f6(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T1 T1239f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_PLATFORM_CONDITION.is_enabled */
extern T0* T1239f5ac1(GE_context* ac, T0* a1, T0* a2);
/* [attached] DS_LINKED_LIST [[attached] STRING_8].there_exists */
extern T1 T147f16(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_PLATFORM_CONDITION.string_ */
extern T0* T1239f7(GE_context* ac, T0* C);
/* ET_ECF_PLATFORM_CONDITION.operating_system */
extern T0* T1239f6(GE_context* ac, T0* C);
/* ET_ECF_DYNAMIC_RUNTIME_CONDITION.is_enabled */
extern T1 T1238f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_DOTNET_CONDITION.is_enabled */
extern T1 T1237f4(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.is_enabled */
extern T1 T1236f7(GE_context* ac, T0* C, T0* a1);
/* LX_DFA_WILDCARD.compile_case_sensitive */
extern T0* T1664c18(GE_context* ac, T0* a1);
/* ET_ECF_CUSTOM_CONDITION.string_ */
extern T0* T1236f8(GE_context* ac, T0* C);
/* ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T1 T1235f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_CONCURRENCY_CONDITION.is_enabled */
extern T0* T1235f5ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.is_enabled */
extern T1 T1234f5(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_BUILD_CONDITION.is_enabled */
extern T0* T1234f5ac1(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_BUILD_CONDITION.string_ */
extern T0* T1234f6(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1372f10(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_immediate_feature */
extern T0* T1319f58(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_immediate_feature */
extern T0* T1318f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_immediate_feature */
extern T0* T1316f55(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_immediate_feature */
extern T0* T1315f59(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_immediate_feature */
extern T0* T1314f57(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1064f11(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_immediate_feature */
extern T0* T564f49(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_immediate_feature */
extern T0* T557f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_immediate_feature */
extern T0* T404f51(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_immediate_feature */
extern T0* T402f57(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_immediate_feature */
extern T0* T400f56(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_immediate_feature */
extern T0* T371f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_immediate_feature */
extern T0* T275f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T1319f56(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T1318f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T1316f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T1315f57(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T1314f55(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T564f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T557f49(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T404f49(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T402f55(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T400f54(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_feature */
extern T0* T371f54(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T275f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_redeclared */
extern T1 T1319f60(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_redeclared */
extern T1 T1318f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_redeclared */
extern T1 T1316f57(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_redeclared */
extern T1 T1315f61(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_redeclared */
extern T1 T1314f59(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1064f13(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_redeclared */
extern T1 T564f51(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_redeclared */
extern T1 T557f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_redeclared */
extern T1 T404f53(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_redeclared */
extern T1 T402f59(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_redeclared */
extern T1 T400f58(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_redeclared */
extern T1 T371f58(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_redeclared */
extern T1 T275f38(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1372f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_redeclared_feature */
extern T0* T1319f61(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_redeclared_feature */
extern T0* T1318f56(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_redeclared_feature */
extern T0* T1316f58(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_redeclared_feature */
extern T0* T1315f62(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_redeclared_feature */
extern T0* T1314f60(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1064f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_redeclared_feature */
extern T0* T564f52(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_redeclared_feature */
extern T0* T557f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T404f54(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T402f60(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T400f59(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_redeclared_feature */
extern T0* T371f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_redeclared_feature */
extern T0* T275f39(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1372f14(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_inherited */
extern T1 T1319f62(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_inherited */
extern T1 T1318f57(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_inherited */
extern T1 T1316f59(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_inherited */
extern T1 T1315f63(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_inherited */
extern T1 T1314f61(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_inherited */
extern T1 T564f53(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_inherited */
extern T1 T557f55(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_inherited */
extern T1 T404f55(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_inherited */
extern T1 T402f61(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_inherited */
extern T1 T400f60(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_inherited */
extern T1 T371f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_inherited */
extern T1 T275f40(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1372f15(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_inherited_feature */
extern T0* T1319f63(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_inherited_feature */
extern T0* T1318f58(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_inherited_feature */
extern T0* T1316f60(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_inherited_feature */
extern T0* T1315f64(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_inherited_feature */
extern T0* T1314f62(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1064f16(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_inherited_feature */
extern T0* T564f54(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_inherited_feature */
extern T0* T557f56(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_inherited_feature */
extern T0* T404f56(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_inherited_feature */
extern T0* T402f62(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_inherited_feature */
extern T0* T400f61(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_inherited_feature */
extern T0* T371f61(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_inherited_feature */
extern T0* T275f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_flattened_adapted */
extern T1 T1319f64(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_flattened_adapted */
extern T1 T1318f59(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_flattened_adapted */
extern T1 T1316f61(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_flattened_adapted */
extern T1 T1315f65(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_flattened_adapted */
extern T1 T1314f63(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_flattened_adapted */
extern T1 T564f55(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_flattened_adapted */
extern T1 T557f57(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_flattened_adapted */
extern T1 T404f57(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_flattened_adapted */
extern T1 T402f63(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_flattened_adapted */
extern T1 T400f62(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_flattened_adapted */
extern T1 T371f62(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_flattened_adapted */
extern T1 T275f42(GE_context* ac, T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1372f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_adapted_feature */
extern T0* T1319f59(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.flattened_adapted_feature */
extern T0* T1318f54(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.flattened_adapted_feature */
extern T0* T1316f56(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.flattened_adapted_feature */
extern T0* T1315f60(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.flattened_adapted_feature */
extern T0* T1314f58(GE_context* ac, T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1064f12(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_adapted_feature */
extern T0* T564f50(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.flattened_adapted_feature */
extern T0* T557f52(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.flattened_adapted_feature */
extern T0* T404f52(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_adapted_feature */
extern T0* T402f58(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_adapted_feature */
extern T0* T400f57(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.flattened_adapted_feature */
extern T0* T371f57(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_adapted_feature */
extern T0* T275f37(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.like_keyword */
extern T0* T1332f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1362f22(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1361f27(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1360f25(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1359f24(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T1358f28(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T1357f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1362f21(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1359f23(GE_context* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.indexing_term */
extern T0* T1302f8(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term */
extern T0* T1298f34(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term */
extern T0* T1297f34(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term */
extern T0* T1296f35(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term */
extern T0* T1295f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term */
extern T0* T1293f37(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term */
extern T0* T1292f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term */
extern T0* T1291f54(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1290f54(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term */
extern T0* T1289f54(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term */
extern T0* T1288f54(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term */
extern T0* T1287f37(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term */
extern T0* T1286f41(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term */
extern T0* T1285f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term */
extern T0* T1250f36(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term */
extern T0* T403f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term */
extern T0* T199f103(GE_context* ac, T0* C);
/* ET_CUSTOM_ATTRIBUTE.has_indexing_term_value */
extern T1 T1302f5(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1298f19(GE_context* ac, T0* C, T0* a1);
/* CHARACTER_32.as_lower */
extern T3 T3f5(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.to_lower */
extern T3 T1895f1(GE_context* ac, T0* C, T3 a1);
/* CHARACTER_PROPERTY.to_lower_table_15 */
extern T0* T1895f17(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_14 */
extern T0* T1895f16(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_13 */
extern T0* T1895f15(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_12 */
extern T0* T1895f14(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_11 */
extern T0* T1895f13(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_10 */
extern T0* T1895f12(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_9 */
extern T0* T1895f11(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_8 */
extern T0* T1895f10(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_7 */
extern T0* T1895f9(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_6 */
extern T0* T1895f8(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_5 */
extern T0* T1895f7(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_4 */
extern T0* T1895f6(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_3 */
extern T0* T1895f5(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_2 */
extern T0* T1895f4(GE_context* ac, T0* C);
/* CHARACTER_PROPERTY.to_lower_table_1 */
extern T0* T1895f3(GE_context* ac, T0* C);
/* CHARACTER_32.plus */
extern T3 T3f10(GE_context* ac, T3* C, T10 a1);
/* CHARACTER_32.is_less_equal */
extern T1 T3f9(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.is_less */
extern T1 T3f11(GE_context* ac, T3* C, T3 a1);
/* CHARACTER_32.properties */
extern T0* T3f7(GE_context* ac, T3* C);
/* CHARACTER_PROPERTY.make */
extern T0* T1895c18(GE_context* ac);
/* ET_C1_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1297f19(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.has_indexing_term_value */
extern T1 T1296f20(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.string_ */
extern T0* T1296f28(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.has_indexing_term_value */
extern T1 T1295f20(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.string_ */
extern T0* T1295f28(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1293f22(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.is_plus */
extern T1 T753f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.string_ */
extern T0* T1293f30(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.has_indexing_term_value */
extern T1 T1292f22(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.string_ */
extern T0* T1292f30(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1291f38(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.string_ */
extern T0* T1291f47(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1290f38(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.string_ */
extern T0* T1290f47(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1289f38(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.string_ */
extern T0* T1289f47(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T1288f38(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.string_ */
extern T0* T1288f47(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1287f14(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.string_ */
extern T0* T1287f23(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.has_indexing_term_value */
extern T1 T1286f14(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.string_ */
extern T0* T1286f23(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.has_indexing_term_value */
extern T1 T1285f12(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.has_indexing_term_value */
extern T1 T1250f20(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.string_ */
extern T0* T1250f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.has_indexing_term_value */
extern T1 T403f42(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.string_ */
extern T0* T403f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.has_indexing_term_value */
extern T1 T199f80(GE_context* ac, T0* C, T0* a1);
/* ET_CUSTOM_ATTRIBUTE.position */
extern T0* T1302f6(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1298f23(GE_context* ac, T0* C);
/* CHARACTER_32.out */
extern T0* T3f6(GE_context* ac, T3* C);
/* NATURAL_32.to_hex_string */
extern T0* T10f27(GE_context* ac, T10* C);
/* NATURAL_32.to_hex_character */
extern T2 T10f28(GE_context* ac, T10* C);
/* ET_C1_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1297f23(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.indexing_term_value */
extern T0* T1296f24(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.indexing_term_value */
extern T0* T1295f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.indexing_term_value */
extern T0* T1293f26(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.text */
extern T0* T753f41(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.indexing_term_value */
extern T0* T1292f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1291f43(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1290f43(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1289f43(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.indexing_term_value */
extern T0* T1288f43(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.indexing_term_value */
extern T0* T1287f18(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.indexing_term_value */
extern T0* T1286f18(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.indexing_term_value */
extern T0* T1285f16(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.indexing_term_value */
extern T0* T1250f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.indexing_term_value */
extern T0* T403f47(GE_context* ac, T0* C);
/* ET_IDENTIFIER.indexing_term_value */
extern T0* T199f88(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T1287f19(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T1286f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T1250f15(GE_context* ac, T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T1311f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T523f4(GE_context* ac, T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T1312f7(GE_context* ac, T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T523f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1563f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T287f964(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T833f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T287f965(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T833f11(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T833f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint */
extern T0* T1332f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint */
extern T0* T1331f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T1330f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1304f3(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T287f961(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T542f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1563f6(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1307f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1306f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T1304f5(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1563f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T1304f4(GE_context* ac, T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1563f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1332f71(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1331f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T1330f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1307f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T287f967(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T1306f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T287f966(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1304f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T542f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.position */
extern T0* T1580f3(GE_context* ac, T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T1340f5(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T1298f37(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T1297f37(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.choice */
extern T0* T1291f58(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.choice */
extern T0* T1290f58(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T1289f58(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T1288f58(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T1285f38(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T1012f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T403f58(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.choice */
extern T0* T325f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T199f105(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T1298f39(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T1297f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.lower */
extern T0* T1291f60(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.lower */
extern T0* T1290f60(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T1289f60(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T1288f60(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T1285f40(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T1012f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T403f60(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.lower */
extern T0* T325f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T199f108(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T1298f38(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T1297f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_range */
extern T1 T1291f59(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_range */
extern T1 T1290f59(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T1289f59(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T1288f59(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T1285f39(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T1012f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T403f59(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_range */
extern T1 T325f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T199f107(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T1298f40(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T1297f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.upper */
extern T0* T1291f61(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.upper */
extern T0* T1290f61(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T1289f61(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T1288f61(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T1285f41(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T1012f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T403f61(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.upper */
extern T0* T325f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T199f109(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T1324f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T787f33(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T1324f6(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T787f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T1324f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T787f10(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T1324f14(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T787f9(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_lower_name */
extern T0* T1324f39(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.alias_name */
extern T0* T1324f40(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_lower_name */
extern T0* T1322f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T1322f73(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_lower_name */
extern T0* T1321f61(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T1321f62(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_lower_name */
extern T0* T1320f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T1320f59(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_lower_name */
extern T0* T1251f61(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T1251f62(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_lower_name */
extern T0* T787f59(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.alias_name */
extern T0* T787f61(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T1324f42(GE_context* ac, T0* C, T0* a1);
extern T1 T1324f42ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T1322f80(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T1321f64(GE_context* ac, T0* C, T0* a1);
extern T1 T1321f64ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T1320f80(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T1251f64(GE_context* ac, T0* C, T0* a1);
extern T1 T1251f64ot1(T0* a1, T0** a2);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T787f60(GE_context* ac, T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1915f14(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.agent_actual_argument */
extern T0* T1914f14(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.agent_actual_argument */
extern T0* T1913f14(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.agent_actual_argument */
extern T0* T1775f14(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1364f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1362f26(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1361f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1360f29(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1359f28(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1358f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1357f30(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T1356f15(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.agent_actual_argument */
extern T0* T1355f21(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T1354f14(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T1353f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T1352f15(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T1349f17(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T1348f14(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T1347f14(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T1346f14(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T1345f14(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T1344f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1298f22(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1297f22(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T1296f23(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T1295f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T1293f25(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T1292f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1291f41(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1290f41(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1289f41(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T1288f41(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T1287f17(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T1286f17(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T1285f15(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T1250f23(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.agent_actual_argument */
extern T0* T1151f18(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T1015f19(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T1012f18(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T983f15(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T969f20(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.agent_actual_argument */
extern T0* T920f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T796f20(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T793f18(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.agent_actual_argument */
extern T0* T767f25(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T764f66(GE_context* ac, T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T756f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T403f45(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T364f21(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T355f14(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T354f15(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.agent_actual_argument */
extern T0* T353f17(GE_context* ac, T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T346f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T327f21(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T325f16(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.agent_actual_argument */
extern T0* T324f19(GE_context* ac, T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T319f22(GE_context* ac, T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T199f84(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1291f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1291f21(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1290f32(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1290f22(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1289f32(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1289f21(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_8 */
extern T1 T1288f32(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T1288f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_8 */
extern T1 T403f19(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_8_min_value_abs */
extern T11 T403f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1291f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1291f22(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1290f9(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1290f23(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1289f9(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1289f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_16 */
extern T1 T1288f9(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T1288f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_16 */
extern T1 T403f20(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_16_min_value_abs */
extern T11 T403f34(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1291f12(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1290f12(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1289f12(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_8 */
extern T1 T1288f12(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_8 */
extern T1 T403f23(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1291f13(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1290f13(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1289f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_16 */
extern T1 T1288f13(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_16 */
extern T1 T403f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1291f14(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1290f14(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1289f14(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_32 */
extern T1 T1288f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_32 */
extern T1 T403f25(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1291f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1291f23(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1290f10(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1290f24(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1289f10(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1289f23(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_32 */
extern T1 T1288f10(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T1288f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_32 */
extern T1 T403f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_32_min_value_abs */
extern T11 T403f39(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1291f11(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1291f24(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1290f11(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1290f25(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1289f11(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1289f24(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_integer_64 */
extern T1 T1288f11(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T1288f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_integer_64 */
extern T1 T403f22(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.integer_64_min_value_abs */
extern T11 T403f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1291f17(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1290f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T1288f17(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_hexadecimal */
extern T1 T403f28(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_binary */
extern T1 T1290f18(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_binary */
extern T1 T1289f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_binary */
extern T1 T1288f18(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_binary */
extern T1 T403f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1291f15(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1290f15(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1289f15(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_natural_64 */
extern T1 T1288f15(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_natural_64 */
extern T1 T403f26(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.value_position */
extern T0* T1291f42(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.value_position */
extern T0* T1290f42(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.value_position */
extern T0* T1289f42(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.value_position */
extern T0* T1288f42(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.value_position */
extern T0* T403f46(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1291f56(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1290f56(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1289f56(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_integer_32 */
extern T6 T1288f56(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_integer_32 */
extern T6 T403f10(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_negative */
extern T1 T1291f25(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_negative */
extern T1 T1290f21(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T1289f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T1288f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T403f15(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T1578f8(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.position */
extern T0* T1328f8(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1578f6(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1479f61(GE_context* ac, T0* C);
/* ET_LIKE_N.label */
extern T0* T1382f60(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.label */
extern T0* T1332f63(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.label */
extern T0* T1331f66(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T1330f65(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T1328f6(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T1303f68(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T912f67(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T542f60(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T276f95(GE_context* ac, T0* C);
/* ET_CLASS.label */
extern T0* T83f231(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T81f102(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1578f4(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1479f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_parameter_with_type */
extern T0* T1382f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_parameter_with_type */
extern T0* T1332f33(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_parameter_with_type */
extern T0* T1331f32(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T1330f27(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1328f4(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T1303f61(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T912f56(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T542f31(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T276f50(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T83f153(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T81f48(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.last_leaf */
extern T0* T1578f9(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.last_leaf */
extern T0* T1328f9(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T639f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T637f56(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T636f58(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T599f66(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T639f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T637f63(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T636f60(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T599f68(GE_context* ac, T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T639f63(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T1266f20(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T1266f13(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T637f49(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T636f61(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T599f69(GE_context* ac, T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T639f64(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T637f51(GE_context* ac, T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T636f62(GE_context* ac, T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T599f44(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T1323f4(GE_context* ac, T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T137f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T1323f6(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T1322f81(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T1322f44(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1321f65(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T1321f30(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T1320f81(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T1320f27(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T1251f65(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T1251f26(GE_context* ac, T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T199f92(GE_context* ac, T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T1323f3(GE_context* ac, T0* C);
/* ET_ALIASED_FEATURE_NAME.same_call_name */
extern T1 T1323f5(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_NAME.feature_alias_name */
extern T0* T1322f25(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_alias_name */
extern T0* T1321f20(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_alias_name */
extern T0* T1320f22(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_alias_name */
extern T0* T1251f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T199f53(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.is_consumable */
extern T1 T476f96(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.is_consumable */
extern T1 T247f106(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.is_consumable */
extern T1 T234f99(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.is_consumable */
extern T1 T215f96(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1213f46(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_FILE_RULES.is_included */
extern T1 T1201f3(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULES.is_included */
extern T0* T1201f3ac1(GE_context* ac, T0* a1);
/* ET_ECF_FILE_RULE.is_included */
extern T1 T1221f10(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1221f10ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_FILE_RULE.is_included */
extern T0* T1221f10ac2(GE_context* ac, T0* a1);
/* [attached] PREDICATE [[attached] TUPLE [[attached] RX_PCRE_REGULAR_EXPRESSION]].set_rout_disp_final */
extern void T2046f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].there_exists */
extern T1 T1636f7(GE_context* ac, T0* C, T0* a1);
/* detachable DS_ARRAYED_LIST [[attached] RX_PCRE_REGULAR_EXPRESSION].item */
extern T0* T1636f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ECF_FILE_RULE].for_all */
extern T1 T1625f10(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.implicit_relative_name */
extern T0* T1213f63(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.unix_file_system */
extern T0* T1213f62(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_valid_eiffel_filename */
extern T1 T1213f46p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.has_eiffel_extension */
extern T1 T1213f64(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.operating_system */
extern T0* T1213f68(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T458f35(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T458f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] DS_HASH_SET_CURSOR [[attached] STRING_8].go_after */
extern void T407f15(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T458f49(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T458f35p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T458f51(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T232f26(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T233f4(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T233f5(GE_context* ac, T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T233f3(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T232f24(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T232f26p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T232f39(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1213f47(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.is_valid_directory_name */
extern T1 T1213f47p1(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T458f36(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T458f36p1(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T232f27(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T232f27p1(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_CLUSTER.full_pathname */
extern T0* T1213f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.windows_file_system */
extern T0* T1213f61(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.file_system */
extern T0* T1213f59(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.execution_environment */
extern T0* T1213f58(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T458f34(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T458f46(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T458f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T458f55(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T232f35(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T232f23(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T232f28(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T232f25(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T232f45(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.absolute_pathname */
extern T0* T1213f39(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.absolute_pathname */
extern T0* T458f29(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.execution_environment */
extern T0* T458f45(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.absolute_pathname */
extern T0* T232f38(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.execution_environment */
extern T0* T232f46(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.scm_write_mapping_recursive */
extern T0* T1213f56(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T458f43(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.scm_write_mapping_recursive */
extern T0* T232f43(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_none */
extern T1 T1213f44(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T458f28(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T436f4(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T232f29(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_unknown */
extern T1 T1213f49(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_unknown */
extern T1 T541f10(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_unknown */
extern T1 T458f31(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_unknown */
extern T1 T232f30(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.is_dotnet_assembly */
extern T1 T1213f50(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T541f20(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T458f33(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T436f6(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T232f31(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.dotnet_assembly */
extern T0* T1213f38(GE_context* ac, T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T541f6(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T458f27(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T436f8(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T232f33(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.cluster */
extern T0* T1213f37(GE_context* ac, T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T541f5(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T458f44(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T436f7(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T232f32(GE_context* ac, T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T541f8(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T436f9(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T436f21(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T436f11(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.current_system */
extern T0* T1213f57(GE_context* ac, T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T541f11(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T458f40(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T436f12(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T232f36(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.full_lower_name */
extern T0* T1213f42(GE_context* ac, T0* C, T2 a1);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T541f12(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T458f32(GE_context* ac, T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T436f13(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T232f37(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_CLUSTER.kind_name */
extern T0* T1213f54(GE_context* ac, T0* C);
/* ET_NONE_GROUP.kind_name */
extern T0* T541f28(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.kind_name */
extern T0* T458f54(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.kind_name */
extern T0* T436f29(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.kind_name */
extern T0* T232f51(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1213f55(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_CLUSTER.relative_lower_name */
extern T0* T1213f55p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.relative_lower_name */
extern T0* T191f115(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.lower_name */
extern T0* T191f118(GE_context* ac, T0* C);
/* ET_ECF_CLUSTER.lower_name */
extern T0* T1213f67(GE_context* ac, T0* C);
/* ET_NONE_GROUP.relative_lower_name */
extern T0* T541f13(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_NONE_GROUP.lower_name */
extern T0* T541f14(GE_context* ac, T0* C);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T458f48(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.relative_lower_name */
extern T0* T458f48p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T458f57(GE_context* ac, T0* C);
/* ET_UNKNOWN_GROUP.relative_lower_name */
extern T0* T436f14(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T436f15(GE_context* ac, T0* C);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T232f44(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.relative_lower_name */
extern T0* T232f44p1(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T232f47(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.is_class_assertion */
extern T1 T1366f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1362f28(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1361f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_class_assertion */
extern T1 T1360f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1359f29(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1358f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_class_assertion */
extern T1 T1357f31(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_class_assertion */
extern T1 T1356f17(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_class_assertion */
extern T1 T1355f22(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_class_assertion */
extern T1 T1354f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_class_assertion */
extern T1 T1353f20(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_class_assertion */
extern T1 T1352f16(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_class_assertion */
extern T1 T1349f18(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_class_assertion */
extern T1 T1348f15(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_class_assertion */
extern T1 T1347f15(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_class_assertion */
extern T1 T1346f15(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_class_assertion */
extern T1 T1345f15(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_class_assertion */
extern T1 T1344f19(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1298f27(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1297f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_class_assertion */
extern T1 T1296f29(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_class_assertion */
extern T1 T1295f29(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_class_assertion */
extern T1 T1293f31(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_class_assertion */
extern T1 T1292f31(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1291f48(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1290f48(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1289f48(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_class_assertion */
extern T1 T1288f48(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_class_assertion */
extern T1 T1287f24(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_class_assertion */
extern T1 T1286f24(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_class_assertion */
extern T1 T1285f22(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_class_assertion */
extern T1 T1250f29(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_class_assertion */
extern T1 T1151f19(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_class_assertion */
extern T1 T1015f22(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_class_assertion */
extern T1 T1012f19(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_class_assertion */
extern T1 T983f16(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_class_assertion */
extern T1 T969f22(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_class_assertion */
extern T1 T920f21(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_class_assertion */
extern T1 T796f21(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_class_assertion */
extern T1 T793f19(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_class_assertion */
extern T1 T767f26(GE_context* ac, T0* C);
/* ET_VOID.is_class_assertion */
extern T1 T756f23(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_class_assertion */
extern T1 T403f48(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_class_assertion */
extern T1 T364f22(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T355f15(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_class_assertion */
extern T1 T354f16(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_class_assertion */
extern T1 T353f18(GE_context* ac, T0* C);
/* ET_RESULT.is_class_assertion */
extern T1 T346f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_class_assertion */
extern T1 T327f22(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T325f18(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_class_assertion */
extern T1 T324f20(GE_context* ac, T0* C);
/* ET_CURRENT.is_class_assertion */
extern T1 T319f24(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_class_assertion */
extern T1 T199f90(GE_context* ac, T0* C);
/* ET_TAGGED_ASSERTION.expression */
extern T0* T1366f4(GE_context* ac, T0* C);
extern T1 T1366f4ot1(T0* a1, T0** a2);
/* ET_CLASS_ASSERTION.expression */
extern T0* T1327f4(GE_context* ac, T0* C);
/* ET_INVARIANTS.clients */
extern T0* T950f18(GE_context* ac, T0* C);
/* ET_INVARIANTS.type */
extern T0* T950f16(GE_context* ac, T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T950f12(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T1319f72(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T1316f66(GE_context* ac, T0* C);
/* ET_INVARIANTS.locals */
extern T0* T950f15(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T564f61(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T404f62(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T402f68(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T400f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T275f75(GE_context* ac, T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T950f17(GE_context* ac, T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T950f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T1319f71(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T1318f65(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T1316f65(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T1315f69(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T1314f67(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T950f14(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T564f60(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T557f62(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T404f61(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T402f67(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T400f66(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_feature */
extern T0* T371f66(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T275f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_invariants */
extern T1 T1319f73(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_invariants */
extern T1 T1318f66(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_invariants */
extern T1 T1316f68(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_invariants */
extern T1 T1315f71(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_invariants */
extern T1 T1314f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_invariants */
extern T1 T564f62(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_invariants */
extern T1 T557f63(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_invariants */
extern T1 T404f64(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_invariants */
extern T1 T402f70(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_invariants */
extern T1 T400f69(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_invariants */
extern T1 T371f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_invariants */
extern T1 T275f77(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.as_invariants */
extern T0* T1319f74(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.as_invariants */
extern T0* T1318f67(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.as_invariants */
extern T0* T1316f69(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.as_invariants */
extern T0* T1315f72(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.as_invariants */
extern T0* T1314f70(GE_context* ac, T0* C);
/* ET_INVARIANTS.as_invariants */
extern T0* T950f20(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.as_invariants */
extern T0* T564f63(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.as_invariants */
extern T0* T557f64(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.as_invariants */
extern T0* T404f65(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_invariants */
extern T0* T402f71(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_invariants */
extern T0* T400f70(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.as_invariants */
extern T0* T371f69(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.as_invariants */
extern T0* T275f78(GE_context* ac, T0* C);
/* ET_INVARIANTS.preconditions */
extern T0* T950f23(GE_context* ac, T0* C);
/* ET_INVARIANTS.postconditions */
extern T0* T950f24(GE_context* ac, T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T950f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE_HASH_LIST.has_type */
extern T1 T306f14(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.index_of */
extern T6 T556f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.index_of */
extern T6 T555f47(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.index_of */
extern T6 T356f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.index_of */
extern T6 T340f45(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.index_of */
extern T6 T306f16(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.index_of */
extern T6 T256f44(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_HASH_LIST.dynamic_type */
extern T0* T306f6(GE_context* ac, T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.is_bang */
extern T1 T764f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_bang */
extern T1 T692f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_bang */
extern T1 T385f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_question_mark */
extern T1 T764f18(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_question_mark */
extern T1 T692f19(GE_context* ac, T0* C);
/* ET_SYMBOL.is_question_mark */
extern T1 T385f18(GE_context* ac, T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.is_instance_free */
extern T1 T1364f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_instance_free */
extern T1 T764f71(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1600f3(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T1363f5(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_instance_free */
extern T1 T1600f5(GE_context* ac, T0* C);
/* ET_AGENT_OPEN_TARGET.is_instance_free */
extern T1 T1363f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1915f19(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_open_operand */
extern T1 T1914f16(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_open_operand */
extern T1 T1913f15(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_open_operand */
extern T1 T1775f15(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1600f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1362f29(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1361f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1360f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1359f30(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1358f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1357f32(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T1356f18(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_open_operand */
extern T1 T1355f23(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T1354f16(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T1353f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T1352f17(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T1349f19(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T1348f16(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T1347f16(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T1346f16(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T1345f16(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T1344f20(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1298f28(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1297f28(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T1296f30(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T1295f30(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T1293f32(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T1292f32(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_open_operand */
extern T1 T1291f49(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1290f49(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T1289f49(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T1288f49(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T1287f25(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T1286f25(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T1285f23(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T1250f30(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_open_operand */
extern T1 T1151f20(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T1015f23(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T1012f20(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T983f17(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T969f23(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_open_operand */
extern T1 T920f22(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T796f22(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T793f20(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_open_operand */
extern T1 T767f30(GE_context* ac, T0* C);
/* ET_VOID.is_open_operand */
extern T1 T756f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T403f51(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T364f25(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T355f17(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T354f19(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_open_operand */
extern T1 T353f20(GE_context* ac, T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T346f23(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T327f24(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T325f17(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_open_operand */
extern T1 T324f22(GE_context* ac, T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T319f23(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T199f89(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1915f13(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.expression_item */
extern T0* T1914f13(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.expression_item */
extern T0* T1913f13(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1775f13(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1362f15(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1361f16(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1360f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1359f17(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1358f18(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1357f18(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T1356f9(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.expression_item */
extern T0* T1355f10(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T1354f4(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T1353f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T1352f7(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T1349f6(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T1348f4(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T1347f4(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T1346f4(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T1345f4(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T1344f8(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T1298f8(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T1297f8(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T1296f13(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T1295f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T1293f9(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T1292f9(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.expression_item */
extern T0* T1291f19(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.expression_item */
extern T0* T1290f19(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T1289f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T1288f19(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T1287f26(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T1286f26(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T1285f17(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T1250f13(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.expression_item */
extern T0* T1151f7(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T1015f7(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T1012f7(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T983f7(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T969f7(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.expression_item */
extern T0* T920f11(GE_context* ac, T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T796f7(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T793f6(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.expression_item */
extern T0* T767f16(GE_context* ac, T0* C);
/* ET_VOID.expression_item */
extern T0* T756f10(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T403f9(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T364f9(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T355f6(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.expression_item */
extern T0* T354f6(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.expression_item */
extern T0* T353f7(GE_context* ac, T0* C);
/* ET_RESULT.expression_item */
extern T0* T346f7(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T327f14(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T325f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.expression_item */
extern T0* T324f10(GE_context* ac, T0* C);
/* ET_CURRENT.expression_item */
extern T0* T319f7(GE_context* ac, T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T199f49(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1915f11(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_empty_actual_argument */
extern T1 T1914f11(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_empty_actual_argument */
extern T1 T1913f11(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1788f3(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T1787f9(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1775f11(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1362f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1361f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1360f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1359f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1358f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1357f34(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1356f19(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1355f24(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T1354f17(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1353f22(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T1352f18(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T1349f20(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T1348f17(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T1347f17(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T1346f17(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T1345f17(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T1344f21(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T1333f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1298f30(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1297f30(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T1296f31(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T1295f31(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1293f33(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T1292f33(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1291f50(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1290f50(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1289f50(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T1288f50(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1287f33(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T1286f37(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T1285f31(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T1250f32(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_empty_actual_argument */
extern T1 T1151f21(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T1015f24(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T1012f21(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T983f18(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T969f24(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_empty_actual_argument */
extern T1 T920f23(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T796f24(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T793f21(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T782f8(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_empty_actual_argument */
extern T1 T767f27(GE_context* ac, T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T756f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T403f49(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T364f23(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T355f16(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T354f17(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_empty_actual_argument */
extern T1 T353f19(GE_context* ac, T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T346f26(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T327f23(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T325f19(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T324f21(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T320f10(GE_context* ac, T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T319f25(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T199f94(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T1333f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1915f10(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_FROM_EXPRESSION.actual_argument */
extern T0* T1914f10(GE_context* ac, T0* C, T6 a1);
/* ET_CONVERT_BUILTIN_EXPRESSION.actual_argument */
extern T0* T1913f10(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1788f5(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T1787f7(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1775f10(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1362f17(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1361f19(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1360f18(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1359f19(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1358f21(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1357f20(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T1356f8(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_OBJECT_TEST.actual_argument */
extern T0* T1355f15(GE_context* ac, T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T1354f8(GE_context* ac, T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T1353f7(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T1352f9(GE_context* ac, T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T1349f8(GE_context* ac, T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T1348f8(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T1347f8(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T1346f8(GE_context* ac, T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T1345f8(GE_context* ac, T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T1344f12(GE_context* ac, T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T1333f13(GE_context* ac, T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T1298f15(GE_context* ac, T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T1297f15(GE_context* ac, T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T1296f16(GE_context* ac, T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T1295f16(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T1293f18(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T1292f18(GE_context* ac, T0* C, T6 a1);
/* ET_BINARY_INTEGER_CONSTANT.actual_argument */
extern T0* T1291f34(GE_context* ac, T0* C, T6 a1);
/* ET_OCTAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1290f34(GE_context* ac, T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T1289f34(GE_context* ac, T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T1288f34(GE_context* ac, T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T1287f7(GE_context* ac, T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T1286f30(GE_context* ac, T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T1285f24(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T1250f17(GE_context* ac, T0* C, T6 a1);
/* ET_NAMED_OBJECT_TEST.actual_argument */
extern T0* T1151f12(GE_context* ac, T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T1015f12(GE_context* ac, T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T1012f12(GE_context* ac, T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T983f9(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T969f13(GE_context* ac, T0* C, T6 a1);
/* ET_IF_EXPRESSION.actual_argument */
extern T0* T920f14(GE_context* ac, T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T796f12(GE_context* ac, T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T793f10(GE_context* ac, T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T782f7(GE_context* ac, T0* C, T6 a1);
/* ET_ACROSS_EXPRESSION.actual_argument */
extern T0* T767f19(GE_context* ac, T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T756f13(GE_context* ac, T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T403f31(GE_context* ac, T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T364f12(GE_context* ac, T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T355f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_EQUALITY_EXPRESSION.actual_argument */
extern T0* T354f8(GE_context* ac, T0* C, T6 a1);
/* ET_OBJECT_TEST.actual_argument */
extern T0* T353f11(GE_context* ac, T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T346f13(GE_context* ac, T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T327f11(GE_context* ac, T0* C, T6 a1);
/* ET_UNQUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T325f9(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_CALL_EXPRESSION.actual_argument */
extern T0* T324f13(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T320f6(GE_context* ac, T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T319f14(GE_context* ac, T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T199f74(GE_context* ac, T0* C, T6 a1);
/* ET_LIKE_N.last_leaf */
extern T0* T1382f64(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T1303f72(GE_context* ac, T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T836f11(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T912f71(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1298f13(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1297f13(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T1293f14(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T1292f14(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1291f20(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1290f20(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1289f20(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T1288f20(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T1287f9(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T1286f32(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T1285f30(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T1250f31(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T403f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1298f6(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1297f6(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T1296f6(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T1295f6(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T1293f7(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T1292f7(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_string_constant */
extern T1 T1291f16(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1290f16(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T1289f16(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T1288f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T1285f8(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T403f27(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T1296f5(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T1295f5(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T1293f15(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T1292f15(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_character_constant */
extern T1 T1291f26(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1290f26(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T1289f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T1288f26(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T1287f10(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T1286f36(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T1250f6(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T403f18(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1298f36(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1297f36(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T1296f37(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T1295f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T1293f39(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T1292f39(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T1287f41(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T1286f45(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T1285f37(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T1250f40(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.name */
extern T0* T353f8(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.type */
extern T0* T1355f13(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.type */
extern T0* T1151f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.type */
extern T0* T353f9(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1362f27(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1361f22(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1360f20(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T796f13(GE_context* ac, T0* C);
extern T1 T796f13ot1(T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1362f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1362f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1361f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1361f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1360f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1360f36(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1359f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1359f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1358f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1358f41(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1357f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1357f37(GE_context* ac, T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T796f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T1324f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1324f7ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.same_call_name */
extern T1 T1322f24(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T1321f14(GE_context* ac, T0* C, T0* a1);
extern T1 T1321f14ot1(T0* a1, T0** a2);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T1320f21(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T1251f9(GE_context* ac, T0* C, T0* a1);
extern T1 T1251f9ot1(T0* a1, T0** a2);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T787f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T199f82(GE_context* ac, T0* C, T0* a1);
extern T1 T199f82ot1(T0* a1, T0** a2);
/* ET_PARENTHESIS_SYMBOL.is_bracket */
extern T1 T1769f21(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T1351f26(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T1350f26(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T1324f8(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T1322f20(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T1321f9(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T1320f17(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T1251f28(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T787f7(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T753f37(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T740f36(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T734f36(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T199f85(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_parenthesis */
extern T1 T1351f27(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_parenthesis */
extern T1 T1350f27(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_parenthesis */
extern T1 T1324f13(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_parenthesis */
extern T1 T1322f21(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_parenthesis */
extern T1 T1321f10(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_parenthesis */
extern T1 T1320f18(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_parenthesis */
extern T1 T1251f31(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_parenthesis */
extern T1 T787f8(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_parenthesis */
extern T1 T753f38(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_parenthesis */
extern T1 T740f37(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_parenthesis */
extern T1 T734f37(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_parenthesis */
extern T1 T692f94(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_parenthesis */
extern T1 T199f86(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and */
extern T1 T1769f4(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T1351f7(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T1350f7(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T1324f19(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T1322f17(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T1321f24(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T1320f14(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T1251f19(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T787f16(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T753f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T740f15(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T734f14(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T692f70(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T199f45(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_div */
extern T1 T1769f6(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T1351f14(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T1350f14(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T1324f21(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T1322f47(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T1321f38(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T1320f35(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T1251f38(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T787f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T753f22(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T740f24(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T734f24(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T692f80(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T199f57(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_divide */
extern T1 T1769f7(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T1351f15(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T1350f15(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T1324f22(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T1322f48(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T1321f39(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T1320f36(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T1251f39(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T787f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T753f23(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T740f25(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T734f25(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T692f81(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T199f58(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_ge */
extern T1 T1769f8(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T1351f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T1350f16(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T1324f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T1322f49(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T1321f40(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T1320f37(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T1251f40(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T787f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T753f24(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T740f26(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T734f26(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T692f82(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T199f59(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_gt */
extern T1 T1769f9(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T1351f17(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T1350f17(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T1324f24(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T1322f50(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T1321f41(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T1320f38(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T1251f41(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T787f21(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T753f25(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T740f27(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T734f27(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T692f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T199f60(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_le */
extern T1 T1769f11(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T1351f18(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T1350f18(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T1324f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T1322f51(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T1321f42(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T1320f39(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T1251f42(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T787f23(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T753f26(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T740f28(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T734f28(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T692f84(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T199f61(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_lt */
extern T1 T1769f12(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T1351f19(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T1350f19(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T1324f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T1322f52(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T1321f43(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T1320f40(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T1251f43(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T787f24(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T753f27(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T740f29(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T734f29(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T692f85(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T199f62(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_minus */
extern T1 T1769f13(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T1351f20(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T1350f20(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T1324f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T1322f53(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T1321f44(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T1320f41(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T1251f44(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T787f25(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T753f28(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T740f30(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T734f30(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T692f86(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T199f63(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_mod */
extern T1 T1769f14(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T1351f21(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T1350f21(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T1324f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T1322f54(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T1321f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T1320f42(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T1251f45(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T787f26(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T753f29(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T740f31(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T734f31(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T692f87(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T199f64(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or */
extern T1 T1769f15(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T1351f8(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T1350f8(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T1324f30(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T1322f18(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T1321f25(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T1320f15(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T1251f20(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T787f27(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T753f13(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T740f16(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T734f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T692f71(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T199f46(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_plus */
extern T1 T1769f17(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T1351f22(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T1350f22(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T1324f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T1322f55(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T1321f46(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T1320f43(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T1251f46(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T787f29(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T753f30(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T740f32(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T734f32(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T692f88(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T199f65(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_power */
extern T1 T1769f18(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T1351f23(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T1350f23(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T1324f33(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T1322f56(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T1321f47(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T1320f44(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T1251f47(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T787f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T753f31(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T740f33(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T734f33(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T692f89(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T199f66(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_times */
extern T1 T1769f19(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T1351f24(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T1350f24(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T1324f34(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T1322f57(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T1321f48(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T1320f45(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T1251f48(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T787f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T753f32(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T740f34(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T734f34(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T692f90(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T199f67(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_xor */
extern T1 T1769f20(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T1351f25(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T1350f25(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T1324f35(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T1322f58(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T1321f49(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T1320f46(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T1251f49(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T787f32(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T753f33(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T740f35(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T734f35(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T692f91(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T199f68(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_dotdot */
extern T1 T1769f23(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T1351f28(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T1350f28(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T1324f37(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T1322f71(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1321f60(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T1320f57(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T1251f60(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T787f57(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T753f39(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T740f38(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T734f38(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T692f95(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T199f87(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_minus */
extern T1 T1769f24(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T1351f11(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T1350f11(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T1324f16(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T1322f46(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T1321f6(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T1320f30(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T1251f35(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T787f13(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T753f19(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T740f21(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T734f21(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T692f77(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T199f54(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_plus */
extern T1 T1769f35(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T1351f12(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T1350f12(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T1324f17(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T1322f5(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T1321f7(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T1320f31(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T1251f36(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T787f14(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T753f20(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T740f22(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T734f22(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T692f78(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T199f55(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_prefix_not */
extern T1 T1769f37(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T1351f13(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T1350f13(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T1324f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T1322f6(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T1321f8(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T1320f32(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T1251f37(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T787f15(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T753f21(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T740f23(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T734f23(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T692f79(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T199f56(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T787f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_precursor */
extern T1 T1769f26(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T1322f69(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T1321f58(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T1320f55(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T1251f58(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T753f17(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T740f19(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T734f18(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T716f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T692f75(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T199f77(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.precursor_keyword */
extern T0* T1769f27(GE_context* ac, T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T1322f70(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T1321f59(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T1320f56(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T1251f59(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T753f18(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T740f20(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T734f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T716f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T692f76(GE_context* ac, T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T199f78(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_and_then */
extern T1 T1769f5(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T1351f4(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T1324f20(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T1322f14(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T1321f21(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T1320f11(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T1251f16(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T787f17(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T753f9(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T740f12(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T734f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T692f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T199f42(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_implies */
extern T1 T1769f10(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T1351f6(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T1350f6(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T1324f25(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T1322f16(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T1321f23(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T1320f13(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T1251f18(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T787f22(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T753f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T740f14(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T734f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T692f69(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T199f44(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_infix_or_else */
extern T1 T1769f16(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T1350f5(GE_context* ac, T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T1324f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T1322f15(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T1321f22(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T1320f12(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T1251f17(GE_context* ac, T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T787f28(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T753f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T740f13(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T734f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T692f68(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T199f43(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.lower_name */
extern T0* T1769f28(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.name */
extern T0* T1769f30(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T1351f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T1351f31(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T1350f29(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T1350f31(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T753f42(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T753f79(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T740f40(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T740f41(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T734f40(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T734f44(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T716f16(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T692f97(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T692f98(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.position */
extern T0* T1769f29(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T1351f30(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T1350f30(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T753f16(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T740f5(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T734f39(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T716f12(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_tuple_label */
extern T1 T1769f25(GE_context* ac, T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T1351f10(GE_context* ac, T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T1350f10(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T753f15(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T740f18(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T734f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T692f73(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_call_agent */
extern T1 T1915f18(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_call_agent */
extern T1 T1765f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_call_agent */
extern T1 T1353f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_call_agent */
extern T1 T1349f10(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_call_agent */
extern T1 T1333f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_call_agent */
extern T1 T1246f6(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_call_agent */
extern T1 T793f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_call_agent */
extern T1 T324f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_call_agent */
extern T1 T321f6(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1915f17(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.is_tuple_label */
extern T1 T1765f5(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T1353f9(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T1349f9(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T1333f9(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.is_tuple_label */
extern T1 T1246f5(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T796f25(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T793f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_tuple_label */
extern T1 T324f8(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.is_tuple_label */
extern T1 T321f5(GE_context* ac, T0* C);
/* ET_PARENTHESIS_INSTRUCTION.position */
extern T0* T1765f7(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T1333f11(GE_context* ac, T0* C);
/* ET_PARENTHESIS_EXPRESSION.position */
extern T0* T1246f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.position */
extern T0* T321f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1915f15(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T1353f8(GE_context* ac, T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T1333f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1915f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.name */
extern T0* T796f9(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.name */
extern T0* T324f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_INSTRUCTION.name */
extern T0* T321f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T1322f13(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T1321f27(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T1320f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T1251f27(GE_context* ac, T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T199f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T1319f66(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T564f57(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T557f59(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T1319f67(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T1318f62(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T1316f63(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T1315f67(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T1314f65(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T564f58(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T557f60(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T404f59(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T402f65(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T400f64(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_query */
extern T1 T371f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T275f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T1319f81(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T1318f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T1316f74(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T1315f77(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T1314f75(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T564f72(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T557f73(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T404f70(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T402f74(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T400f73(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_dotnet */
extern T1 T371f74(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T275f81(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T1319f82(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T1318f77(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T1316f75(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T1315f78(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T1314f76(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T564f73(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T557f74(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T404f71(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T402f75(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T400f74(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.same_version */
extern T1 T371f75(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T275f82(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T1319f79(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T564f95(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T564f94(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T564f93(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T1318f72(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T1316f70(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T1316f98(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T1316f97(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T1316f96(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T1315f73(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T1314f71(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T564f68(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T557f69(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T404f66(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T404f74(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T402f72(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T402f78(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T400f71(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T400f77(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.undefined_feature */
extern T0* T371f70(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T275f79(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T1319f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T1319f104(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T1319f103(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T1319f102(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T1318f73(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T1318f102(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T1318f101(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T1318f100(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T1316f71(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T1316f95(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T1315f74(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T1315f104(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T1315f103(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T1315f102(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T1314f72(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T1314f101(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T1314f100(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T1314f99(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T564f69(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T564f92(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T557f70(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T557f98(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T557f97(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T557f96(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T404f67(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T404f89(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T404f88(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T404f87(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T402f73(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_constant */
extern void T402f96(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T402f95(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T402f94(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T402f93(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T402f92(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T402f91(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T400f72(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T400f93(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T400f92(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T400f91(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T400f90(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.renamed_feature */
extern T0* T371f71(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_feature_clause */
extern void T371f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_semicolon */
extern void T371f98(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_end_keyword */
extern void T371f97(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T275f80(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T275f107(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T275f106(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T275f105(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T1319f78(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T1318f71(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T564f67(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T557f68(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T1319f77(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T1318f70(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T564f66(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T557f67(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T1319f76(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T1318f69(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T564f65(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T557f66(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1319f48(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.has_class_assertion */
extern T1 T995f8(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_class_postcondition_recursive */
extern T1 T1318f44(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_class_postcondition_recursive */
extern T1 T1316f46(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.has_class_postcondition_recursive */
extern T1 T1315f51(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.has_class_postcondition_recursive */
extern T1 T1314f48(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_class_postcondition_recursive */
extern T1 T564f42(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.has_class_postcondition_recursive */
extern T1 T557f44(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T404f42(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T402f49(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T400f47(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_class_postcondition_recursive */
extern T1 T371f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_class_postcondition_recursive */
extern T1 T275f66(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T1319f36(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T1318f36(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T564f43(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T557f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once_per_process */
extern T1 T1319f38(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_once_per_process */
extern T1 T1318f38(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.has_tagged_indexing_term_value */
extern T1 T926f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_INDEXING_TERM_LIST.has_indexing_term_value */
extern T1 T938f4(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_once_per_process */
extern T1 T1316f52(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_process */
extern T1 T1315f53(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.standard_once_keys */
extern T0* T1315f35(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_process */
extern T1 T1314f52(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_once_per_process */
extern T1 T564f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_once_per_process */
extern T1 T557f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_process */
extern T1 T404f29(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_process */
extern T1 T402f31(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_process */
extern T1 T400f30(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_process */
extern T1 T371f53(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_process */
extern T1 T275f69(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T1319f50(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T1318f45(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T564f32(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T557f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T1319f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T1318f33(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T564f34(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T557f31(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T1319f34(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T1318f34(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T564f35(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T557f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T1319f65(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T1318f60(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T1316f62(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T1315f66(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T1314f64(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T564f56(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T557f58(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T404f58(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T402f64(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T400f63(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_procedure */
extern T1 T371f63(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T275f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1319f46(GE_context* ac, T0* C);
/* ET_PRECONDITIONS.is_instance_free */
extern T1 T431f11(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T1318f74(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1316f72(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1315f75(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T1314f73(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T564f70(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.are_preconditions_instance_free_recursive */
extern T1 T557f71(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T404f68(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T402f47(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T400f45(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_preconditions_instance_free_recursive */
extern T1 T371f72(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_preconditions_instance_free_recursive */
extern T1 T275f64(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1319f47(GE_context* ac, T0* C);
/* ET_POSTCONDITIONS.is_instance_free */
extern T1 T995f12(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T1318f75(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1316f73(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1315f76(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T1314f74(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T564f71(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.are_postconditions_instance_free_recursive */
extern T1 T557f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T404f69(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T402f48(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T400f46(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.are_postconditions_instance_free_recursive */
extern T1 T371f73(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.are_postconditions_instance_free_recursive */
extern T1 T275f65(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T1319f35(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T1318f35(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T564f41(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T557f38(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_never_void */
extern T1 T1915f12(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_never_void */
extern T1 T1913f12(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_never_void */
extern T1 T1775f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_never_void */
extern T1 T1355f11(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_never_void */
extern T1 T1354f6(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_never_void */
extern T1 T1353f5(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_never_void */
extern T1 T1349f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_never_void */
extern T1 T1344f9(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_never_void */
extern T1 T1151f8(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_never_void */
extern T1 T1012f8(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_never_void */
extern T1 T983f6(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_never_void */
extern T1 T920f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_never_void */
extern T1 T793f5(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_never_void */
extern T1 T767f17(GE_context* ac, T0* C);
/* ET_VOID.is_never_void */
extern T1 T756f11(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_never_void */
extern T1 T355f5(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_never_void */
extern T1 T354f5(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_never_void */
extern T1 T353f6(GE_context* ac, T0* C);
/* ET_RESULT.is_never_void */
extern T1 T346f5(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T325f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_never_void */
extern T1 T324f6(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_never_void */
extern T1 T199f8(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1915f5(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_current */
extern T1 T1914f5(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_current */
extern T1 T1913f5(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1775f5(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1362f20(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1361f26(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1360f24(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1359f22(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1358f27(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1357f25(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T1356f11(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_current */
extern T1 T1355f17(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T1354f10(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T1353f12(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T1352f11(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T1349f12(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T1348f10(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T1347f10(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T1346f10(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T1345f10(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T1344f14(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T1298f17(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T1297f17(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T1296f18(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T1295f18(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T1293f20(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T1292f20(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_current */
extern T1 T1291f36(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_current */
extern T1 T1290f36(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T1289f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T1288f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T1287f12(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T1286f12(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T1285f10(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T1250f18(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_current */
extern T1 T1151f14(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T1015f14(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T1012f14(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T983f11(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T969f15(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_current */
extern T1 T920f16(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T796f15(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T793f12(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_current */
extern T1 T767f21(GE_context* ac, T0* C);
/* ET_VOID.is_current */
extern T1 T756f15(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T403f40(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T364f14(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T355f10(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_current */
extern T1 T354f10(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_current */
extern T1 T353f13(GE_context* ac, T0* C);
/* ET_RESULT.is_current */
extern T1 T346f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T327f17(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T325f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_current */
extern T1 T324f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T199f76(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1362f33(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1361f39(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_false */
extern T1 T1360f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1359f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1358f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_false */
extern T1 T1357f36(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_false */
extern T1 T1356f22(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_false */
extern T1 T1355f27(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_false */
extern T1 T1354f19(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_false */
extern T1 T1353f24(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_false */
extern T1 T1352f20(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_false */
extern T1 T1349f22(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_false */
extern T1 T1348f19(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_false */
extern T1 T1347f19(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_false */
extern T1 T1346f19(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_false */
extern T1 T1345f19(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_false */
extern T1 T1344f23(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_false */
extern T1 T1298f32(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_false */
extern T1 T1297f32(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_false */
extern T1 T1296f33(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_false */
extern T1 T1295f33(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_false */
extern T1 T1293f35(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_false */
extern T1 T1292f35(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_false */
extern T1 T1291f52(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_false */
extern T1 T1290f52(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_false */
extern T1 T1289f52(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_false */
extern T1 T1288f52(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_false */
extern T1 T1287f35(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_false */
extern T1 T1286f39(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_false */
extern T1 T1285f33(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_false */
extern T1 T1250f34(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_false */
extern T1 T1151f24(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_false */
extern T1 T1015f26(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_false */
extern T1 T1012f23(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_false */
extern T1 T983f20(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_false */
extern T1 T969f26(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_false */
extern T1 T920f25(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_false */
extern T1 T796f28(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_false */
extern T1 T793f23(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_false */
extern T1 T767f31(GE_context* ac, T0* C);
/* ET_VOID.is_false */
extern T1 T756f27(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_false */
extern T1 T403f53(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_false */
extern T1 T364f27(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_false */
extern T1 T355f19(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_false */
extern T1 T354f21(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_false */
extern T1 T353f22(GE_context* ac, T0* C);
/* ET_RESULT.is_false */
extern T1 T346f28(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_false */
extern T1 T327f26(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T325f21(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_false */
extern T1 T324f24(GE_context* ac, T0* C);
/* ET_CURRENT.is_false */
extern T1 T319f28(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_false */
extern T1 T199f101(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.unparenthesized_expression */
extern T0* T1915f8(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.unparenthesized_expression */
extern T0* T1914f8(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.unparenthesized_expression */
extern T0* T1913f8(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.unparenthesized_expression */
extern T0* T1775f6(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1362f23(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1361f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.unparenthesized_expression */
extern T0* T1360f26(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1359f25(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1358f30(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.unparenthesized_expression */
extern T0* T1357f27(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1356f12(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.unparenthesized_expression */
extern T0* T1355f18(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.unparenthesized_expression */
extern T0* T1354f11(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1353f16(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.unparenthesized_expression */
extern T0* T1352f12(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.unparenthesized_expression */
extern T0* T1349f14(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.unparenthesized_expression */
extern T0* T1348f11(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.unparenthesized_expression */
extern T0* T1347f11(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.unparenthesized_expression */
extern T0* T1346f11(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.unparenthesized_expression */
extern T0* T1345f11(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.unparenthesized_expression */
extern T0* T1344f15(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1298f18(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1297f18(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.unparenthesized_expression */
extern T0* T1296f19(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.unparenthesized_expression */
extern T0* T1295f19(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1293f21(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.unparenthesized_expression */
extern T0* T1292f21(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1291f37(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1290f37(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1289f37(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T1288f37(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1287f13(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.unparenthesized_expression */
extern T0* T1286f13(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.unparenthesized_expression */
extern T0* T1285f11(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.unparenthesized_expression */
extern T0* T1250f19(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.unparenthesized_expression */
extern T0* T1151f15(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.unparenthesized_expression */
extern T0* T1015f16(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T1012f15(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.unparenthesized_expression */
extern T0* T983f12(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.unparenthesized_expression */
extern T0* T969f17(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.unparenthesized_expression */
extern T0* T920f17(GE_context* ac, T0* C);
/* ET_CALL_AGENT.unparenthesized_expression */
extern T0* T796f17(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.unparenthesized_expression */
extern T0* T793f15(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.unparenthesized_expression */
extern T0* T767f22(GE_context* ac, T0* C);
/* ET_VOID.unparenthesized_expression */
extern T0* T756f16(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.unparenthesized_expression */
extern T0* T403f41(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.unparenthesized_expression */
extern T0* T364f18(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T355f11(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.unparenthesized_expression */
extern T0* T354f12(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.unparenthesized_expression */
extern T0* T353f14(GE_context* ac, T0* C);
/* ET_RESULT.unparenthesized_expression */
extern T0* T346f19(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.unparenthesized_expression */
extern T0* T327f18(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T325f13(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.unparenthesized_expression */
extern T0* T324f16(GE_context* ac, T0* C);
/* ET_CURRENT.unparenthesized_expression */
extern T0* T319f19(GE_context* ac, T0* C);
/* ET_IDENTIFIER.unparenthesized_expression */
extern T0* T199f79(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1915f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FROM_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1914f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_BUILTIN_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1913f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1775f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1362f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1361f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1360f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1359f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1358f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1357f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1356f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1355f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1354f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1353f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T1352f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1349f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T1348f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1347f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T1346f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T1345f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1344f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1298f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1297f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1296f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T1295f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1293f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T1292f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BINARY_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1291f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OCTAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1290f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1289f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1288f51(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1287f34(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.tokens */
extern T0* T1287f39(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T1286f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.tokens */
extern T0* T1286f43(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T1285f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T1250f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.tokens */
extern T0* T1250f37(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T1151f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1015f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1012f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T983f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T969f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IF_EXPRESSION.manifest_constant_convert_feature */
extern T0* T920f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T796f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T793f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACROSS_EXPRESSION.manifest_constant_convert_feature */
extern T0* T767f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T756f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T403f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T364f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T355f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T354f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OBJECT_TEST.manifest_constant_convert_feature */
extern T0* T353f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T346f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T327f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNQUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T325f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T324f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T319f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T199f99(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.is_instance_free */
extern T1 T1915f7(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.is_instance_free */
extern T1 T1914f7(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.is_instance_free */
extern T1 T1913f7(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_instance_free */
extern T1 T1775f4(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1362f25(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1361f31(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_instance_free */
extern T1 T1360f28(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1359f27(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1358f32(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_instance_free */
extern T1 T1357f29(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.is_instance_free */
extern T1 T1356f14(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.is_instance_free */
extern T1 T1355f20(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.is_instance_free */
extern T1 T1354f13(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.is_instance_free */
extern T1 T1353f18(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.is_instance_free */
extern T1 T1352f14(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.is_instance_free */
extern T1 T1349f16(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.is_instance_free */
extern T1 T1348f13(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.is_instance_free */
extern T1 T1347f13(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.is_instance_free */
extern T1 T1346f13(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.is_instance_free */
extern T1 T1345f13(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.is_instance_free */
extern T1 T1344f17(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1298f21(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1297f21(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_instance_free */
extern T1 T1296f22(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_instance_free */
extern T1 T1295f22(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_instance_free */
extern T1 T1293f24(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_instance_free */
extern T1 T1292f24(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_instance_free */
extern T1 T1291f40(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1290f40(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_instance_free */
extern T1 T1289f40(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_instance_free */
extern T1 T1288f40(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_instance_free */
extern T1 T1287f16(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_instance_free */
extern T1 T1286f16(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_instance_free */
extern T1 T1285f14(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_instance_free */
extern T1 T1250f22(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.is_instance_free */
extern T1 T1151f17(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_instance_free */
extern T1 T1015f18(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_instance_free */
extern T1 T1012f17(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_instance_free */
extern T1 T983f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_instance_free */
extern T1 T969f19(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.is_instance_free */
extern T1 T920f19(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION_LIST.is_instance_free */
extern T1 T868f5(GE_context* ac, T0* C);
/* ET_ELSEIF_EXPRESSION.is_instance_free */
extern T1 T865f6(GE_context* ac, T0* C);
/* ET_CALL_AGENT.is_instance_free */
extern T1 T796f19(GE_context* ac, T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_instance_free */
extern T1 T1788f4(GE_context* ac, T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_instance_free */
extern T1 T782f10(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.is_instance_free */
extern T1 T793f17(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T1787f6(GE_context* ac, T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_instance_free */
extern T1 T320f11(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.is_instance_free */
extern T1 T767f24(GE_context* ac, T0* C);
/* ET_LOOP_INVARIANTS.is_instance_free */
extern T1 T966f7(GE_context* ac, T0* C);
/* ET_VOID.is_instance_free */
extern T1 T756f21(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_instance_free */
extern T1 T403f44(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.is_instance_free */
extern T1 T364f20(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T355f13(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.is_instance_free */
extern T1 T354f14(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.is_instance_free */
extern T1 T353f16(GE_context* ac, T0* C);
/* ET_RESULT.is_instance_free */
extern T1 T346f21(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_instance_free */
extern T1 T327f20(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T325f15(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.is_instance_free */
extern T1 T324f18(GE_context* ac, T0* C);
/* ET_CURRENT.is_instance_free */
extern T1 T319f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_instance_free */
extern T1 T199f83(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_feature_name */
extern T1 T199f95(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1915f6(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.position */
extern T0* T1914f6(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.position */
extern T0* T1913f6(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1775f8(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1362f19(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1361f24(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1360f22(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1359f21(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T1358f25(GE_context* ac, T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T1357f23(GE_context* ac, T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T1356f10(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.position */
extern T0* T1355f16(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T1354f9(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T1353f11(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T1352f10(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T1349f11(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T1348f9(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T1347f9(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T1346f9(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T1345f9(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T1344f13(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T1298f16(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T1297f16(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T1296f17(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T1295f17(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T1293f19(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T1292f19(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.position */
extern T0* T1291f35(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.position */
extern T0* T1290f35(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T1289f35(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T1288f35(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T1287f28(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T1286f28(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T1285f9(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T1250f14(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.position */
extern T0* T1151f13(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T1015f13(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T1015f20(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T1012f13(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T983f10(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T969f14(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T969f14p1(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T969f21(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.position */
extern T0* T920f15(GE_context* ac, T0* C);
/* ET_CALL_AGENT.position */
extern T0* T796f14(GE_context* ac, T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T793f11(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.position */
extern T0* T767f20(GE_context* ac, T0* C);
/* ET_VOID.position */
extern T0* T756f14(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T403f32(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T364f13(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T355f9(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.position */
extern T0* T354f9(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.position */
extern T0* T353f12(GE_context* ac, T0* C);
/* ET_RESULT.position */
extern T0* T346f14(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T327f15(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T327f16(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.position */
extern T0* T325f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.position */
extern T0* T324f11(GE_context* ac, T0* C);
/* ET_CURRENT.position */
extern T0* T319f12(GE_context* ac, T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1915f22(GE_context* ac, T0* C);
/* ET_CONVERT_FROM_EXPRESSION.last_leaf */
extern T0* T1914f22(GE_context* ac, T0* C);
/* ET_CONVERT_BUILTIN_EXPRESSION.last_leaf */
extern T0* T1913f17(GE_context* ac, T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1775f16(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1362f35(GE_context* ac, T0* C);
extern T1 T1362f35ot1(T0* a1, T0** a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T782f11(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1361f41(GE_context* ac, T0* C);
extern T1 T1361f41ot1(T0* a1, T0** a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1360f37(GE_context* ac, T0* C);
extern T1 T1360f37ot1(T0* a1, T0** a2);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1359f36(GE_context* ac, T0* C);
extern T1 T1359f36ot1(T0* a1, T0** a2);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1358f42(GE_context* ac, T0* C);
extern T1 T1358f42ot1(T0* a1, T0** a2);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1357f38(GE_context* ac, T0* C);
extern T1 T1357f38ot1(T0* a1, T0** a2);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T1356f23(GE_context* ac, T0* C);
/* ET_OLD_OBJECT_TEST.last_leaf */
extern T0* T1355f28(GE_context* ac, T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T1354f20(GE_context* ac, T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T1353f25(GE_context* ac, T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T1352f21(GE_context* ac, T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T1349f23(GE_context* ac, T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T1348f20(GE_context* ac, T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T1347f20(GE_context* ac, T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T1346f20(GE_context* ac, T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T1345f20(GE_context* ac, T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T1344f24(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T1298f41(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T1297f41(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T1296f38(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T1295f38(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T1293f40(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T1292f40(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.last_leaf */
extern T0* T1291f62(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1290f62(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T1289f62(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T1288f62(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T1287f42(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T1286f46(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T1285f42(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T1250f41(GE_context* ac, T0* C);
/* ET_NAMED_OBJECT_TEST.last_leaf */
extern T0* T1151f25(GE_context* ac, T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T1015f27(GE_context* ac, T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T1012f28(GE_context* ac, T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T983f21(GE_context* ac, T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T969f27(GE_context* ac, T0* C);
/* ET_IF_EXPRESSION.last_leaf */
extern T0* T920f26(GE_context* ac, T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T796f29(GE_context* ac, T0* C);
extern T1 T796f29ot1(T0* a1, T0** a2);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T793f24(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T692f100(GE_context* ac, T0* C);
/* ET_ACROSS_EXPRESSION.last_leaf */
extern T0* T767f32(GE_context* ac, T0* C);
/* ET_VOID.last_leaf */
extern T0* T756f28(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T403f62(GE_context* ac, T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T364f24(GE_context* ac, T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T355f20(GE_context* ac, T0* C);
/* ET_OBJECT_EQUALITY_EXPRESSION.last_leaf */
extern T0* T354f22(GE_context* ac, T0* C);
/* ET_OBJECT_TEST.last_leaf */
extern T0* T353f23(GE_context* ac, T0* C);
/* ET_RESULT.last_leaf */
extern T0* T346f29(GE_context* ac, T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T327f27(GE_context* ac, T0* C);
/* ET_UNQUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T325f27(GE_context* ac, T0* C);
/* ET_QUALIFIED_CALL_EXPRESSION.last_leaf */
extern T0* T324f25(GE_context* ac, T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T319f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1547f7(GE_context* ac, T0* C, T0* a1);
extern T1 T1547f7ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T1547f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1547f12(GE_context* ac, T0* C, T0* a1);
extern T1 T1547f12ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.index_of */
extern T6 T1547f12p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T563f10(GE_context* ac, T0* C, T0* a1);
extern T1 T563f10ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T563f10p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T563f13(GE_context* ac, T0* C, T0* a1);
extern T1 T563f13ot1(T0* a1, T0** a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.index_of */
extern T6 T563f13p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T556f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T555f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T356f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T340f37(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T307f7(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T307f7p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T307f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.index_of */
extern T6 T307f11p1(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T256f21(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T1547f10(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T563f14(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T556f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T555f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T356f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T340f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T307f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T256f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T1547f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T563f7(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T556f50(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T555f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T356f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T340f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T307f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T256f22(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T556f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T555f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T356f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T340f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T256f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T1547f13(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T563f12(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T556f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T555f30(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T356f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T340f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T307f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T256f48(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T556f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T555f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T356f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T340f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T256f39(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T1547f14(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T563f11(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T556f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T555f29(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T356f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T340f34(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T307f5(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T256f41(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.can_be_void */
extern T1 T1547f11(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.can_be_void */
extern T1 T563f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.can_be_void */
extern T1 T556f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.can_be_void */
extern T1 T555f38(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.can_be_void */
extern T1 T356f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.can_be_void */
extern T1 T340f31(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.can_be_void */
extern T1 T307f8(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.can_be_void */
extern T1 T256f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T556f51(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T555f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T356f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T340f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T256f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T1547f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T563f9(GE_context* ac, T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T307f10(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T1757f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.named_types */
extern T0* T1756f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T687f13(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.named_types */
extern T0* T543f2(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T267f8(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T1757f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_SUBLIST.conforms_to_types */
extern T1 T1756f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T687f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.conforms_to_types */
extern T1 T543f7(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T267f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T1757f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_named_types */
extern T1 T1756f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T687f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_named_types */
extern T1 T543f6(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T267f5(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T1757f7(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_anchored_type */
extern T1 T1756f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T687f15(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_anchored_type */
extern T1 T543f8(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T267f16(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T1757f8(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_formal_types */
extern T1 T1756f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T687f16(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_formal_types */
extern T1 T543f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T267f17(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T1757f9(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.depends_on_qualified_anchored_type */
extern T1 T1756f11(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T687f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.depends_on_qualified_anchored_type */
extern T1 T543f11(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.depends_on_qualified_anchored_type */
extern T1 T267f18(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T1757f10(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.index_of_label */
extern T6 T1756f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T687f20(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.index_of_label */
extern T6 T543f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T267f19(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T1757f11(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.has_identifier_anchored_type */
extern T1 T1756f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T687f21(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.has_identifier_anchored_type */
extern T1 T543f13(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_identifier_anchored_type */
extern T1 T267f20(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T1757f12(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.resolved_formal_parameters */
extern T0* T1756f14(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T687f22(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.resolved_formal_parameters */
extern T0* T543f14(GE_context* ac, T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T267f21(GE_context* ac, T0* C, T0* a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T1757f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_SUBLIST.same_syntactical_types */
extern T1 T1756f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T687f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.same_syntactical_types */
extern T1 T543f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T267f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T1757f17(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.is_empty */
extern T1 T1756f4(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T687f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.is_empty */
extern T1 T543f5(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T267f11(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T1757f16(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.type */
extern T0* T1756f18(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T687f10(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.type */
extern T0* T543f4(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T267f9(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T267f7(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T1757f15(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.actual_parameter */
extern T0* T1756f19(GE_context* ac, T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.actual_parameter */
extern T0* T687f24(GE_context* ac, T0* C, T6 a1);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.actual_parameter */
extern T0* T543f10(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.actual_parameter */
extern T0* T267f6(GE_context* ac, T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_SUBLIST.count */
extern T6 T1756f17(GE_context* ac, T0* C);
/* ET_UNFOLDED_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T1757f18(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_SUBLIST.last_leaf */
extern T0* T1756f21(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.null_leaf */
extern T0* T82f1511(GE_context* ac, T0* C);
/* ET_AST_NULL_LEAF.make */
extern T0* T1974c5(GE_context* ac);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T687f25(GE_context* ac, T0* C);
/* ET_UNFOLDED_EMPTY_TUPLE_ACTUAL_PARAMETERS.last_leaf */
extern T0* T543f16(GE_context* ac, T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T267f25(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference_mark */
extern T1 T1305f3(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_reference */
extern T1 T1305f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference_mark */
extern T1 T764f69(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_reference */
extern T1 T764f14(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference_mark */
extern T1 T692f4(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_reference */
extern T1 T692f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference_mark */
extern T1 T535f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_reference */
extern T1 T535f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_reference_mark */
extern T1 T439f18(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference_mark */
extern T1 T385f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_reference */
extern T1 T385f14(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate_mark */
extern T1 T764f6(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separate */
extern T1 T764f19(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate_mark */
extern T1 T692f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separate */
extern T1 T692f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate_mark */
extern T1 T439f7(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T439f14(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate_mark */
extern T1 T385f7(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separate */
extern T1 T385f19(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.overridden_type_mark */
extern T0* T1305f12(GE_context* ac, T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.implicit_type_mark */
extern T0* T82f47(GE_context* ac, T0* C, T1 a1, T1 a2, T1 a3, T1 a4, T1 a5);
/* ET_TOKEN_CONSTANTS.implicit_no_type_mark */
extern T0* T82f84(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_reference_type_mark */
extern T0* T82f83(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_reference_mark */
extern void T384f18(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_expanded_type_mark */
extern T0* T82f82(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.set_expanded_mark */
extern void T384f17(GE_context* ac, T0* C, T1 a1);
/* ET_TOKEN_CONSTANTS.implicit_separate_type_mark */
extern T0* T82f81(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_reference_type_mark */
extern T0* T82f80(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_separate_expanded_type_mark */
extern T0* T82f79(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_reference_type_mark */
extern T0* T82f77(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_expanded_type_mark */
extern T0* T82f76(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_type_mark */
extern T0* T82f75(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_reference_type_mark */
extern T0* T82f74(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_detachable_separate_expanded_type_mark */
extern T0* T82f73(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_reference_type_mark */
extern T0* T82f72(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_expanded_type_mark */
extern T0* T82f71(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_reference_type_mark */
extern T0* T82f70(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.implicit_attached_separate_expanded_type_mark */
extern T0* T82f69(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.tokens */
extern T0* T1305f16(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.overridden_type_mark */
extern T0* T764f12(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.overridden_type_mark */
extern T0* T692f12(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.overridden_type_mark */
extern T0* T535f17(GE_context* ac, T0* C, T0* a1);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.tokens */
extern T0* T535f14(GE_context* ac, T0* C);
/* ET_KEYWORD.overridden_type_mark */
extern T0* T439f31(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.overridden_type_mark */
extern T0* T385f64(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.overridden_type_mark */
extern T0* T384f13(GE_context* ac, T0* C, T0* a1);
/* ET_IMPLICIT_TYPE_MARK.tokens */
extern T0* T384f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.text */
extern T0* T1305f10(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.text */
extern T0* T764f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.text */
extern T0* T692f11(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.text */
extern T0* T535f9(GE_context* ac, T0* C);
/* ET_SYMBOL.text */
extern T0* T385f11(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.text */
extern T0* T384f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_implicit_mark */
extern T1 T1305f9(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_implicit_mark */
extern T1 T764f9(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_implicit_mark */
extern T1 T692f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_implicit_mark */
extern T1 T535f8(GE_context* ac, T0* C);
/* ET_KEYWORD.is_implicit_mark */
extern T1 T439f8(GE_context* ac, T0* C);
/* ET_SYMBOL.is_implicit_mark */
extern T1 T385f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expandedness_mark */
extern T1 T1305f7(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expandedness_mark */
extern T1 T764f7(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expandedness_mark */
extern T1 T692f8(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expandedness_mark */
extern T1 T535f4(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expandedness_mark */
extern T1 T439f4(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expandedness_mark */
extern T1 T385f8(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_expandedness_mark */
extern T1 T384f6(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded_mark */
extern T1 T1305f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_expanded */
extern T1 T1305f13(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded_mark */
extern T1 T764f61(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_expanded */
extern T1 T764f13(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded_mark */
extern T1 T692f72(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_expanded */
extern T1 T692f14(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded_mark */
extern T1 T535f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_expanded */
extern T1 T535f11(GE_context* ac, T0* C);
/* ET_KEYWORD.is_expanded_mark */
extern T1 T439f9(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded_mark */
extern T1 T385f3(GE_context* ac, T0* C);
/* ET_SYMBOL.is_expanded */
extern T1 T385f13(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_separateness_mark */
extern T1 T1305f8(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_separateness_mark */
extern T1 T764f8(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_separateness_mark */
extern T1 T692f9(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_separateness_mark */
extern T1 T535f5(GE_context* ac, T0* C);
/* ET_KEYWORD.is_separateness_mark */
extern T1 T439f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_separateness_mark */
extern T1 T385f9(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_separateness_mark */
extern T1 T384f7(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attachment_mark */
extern T1 T1305f15(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attachment_mark */
extern T1 T764f20(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attachment_mark */
extern T1 T692f21(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attachment_mark */
extern T1 T535f6(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attachment_mark */
extern T1 T439f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attachment_mark */
extern T1 T385f20(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.is_attachment_mark */
extern T1 T384f10(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_attached_mark */
extern T1 T1305f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached_mark */
extern T1 T764f4(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_attached */
extern T1 T764f15(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached_mark */
extern T1 T692f5(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_attached */
extern T1 T692f16(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_attached_mark */
extern T1 T535f3(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached */
extern T1 T439f12(GE_context* ac, T0* C);
/* ET_KEYWORD.is_attached_mark */
extern T1 T439f20(GE_context* ac, T0* C);
/* ET_KEYWORD.is_bang */
extern T1 T439f13(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached_mark */
extern T1 T385f5(GE_context* ac, T0* C);
/* ET_SYMBOL.is_attached */
extern T1 T385f15(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.is_detachable_mark */
extern T1 T1305f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable_mark */
extern T1 T764f5(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_detachable */
extern T1 T764f17(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable_mark */
extern T1 T692f6(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_detachable */
extern T1 T692f18(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.is_detachable_mark */
extern T1 T535f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable */
extern T1 T439f16(GE_context* ac, T0* C);
/* ET_KEYWORD.is_detachable_mark */
extern T1 T439f10(GE_context* ac, T0* C);
/* ET_KEYWORD.is_question_mark */
extern T1 T439f17(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable_mark */
extern T1 T385f6(GE_context* ac, T0* C);
/* ET_SYMBOL.is_detachable */
extern T1 T385f17(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SYMBOL_SEPARATE_KEYWORD.position */
extern T0* T1305f11(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.position */
extern T0* T764f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T692f61(GE_context* ac, T0* C);
/* ET_ATTACHMENT_SEPARATE_KEYWORDS.position */
extern T0* T535f16(GE_context* ac, T0* C);
/* ET_KEYWORD.position */
extern T0* T439f21(GE_context* ac, T0* C);
/* ET_SYMBOL.position */
extern T0* T385f60(GE_context* ac, T0* C);
/* ET_IMPLICIT_TYPE_MARK.position */
extern T0* T384f12(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1578f5(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1479f34(GE_context* ac, T0* C);
/* ET_LIKE_N.actual_parameter */
extern T0* T1382f7(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.actual_parameter */
extern T0* T1332f41(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.actual_parameter */
extern T0* T1331f38(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T1330f39(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1328f5(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T1303f56(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T912f49(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T542f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T276f43(GE_context* ac, T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T83f129(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T81f42(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1578f3(GE_context* ac, T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T1328f3(GE_context* ac, T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1578f7(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1479f63(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type */
extern T0* T1382f62(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type */
extern T0* T1332f65(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type */
extern T0* T1331f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T1330f67(GE_context* ac, T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1328f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1303f70(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T912f69(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T542f62(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T276f97(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T83f233(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T81f103(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f109(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f109ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f109ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.classes_in_group */
extern T0* T191f109ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.initial_classes_in_group_capacity */
extern T6 T191f114(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f141(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f141ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f141ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.classes_in_group */
extern T0* T71f141ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T71f146(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f154(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f154ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f154ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.classes_in_group */
extern T0* T65f154ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.initial_classes_in_group_capacity */
extern T6 T65f157(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f151(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f151ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f151ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.classes_in_group */
extern T0* T62f151ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.initial_classes_in_group_capacity */
extern T6 T62f152(GE_context* ac, T0* C);
/* ET_SYSTEM.classes_in_group */
extern T0* T35f126(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f126ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f126ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.classes_in_group */
extern T0* T35f126ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.initial_classes_in_group_capacity */
extern T6 T35f132(GE_context* ac, T0* C);
/* ET_LIBRARY.full_name */
extern T0* T486f96(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_name */
extern T0* T486f97(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.string_ */
extern T0* T486f98(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_name */
extern T0* T476f95(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_name */
extern T0* T476f98(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_DOTNET_ASSEMBLY.string_ */
extern T0* T476f100(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_name */
extern T0* T247f105(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_name */
extern T0* T247f107(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.string_ */
extern T0* T247f109(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_name */
extern T0* T234f98(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_name */
extern T0* T234f100(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.string_ */
extern T0* T234f102(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.full_name */
extern T0* T215f95(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_name */
extern T0* T215f101(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.string_ */
extern T0* T215f105(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.full_name */
extern T0* T191f107(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_name */
extern T0* T71f128(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_name */
extern T0* T65f141(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_name */
extern T0* T62f136(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_name */
extern T0* T35f121(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.relative_lower_name */
extern T0* T71f140(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_SYSTEM.string_ */
extern T0* T71f134(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.lower_name */
extern T0* T71f145(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.relative_lower_name */
extern T0* T65f151(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.string_ */
extern T0* T65f144(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.lower_name */
extern T0* T65f152(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.relative_lower_name */
extern T0* T62f148(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.string_ */
extern T0* T62f140(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.lower_name */
extern T0* T62f149(GE_context* ac, T0* C);
/* ET_SYSTEM.relative_lower_name */
extern T0* T35f125(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.string_ */
extern T0* T35f128(GE_context* ac, T0* C);
/* ET_SYSTEM.lower_name */
extern T0* T35f131(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.relative_name */
extern T0* T71f131(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_SYSTEM.relative_name */
extern T0* T65f142(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_XACE_SYSTEM.relative_name */
extern T0* T62f137(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_SYSTEM.relative_name */
extern T0* T35f123(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.has_master_class */
extern T1 T191f108(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.has_master_class */
extern T1 T71f130(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.has_master_class */
extern T1 T65f140(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_master_class */
extern T1 T62f135(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.has_master_class */
extern T1 T35f122(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.hash_code */
extern T6 T486f94(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.hash_code */
extern T6 T476f93(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.hash_code */
extern T6 T247f104(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.hash_code */
extern T6 T234f97(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.hash_code */
extern T6 T215f93(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.hash_code */
extern T6 T191f105(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.hash_code */
extern T6 T71f129(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.hash_code */
extern T6 T65f139(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.hash_code */
extern T6 T62f134(GE_context* ac, T0* C);
/* ET_SYSTEM.hash_code */
extern T6 T35f130(GE_context* ac, T0* C);
/* ET_LIBRARY.master_class */
extern T0* T486f93(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_LIBRARY.master_class */
extern T0* T191f120(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_SYSTEM.master_class */
extern T0* T71f144(GE_context* ac, T0* C, T0* a1);
/* ET_ECF_SYSTEM.master_class */
extern T0* T65f149(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_SYSTEM.master_class */
extern T0* T62f145(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM.master_class */
extern T0* T35f119(GE_context* ac, T0* C, T0* a1);
/* ET_LIBRARY.kind_name */
extern T0* T486f102(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.kind_name */
extern T0* T476f102(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.kind_name */
extern T0* T247f115(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.kind_name */
extern T0* T234f108(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.kind_name */
extern T0* T215f98(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.kind_name */
extern T0* T191f110(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.kind_name */
extern T0* T71f147(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.kind_name */
extern T0* T65f155(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.kind_name */
extern T0* T62f153(GE_context* ac, T0* C);
/* ET_SYSTEM.kind_name */
extern T0* T35f133(GE_context* ac, T0* C);
/* ET_LIBRARY.full_lower_name */
extern T0* T486f100(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.relative_lower_name */
extern T0* T486f104(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LIBRARY.lower_name */
extern T0* T486f106(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T476f101(GE_context* ac, T0* C, T2 a1);
/* ET_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T476f104(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T247f113(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.relative_lower_name */
extern T0* T247f114(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T234f106(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T234f107(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T215f99(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_DOTNET_ASSEMBLY.relative_lower_name */
extern T0* T215f103(GE_context* ac, T0* C, T0* a1, T2 a2);
/* ET_ECF_LIBRARY.full_lower_name */
extern T0* T191f111(GE_context* ac, T0* C, T2 a1);
/* ET_LACE_SYSTEM.full_lower_name */
extern T0* T71f148(GE_context* ac, T0* C, T2 a1);
/* ET_ECF_SYSTEM.full_lower_name */
extern T0* T65f156(GE_context* ac, T0* C, T2 a1);
/* ET_XACE_SYSTEM.full_lower_name */
extern T0* T62f154(GE_context* ac, T0* C, T2 a1);
/* ET_SYSTEM.full_lower_name */
extern T0* T35f134(GE_context* ac, T0* C, T2 a1);
/* ET_LIBRARY.shortest_path */
extern T0* T486f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LIBRARY.shortest_path */
extern T0* T486f103ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LIBRARY.shortest_path */
extern T0* T486f103ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LIBRARY.shortest_path */
extern T0* T486f103ac3(GE_context* ac, T0* a1, T0* a2);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].negated */
extern T1 T1541f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* [attached] PREDICATE [[attached] TUPLE [[attached] ET_UNIVERSE]].set_rout_disp_final */
extern void T1542f8(GE_context* ac, T0* C, T14 a1, T14 a2, T14 a3, T0* a4, T1 a5, T6 a6);
/* ET_LIBRARY.insert_in_hash_table */
extern void T486f185(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].force_first */
extern void T1272f12(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put */
extern void T1272f15(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_cursors_right */
extern void T1272f18(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].set_position */
extern void T1660f5(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].move_right */
extern void T1272f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].force */
extern void T1659f4(GE_context* ac, T0* C, T0* a1, T0* a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].fill_with */
extern void T1658f7(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].extend */
extern void T1658f8(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].put_last */
extern void T1272f16(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].resize */
extern void T1272f14(GE_context* ac, T0* C, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1659f2(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].aliased_resized_area */
extern T0* T1658f4(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_capacity */
extern T6 T1272f8(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].extendible */
extern T1 T1272f7(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].before */
extern T1 T1539f4(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].back */
extern void T1539f16(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_back */
extern void T1538f60(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].add_traversing_cursor */
extern void T1538f62(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_next_cursor */
extern void T1539f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_position */
extern void T1539f18(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].remove_traversing_cursor */
extern void T1538f61(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_before */
extern void T1539f19(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_item */
extern T6 T1538f25(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].finish */
extern void T1539f15(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_finish */
extern void T1538f59(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_off */
extern T1 T1538f35(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].off */
extern T1 T1539f10(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].is_empty */
extern T1 T1538f34(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].forth */
extern void T1539f14(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_forth */
extern void T1538f58(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_after */
extern void T1539f17(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].go_after */
extern void T1539f13(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_go_after */
extern void T1538f57(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].has */
extern T1 T1538f20(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].search_position */
extern void T1538f38(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].hash_position */
extern T6 T1538f24(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_item */
extern T0* T1538f27(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_item */
extern T6 T1538f32(GE_context* ac, T0* C, T6 a1);
/* ET_LIBRARY.universe_actions */
extern T0* T486f105(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_UNIVERSE].default_create */
extern T0* T1541c2(GE_context* ac);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].item */
extern T6 T1539f9(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_item */
extern T6 T1538f31(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_item */
extern T6 T1538f33(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].key */
extern T0* T1539f7(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_key */
extern T0* T1538f30(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].after */
extern T1 T1539f5(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].start */
extern void T1539f12(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].cursor_start */
extern void T1538f56(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_cursor */
extern T0* T1538f21(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE_CURSOR [[attached] INTEGER_32, [attached] ET_UNIVERSE].make */
extern T0* T1539c11(GE_context* ac, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].force_last */
extern void T1538f37(GE_context* ac, T0* C, T6 a1, T0* a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_put */
extern void T1538f45(GE_context* ac, T0* C, T0* a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_put */
extern void T1538f44(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_put */
extern void T1538f43(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].resize */
extern void T1538f42(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].clashes_resize */
extern void T1538f50(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].special_integer_ */
extern T0* T1538f28(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].key_storage_resize */
extern void T1538f49(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_resize */
extern void T1538f48(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].slots_resize */
extern void T1538f47(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_modulus */
extern T6 T1538f22(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].new_capacity */
extern T6 T1538f23(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].item_storage_put */
extern void T1538f41(GE_context* ac, T0* C, T6 a1, T6 a2);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].unset_found_item */
extern void T1538f40(GE_context* ac, T0* C);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_map */
extern T0* T1538c36(GE_context* ac, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_with_equality_testers */
extern void T1538f39(GE_context* ac, T0* C, T6 a1, T0* a2, T0* a3);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_sparse_container */
extern void T1538f46(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].set_internal_cursor */
extern void T1538f55(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_slots */
extern void T1538f54(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_clashes */
extern void T1538f53(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_key_storage */
extern void T1538f52(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_HASH_TABLE [[attached] INTEGER_32, [attached] ET_UNIVERSE].make_item_storage */
extern void T1538f51(GE_context* ac, T0* C, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1272c11(GE_context* ac, T6 a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].set_internal_cursor */
extern void T1272f13(GE_context* ac, T0* C, T0* a1);
/* [attached] DS_ARRAYED_LIST [[attached] ET_ADAPTED_UNIVERSE].new_cursor */
extern T0* T1272f6(GE_context* ac, T0* C);
/* [attached] DS_ARRAYED_LIST_CURSOR [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1660c4(GE_context* ac, T0* a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].make */
extern T0* T1659f1(GE_context* ac, T0* C, T6 a1);
/* [attached] SPECIAL [[attached] ET_ADAPTED_UNIVERSE].make_empty */
extern T0* T1658c5(GE_context* ac, T6 a1);
/* [attached] KL_SPECIAL_ROUTINES [[attached] ET_ADAPTED_UNIVERSE].default_create */
extern T0* T1659c3(GE_context* ac);
/* ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T476f103(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T476f103ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T476f103ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_DOTNET_ASSEMBLY.shortest_path */
extern T0* T476f103ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T476f183(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DOTNET_ASSEMBLY.universe_actions */
extern T0* T476f105(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T247f116(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T247f116ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T247f116ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_GAC_ASSEMBLY.shortest_path */
extern T0* T247f116ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.insert_in_hash_table */
extern void T247f206(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.universe_actions */
extern T0* T247f117(GE_context* ac, T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T234f109(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T234f109ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T234f109ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_DOTNET_ASSEMBLY.shortest_path */
extern T0* T234f109ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T234f192(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_DOTNET_ASSEMBLY.universe_actions */
extern T0* T234f110(GE_context* ac, T0* C);
/* ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T215f100(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T215f100ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T215f100ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_DOTNET_ASSEMBLY.shortest_path */
extern T0* T215f100ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_DOTNET_ASSEMBLY.insert_in_hash_table */
extern void T215f181(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_DOTNET_ASSEMBLY.universe_actions */
extern T0* T215f104(GE_context* ac, T0* C);
/* ET_ECF_LIBRARY.shortest_path */
extern T0* T191f112(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f112ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f112ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_LIBRARY.shortest_path */
extern T0* T191f112ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_LIBRARY.insert_in_hash_table */
extern void T191f209(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_LIBRARY.universe_actions */
extern T0* T191f116(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.shortest_path */
extern T0* T71f133(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f133ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f133ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.shortest_path */
extern T0* T71f133ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.insert_in_hash_table */
extern void T71f260(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_LACE_SYSTEM.universe_actions */
extern T0* T71f135(GE_context* ac, T0* C);
/* ET_ECF_SYSTEM.shortest_path */
extern T0* T65f153(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f153ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f153ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_ECF_SYSTEM.shortest_path */
extern T0* T65f153ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.insert_in_hash_table */
extern void T65f252(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_ECF_SYSTEM.universe_actions */
extern T0* T65f138(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.shortest_path */
extern T0* T62f139(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f139ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f139ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.shortest_path */
extern T0* T62f139ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.insert_in_hash_table */
extern void T62f270(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_XACE_SYSTEM.universe_actions */
extern T0* T62f141(GE_context* ac, T0* C);
/* ET_SYSTEM.shortest_path */
extern T0* T35f127(GE_context* ac, T0* C, T0* a1);
/* Creation of agent #1 in feature ET_SYSTEM.shortest_path */
extern T0* T35f127ac1(GE_context* ac, T0* a1, T0* a2, T6 a3);
/* Creation of agent #2 in feature ET_SYSTEM.shortest_path */
extern T0* T35f127ac2(GE_context* ac, T0* a1);
/* Creation of agent #3 in feature ET_SYSTEM.shortest_path */
extern T0* T35f127ac3(GE_context* ac, T0* a1, T0* a2);
/* ET_SYSTEM.insert_in_hash_table */
extern void T35f208(GE_context* ac, T0* C, T0* a1, T6 a2, T0* a3);
/* ET_SYSTEM.universe_actions */
extern T0* T35f129(GE_context* ac, T0* C);
/* ET_LIBRARY.adapted_universe */
extern T0* T486f95(GE_context* ac, T0* C, T0* a1);
extern T1 T486f95ot1(T0* a1, T0** a2);
extern T1 T486f95ot2(T0* a1, T0** a2);
/* ET_ADAPTED_DOTNET_ASSEMBLIES.adapted_dotnet_assembly */
extern T0* T214f5(GE_context* ac, T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.adapted_library */
extern T0* T192f5(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T476f94(GE_context* ac, T0* C, T0* a1);
extern T1 T476f94ot1(T0* a1, T0** a2);
/* [attached] DS_ARRAYED_LIST [[attached] ET_DOTNET_ASSEMBLY].has */
extern T1 T1395f10(GE_context* ac, T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.adapted_universe */
extern T0* T247f112(GE_context* ac, T0* C, T0* a1);
extern T1 T247f112ot1(T0* a1, T0** a2);
/* ET_LACE_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T234f105(GE_context* ac, T0* C, T0* a1);
extern T1 T234f105ot1(T0* a1, T0** a2);
/* ET_ECF_DOTNET_ASSEMBLY.adapted_universe */
extern T0* T215f94(GE_context* ac, T0* C, T0* a1);
extern T1 T215f94ot1(T0* a1, T0** a2);
/* ET_ECF_LIBRARY.adapted_universe */
extern T0* T191f106(GE_context* ac, T0* C, T0* a1);
extern T1 T191f106ot1(T0* a1, T0** a2);
extern T1 T191f106ot2(T0* a1, T0** a2);
/* ET_LACE_SYSTEM.adapted_universe */
extern T0* T71f132(GE_context* ac, T0* C, T0* a1);
extern T1 T71f132ot1(T0* a1, T0** a2);
extern T1 T71f132ot2(T0* a1, T0** a2);
/* ET_ECF_SYSTEM.adapted_universe */
extern T0* T65f143(GE_context* ac, T0* C, T0* a1);
extern T1 T65f143ot1(T0* a1, T0** a2);
extern T1 T65f143ot2(T0* a1, T0** a2);
/* ET_XACE_SYSTEM.adapted_universe */
extern T0* T62f138(GE_context* ac, T0* C, T0* a1);
extern T1 T62f138ot1(T0* a1, T0** a2);
extern T1 T62f138ot2(T0* a1, T0** a2);
/* ET_SYSTEM.adapted_universe */
extern T0* T35f124(GE_context* ac, T0* C, T0* a1);
extern T1 T35f124ot1(T0* a1, T0** a2);
extern T1 T35f124ot2(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_type_with_type_marks */
extern T1 T421f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f12ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T421f11(GE_context* ac, T0* C);
/* ET_TOKEN_CONSTANTS.like_0 */
extern T0* T82f261(GE_context* ac, T0* C);
/* ET_LIKE_N.make_zero */
extern T0* T1382c68(GE_context* ac, T0* a1);
/* ET_LIKE_N.tokens */
extern T0* T1382f13(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.context_same_named_type_with_type_marks */
extern T1 T276f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_type_with_type_marks */
extern T1 T83f181(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_type_with_type_marks */
extern T1 T81f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.named_type_with_type_mark */
extern T0* T421f13(GE_context* ac, T0* C, T0* a1);
extern T1 T421f13ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_named_type_with_type_mark */
extern T0* T276f64(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_named_type_with_type_mark */
extern T0* T83f189(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type_with_type_mark */
extern T0* T81f63(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_base_class */
extern T0* T421f19(GE_context* ac, T0* C);
extern T1 T421f19ot1(T0* a1, T0** a2);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type_with_type_marks */
extern T1 T421f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f26ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T276f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_class_type_with_type_marks */
extern T1 T83f182(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_class_type_with_type_marks */
extern T1 T81f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type_with_type_marks */
extern T1 T421f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f27ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T276f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_tuple_type_with_type_marks */
extern T1 T83f183(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_tuple_type_with_type_marks */
extern T1 T81f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type_with_type_marks */
extern T1 T421f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f21ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T276f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_class_type_with_type_marks */
extern T1 T83f184(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_class_type_with_type_marks */
extern T1 T81f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type_with_type_marks */
extern T1 T421f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f22ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T276f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_tuple_type_with_type_marks */
extern T1 T83f185(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_tuple_type_with_type_marks */
extern T1 T81f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type_with_type_marks */
extern T1 T421f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T421f29ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T276f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_class_type_with_type_marks */
extern T1 T83f187(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_class_type_with_type_marks */
extern T1 T81f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type_with_type_marks */
extern T1 T421f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T421f30ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T276f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_tuple_type_with_type_marks */
extern T1 T83f188(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type_with_type_marks */
extern T1 T81f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.is_type_expanded_with_type_mark */
extern T1 T421f23(GE_context* ac, T0* C, T0* a1);
extern T1 T421f23ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T276f65(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_expanded_with_type_mark */
extern T1 T83f190(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_expanded_with_type_mark */
extern T1 T81f64(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_with_type_mark */
extern T0* T421f31(GE_context* ac, T0* C, T0* a1);
extern T1 T421f31ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_with_type_mark */
extern T0* T276f66(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_base_type_with_type_mark */
extern T0* T83f191(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_with_type_mark */
extern T0* T81f65(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_detachable_with_type_mark */
extern T1 T421f32(GE_context* ac, T0* C, T0* a1);
extern T1 T421f32ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T276f67(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_detachable_with_type_mark */
extern T1 T83f192(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_detachable_with_type_mark */
extern T1 T81f66(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type_with_type_marks */
extern T1 T421f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T421f24ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T276f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_to_type_with_type_marks */
extern T1 T83f193(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_to_type_with_type_marks */
extern T1 T81f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type_with_type_marks */
extern T1 T421f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f45ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T276f83(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T83f216(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type_with_type_marks */
extern T1 T81f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T421f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T421f46ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T276f84(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f217(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.is_type_attached_with_type_mark */
extern T1 T421f43(GE_context* ac, T0* C, T0* a1);
extern T1 T421f43ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_attached_with_type_mark */
extern T1 T276f85(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_attached_with_type_mark */
extern T1 T83f218(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_attached_with_type_mark */
extern T1 T81f91(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference_with_type_mark */
extern T1 T421f47(GE_context* ac, T0* C, T0* a1);
extern T1 T421f47ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_is_type_reference_with_type_mark */
extern T1 T276f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference_with_type_mark */
extern T1 T83f219(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference_with_type_mark */
extern T1 T81f92(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T421f10(GE_context* ac, T0* C);
/* ET_CLASS.context_named_type */
extern T0* T83f208(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T81f81(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.scoop_mode */
extern T1 T421f6(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.scoop_mode */
extern T1 T276f32(GE_context* ac, T0* C);
/* ET_CLASS.scoop_mode */
extern T1 T83f117(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.scoop_mode */
extern T1 T81f24(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_type_with_type_marks */
extern T1 T421f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
extern T1 T421f50ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_same_base_type_with_type_marks */
extern T1 T276f102(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.context_same_base_type_with_type_marks */
extern T1 T83f237(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.context_same_base_type_with_type_marks */
extern T1 T81f107(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NESTED_TYPE_CONTEXT.attachment_type_conformance_mode */
extern T1 T421f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.attachment_type_conformance_mode */
extern T1 T276f28(GE_context* ac, T0* C);
/* ET_CLASS.attachment_type_conformance_mode */
extern T1 T83f112(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.attachment_type_conformance_mode */
extern T1 T81f22(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.to_nested_type_context */
extern T0* T421f8(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.to_nested_type_context */
extern T0* T276f34(GE_context* ac, T0* C);
/* ET_CLASS.to_nested_type_context */
extern T0* T83f68(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_nested_type_context */
extern T0* T81f35(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T421f25(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T421f28(GE_context* ac, T0* C);
extern T1 T421f28ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T276f61(GE_context* ac, T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T83f186(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T81f60(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T421f34(GE_context* ac, T0* C, T6 a1);
extern T1 T421f34ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T276f71(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T83f198(GE_context* ac, T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T81f70(GE_context* ac, T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.is_root_context */
extern T1 T421f20(GE_context* ac, T0* C);
extern T1 T421f20ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.is_root_context */
extern T1 T276f16(GE_context* ac, T0* C);
/* ET_CLASS.is_root_context */
extern T1 T83f158(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_root_context */
extern T1 T81f18(GE_context* ac, T0* C);
/* ET_NESTED_TYPE_CONTEXT.as_nested_type_context */
extern T0* T421f7(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.as_nested_type_context */
extern T0* T276f33(GE_context* ac, T0* C);
/* ET_CLASS.as_nested_type_context */
extern T0* T83f67(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.as_nested_type_context */
extern T0* T81f34(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T276f17(GE_context* ac, T0* C);
/* ET_CLASS.root_context */
extern T0* T83f119(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T81f19(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1479f33(GE_context* ac, T0* C);
/* ET_LIKE_N.type */
extern T0* T1382f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.type */
extern T0* T1332f38(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type */
extern T0* T1331f37(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T1330f38(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T1303f13(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T912f11(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T542f5(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T276f8(GE_context* ac, T0* C);
/* ET_CLASS.type */
extern T0* T83f128(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T81f7(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1479f23(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_type */
extern T0* T1382f15(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type */
extern T0* T1332f12(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type */
extern T0* T1331f10(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T1330f10(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T1303f17(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T912f14(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T542f14(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T276f12(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T83f73(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T81f10(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1479f46(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_reference */
extern T1 T1382f43(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference */
extern T1 T1332f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference */
extern T1 T1331f48(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T1330f46(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T1303f45(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T912f39(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T542f43(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T276f76(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T83f203(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T81f79(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type_with_type_marks */
extern T1 T1479f10(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f10ot1(T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1479f37(GE_context* ac, T0* C);
/* ET_LIKE_N.same_base_class_type_with_type_marks */
extern T1 T1382f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.overridden_type_mark */
extern T0* T1382f12(GE_context* ac, T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.valid_index */
extern T1 T421f33(GE_context* ac, T0* C, T6 a1);
/* ET_QUALIFIED_LIKE_TYPE.same_base_class_type_with_type_marks */
extern T1 T1332f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.overridden_type_mark */
extern T0* T1332f36(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_class_type_with_type_marks */
extern T1 T1331f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.overridden_type_mark */
extern T0* T1331f35(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.same_base_class_type_with_type_marks */
extern T1 T1330f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.overridden_type_mark */
extern T0* T1330f31(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T1303f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f18ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_class_type_with_type_marks */
extern T1 T912f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f15ot1(T0* a1);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T912f54(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.same_base_class_type_with_type_marks */
extern T1 T542f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.overridden_type_mark */
extern T0* T542f32(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1479f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f11ot1(T0* a1);
/* ET_LIKE_N.same_base_tuple_type_with_type_marks */
extern T1 T1382f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1332f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T1331f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_tuple_type_with_type_marks */
extern T1 T1330f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T1303f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f19ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_base_tuple_type_with_type_marks */
extern T1 T912f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f16ot1(T0* a1);
/* ET_LIKE_CURRENT.same_base_tuple_type_with_type_marks */
extern T1 T542f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1479f14(GE_context* ac, T0* C, T0* a1);
extern T1 T1479f14ot1(T0* a1, T0** a2);
extern T1 T1479f14ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual_count */
extern T6 T1382f21(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual_count */
extern T6 T1332f18(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual_count */
extern T6 T1331f16(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T1330f16(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T1303f20(GE_context* ac, T0* C, T0* a1);
extern T1 T1303f20ot1(T0* a1, T0** a2);
extern T1 T1303f20ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T912f17(GE_context* ac, T0* C, T0* a1);
extern T1 T912f17ot1(T0* a1, T0** a2);
extern T1 T912f17ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T542f20(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1479f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1479f15ot1(T0* a1);
/* ET_LIKE_N.conforms_from_class_type_with_type_marks */
extern T1 T1382f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1332f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T1331f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_class_type_with_type_marks */
extern T1 T1330f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T1303f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1303f22ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_class_type_with_type_marks */
extern T1 T912f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T912f19ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_class_type_with_type_marks */
extern T1 T542f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1479f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1479f16ot1(T0* a1);
/* ET_LIKE_N.conforms_from_tuple_type_with_type_marks */
extern T1 T1382f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1332f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T1331f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_tuple_type_with_type_marks */
extern T1 T1330f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T1303f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1303f23ot1(T0* a1);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type_with_type_marks */
extern T1 T912f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T912f20ot1(T0* a1);
/* ET_LIKE_CURRENT.conforms_from_tuple_type_with_type_marks */
extern T1 T542f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type_with_type_marks */
extern T1 T1479f12(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f12ot1(T0* a1);
/* ET_LIKE_N.same_named_class_type_with_type_marks */
extern T1 T1382f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_class_type_with_type_marks */
extern T1 T1332f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_class_type_with_type_marks */
extern T1 T1331f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_class_type_with_type_marks */
extern T1 T1330f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T1303f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f25ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_class_type_with_type_marks */
extern T1 T912f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f22ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_class_type_with_type_marks */
extern T1 T542f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1479f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f13ot1(T0* a1);
/* ET_LIKE_N.same_named_tuple_type_with_type_marks */
extern T1 T1382f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1332f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T1331f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_tuple_type_with_type_marks */
extern T1 T1330f14(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T1303f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f26ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_named_tuple_type_with_type_marks */
extern T1 T912f23(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f23ot1(T0* a1);
/* ET_LIKE_CURRENT.same_named_tuple_type_with_type_marks */
extern T1 T542f18(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable_with_type_mark */
extern T1 T1479f19(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f19ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_detachable_with_type_mark */
extern T1 T1382f31(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable_with_type_mark */
extern T1 T1332f28(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable_with_type_mark */
extern T1 T1331f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_detachable_with_type_mark */
extern T1 T1330f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T1303f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f34ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_detachable_with_type_mark */
extern T1 T912f31(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f31ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_detachable_with_type_mark */
extern T1 T542f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.named_base_class */
extern T0* T1479f6(GE_context* ac, T0* C, T0* a1);
extern T1 T1479f6ot1(T0* a1, T0** a2);
/* ET_LIKE_N.named_base_class */
extern T0* T1382f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_base_class */
extern T0* T1332f7(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.tokens */
extern T0* T1332f37(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_base_class */
extern T0* T1331f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_base_class */
extern T0* T1330f7(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_base_class */
extern T0* T1303f36(GE_context* ac, T0* C, T0* a1);
extern T1 T1303f36ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.named_base_class */
extern T0* T912f33(GE_context* ac, T0* C, T0* a1);
extern T1 T912f33ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.named_base_class */
extern T0* T542f11(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_base_class_in_context */
extern T0* T276f5(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_base_class_in_context */
extern T0* T83f99(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_base_class_in_context */
extern T0* T81f12(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded_with_type_mark */
extern T1 T1479f17(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f17ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_expanded_with_type_mark */
extern T1 T1382f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded_with_type_mark */
extern T1 T1332f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded_with_type_mark */
extern T1 T1331f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded_with_type_mark */
extern T1 T1330f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T1303f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f37ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_expanded_with_type_mark */
extern T1 T912f34(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f34ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_expanded_with_type_mark */
extern T1 T542f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type_with_type_marks */
extern T1 T1479f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1479f20ot1(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_to_type_with_type_marks */
extern T1 T1382f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type_with_type_marks */
extern T1 T1332f29(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type_with_type_marks */
extern T1 T1331f28(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_to_type_with_type_marks */
extern T1 T1330f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T1303f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1303f39ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_to_type_with_type_marks */
extern T1 T912f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T912f36ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_to_type_with_type_marks */
extern T1 T542f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.named_type_with_type_mark */
extern T0* T1479f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_N.named_type_with_type_mark */
extern T0* T1382f38(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.named_type_with_type_mark */
extern T0* T1332f5(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type_with_type_mark */
extern T0* T1331f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type_with_type_mark */
extern T0* T1330f60(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T1303f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type_with_type_mark */
extern T0* T912f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type_with_type_mark */
extern T0* T542f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type_with_type_mark */
extern T0* T1479f21(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f21ot1(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_named_type_with_type_mark */
extern T0* T1382f33(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type_with_type_mark */
extern T0* T1332f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type_with_type_mark */
extern T0* T1331f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type_with_type_mark */
extern T0* T1330f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T1303f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f50ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_named_type_with_type_mark */
extern T0* T912f45(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f45ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_named_type_with_type_mark */
extern T0* T542f37(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_with_type_mark */
extern T0* T1479f18(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f18ot1(T0* a1, T0** a2);
extern T1 T1479f18ot2(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_with_type_mark */
extern T0* T1382f30(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_with_type_mark */
extern T0* T1332f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_with_type_mark */
extern T0* T1331f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_with_type_mark */
extern T0* T1330f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T1303f49(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f49ot1(T0* a1, T0** a2);
extern T1 T1303f49ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_with_type_mark */
extern T0* T912f44(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f44ot1(T0* a1, T0** a2);
extern T1 T912f44ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_with_type_mark */
extern T0* T542f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached_with_type_mark */
extern T1 T1479f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f43ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_attached_with_type_mark */
extern T1 T1382f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached_with_type_mark */
extern T1 T1332f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached_with_type_mark */
extern T1 T1331f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_attached_with_type_mark */
extern T1 T1330f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T1303f33(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f33ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_attached_with_type_mark */
extern T1 T912f30(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f30ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_attached_with_type_mark */
extern T1 T542f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1479f49(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1479f49ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_actual */
extern T0* T1382f46(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_actual */
extern T0* T1332f48(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_actual */
extern T0* T1331f51(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T1330f49(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T1303f42(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T1303f42ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T912f51(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T912f51ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T542f46(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1479f50(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f50ot1(T0* a1, T0** a2);
/* ET_LIKE_N.base_type_index_of_label */
extern T6 T1382f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.base_type_index_of_label */
extern T6 T1332f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_type_index_of_label */
extern T6 T1331f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T1330f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T1303f43(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f43ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T912f52(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f52ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T542f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type_with_type_mark */
extern T0* T1479f51(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f51ot1(T0* a1, T0** a2);
extern T1 T1479f51ot2(T0* a1, T0** a2);
/* ET_LIKE_N.shallow_base_type_with_type_mark */
extern T0* T1382f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type_with_type_mark */
extern T0* T1332f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type_with_type_mark */
extern T0* T1331f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type_with_type_mark */
extern T0* T1330f53(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T1303f54(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f54ot1(T0* a1, T0** a2);
extern T1 T1303f54ot2(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.shallow_base_type_with_type_mark */
extern T0* T912f55(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f55ot1(T0* a1, T0** a2);
extern T1 T912f55ot2(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.shallow_base_type_with_type_mark */
extern T0* T542f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1479f45(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_base_type */
extern T0* T1382f42(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_base_type */
extern T0* T1332f44(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_base_type */
extern T0* T1331f47(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T1330f45(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T1303f31(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T912f28(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T542f42(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T276f74(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T83f201(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T81f73(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1479f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_expanded */
extern T1 T1382f14(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_expanded */
extern T1 T1332f11(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_expanded */
extern T1 T1331f9(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T1330f9(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T1303f16(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T912f13(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T542f13(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T276f11(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T83f72(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T81f9(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1479f30(GE_context* ac, T0* C);
/* ET_LIKE_N.is_named_type */
extern T1 T1382f34(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_named_type */
extern T1 T1332f31(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_named_type */
extern T1 T1331f30(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T1330f25(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T1303f32(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T912f29(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T542f29(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T276f53(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T81f52(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_attached */
extern T1 T1479f59(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_attached */
extern T1 T1382f58(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_attached */
extern T1 T1332f61(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_attached */
extern T1 T1331f64(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_attached */
extern T1 T1330f63(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_attached */
extern T1 T1303f66(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_attached */
extern T1 T912f65(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_attached */
extern T1 T542f58(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_attached */
extern T1 T276f93(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_attached */
extern T1 T83f228(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_attached */
extern T1 T81f98(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1479f47(GE_context* ac, T0* C);
/* ET_LIKE_N.is_base_type */
extern T1 T1382f44(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_base_type */
extern T1 T1332f46(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_base_type */
extern T1 T1331f49(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T1330f47(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T1303f53(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T912f48(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T542f44(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T276f79(GE_context* ac, T0* C);
/* ET_CLASS.is_base_type */
extern T1 T83f209(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T81f82(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1479f27(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.shallow_named_type */
extern T0* T1382f26(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.shallow_named_type */
extern T0* T1332f23(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.shallow_named_type */
extern T0* T1331f23(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T1330f23(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T1303f28(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T912f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T542f27(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T276f54(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T83f177(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T81f53(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1479f28(GE_context* ac, T0* C);
/* ET_LIKE_N.is_like_current */
extern T1 T1382f27(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.is_like_current */
extern T1 T1332f24(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_like_current */
extern T1 T1331f41(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T1330f42(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T1303f29(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T912f26(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T276f70(GE_context* ac, T0* C);
/* ET_CLASS.is_like_current */
extern T1 T83f196(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T81f69(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_detachable */
extern T1 T1479f25(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.is_type_detachable */
extern T1 T1382f22(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.is_type_detachable */
extern T1 T1332f19(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_detachable */
extern T1 T1331f17(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_detachable */
extern T1 T1330f17(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_detachable */
extern T1 T1303f21(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_detachable */
extern T1 T912f18(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_detachable */
extern T1 T542f21(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_detachable */
extern T1 T276f42(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_type_detachable */
extern T1 T83f151(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_detachable */
extern T1 T81f41(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1479f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f36ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_formal_parameter_type_with_type_marks */
extern T1 T1382f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1332f42(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1331f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type_with_type_marks */
extern T1 T1330f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T1303f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f27ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type_with_type_marks */
extern T1 T912f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f24ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type_with_type_marks */
extern T1 T542f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1479f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1479f41ot1(T0* a1, T0** a2);
extern T1 T1479f41ot2(T0* a1, T0** a2);
extern T1 T1479f41ot3(T0* a1, T0** a2);
/* ET_LIKE_N.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1382f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1332f43(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1331f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1330f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T1303f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T1303f24ot1(T0* a1, T0** a2);
extern T1 T1303f24ot2(T0* a1, T0** a2);
extern T1 T1303f24ot3(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T912f21(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
extern T1 T912f21ot1(T0* a1, T0** a2);
extern T1 T912f21ot2(T0* a1, T0** a2);
extern T1 T912f21ot3(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T542f41(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference_with_type_mark */
extern T1 T1479f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f40ot1(T0* a1, T0** a2);
/* ET_LIKE_N.is_type_reference_with_type_mark */
extern T1 T1382f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.is_type_reference_with_type_mark */
extern T1 T1332f51(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.is_type_reference_with_type_mark */
extern T1 T1331f54(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference_with_type_mark */
extern T1 T1330f52(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T1303f40(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f40ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.is_type_reference_with_type_mark */
extern T1 T912f37(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f37ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.is_type_reference_with_type_mark */
extern T1 T542f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1479f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f54ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_type_with_type_marks */
extern T1 T1382f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1332f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type_with_type_marks */
extern T1 T1331f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_type_with_type_marks */
extern T1 T1330f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T1303f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f58ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_type_with_type_marks */
extern T1 T912f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f60ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_type_with_type_marks */
extern T1 T542f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_type_with_type_marks */
extern T1 T276f89(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T276f26(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_type_with_type_marks */
extern T1 T83f224(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_type_with_type_marks */
extern T1 T81f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1479f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f55ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1382f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1332f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1331f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1330f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T1303f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f62ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T912f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f61ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T542f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T276f90(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T83f225(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type_with_type_marks */
extern T1 T81f95(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1479f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f56ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_feature_with_type_marks */
extern T1 T1382f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1332f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T1331f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_feature_with_type_marks */
extern T1 T1330f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_attachment_marks_with_default */
extern T1 T1330f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T1303f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f63ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature_with_type_marks */
extern T1 T912f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f62ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_feature_with_type_marks */
extern T1 T542f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T276f91(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_feature_with_type_marks */
extern T1 T83f226(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_feature_with_type_marks */
extern T1 T81f96(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1479f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f57ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1382f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1332f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_attachment_marks_with_default */
extern T1 T1332f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1331f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_attachment_marks_with_default */
extern T1 T1331f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1330f61(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T1303f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f64ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T912f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f63ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T542f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T276f92(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T83f227(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_qualified_like_identifier_with_type_marks */
extern T1 T81f97(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1479f65(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.last_leaf */
extern T0* T1332f67(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.last_leaf */
extern T0* T1331f70(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T1330f69(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T542f64(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T276f100(GE_context* ac, T0* C);
/* ET_CLASS.last_leaf */
extern T0* T83f235(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T81f105(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1479f9(GE_context* ac, T0* C);
/* ET_LIKE_N.position */
extern T0* T1382f11(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.position */
extern T0* T1332f10(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.position */
extern T0* T1331f24(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T1330f24(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T1303f47(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T912f41(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T542f28(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T276f55(GE_context* ac, T0* C);
/* ET_CLASS.position */
extern T0* T83f178(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.position */
extern T0* T926f7(GE_context* ac, T0* C);
/* ET_INDEXING.position */
extern T0* T1301f3(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.position */
extern T0* T938f5(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.tokens */
extern T0* T938f8(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.first */
extern T0* T938f7(GE_context* ac, T0* C);
/* ET_INDEXING_TERM_LIST.is_empty */
extern T1 T938f6(GE_context* ac, T0* C);
/* ET_TAGGED_INDEXING.position */
extern T0* T1300f4(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.first */
extern T0* T926f10(GE_context* ac, T0* C);
/* ET_INDEXING_LIST.is_empty */
extern T1 T926f9(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T81f54(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type_with_type_marks */
extern T1 T1479f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f38ot1(T0* a1, T0** a2);
/* ET_LIKE_N.same_named_type_with_type_marks */
extern T1 T1382f37(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type_with_type_marks */
extern T1 T1332f4(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type_with_type_marks */
extern T1 T1331f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_named_type_with_type_marks */
extern T1 T1330f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T1303f35(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f35ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_named_type_with_type_marks */
extern T1 T912f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f32ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_named_type_with_type_marks */
extern T1 T542f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1479f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f60ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_class_type_with_type_marks */
extern T1 T1382f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1332f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T1331f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_class_type_with_type_marks */
extern T1 T1330f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T1303f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f67ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type_with_type_marks */
extern T1 T912f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f66ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_class_type_with_type_marks */
extern T1 T542f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T276f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_class_type_with_type_marks */
extern T1 T83f229(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.is_type_separate_with_type_mark */
extern T1 T81f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_separate */
extern T1 T81f26(GE_context* ac, T0* C);
/* ET_CLASS.is_separate */
extern T1 T83f85(GE_context* ac, T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T83f102(GE_context* ac, T0* C);
/* ET_CLASS.is_type_separate_with_type_mark */
extern T1 T83f90(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.same_syntactical_class_type_with_type_marks */
extern T1 T81f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1479f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f64ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_tuple_type_with_type_marks */
extern T1 T1382f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1332f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1331f69(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type_with_type_marks */
extern T1 T1330f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T1303f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f71ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type_with_type_marks */
extern T1 T912f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f70ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type_with_type_marks */
extern T1 T542f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T276f98(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_separate_with_type_mark */
extern T1 T276f47(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_separate */
extern T1 T276f21(GE_context* ac, T0* C);
/* ET_CLASS.same_syntactical_tuple_type_with_type_marks */
extern T1 T83f234(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_tuple_type_with_type_marks */
extern T1 T81f104(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1479f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f66ot1(T0* a1);
/* ET_LIKE_N.same_syntactical_like_current_with_type_marks */
extern T1 T1382f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1332f68(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T1331f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_syntactical_like_current_with_type_marks */
extern T1 T1330f70(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T1303f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f73ot1(T0* a1);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current_with_type_marks */
extern T1 T912f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f72ot1(T0* a1);
/* ET_LIKE_CURRENT.same_syntactical_like_current_with_type_marks */
extern T1 T542f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_CURRENT.same_attachment_marks_with_default */
extern T1 T542f67(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T276f101(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_syntactical_like_current_with_type_marks */
extern T1 T83f236(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_syntactical_like_current_with_type_marks */
extern T1 T81f106(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.type_with_type_mark */
extern T0* T1479f42(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.type_with_type_mark */
extern T0* T1382f66(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.set_like_keyword */
extern void T1382f75(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.make */
extern T0* T1382c74(GE_context* ac, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.type_with_type_mark */
extern T0* T1332f69(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.type_with_type_mark */
extern T0* T1331f72(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_right_brace */
extern void T1331f84(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.set_left_brace */
extern void T1331f83(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.type_with_type_mark */
extern T0* T1330f71(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.set_type_mark */
extern void T1330f85(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.twin */
extern T0* T1330f73(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.copy */
extern void T1330f86(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T1303f30(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.type_with_type_mark */
extern T0* T912f27(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.type_with_type_mark */
extern T0* T542f68(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.set_current_keyword */
extern void T542f77(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1479f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_named_type */
extern T1 T1382f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_named_type */
extern T1 T1332f17(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_named_type */
extern T1 T1331f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T1330f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T1303f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T912f47(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T542f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1479f26(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_N.conforms_to_type */
extern T1 T1382f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_TYPE.conforms_to_type */
extern T1 T1332f22(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.conforms_to_type */
extern T1 T1331f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T1330f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T1303f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T912f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T542f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1479f29(GE_context* ac, T0* C);
/* ET_LIKE_N.has_anchored_type */
extern T1 T1382f28(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_anchored_type */
extern T1 T1332f25(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_anchored_type */
extern T1 T1331f21(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T1330f21(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T1303f51(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T912f46(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T542f25(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T276f51(GE_context* ac, T0* C);
/* ET_CLASS.has_anchored_type */
extern T1 T83f173(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T81f50(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1479f8(GE_context* ac, T0* C, T0* a1);
extern T1 T1479f8ot1(T0* a1);
/* ET_LIKE_N.has_formal_types */
extern T1 T1382f10(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.has_formal_types */
extern T1 T1332f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_formal_types */
extern T1 T1331f22(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T1330f22(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T1303f41(GE_context* ac, T0* C, T0* a1);
extern T1 T1303f41ot1(T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T912f43(GE_context* ac, T0* C, T0* a1);
extern T1 T912f43ot1(T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T542f26(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T276f52(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T83f174(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T81f51(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.depends_on_qualified_anchored_type */
extern T1 T1479f48(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.depends_on_qualified_anchored_type */
extern T1 T1382f45(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.depends_on_qualified_anchored_type */
extern T1 T1332f47(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.depends_on_qualified_anchored_type */
extern T1 T1331f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.depends_on_qualified_anchored_type */
extern T1 T1330f48(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T1303f57(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.depends_on_qualified_anchored_type */
extern T1 T912f50(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.depends_on_qualified_anchored_type */
extern T1 T542f45(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.depends_on_qualified_anchored_type */
extern T1 T276f80(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.depends_on_qualified_anchored_type */
extern T1 T83f212(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.depends_on_qualified_anchored_type */
extern T1 T81f84(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_identifier_anchored_type */
extern T1 T1479f52(GE_context* ac, T0* C);
/* ET_LIKE_N.has_identifier_anchored_type */
extern T1 T1382f51(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.has_identifier_anchored_type */
extern T1 T1332f53(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.has_identifier_anchored_type */
extern T1 T1331f56(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.has_identifier_anchored_type */
extern T1 T1330f54(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T1303f55(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.has_identifier_anchored_type */
extern T1 T912f58(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.has_identifier_anchored_type */
extern T1 T542f51(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.has_identifier_anchored_type */
extern T1 T276f87(GE_context* ac, T0* C);
/* ET_CLASS.has_identifier_anchored_type */
extern T1 T83f222(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.has_identifier_anchored_type */
extern T1 T81f93(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1479f62(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1479f67(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1479f67ot1(T0* a1, T0** a2);
/* ET_LIKE_N.resolved_formal_parameters */
extern T0* T1382f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.resolved_formal_parameters_with_type_mark */
extern T0* T1382f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters */
extern T0* T1332f64(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1332f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters */
extern T0* T1331f67(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T1331f73(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T1330f66(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type_mark */
extern T0* T1330f72(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T1303f69(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T1303f74(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T1303f74ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T912f68(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type_mark */
extern T0* T912f73(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T912f73ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T542f61(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type_mark */
extern T0* T542f66(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T276f96(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T276f99(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.overridden_type_mark */
extern T0* T276f10(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_attached */
extern T1 T276f22(GE_context* ac, T0* C);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T83f232(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type_mark */
extern T0* T83f238(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.overridden_type_mark */
extern T0* T83f91(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.is_attached */
extern T1 T83f103(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T81f88(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type_mark */
extern T0* T81f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.overridden_type_mark */
extern T0* T81f20(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.is_attached */
extern T1 T81f27(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1479f53(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_N.same_syntactical_type */
extern T1 T1382f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_TYPE.same_syntactical_type */
extern T1 T1332f54(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_syntactical_type */
extern T1 T1331f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T1330f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T1303f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T912f59(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T542f52(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T276f88(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T83f223(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T81f87(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1479f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.named_type */
extern T0* T1382f35(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.named_type */
extern T0* T1332f32(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.named_type */
extern T0* T1331f31(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T1330f26(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T1303f44(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T912f38(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T542f30(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T276f49(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T83f152(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T81f47(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1479f7(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_N.base_class */
extern T0* T1382f9(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_TYPE.base_class */
extern T0* T1332f8(GE_context* ac, T0* C, T0* a1);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.base_class */
extern T0* T1331f8(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T1330f8(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T1303f15(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T912f12(GE_context* ac, T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T542f12(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T276f9(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T83f71(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T81f8(GE_context* ac, T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type_with_type_marks */
extern T1 T1479f58(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1479f58ot1(T0* a1, T0** a2);
/* ET_CLASS_TYPE.same_base_formal_parameter_type_with_type_marks */
extern T1 T81f108(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_N.same_base_type_with_type_marks */
extern T1 T1382f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_TYPE.same_base_type_with_type_marks */
extern T1 T1332f60(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.same_base_type_with_type_marks */
extern T1 T1331f63(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LIKE_FEATURE.same_base_type_with_type_marks */
extern T1 T1330f62(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T1303f65(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T1303f65ot1(T0* a1, T0** a2);
/* ET_FORMAL_PARAMETER.same_base_type_with_type_marks */
extern T1 T912f64(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
extern T1 T912f64ot1(T0* a1, T0** a2);
/* ET_LIKE_CURRENT.same_base_type_with_type_marks */
extern T1 T542f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1479f5(GE_context* ac, T0* C);
/* ET_LIKE_N.to_text */
extern T0* T1382f5(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_TYPE.to_text */
extern T0* T1332f6(GE_context* ac, T0* C);
/* ET_QUALIFIED_LIKE_BRACED_TYPE.to_text */
extern T0* T1331f43(GE_context* ac, T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T1330f6(GE_context* ac, T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T1303f60(GE_context* ac, T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T912f53(GE_context* ac, T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T542f10(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T1315f33(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T1314f33(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T404f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T402f40(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T400f38(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_deferred */
extern T1 T371f34(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T275f45(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T1316f34(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T1315f34(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T1314f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T404f38(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T402f41(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T400f39(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_frozen */
extern T1 T371f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T275f46(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T1316f38(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T1315f39(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T1314f38(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T404f44(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T402f45(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T400f43(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_bracketable */
extern T1 T371f39(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T275f50(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_parenthesisable */
extern T1 T1316f39(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_parenthesisable */
extern T1 T1315f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_parenthesisable */
extern T1 T1314f39(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_parenthesisable */
extern T1 T404f45(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_parenthesisable */
extern T1 T402f46(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_parenthesisable */
extern T1 T400f44(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_parenthesisable */
extern T1 T371f40(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_parenthesisable */
extern T1 T275f51(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T1316f40(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T1314f40(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T404f46(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T402f51(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T400f49(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once */
extern T1 T371f41(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T275f52(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_once_per_object */
extern T1 T1316f41(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_once_per_object */
extern T1 T1315f42(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_once_per_object */
extern T1 T1314f41(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_once_per_object */
extern T1 T404f47(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once_per_object */
extern T1 T402f52(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once_per_object */
extern T1 T400f50(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_once_per_object */
extern T1 T371f42(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_once_per_object */
extern T1 T275f53(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T404f33(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T402f36(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T400f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T404f24(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T402f26(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T400f53(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T1316f36(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T1315f37(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T1314f36(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T404f40(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T402f43(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T400f41(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_infixable */
extern T1 T371f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T275f48(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T1316f35(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T1315f36(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T1314f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T275f47(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T1316f42(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T1316f99(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T1315f43(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T1315f105(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T1314f42(GE_context* ac, T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T1314f102(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T404f48(GE_context* ac, T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T404f90(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T402f53(GE_context* ac, T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T402f97(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T400f51(GE_context* ac, T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T400f94(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.new_synonym */
extern T0* T371f45(GE_context* ac, T0* C, T0* a1);
/* ET_EXTENDED_ATTRIBUTE.set_synonym */
extern void T371f100(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T275f54(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T275f108(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T1316f48(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T1315f46(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T1314f45(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T404f25(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T402f27(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_constant_attribute */
extern T1 T371f49(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T275f57(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T1316f49(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T1315f47(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T1314f46(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T404f26(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T400f26(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_unique_attribute */
extern T1 T371f50(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T275f58(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T1316f30(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T1315f54(GE_context* ac, T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T1314f53(GE_context* ac, T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T404f30(GE_context* ac, T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T402f32(GE_context* ac, T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T400f31(GE_context* ac, T0* C, T6 a1);
/* ET_EXTENDED_ATTRIBUTE.has_seed */
extern T1 T371f30(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T275f70(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T1316f43(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T1315f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T1314f43(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T404f23(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T402f54(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T400f52(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments_count */
extern T6 T371f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T275f55(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_static */
extern T1 T1316f45(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.has_static_mark */
extern T1 T1316f44(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_static */
extern T1 T1315f45(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.has_static_mark */
extern T1 T1315f50(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_static */
extern T1 T1314f44(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.has_static_mark */
extern T1 T1314f47(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.is_static */
extern T1 T404f34(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.has_static_mark */
extern T1 T404f32(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T402f37(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_static */
extern T1 T402f37p1(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.has_static_mark */
extern T1 T402f35(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T400f35(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_static */
extern T1 T400f35p1(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.has_static_mark */
extern T1 T400f33(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.is_static */
extern T1 T371f31(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.has_static_mark */
extern T1 T371f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T275f56(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_static */
extern T1 T275f56p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.has_static_mark */
extern T1 T275f62(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T404f35(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T402f38(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T400f36(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.arguments */
extern T0* T371f32(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T1316f32(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T1315f56(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T1314f32(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T404f36(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T402f39(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T400f37(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.name */
extern T0* T371f33(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T275f72(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T1316f76(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T1316f78(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T1315f79(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T1315f81(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T1314f77(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T1314f79(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T404f72(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T404f75(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T402f76(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T402f79(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T400f75(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T400f78(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_name */
extern T0* T371f76(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_extended_name */
extern T0* T371f78(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T275f85(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T275f87(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T1316f37(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T1315f38(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T1314f37(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T404f41(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T402f44(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T400f42(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.alias_name */
extern T0* T371f38(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T275f49(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T1316f77(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T1315f80(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T1314f78(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T404f73(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T402f77(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T400f76(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.overloaded_alias_name */
extern T0* T371f77(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T275f86(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T1316f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.has_descendant */
extern T1 T820f9(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T83f221(GE_context* ac, T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T438f6(GE_context* ac, T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T522f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T1315f70(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T1314f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T404f63(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T402f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T400f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTENDED_ATTRIBUTE.is_exported_to */
extern T1 T371f67(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T275f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T1316f51(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T1315f52(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T1314f51(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T404f28(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T402f30(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T400f28(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.lower_name */
extern T0* T371f52(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T275f68(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T1316f31(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T1315f55(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T1314f54(GE_context* ac, T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T404f31(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T402f33(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T400f29(GE_context* ac, T0* C);
/* ET_EXTENDED_ATTRIBUTE.type */
extern T0* T371f43(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T275f71(GE_context* ac, T0* C);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T1316f50(GE_context* ac, T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T1315f49(GE_context* ac, T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T1314f50(GE_context* ac, T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T402f29(GE_context* ac, T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T400f27(GE_context* ac, T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T275f60(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T1319f52(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T1318f47(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T557f45(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T1319f53(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T1318f48(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T564f28(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T557f46(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_parenthesisable */
extern T1 T1319f31(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_parenthesisable */
extern T1 T1318f31(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_parenthesisable */
extern T1 T564f30(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_parenthesisable */
extern T1 T557f30(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T1319f32(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T1319f105(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T1318f32(GE_context* ac, T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T1318f103(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T564f44(GE_context* ac, T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T564f96(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T557f43(GE_context* ac, T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T557f99(GE_context* ac, T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T1319f39(GE_context* ac, T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T1318f41(GE_context* ac, T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T564f36(GE_context* ac, T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T557f36(GE_context* ac, T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T1319f51(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T1318f46(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T564f37(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T557f35(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T1319f83(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T1319f85(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T1318f78(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T1318f80(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T564f74(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T564f76(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T557f75(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T557f77(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T1319f54(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T1318f49(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T564f29(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T557f47(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T1319f84(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T1318f79(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T564f75(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T557f76(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T1319f37(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T1318f37(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T564f38(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T557f37(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T1319f55(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T83f220(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T859f8(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T856f15(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T1318f50(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T564f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T557f48(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T1319f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T1318f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T564f64(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T557f65(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1319f44(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.is_static */
extern T1 T1319f44p1(GE_context* ac, T0* C);
/* ET_EXTERNAL_PROCEDURE.has_static_mark */
extern T1 T1319f43(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.is_static */
extern T1 T1318f40(GE_context* ac, T0* C);
/* ET_ONCE_PROCEDURE.has_static_mark */
extern T1 T1318f39(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.is_static */
extern T1 T564f40(GE_context* ac, T0* C);
/* ET_DEFERRED_PROCEDURE.has_static_mark */
extern T1 T564f33(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.is_static */
extern T1 T557f40(GE_context* ac, T0* C);
/* ET_DO_PROCEDURE.has_static_mark */
extern T1 T557f33(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T1321f13(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T1320f8(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T199f52(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T1322f10(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T1251f13(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T199f51(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T1322f61(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T1321f50(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T1320f47(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T1251f50(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T199f29(GE_context* ac, T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T1322f62(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T1321f51(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T1320f48(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T1251f51(GE_context* ac, T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T199f69(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T1322f63(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T1321f52(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T1320f49(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T1251f52(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T199f31(GE_context* ac, T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T1322f64(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T1321f53(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T1320f50(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T1251f53(GE_context* ac, T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T199f70(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_object_test_local */
extern T1 T1322f65(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_object_test_local */
extern T1 T1321f54(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_object_test_local */
extern T1 T1320f51(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_object_test_local */
extern T1 T1251f54(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_object_test_local */
extern T1 T199f7(GE_context* ac, T0* C);
/* ET_INFIX_NAME.object_test_local_name */
extern T0* T1322f66(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.object_test_local_name */
extern T0* T1321f55(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.object_test_local_name */
extern T0* T1320f52(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.object_test_local_name */
extern T0* T1251f55(GE_context* ac, T0* C);
/* ET_IDENTIFIER.object_test_local_name */
extern T0* T199f71(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_across_cursor */
extern T1 T1322f67(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_across_cursor */
extern T1 T1321f56(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_across_cursor */
extern T1 T1320f53(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_across_cursor */
extern T1 T1251f56(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_across_cursor */
extern T1 T199f32(GE_context* ac, T0* C);
/* ET_INFIX_NAME.across_cursor_name */
extern T0* T1322f68(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.across_cursor_name */
extern T0* T1321f57(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.across_cursor_name */
extern T0* T1320f54(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.across_cursor_name */
extern T0* T1251f57(GE_context* ac, T0* C);
/* ET_IDENTIFIER.across_cursor_name */
extern T0* T199f72(GE_context* ac, T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T1322f83(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T1321f67(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T1320f83(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T1251f67(GE_context* ac, T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T199f100(GE_context* ac, T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T1322f9(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T1321f17(GE_context* ac, T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T1320f6(GE_context* ac, T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T1251f12(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T199f40(GE_context* ac, T0* C, T0* a1);
extern T1 T199f40ot1(T0* a1, T0** a2);
/* ET_INFIX_NAME.lower_name */
extern T0* T1322f7(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T1321f15(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T1320f29(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T1251f10(GE_context* ac, T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T199f18(GE_context* ac, T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T1322f45(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T1320f28(GE_context* ac, T0* C);
/* ET_INFIX_NAME.position */
extern T0* T1322f12(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T1321f19(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T1320f9(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T1251f14(GE_context* ac, T0* C);
/* ET_IDENTIFIER.position */
extern T0* T199f23(GE_context* ac, T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T1322f19(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T1321f26(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T1320f16(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T1251f21(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T199f47(GE_context* ac, T0* C);
/* ET_INFIX_NAME.name */
extern T0* T1322f8(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T1321f16(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T1320f5(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T1251f11(GE_context* ac, T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T1322f82(GE_context* ac, T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T1321f66(GE_context* ac, T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T1320f82(GE_context* ac, T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T1251f66(GE_context* ac, T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T199f98(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_tuple */
extern T1 T556f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_tuple */
extern T1 T555f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_tuple */
extern T1 T356f44(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_tuple */
extern T1 T256f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T556f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T555f37(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T356f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T340f28(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T256f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T556f35(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T555f36(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T356f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T340f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T256f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T556f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T555f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T356f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T340f41(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T256f40(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T556f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T555f25(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T356f22(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T340f49(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T256f37(GE_context* ac, T0* C, T0* a1, T8 a2, T8 a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T556f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T555f45(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T340f43(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T256f42(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T556f39(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T342f12(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.resize */
extern void T342f15(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.new_capacity */
extern T6 T342f7(GE_context* ac, T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T342f6(GE_context* ac, T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T342f11(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T556f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T342c10(GE_context* ac, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T555f40(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T555f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T255f26(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T80f119(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T1547c15(GE_context* ac, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T555f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T555f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T356f49(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T356f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T356f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T356f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T340f22(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T340f42(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T255f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T80f116(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T340f29(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T340f42p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T256f34(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T256f27(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T556f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T556f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T556f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T263f36(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T556f24(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T556f44p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T555f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T555f62(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T555f50(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T356f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T356f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T356f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T356f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T340f24(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T340f57(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T340f48(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T255f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T80f117(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern T0* T82f95(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T340f48p1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T256f32(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T256f55(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T256f25(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T556f34(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T555f35(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T356f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T340f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T256f30(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T356f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T340f47(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T256f46(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T556f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T555f27(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T356f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T340f23(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T256f26(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_basic */
extern T1 T556f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_basic */
extern T1 T555f34(GE_context* ac, T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_basic */
extern T1 T356f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_basic */
extern T1 T340f25(GE_context* ac, T0* C);
/* ET_DYNAMIC_TYPE.is_basic */
extern T1 T256f33(GE_context* ac, T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T556f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T555f26(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T356f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T340f32(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T256f29(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T556f38(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T555f39(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T356f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T340f30(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T256f31(GE_context* ac, T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.tokens */
extern T0* T256f28(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.is_null_position */
extern T1 T1769f33(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_null_position */
extern T1 T1298f26(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null_position */
extern T1 T1297f26(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.is_null_position */
extern T1 T1296f27(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.is_null_position */
extern T1 T1295f27(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null_position */
extern T1 T1293f29(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null_position */
extern T1 T1292f29(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.is_null_position */
extern T1 T1291f46(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1290f46(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null_position */
extern T1 T1289f46(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null_position */
extern T1 T1288f46(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null_position */
extern T1 T1287f22(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.is_null_position */
extern T1 T1286f22(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null_position */
extern T1 T1285f20(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null_position */
extern T1 T1250f27(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.is_null_position */
extern T1 T764f58(GE_context* ac, T0* C);
/* ET_VOID.is_null_position */
extern T1 T756f20(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.is_null_position */
extern T1 T753f36(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.is_null_position */
extern T1 T750f12(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.is_null_position */
extern T1 T740f6(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.is_null_position */
extern T1 T734f43(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.is_null_position */
extern T1 T716f15(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.is_null_position */
extern T1 T713f12(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.is_null_position */
extern T1 T692f13(GE_context* ac, T0* C);
/* ET_KEYWORD.is_null_position */
extern T1 T439f24(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null_position */
extern T1 T403f38(GE_context* ac, T0* C);
/* ET_SYMBOL.is_null_position */
extern T1 T385f12(GE_context* ac, T0* C);
/* ET_RESULT.is_null_position */
extern T1 T346f17(GE_context* ac, T0* C);
/* ET_CURRENT.is_null_position */
extern T1 T319f15(GE_context* ac, T0* C);
/* ET_IDENTIFIER.is_null_position */
extern T1 T199f41(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.is_null */
extern T1 T196f8(GE_context* ac, T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1368f10(GE_context* ac, T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1368f15(GE_context* ac, T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1368f16(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1368f17(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1368f19(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1368f18(GE_context* ac, T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.integer_ */
extern T0* T1368f11(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.to_text */
extern T0* T1298f33(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.append_to_string */
extern void T1298f51(GE_context* ac, T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.integer_ */
extern T0* T1298f35(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.to_text */
extern T0* T1297f33(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.append_to_string */
extern void T1297f51(GE_context* ac, T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.integer_ */
extern T0* T1297f35(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.to_text */
extern T0* T1296f34(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.append_to_string */
extern void T1296f47(GE_context* ac, T0* C, T0* a1);
/* ET_FALSE_CONSTANT.integer_ */
extern T0* T1296f36(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.to_text */
extern T0* T1295f34(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.append_to_string */
extern void T1295f47(GE_context* ac, T0* C, T0* a1);
/* ET_TRUE_CONSTANT.integer_ */
extern T0* T1295f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.to_text */
extern T0* T1293f36(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.append_to_string */
extern void T1293f51(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.integer_ */
extern T0* T1293f38(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.to_text */
extern T0* T1292f36(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.append_to_string */
extern void T1292f51(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.integer_ */
extern T0* T1292f38(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.to_text */
extern T0* T1291f53(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.append_to_string */
extern void T1291f74(GE_context* ac, T0* C, T0* a1);
/* ET_BINARY_INTEGER_CONSTANT.integer_ */
extern T0* T1291f55(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.to_text */
extern T0* T1290f53(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.append_to_string */
extern void T1290f74(GE_context* ac, T0* C, T0* a1);
/* ET_OCTAL_INTEGER_CONSTANT.integer_ */
extern T0* T1290f55(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T1289f53(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T1289f74(GE_context* ac, T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T1289f55(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T1288f53(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T1288f74(GE_context* ac, T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T1288f55(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.to_text */
extern T0* T1287f36(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.append_to_string */
extern void T1287f51(GE_context* ac, T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.integer_ */
extern T0* T1287f40(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.to_text */
extern T0* T1286f40(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.append_to_string */
extern void T1286f55(GE_context* ac, T0* C, T0* a1);
/* ET_VERBATIM_STRING.integer_ */
extern T0* T1286f44(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.to_text */
extern T0* T1285f34(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.append_to_string */
extern void T1285f52(GE_context* ac, T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.integer_ */
extern T0* T1285f36(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.to_text */
extern T0* T1250f35(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.append_to_string */
extern void T1250f50(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.integer_ */
extern T0* T1250f38(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.to_text */
extern T0* T764f67(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.append_to_string */
extern void T764f76(GE_context* ac, T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.integer_ */
extern T0* T764f70(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T753f81(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T753f102(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T753f82(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T692f96(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T692f107(GE_context* ac, T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T692f99(GE_context* ac, T0* C);
/* ET_KEYWORD.to_text */
extern T0* T439f33(GE_context* ac, T0* C);
/* ET_KEYWORD.append_to_string */
extern void T439f95(GE_context* ac, T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T439f34(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T403f54(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T403f75(GE_context* ac, T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T403f57(GE_context* ac, T0* C);
/* ET_SYMBOL.to_text */
extern T0* T385f69(GE_context* ac, T0* C);
/* ET_SYMBOL.append_to_string */
extern void T385f94(GE_context* ac, T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T385f70(GE_context* ac, T0* C);
/* ET_CURRENT.to_text */
extern T0* T319f29(GE_context* ac, T0* C);
/* ET_CURRENT.append_to_string */
extern void T319f39(GE_context* ac, T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T319f30(GE_context* ac, T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T199f91(GE_context* ac, T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T199f128(GE_context* ac, T0* C, T0* a1);
/* ET_IDENTIFIER.integer_ */
extern T0* T199f96(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.to_text */
extern T0* T196f9(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.append_to_string */
extern void T196f14(GE_context* ac, T0* C, T0* a1);
/* ET_COMPRESSED_POSITION.integer_ */
extern T0* T196f10(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.line */
extern T6 T1769f31(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T1298f24(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T1297f24(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T1296f25(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T1295f25(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T1293f27(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T1292f27(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.line */
extern T6 T1291f44(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.line */
extern T6 T1290f44(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T1289f44(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T1288f44(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T1287f20(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T1286f20(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T1285f18(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T1250f25(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.line */
extern T6 T764f59(GE_context* ac, T0* C);
/* ET_VOID.line */
extern T6 T756f18(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T753f34(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T750f10(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T740f11(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T734f41(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T716f13(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T713f10(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T692f59(GE_context* ac, T0* C);
/* ET_KEYWORD.line */
extern T6 T439f25(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T403f36(GE_context* ac, T0* C);
/* ET_SYMBOL.line */
extern T6 T385f58(GE_context* ac, T0* C);
/* ET_RESULT.line */
extern T6 T346f15(GE_context* ac, T0* C);
/* ET_CURRENT.line */
extern T6 T319f16(GE_context* ac, T0* C);
/* ET_IDENTIFIER.line */
extern T6 T199f25(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T196f6(GE_context* ac, T0* C);
/* ET_PARENTHESIS_SYMBOL.column */
extern T6 T1769f32(GE_context* ac, T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T1298f25(GE_context* ac, T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T1297f25(GE_context* ac, T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T1296f26(GE_context* ac, T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T1295f26(GE_context* ac, T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T1293f28(GE_context* ac, T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T1292f28(GE_context* ac, T0* C);
/* ET_BINARY_INTEGER_CONSTANT.column */
extern T6 T1291f45(GE_context* ac, T0* C);
/* ET_OCTAL_INTEGER_CONSTANT.column */
extern T6 T1290f45(GE_context* ac, T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T1289f45(GE_context* ac, T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T1288f45(GE_context* ac, T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T1287f21(GE_context* ac, T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T1286f21(GE_context* ac, T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T1285f19(GE_context* ac, T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T1250f26(GE_context* ac, T0* C);
/* ET_QUESTION_MARK_SYMBOL.column */
extern T6 T764f65(GE_context* ac, T0* C);
/* ET_VOID.column */
extern T6 T756f19(GE_context* ac, T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T753f35(GE_context* ac, T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T750f11(GE_context* ac, T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T740f39(GE_context* ac, T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T734f42(GE_context* ac, T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T716f14(GE_context* ac, T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T713f11(GE_context* ac, T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T692f74(GE_context* ac, T0* C);
/* ET_KEYWORD.column */
extern T6 T439f26(GE_context* ac, T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T403f37(GE_context* ac, T0* C);
/* ET_SYMBOL.column */
extern T6 T385f67(GE_context* ac, T0* C);
/* ET_RESULT.column */
extern T6 T346f16(GE_context* ac, T0* C);
/* ET_CURRENT.column */
extern T6 T319f17(GE_context* ac, T0* C);
/* ET_IDENTIFIER.column */
extern T6 T199f26(GE_context* ac, T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T196f7(GE_context* ac, T0* C);
/* UC_UTF8_STRING.character_32_item */
extern T3 T1265f30(GE_context* ac, T0* C, T6 a1);
/* STRING_32.item */
extern T3 T18f10(GE_context* ac, T0* C, T6 a1);
/* STRING_8.character_32_item */
extern T3 T17f32(GE_context* ac, T0* C, T6 a1);
/* UC_UTF8_STRING.substring */
extern T0* T1265f17(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T1265c80(GE_context* ac, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.make_from_substring_general */
extern void T1265f100(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_32.substring */
extern T0* T18f11(GE_context* ac, T0* C, T6 a1, T6 a2);
/* STRING_32.new_string */
extern T0* T18f13(GE_context* ac, T0* C, T6 a1);
/* STRING_8.substring */
extern T0* T17f5(GE_context* ac, T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T1265f53(GE_context* ac, T0* C, T6 a1);
/* STRING_32.code */
extern T10 T18f9(GE_context* ac, T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f21(GE_context* ac, T0* C, T6 a1);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T276f20(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T83f56(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T81f78(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_as_base_class */
extern T1 T276f14(GE_context* ac, T0* C);
/* ET_CLASS.same_as_base_class */
extern T1 T83f78(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.same_as_base_class */
extern T1 T81f21(GE_context* ac, T0* C);
/* ET_CLASS.is_expanded */
extern T1 T83f160(GE_context* ac, T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T83f92(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T81f17(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_type_with_type_marks */
extern T1 T276f25(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_type_with_type_marks */
extern T1 T83f94(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_type_with_type_marks */
extern T1 T81f11(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.named_type_with_type_mark */
extern T0* T276f44(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type_with_type_mark */
extern T0* T83f130(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type_with_type_mark */
extern T0* T81f43(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T276f41(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T83f150(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T81f40(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_with_type_mark */
extern T0* T276f7(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_with_type_mark */
extern T0* T83f100(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_with_type_mark */
extern T0* T81f14(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type_with_type_mark */
extern T0* T276f69(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type_with_type_mark */
extern T0* T83f194(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type_with_type_mark */
extern T0* T81f68(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T276f15(GE_context* ac, T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T83f157(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T81f29(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_class_type_with_type_marks */
extern T1 T276f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_class_type_with_type_marks */
extern T1 T83f148(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_class_type_with_type_marks */
extern T1 T81f16(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T276f40(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_tuple_type_with_type_marks */
extern T1 T83f149(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_tuple_type_with_type_marks */
extern T1 T81f36(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.is_type_expanded_with_type_mark */
extern T1 T276f6(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded_with_type_mark */
extern T1 T83f89(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded_with_type_mark */
extern T1 T81f13(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_type_with_type_marks */
extern T1 T276f24(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_to_type_with_type_marks */
extern T1 T83f93(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_to_type_with_type_marks */
extern T1 T81f32(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.same_base_class_type_with_type_marks */
extern T1 T276f45(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_class_type_with_type_marks */
extern T1 T83f146(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_class_type_with_type_marks */
extern T1 T81f44(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T276f46(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_tuple_type_with_type_marks */
extern T1 T83f168(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_tuple_type_with_type_marks */
extern T1 T81f49(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T276f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_class_type_with_type_marks */
extern T1 T83f66(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforming_ancestor */
extern T0* T83f86(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.conforms_from_class_type_with_type_marks */
extern T1 T81f33(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T276f27(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ACTUAL_PARAMETER_SUBLIST.tuple_conforms_to_types */
extern T1 T1756f9(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T267f13(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type_with_type_marks */
extern T1 T83f57(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_tuple_type_with_type_marks */
extern T1 T81f31(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.is_type_detachable_with_type_mark */
extern T1 T276f35(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_detachable_with_type_mark */
extern T1 T83f155(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_detachable_with_type_mark */
extern T1 T81f46(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T276f81(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T83f214(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T81f85(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T276f48(GE_context* ac, T0* C);
/* ET_CLASS.formal_parameter_count */
extern T6 T83f154(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T81f45(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.is_type_attached_with_type_mark */
extern T1 T276f29(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_attached_with_type_mark */
extern T1 T83f88(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_attached_with_type_mark */
extern T1 T81f23(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type_with_type_mark */
extern T0* T276f77(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type_with_type_mark */
extern T0* T83f205(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type_with_type_mark */
extern T0* T81f74(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T276f78(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T276f78ot1(T0* a1, T0** a2);
/* ET_CLASS.base_type_actual */
extern T0* T83f206(GE_context* ac, T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T81f75(GE_context* ac, T0* C, T6 a1, T0* a2);
extern T1 T81f75ot1(T0* a1, T0** a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T276f82(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T83f215(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T81f86(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T276f13(GE_context* ac, T0* C);
/* ET_CLASS.base_class */
extern T0* T83f121(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.base_class */
extern T0* T81f80(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.type_with_type_mark */
extern T0* T276f36(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS.type_with_type_mark */
extern T0* T83f120(GE_context* ac, T0* C, T0* a1);
/* ET_CLASS_TYPE.type_with_type_mark */
extern T0* T81f37(GE_context* ac, T0* C, T0* a1);
/* ET_TUPLE_TYPE.to_text */
extern T0* T276f37(GE_context* ac, T0* C);
/* ET_CLASS.to_text */
extern T0* T83f124(GE_context* ac, T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T81f38(GE_context* ac, T0* C);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T276f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_named_formal_parameter_type_with_type_marks */
extern T1 T83f199(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_named_formal_parameter_type_with_type_marks */
extern T1 T81f71(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T276f73(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T83f200(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type_with_type_marks */
extern T1 T81f72(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_TUPLE_TYPE.is_type_reference_with_type_mark */
extern T1 T276f75(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference_with_type_mark */
extern T1 T83f202(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference_with_type_mark */
extern T1 T81f76(GE_context* ac, T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T276f19(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T83f161(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T81f30(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type_with_type_marks */
extern T1 T276f38(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS.same_base_type_with_type_marks */
extern T1 T83f125(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CLASS_TYPE.same_base_type_with_type_marks */
extern T1 T81f39(GE_context* ac, T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T186f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T186f2(GE_context* ac, T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T148f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* detachable KL_EQUALITY_TESTER [[attached] STRING_8].test */
extern T1 T59f1(GE_context* ac, T0* C, T0* a1, T0* a2);
extern T1 T59f1oe1(GE_context* ac, T0* a1, T0* a2);
/* UC_UTF8_STRING.is_equal */
extern T1 T1265f13(GE_context* ac, T0* C, T0* a1);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T58f1(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T58f2(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1975f5(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.message */
extern T0* T1975f3(GE_context* ac, T0* C, T0* a1);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1975f6(GE_context* ac, T0* C);
/* LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1975f4(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.default_message */
extern T0* T1951f3(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.message */
extern T0* T1951f5(GE_context* ac, T0* C, T0* a1);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.arguments */
extern T0* T1951f7(GE_context* ac, T0* C);
/* LX_CHARACTER_OUT_OF_RANGE_ERROR.string_ */
extern T0* T1951f6(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.default_message */
extern T0* T1950f3(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.message */
extern T0* T1950f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.arguments */
extern T0* T1950f7(GE_context* ac, T0* C);
/* LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR.string_ */
extern T0* T1950f6(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.default_message */
extern T0* T1949f3(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.message */
extern T0* T1949f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_REJECT_ERROR.arguments */
extern T0* T1949f7(GE_context* ac, T0* C);
/* LX_FULL_AND_REJECT_ERROR.string_ */
extern T0* T1949f6(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.default_message */
extern T0* T1948f3(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.message */
extern T0* T1948f5(GE_context* ac, T0* C, T0* a1);
/* LX_FULL_AND_META_ERROR.arguments */
extern T0* T1948f7(GE_context* ac, T0* C);
/* LX_FULL_AND_META_ERROR.string_ */
extern T0* T1948f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.default_message */
extern T0* T1947f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.message */
extern T0* T1947f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_ERROR.arguments */
extern T0* T1947f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_ERROR.string_ */
extern T0* T1947f6(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.default_message */
extern T0* T1946f3(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.message */
extern T0* T1946f5(GE_context* ac, T0* C, T0* a1);
/* LX_BAD_CHARACTER_CLASS_ERROR.arguments */
extern T0* T1946f7(GE_context* ac, T0* C);
/* LX_BAD_CHARACTER_CLASS_ERROR.string_ */
extern T0* T1946f6(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.default_message */
extern T0* T1945f3(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.message */
extern T0* T1945f5(GE_context* ac, T0* C, T0* a1);
/* LX_MISSING_QUOTE_ERROR.arguments */
extern T0* T1945f7(GE_context* ac, T0* C);
/* LX_MISSING_QUOTE_ERROR.string_ */
extern T0* T1945f6(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.default_message */
extern T0* T1944f3(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.message */
extern T0* T1944f5(GE_context* ac, T0* C, T0* a1);
/* LX_UNRECOGNIZED_RULE_ERROR.arguments */
extern T0* T1944f7(GE_context* ac, T0* C);
/* LX_UNRECOGNIZED_RULE_ERROR.string_ */
extern T0* T1944f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.default_message */
extern T0* T1909f12(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.message */
extern T0* T1909f7(GE_context* ac, T0* C, T0* a1);
/* ET_UNIVERSE_ERROR.arguments */
extern T0* T1909f6(GE_context* ac, T0* C);
/* ET_UNIVERSE_ERROR.string_ */
extern T0* T1909f9(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1743f12(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1743f7(GE_context* ac, T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1743f6(GE_context* ac, T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1743f9(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1583f11(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1583f14(GE_context* ac, T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1583f12(GE_context* ac, T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1583f16(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1582f12(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1582f7(GE_context* ac, T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1582f6(GE_context* ac, T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1582f9(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1536f5(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1536f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1536f6(GE_context* ac, T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1536f4(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1420f5(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1420f3(GE_context* ac, T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1420f6(GE_context* ac, T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1420f4(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1419f5(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1419f3(GE_context* ac, T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1419f6(GE_context* ac, T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1419f4(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T1184f5(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T1184f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T1184f6(GE_context* ac, T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T1184f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T1183f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T1183f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T1183f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T1183f4(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T1182f5(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T1182f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T1182f6(GE_context* ac, T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T1182f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T1181f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T1181f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T1181f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T1181f4(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T1180f5(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T1180f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T1180f6(GE_context* ac, T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T1180f4(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T1179f5(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T1179f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T1179f6(GE_context* ac, T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T1179f4(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T1178f5(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T1178f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T1178f6(GE_context* ac, T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T1178f4(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T1177f5(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T1177f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T1177f6(GE_context* ac, T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T1177f4(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T1072f43(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T1072f16(GE_context* ac, T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T1072f13(GE_context* ac, T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T1072f42(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T1071f5(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T1071f7(GE_context* ac, T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T1071f6(GE_context* ac, T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T1071f9(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T464f5(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T464f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T464f6(GE_context* ac, T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T464f4(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T463f5(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T463f3(GE_context* ac, T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T463f6(GE_context* ac, T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T463f4(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T444f5(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T444f7(GE_context* ac, T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T444f6(GE_context* ac, T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T444f9(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T341f5(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T341f3(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T341f6(GE_context* ac, T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T341f4(GE_context* ac, T0* C);
/* UT_MESSAGE.default_message */
extern T0* T171f5(GE_context* ac, T0* C);
/* UT_MESSAGE.message */
extern T0* T171f3(GE_context* ac, T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T171f6(GE_context* ac, T0* C);
/* UT_MESSAGE.string_ */
extern T0* T171f4(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T88f3(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T88f5(GE_context* ac, T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T88f7(GE_context* ac, T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T88f6(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T87f3(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T87f5(GE_context* ac, T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T87f7(GE_context* ac, T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T87f6(GE_context* ac, T0* C);
/* AP_ERROR.default_message */
extern T0* T41f17(GE_context* ac, T0* C);
/* AP_ERROR.message */
extern T0* T41f18(GE_context* ac, T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T41f20(GE_context* ac, T0* C);
/* AP_ERROR.string_ */
extern T0* T41f19(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T51f11(GE_context* ac, T0* C);
/* AP_STRING_OPTION.was_found */
extern T1 T47f15(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T46f18(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T45f15(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T44f17(GE_context* ac, T0* C);
/* AP_FLAG.was_found */
extern T1 T42f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.occurrences */
extern T6 T47f14(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T46f17(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T45f14(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T44f16(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T51f9(GE_context* ac, T0* C);
/* AP_STRING_OPTION.allows_parameter */
extern T1 T47f13(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T46f16(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T45f13(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T44f15(GE_context* ac, T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T42f11(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T51f12(GE_context* ac, T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T42f10(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T51f13(GE_context* ac, T0* C);
/* AP_STRING_OPTION.name */
extern T0* T47f16(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T46f13(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T45f16(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T44f13(GE_context* ac, T0* C);
/* AP_FLAG.name */
extern T0* T42f12(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T51f14(GE_context* ac, T0* C);
/* AP_STRING_OPTION.example */
extern T0* T47f17(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T46f19(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T45f17(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T44f19(GE_context* ac, T0* C);
/* AP_FLAG.example */
extern T0* T42f13(GE_context* ac, T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T51f19(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21(GE_context* ac, T0* C);
/* AP_STRING_OPTION.has_long_form */
extern T1 T47f22(GE_context* ac, T0* C);
/* AP_STRING_OPTION.names */
extern T0* T47f21p1(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T46f22(GE_context* ac, T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T46f21p1(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T45f25(GE_context* ac, T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T45f24p1(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T44f24(GE_context* ac, T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T44f23p1(GE_context* ac, T0* C);
/* AP_FLAG.names */
extern T0* T42f16(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T1266f6(GE_context* ac, T0* C);
/* [attached] DS_LINKED_QUEUE [[attached] CHARACTER_8].item */
extern T2 T1653f4(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T1266f21(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T31f33(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1279f7(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T1266f7(GE_context* ac, T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T696f6(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T31f38(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1279f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1266f28(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T1266f28p1(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.read_to_string */
extern T6 T696f8(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* CONSOLE.read_stream */
extern void T1379f31(GE_context* ac, T0* C, T6 a1);
/* CONSOLE.read_stream_thread_aware */
extern void T1379f33(GE_context* ac, T0* C, T6 a1);
/* C_STRING.read_string_into */
extern void T29f15(GE_context* ac, T0* C, T0* a1);
/* CONSOLE.console_readstream */
extern T6 T1379f17(GE_context* ac, T0* C, T14 a1, T14 a2, T6 a3);
/* CONSOLE.read_data_buffer */
extern T0* T1379f16(GE_context* ac, T0* C);
/* KL_STDIN_FILE.any_ */
extern T0* T696f10(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T31f37(GE_context* ac, T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern T0* T31f47(GE_context* ac, T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T31f45(GE_context* ac, T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern T0* T1279f6(GE_context* ac, T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T1266f5(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_count_recursive */
extern T6 T71f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T71f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.class_count_recursive */
extern T0* T71f143ac2(GE_context* ac, T0* a1, T0* a2);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS].call */
extern void T467f2(GE_context* ac, T0* C, T0* a1, T0* a2);
/* UT_COUNTER.increment */
extern void T466f3(GE_context* ac, T0* C);
/* ET_LACE_SYSTEM.class_actions */
extern T0* T71f126(GE_context* ac, T0* C);
/* [attached] KL_AGENT_ROUTINES [[attached] ET_CLASS].default_create */
extern T0* T467c1(GE_context* ac);
/* UT_COUNTER.make */
extern T0* T466c2(GE_context* ac, T6 a1);
/* ET_ECF_SYSTEM.class_count_recursive */
extern T6 T65f145(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T65f145ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_ECF_SYSTEM.class_count_recursive */
extern T0* T65f145ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_ECF_SYSTEM.class_actions */
extern T0* T65f150(GE_context* ac, T0* C);
/* ET_XACE_SYSTEM.class_count_recursive */
extern T6 T62f143(GE_context* ac, T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T62f143ac1(GE_context* ac, T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.class_count_recursive */
extern T0* T62f143ac2(GE_context* ac, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.class_actions */
extern T0* T62f142(GE_context* ac, T0* C);
/* PLATFORM.is_thread_capable */
extern T1 T569s2(GE_context* ac);
/* ISE_RUNTIME.check_assert */
extern T1 T1652s1(GE_context* ac, T1 a1);
/* PLATFORM.is_windows */
extern T1 T569s1(GE_context* ac);
extern T0* GE_ma1125(T6 c, T6 n, ...);
extern T0* GE_ma145(T6 c, T6 n, ...);
extern T0* GE_ma330(T6 c, T6 n, ...);
extern T0* GE_ma278(T6 c, T6 n, ...);
extern T0* GE_ma587(T6 c, T6 n, ...);
extern T0* GE_ma1979(T6 c, T6 n, ...);
extern T0* GE_ma1978(T6 c, T6 n, ...);
extern void GE_bma1978(T0* C, T6 s, T6 n, ...);
extern T0* GE_mt182(void);
extern T0* GE_mt30(T6 a1, T6 a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T6 a10, T1 a11);
extern T0* GE_mt1796(T0* a1, T0* a2, T8 a3);
extern T0* GE_mt498(T0* a1);
extern T0* ge390ov5849095;
extern T0* ge998ov16613378;
extern T0* ge389ov5963777;
extern T0* ge345ov5652513;
extern T0* ge696ov11403270;
extern T0* ge473ov7749675;
extern T0* ge463ov7585852;
extern T0* ge391ov5963777;
extern T0* ge1523ov24953330;
extern T0* ge1523ov24953334;
extern T0* ge1523ov24953333;
extern T0* ge375ov6144008;
extern T0* ge1523ov24953326;
extern T0* ge1523ov24953331;
extern T0* ge1523ov24953332;
extern T0* ge376ov6160400;
extern T0* ge1523ov24953327;
extern T0* ge1523ov24953329;
extern T0* ge1523ov24952986;
extern T0* ge1523ov24953268;
extern T0* ge1523ov24953281;
extern T0* ge374ov6127635;
extern T0* ge374ov6127636;
extern T0* ge837ov13713446;
extern T0* ge837ov13713431;
extern T0* ge837ov13713424;
extern T0* ge837ov13713409;
extern T0* ge837ov13713434;
extern T0* ge837ov13713427;
extern T0* ge837ov13713435;
extern T0* ge837ov13713444;
extern T0* ge837ov13713437;
extern T0* ge837ov13713433;
extern T0* ge837ov13713421;
extern T0* ge837ov13713422;
extern T0* ge837ov13713436;
extern T0* ge837ov13713423;
extern T0* ge837ov13713410;
extern T0* ge837ov13713411;
extern T0* ge837ov13713412;
extern T0* ge837ov13713418;
extern T0* ge837ov13713420;
extern T0* ge837ov13713415;
extern T0* ge837ov13713440;
extern T0* ge837ov13713439;
extern T0* ge837ov13713416;
extern T0* ge837ov13713417;
extern T0* ge837ov13713414;
extern T0* ge837ov13713413;
extern T0* ge833ov13647889;
extern T0* ge1523ov24953328;
extern T0* ge1523ov24953266;
extern T0* ge1523ov24953020;
extern T0* ge1523ov24952994;
extern T0* ge1523ov24953267;
extern T0* ge1523ov24953261;
extern T0* ge1523ov24953265;
extern T0* ge1523ov24953262;
extern T0* ge1523ov24953264;
extern T0* ge1523ov24953263;
extern T0* ge1523ov24953269;
extern T0* ge1523ov24953271;
extern T0* ge1523ov24953270;
extern T0* ge1523ov24953272;
extern T0* ge1517ov24854531;
extern T0* ge1517ov24854530;
extern T0* ge1517ov24854529;
extern T0* ge1303ov21349262;
extern T0* ge396ov5799967;
extern T0* ge396ov5799968;
extern T0* ge382ov6258700;
extern T0* ge382ov6258699;
extern T0* ge399ov5799967;
extern T0* ge399ov5799968;
extern T0* ge375ov6144010;
extern T0* ge1523ov24953065;
extern T0* ge1523ov24953311;
extern T0* ge1523ov24953071;
extern T0* ge1523ov24952975;
extern T0* ge1523ov24953312;
extern T0* ge1523ov24953156;
extern T0* ge1523ov24953155;
extern T0* ge1523ov24953094;
extern T0* ge1523ov24953125;
extern T0* ge1523ov24953171;
extern T0* ge1523ov24953210;
extern T0* ge1523ov24953237;
extern T0* ge1523ov24953277;
extern T0* ge1523ov24953028;
extern T0* ge1523ov24953305;
extern T0* ge1523ov24953073;
extern T0* ge1523ov24953050;
extern T0* ge1523ov24952977;
extern T0* ge1523ov24953273;
extern T0* ge1523ov24953046;
extern T0* ge1303ov21349233;
extern T0* ge1303ov21349253;
extern T0* ge1523ov24953235;
extern T0* ge1523ov24953022;
extern T0* ge1523ov24953258;
extern T0* ge1523ov24952995;
extern T0* ge1523ov24953021;
extern T0* ge1523ov24953299;
extern T0* ge1523ov24953257;
extern T0* ge1523ov24953255;
extern T0* ge1523ov24953256;
extern T0* ge1523ov24953251;
extern T0* ge1523ov24953238;
extern T0* ge1523ov24953239;
extern T0* ge1523ov24953240;
extern T0* ge1523ov24953243;
extern T0* ge1523ov24953244;
extern T0* ge1523ov24953245;
extern T0* ge1523ov24953246;
extern T0* ge1523ov24953247;
extern T0* ge1523ov24953248;
extern T0* ge1523ov24953249;
extern T0* ge1523ov24953250;
extern T0* ge1523ov24953252;
extern T0* ge1523ov24953253;
extern T0* ge1523ov24953254;
extern T0* ge1523ov24953242;
extern T0* ge1523ov24953241;
extern T0* ge1523ov24953306;
extern T0* ge1303ov21349083;
extern T0* ge1523ov24953034;
extern T0* ge1523ov24953023;
extern T0* ge1523ov24953322;
extern T0* ge1523ov24953093;
extern T0* ge1523ov24953069;
extern T0* ge1523ov24953068;
extern T0* ge1523ov24953310;
extern T0* ge1523ov24952982;
extern T0* ge1523ov24953070;
extern T0* ge1523ov24953276;
extern T0* ge1523ov24953027;
extern T0* ge1523ov24953275;
extern T0* ge1523ov24953291;
extern T0* ge1523ov24953278;
extern T0* ge1523ov24953131;
extern T0* ge1523ov24953132;
extern T0* ge1523ov24953292;
extern T0* ge1523ov24953038;
extern T0* ge1303ov21349236;
extern T0* ge1523ov24953139;
extern T0* ge1523ov24953043;
extern T0* ge1523ov24953128;
extern T0* ge1523ov24952979;
extern T0* ge1523ov24952985;
extern T0* ge1523ov24953178;
extern T0* ge1523ov24953080;
extern T0* ge1523ov24953006;
extern T0* ge1523ov24953260;
extern T0* ge1523ov24953259;
extern T0* ge1523ov24953234;
extern T0* ge1523ov24953233;
extern T0* ge1523ov24953232;
extern T0* ge1523ov24953231;
extern T0* ge1523ov24953230;
extern T0* ge1523ov24953229;
extern T0* ge1523ov24953228;
extern T0* ge1523ov24953227;
extern T0* ge1523ov24953226;
extern T0* ge1523ov24953225;
extern T0* ge1523ov24953224;
extern T0* ge1523ov24953223;
extern T0* ge1523ov24953222;
extern T0* ge1523ov24953221;
extern T0* ge1523ov24953220;
extern T0* ge1523ov24953219;
extern T0* ge1523ov24953218;
extern T0* ge1523ov24953217;
extern T0* ge1523ov24953216;
extern T0* ge1523ov24953215;
extern T0* ge1523ov24953214;
extern T0* ge1523ov24953213;
extern T0* ge1523ov24953212;
extern T0* ge1523ov24953211;
extern T0* ge1523ov24953209;
extern T0* ge1523ov24953208;
extern T0* ge1523ov24953207;
extern T0* ge1523ov24953206;
extern T0* ge1523ov24953205;
extern T0* ge1523ov24953204;
extern T0* ge1523ov24953133;
extern T0* ge1523ov24953127;
extern T0* ge1523ov24953072;
extern T0* ge1523ov24953169;
extern T0* ge1523ov24953056;
extern T0* ge1523ov24953039;
extern T0* ge1523ov24953308;
extern T0* ge1523ov24953088;
extern T0* ge1523ov24953315;
extern T0* ge1523ov24953111;
extern T0* ge1523ov24953108;
extern T0* ge1523ov24953190;
extern T0* ge1523ov24953198;
extern T0* ge1523ov24953189;
extern T0* ge1523ov24953197;
extern T0* ge1523ov24953188;
extern T0* ge1523ov24953196;
extern T0* ge1523ov24953175;
extern T0* ge1523ov24952987;
extern T0* ge1523ov24953187;
extern T0* ge1523ov24953195;
extern T0* ge1523ov24953186;
extern T0* ge1523ov24953194;
extern T0* ge1523ov24953185;
extern T0* ge1523ov24953193;
extern T0* ge1523ov24953087;
extern T0* ge1523ov24953058;
extern T0* ge1523ov24952983;
extern T0* ge1523ov24952992;
extern T0* ge1523ov24953016;
extern T0* ge1523ov24953014;
extern T0* ge1523ov24953005;
extern T0* ge1523ov24953004;
extern T0* ge1523ov24953003;
extern T0* ge1523ov24953002;
extern T0* ge1523ov24953001;
extern T0* ge1523ov24953107;
extern T0* ge1523ov24952999;
extern T0* ge1523ov24953017;
extern T0* ge1523ov24952991;
extern T0* ge1523ov24952989;
extern T0* ge1523ov24953035;
extern T0* ge1523ov24953075;
extern T0* ge1523ov24953074;
extern T0* ge1523ov24953236;
extern T0* ge1523ov24953165;
extern T0* ge1523ov24953200;
extern T0* ge1523ov24953199;
extern T0* ge1523ov24953192;
extern T0* ge1523ov24953191;
extern T0* ge1523ov24953184;
extern T0* ge1523ov24953183;
extern T0* ge1523ov24953180;
extern T0* ge1523ov24953181;
extern T0* ge1523ov24953174;
extern T0* ge1523ov24953173;
extern T0* ge1523ov24953172;
extern T0* ge1523ov24953300;
extern T0* ge1523ov24953170;
extern T0* ge1523ov24953163;
extern T0* ge1523ov24953162;
extern T0* ge1523ov24953159;
extern T0* ge1523ov24953157;
extern T0* ge1523ov24953154;
extern T0* ge1523ov24953153;
extern T0* ge1523ov24953152;
extern T0* ge1523ov24953151;
extern T0* ge1523ov24953150;
extern T0* ge1523ov24953149;
extern T0* ge1523ov24953148;
extern T0* ge1523ov24953147;
extern T0* ge1523ov24953121;
extern T0* ge1523ov24953122;
extern T0* ge1523ov24953118;
extern T0* ge1523ov24953120;
extern T0* ge1523ov24953119;
extern T0* ge1523ov24953117;
extern T0* ge1523ov24953115;
extern T0* ge1523ov24953116;
extern T0* ge1523ov24953114;
extern T0* ge1523ov24953113;
extern T0* ge1523ov24953112;
extern T0* ge1523ov24953110;
extern T0* ge1523ov24953109;
extern T0* ge1523ov24953106;
extern T0* ge1523ov24953105;
extern T0* ge1523ov24953104;
extern T0* ge1523ov24953103;
extern T0* ge1523ov24953102;
extern T0* ge1523ov24953101;
extern T0* ge1523ov24953100;
extern T0* ge1523ov24953099;
extern T0* ge1523ov24953091;
extern T0* ge1523ov24953089;
extern T0* ge1523ov24953086;
extern T0* ge1523ov24953085;
extern T0* ge1523ov24953084;
extern T0* ge1523ov24953083;
extern T0* ge1523ov24953082;
extern T0* ge1523ov24953090;
extern T0* ge1523ov24953167;
extern T0* ge1523ov24953166;
extern T0* ge1523ov24953164;
extern T0* ge1523ov24953064;
extern T0* ge1523ov24953063;
extern T0* ge1523ov24953062;
extern T0* ge1523ov24953061;
extern T0* ge1523ov24953060;
extern T0* ge1523ov24953059;
extern T0* ge1523ov24953045;
extern T0* ge1523ov24953044;
extern T0* ge1523ov24953042;
extern T0* ge1523ov24953168;
extern T0* ge1523ov24953092;
extern T0* ge1523ov24953052;
extern T0* ge1523ov24953051;
extern T0* ge1523ov24953055;
extern T0* ge1523ov24953054;
extern T0* ge1523ov24953053;
extern T0* ge1523ov24953057;
extern T0* ge1523ov24953123;
extern T0* ge1523ov24953041;
extern T0* ge1523ov24953040;
extern T0* ge1523ov24953290;
extern T0* ge1523ov24953136;
extern T0* ge1523ov24953301;
extern T0* ge1523ov24953294;
extern T0* ge1523ov24953295;
extern T0* ge1523ov24952976;
extern T0* ge1523ov24953296;
extern T0* ge1523ov24953029;
extern T0* ge1523ov24953024;
extern T0* ge1523ov24953047;
extern T0* ge1303ov21348887;
extern T0* ge1303ov21348911;
extern T0* ge1303ov21348953;
extern T0* ge1523ov24952980;
extern T0* ge1523ov24952981;
extern T0* ge1303ov21348922;
extern T0* ge1523ov24953282;
extern T0* ge1523ov24953129;
extern T0* ge1523ov24953130;
extern T0* ge1523ov24953182;
extern T0* ge1523ov24953158;
extern T0* ge1523ov24953161;
extern T0* ge1523ov24953160;
extern T0* ge1523ov24952988;
extern T0* ge1523ov24953309;
extern T0* ge1523ov24953317;
extern T0* ge1523ov24953036;
extern T0* ge1523ov24953318;
extern T0* ge1523ov24953298;
extern T0* ge1523ov24953316;
extern T0* ge1523ov24953012;
extern T0* ge1523ov24953011;
extern T0* ge1523ov24953010;
extern T0* ge1523ov24953009;
extern T0* ge1523ov24953000;
extern T0* ge1523ov24952998;
extern T0* ge1523ov24952997;
extern T0* ge1523ov24952993;
extern T0* ge1303ov21348883;
extern T0* ge1523ov24953015;
extern T0* ge1303ov21348912;
extern T0* ge1523ov24953008;
extern T0* ge1303ov21348902;
extern T0* ge1523ov24952996;
extern T0* ge1303ov21348890;
extern T0* ge1523ov24953025;
extern T0* ge1303ov21348925;
extern T0* ge1523ov24952990;
extern T0* ge1303ov21348878;
extern T0* ge1303ov21348899;
extern T0* ge1303ov21348898;
extern T0* ge1303ov21348882;
extern T0* ge1303ov21348920;
extern T0* ge1303ov21348874;
extern T0* ge1303ov21348876;
extern T0* ge1303ov21348924;
extern T0* ge1303ov21348923;
extern T0* ge1303ov21348916;
extern T0* ge1303ov21348915;
extern T0* ge1303ov21348910;
extern T0* ge1303ov21348909;
extern T0* ge1303ov21348914;
extern T0* ge1303ov21348913;
extern T0* ge1303ov21348906;
extern T0* ge1303ov21348905;
extern T0* ge1303ov21348904;
extern T0* ge1303ov21348903;
extern T0* ge1303ov21348894;
extern T0* ge1303ov21348893;
extern T0* ge1303ov21348892;
extern T0* ge1303ov21348891;
extern T0* ge1303ov21348880;
extern T0* ge1303ov21348879;
extern T0* ge1303ov21348877;
extern T0* ge1303ov21349251;
extern T0* ge1303ov21348926;
extern T0* ge1522ov24937175;
extern T0* ge1522ov24936884;
extern T0* ge1522ov24936709;
extern T0* ge1520ov24903697;
extern T0* ge1520ov24903691;
extern T0* ge1520ov24903685;
extern T0* ge1520ov24903693;
extern T0* ge1520ov24903687;
extern T0* ge1520ov24903681;
extern T0* ge1520ov24903696;
extern T0* ge1520ov24903690;
extern T0* ge1520ov24903684;
extern T0* ge1520ov24903698;
extern T0* ge1520ov24903692;
extern T0* ge1520ov24903686;
extern T0* ge1303ov21348982;
extern T0* ge1520ov24903695;
extern T0* ge1520ov24903689;
extern T0* ge1520ov24903683;
extern T0* ge1303ov21349175;
extern T0* ge1303ov21349121;
extern T0* ge1303ov21349085;
extern T0* ge1303ov21349031;
extern T0* ge1522ov24937200;
extern T0* ge1522ov24936905;
extern T0* ge1522ov24936734;
extern T0* ge1522ov24937198;
extern T0* ge1522ov24936903;
extern T0* ge1522ov24936732;
extern T0* ge1303ov21349205;
extern T0* ge1303ov21349165;
extern T0* ge1303ov21348970;
extern T0* ge1303ov21349216;
extern T0* ge1303ov21349129;
extern T0* ge1303ov21349231;
extern T0* ge1303ov21349088;
extern T0* ge1303ov21348929;
extern T0* ge1303ov21348954;
extern T0* ge1522ov24937197;
extern T0* ge1522ov24936902;
extern T0* ge1522ov24936731;
extern T0* ge1522ov24937195;
extern T0* ge1522ov24936900;
extern T0* ge1522ov24936729;
extern T0* ge1522ov24937196;
extern T0* ge1522ov24936901;
extern T0* ge1522ov24936730;
extern T0* ge1303ov21348977;
extern T0* ge1520ov24903694;
extern T0* ge1520ov24903688;
extern T0* ge1520ov24903682;
extern T0* ge1303ov21349257;
extern T0* ge1534ov25133094;
extern T0* ge1303ov21349381;
extern T0* ge1303ov21349365;
extern T0* ge1303ov21348917;
extern T0* ge1303ov21348918;
extern T0* ge1303ov21349378;
extern T0* ge1303ov21349379;
extern T0* ge1303ov21349372;
extern T0* ge1303ov21349375;
extern T0* ge1303ov21349367;
extern T0* ge1303ov21349370;
extern T0* ge1303ov21349366;
extern T0* ge1303ov21349380;
extern T0* ge1303ov21349363;
extern T0* ge1303ov21349364;
extern T0* ge1303ov21349279;
extern T0* ge1303ov21349258;
extern T0* ge1303ov21348921;
extern T0* ge1303ov21349275;
extern T0* ge1303ov21348919;
extern T0* ge1303ov21348896;
extern T0* ge1303ov21348889;
extern T0* ge1303ov21348885;
extern T0* ge1303ov21348884;
extern T0* ge1303ov21348907;
extern T0* ge1303ov21349299;
extern T0* ge909ov14893066;
extern T0* ge909ov14893067;
extern T0* ge909ov14893076;
extern T0* ge866ov14188546;
extern T0* ge866ov14188553;
extern T0* ge866ov14188552;
extern T0* ge866ov14188547;
extern T0* ge866ov14188551;
extern T0* ge866ov14188548;
extern T0* ge866ov14188554;
extern T0* ge917ov15024138;
extern T0* ge917ov15024143;
extern T0* ge932ov15269973;
extern T0* ge932ov15269943;
extern T0* ge932ov15269911;
extern T0* ge932ov15269945;
extern T0* ge932ov15269967;
extern T0* ge932ov15269934;
extern T0* ge932ov15269957;
extern T0* ge928ov15204418;
extern T0* ge928ov15204384;
extern T0* ge928ov15204403;
extern T0* ge928ov15204369;
extern T0* ge928ov15204410;
extern T0* ge928ov15204376;
extern T0* ge935ov15319107;
extern T0* ge935ov15319106;
extern T0* ge932ov15269918;
extern T0* ge932ov15269919;
extern T0* ge932ov15269891;
extern T0* ge932ov15269898;
extern T0* ge932ov15269902;
extern T0* ge932ov15269920;
extern T0* ge932ov15269921;
extern T0* ge932ov15269922;
extern T0* ge932ov15269923;
extern T0* ge932ov15269924;
extern T0* ge932ov15269925;
extern T0* ge932ov15269926;
extern T0* ge932ov15269929;
extern T0* ge932ov15269949;
extern T0* ge932ov15269933;
extern T0* ge932ov15269936;
extern T0* ge932ov15269948;
extern T0* ge932ov15269952;
extern T0* ge932ov15269953;
extern T0* ge932ov15269954;
extern T0* ge932ov15269962;
extern T0* ge932ov15269963;
extern T0* ge932ov15269975;
extern T0* ge932ov15269976;
extern T0* ge932ov15269889;
extern T0* ge917ov15024147;
extern T0* ge909ov14893065;
extern T0* ge909ov14893075;
extern T0* ge909ov14893074;
extern T0* ge909ov14893100;
extern T0* ge909ov14893103;
extern T0* ge909ov14893102;
extern T0* ge909ov14893077;
extern T0* ge909ov14893093;
extern T0* ge909ov14893068;
extern T0* ge909ov14893063;
extern T0* ge866ov14188545;
extern T0* ge917ov15024137;
extern T0* ge917ov15024164;
extern T0* ge932ov15269935;
extern T0* ge932ov15269940;
extern T0* ge932ov15269960;
extern T0* ge932ov15269897;
extern T0* ge932ov15269956;
extern T0* ge932ov15269904;
extern T0* ge932ov15269908;
extern T0* ge932ov15269968;
extern T0* ge928ov15204416;
extern T0* ge928ov15204382;
extern T0* ge928ov15204413;
extern T0* ge928ov15204379;
extern T0* ge932ov15269974;
extern T0* ge932ov15269890;
extern T0* ge932ov15269899;
extern T0* ge932ov15269927;
extern T0* ge932ov15269946;
extern T0* ge932ov15269907;
extern T0* ge932ov15269900;
extern T0* ge932ov15269961;
extern T0* ge932ov15269977;
extern T0* ge932ov15269914;
extern T0* ge932ov15269955;
extern T0* ge932ov15269971;
extern T0* ge932ov15269901;
extern T0* ge932ov15269928;
extern T0* ge932ov15269947;
extern T0* ge932ov15269944;
extern T0* ge928ov15204411;
extern T0* ge928ov15204377;
extern T0* ge932ov15269906;
extern T0* ge932ov15269909;
extern T0* ge932ov15269912;
extern T0* ge932ov15269913;
extern T0* ge932ov15269942;
extern T0* ge932ov15269951;
extern T0* ge932ov15269939;
extern T0* ge932ov15269938;
extern T0* ge932ov15269969;
extern T0* ge932ov15269905;
extern T0* ge932ov15269941;
extern T0* ge928ov15204399;
extern T0* ge928ov15204365;
extern T0* ge928ov15204398;
extern T0* ge928ov15204364;
extern T0* ge928ov15204397;
extern T0* ge928ov15204363;
extern T0* ge928ov15204396;
extern T0* ge928ov15204362;
extern T0* ge928ov15204395;
extern T0* ge928ov15204361;
extern T0* ge932ov15269917;
extern T0* ge928ov15204415;
extern T0* ge928ov15204381;
extern T0* ge928ov15204417;
extern T0* ge928ov15204383;
extern T0* ge932ov15269937;
extern T0* ge932ov15269903;
extern T0* ge932ov15269964;
extern T0* ge932ov15269979;
extern T0* ge932ov15269896;
extern T0* ge932ov15269910;
extern T0* ge932ov15269978;
extern T0* ge932ov15269915;
extern T0* ge932ov15269950;
extern T0* ge932ov15269972;
extern T0* ge932ov15269931;
extern T0* ge932ov15269958;
extern T0* ge932ov15269930;
extern T0* ge932ov15269916;
extern T0* ge932ov15269932;
extern T0* ge932ov15269965;
extern T0* ge932ov15269970;
extern T0* ge932ov15269892;
extern T0* ge932ov15269893;
extern T0* ge932ov15269894;
extern T0* ge932ov15269895;
extern T0* ge909ov14893095;
extern T0* ge909ov14893104;
extern T0* ge909ov14893069;
extern T0* ge909ov14893098;
extern T0* ge909ov14893080;
extern T0* ge909ov14893064;
extern T0* ge909ov14893070;
extern T0* ge909ov14893072;
extern T0* ge909ov14893073;
extern T0* ge909ov14893078;
extern T0* ge909ov14893057;
extern T0* ge909ov14893058;
extern T0* ge909ov14893059;
extern T0* ge909ov14893060;
extern T0* ge909ov14893061;
extern T0* ge909ov14893062;
extern T0* ge909ov14893079;
extern T0* ge909ov14893081;
extern T0* ge909ov14893082;
extern T0* ge909ov14893083;
extern T0* ge909ov14893084;
extern T0* ge909ov14893085;
extern T0* ge909ov14893086;
extern T0* ge909ov14893087;
extern T0* ge909ov14893088;
extern T0* ge909ov14893089;
extern T0* ge909ov14893090;
extern T0* ge909ov14893091;
extern T0* ge909ov14893092;
extern T0* ge917ov15024129;
extern T0* ge917ov15024175;
extern T0* ge917ov15024130;
extern T0* ge917ov15024131;
extern T0* ge917ov15024132;
extern T0* ge917ov15024133;
extern T0* ge917ov15024184;
extern T0* ge917ov15024134;
extern T0* ge917ov15024135;
extern T0* ge917ov15024136;
extern T0* ge917ov15024139;
extern T0* ge917ov15024140;
extern T0* ge917ov15024141;
extern T0* ge917ov15024142;
extern T0* ge917ov15024146;
extern T0* ge917ov15024148;
extern T0* ge917ov15024149;
extern T0* ge917ov15024150;
extern T0* ge917ov15024151;
extern T0* ge917ov15024153;
extern T0* ge917ov15024154;
extern T0* ge917ov15024172;
extern T0* ge917ov15024160;
extern T0* ge917ov15024161;
extern T0* ge917ov15024174;
extern T0* ge917ov15024163;
extern T0* ge917ov15024165;
extern T0* ge917ov15024166;
extern T0* ge917ov15024169;
extern T0* ge917ov15024170;
extern T0* ge917ov15024171;
extern T0* ge928ov15204412;
extern T0* ge928ov15204378;
extern T0* ge928ov15204414;
extern T0* ge928ov15204380;
extern T0* ge928ov15204408;
extern T0* ge928ov15204374;
extern T0* ge866ov14188549;
extern T0* ge866ov14188550;
extern T0* ge928ov15204401;
extern T0* ge928ov15204367;
extern T0* ge928ov15204400;
extern T0* ge928ov15204366;
extern T0* ge928ov15204419;
extern T0* ge928ov15204385;
extern T0* ge928ov15204420;
extern T0* ge928ov15204386;
extern T0* ge928ov15204421;
extern T0* ge928ov15204387;
extern T0* ge928ov15204409;
extern T0* ge928ov15204375;
extern T0* ge928ov15204422;
extern T0* ge928ov15204388;
extern T0* ge928ov15204394;
extern T0* ge928ov15204360;
extern T0* ge928ov15204424;
extern T0* ge928ov15204390;
extern T0* ge928ov15204425;
extern T0* ge928ov15204391;
extern T0* ge928ov15204426;
extern T0* ge928ov15204392;
extern T0* ge928ov15204423;
extern T0* ge928ov15204389;
extern T0* ge932ov15269966;
extern T0* ge932ov15269959;
extern T0* ge928ov15204393;
extern T0* ge928ov15204359;
extern T0* ge928ov15204402;
extern T0* ge928ov15204368;
extern T0* ge928ov15204404;
extern T0* ge928ov15204370;
extern T0* ge928ov15204407;
extern T0* ge928ov15204373;
extern T0* ge928ov15204406;
extern T0* ge928ov15204372;
extern T0* ge928ov15204405;
extern T0* ge928ov15204371;
extern T0* ge1685ov27607082;
extern T0* ge1685ov27607044;
extern T0* ge1685ov27607042;
extern T0* ge1685ov27607083;
extern T0* ge1685ov27607055;
extern T0* ge1685ov27607054;
extern T0* ge1685ov27607065;
extern T0* ge1685ov27607059;
extern T0* ge1685ov27607058;
extern T0* ge1685ov27607057;
extern T0* ge1685ov27607063;
extern T0* ge1685ov27607062;
extern T0* ge1685ov27607064;
extern T0* ge1685ov27607041;
extern T0* ge1685ov27607067;
extern T0* ge1685ov27607076;
extern T0* ge1688ov27656219;
extern T0* ge1688ov27656217;
extern T0* ge1688ov27656218;
extern T0* ge1685ov27607077;
extern T0* ge1685ov27607078;
extern T0* ge1685ov27607081;
extern T0* ge1685ov27607079;
extern T0* ge1685ov27607080;
extern T0* ge1685ov27607074;
extern T0* ge1681ov27541505;
extern T0* ge1681ov27541506;
extern T0* ge1685ov27607047;
extern T0* ge1685ov27607070;
extern T0* ge1696ov27787281;
extern T0* ge1696ov27787280;
extern T0* ge1685ov27607090;
extern T0* ge1685ov27607091;
extern T0* ge1685ov27607092;
extern T0* ge1685ov27607085;
extern T0* ge1685ov27607068;
extern T0* ge1685ov27607069;
extern T0* ge1685ov27607071;
extern T0* ge1685ov27607075;
extern T0* ge1740ov28508161;
extern T0* ge1588ov26017794;
extern T0* ge1588ov26017795;
extern T0* ge1588ov26017797;
extern T0* ge1588ov26017798;
extern T0* ge1588ov26017799;
extern T0* ge1588ov26017800;
extern T0* ge1588ov26017801;
extern T0* ge1588ov26017802;
extern T0* ge1588ov26017803;
extern T0* ge1588ov26017804;
extern T0* ge1588ov26017806;
extern T0* ge1588ov26017807;
extern T0* ge1588ov26017808;
extern T0* ge1588ov26017809;
extern T0* ge1588ov26017810;
extern T0* ge1588ov26017812;
extern T0* ge1588ov26017813;
extern T0* ge1588ov26017814;
extern T0* ge1588ov26017816;
extern T0* ge1588ov26017817;
extern T0* ge1588ov26017818;
extern T0* ge1588ov26017819;
extern T0* ge1588ov26017820;
extern T0* ge1588ov26017821;
extern T0* ge1588ov26017822;
extern T0* ge1588ov26017823;
extern T0* ge1588ov26017824;
extern T0* ge1588ov26017825;
extern T0* ge1588ov26017826;
extern T0* ge1588ov26017827;
extern T0* ge1588ov26017828;
extern T0* ge1588ov26017829;
extern T0* ge1588ov26017830;
extern T0* ge1588ov26017831;
extern T0* ge1588ov26017832;
extern T0* ge1588ov26017833;
extern T0* ge1588ov26017834;
extern T0* ge1588ov26017835;
extern T0* ge1588ov26017836;
extern T0* ge1588ov26017837;
extern T0* ge1588ov26017839;
extern T0* ge1588ov26017843;
extern T0* ge1588ov26017844;
extern T0* ge1588ov26017845;
extern T0* ge1588ov26017846;
extern T0* ge1588ov26017847;
extern T0* ge1588ov26017848;
extern T0* ge1588ov26017850;
extern T0* ge1588ov26017851;
extern T0* ge1588ov26017876;
extern T0* ge1588ov26017883;
extern T0* ge1588ov26017860;
extern T0* ge1588ov26017852;
extern T0* ge909ov14893099;
extern T0* ge909ov14893094;
extern T0* ge909ov14893096;
extern T0* ge1588ov26017865;
extern T0* ge1588ov26017863;
extern T0* ge1588ov26017857;
extern T0* ge1588ov26017875;
extern T0* ge1588ov26017877;
extern T0* ge1588ov26017885;
extern T0* ge1588ov26017882;
extern T0* ge1588ov26017880;
extern T0* ge1588ov26017853;
extern T0* ge1588ov26017859;
extern T0* ge1588ov26017879;
extern T0* ge1588ov26017869;
extern T0* ge1588ov26017854;
extern T0* ge1588ov26017873;
extern T0* ge1588ov26017867;
extern T0* ge1588ov26017856;
extern T0* ge1588ov26017868;
extern T0* ge1588ov26017881;
extern T0* ge1588ov26017884;
extern T0* ge1588ov26017864;
extern T0* ge1588ov26017870;
extern T0* ge1588ov26017871;
extern T0* ge1588ov26017872;
extern T0* ge1588ov26017855;
extern T0* ge1588ov26017886;
extern T0* ge1588ov26017815;
extern T0* ge1588ov26017793;
extern T0* ge1588ov26017796;
extern T0* ge1588ov26017805;
extern T0* ge1588ov26017811;
extern T0* ge1588ov26017838;
extern T0* ge1588ov26017840;
extern T0* ge1588ov26017841;
extern T0* ge1588ov26017842;
extern T0* ge1588ov26017849;
extern T0* ge1621ov26558487;
extern T0* ge1621ov26558486;
extern T0* ge1621ov26558485;
extern T0* ge1579ov25870353;
extern T0* ge1583ov25935874;
extern T0* ge1588ov26017866;
extern T0* ge1588ov26017874;
extern T0* ge1588ov26017861;
extern T0* ge1588ov26017862;
extern T0* ge518ov8486916;
extern T0* ge318ov5210114;
extern T0* ge318ov5210121;
extern T0* ge313ov5128214;
extern T0* ge416ov6815745;
extern T0* ge315ov5160967;
extern T0* ge318ov5210117;
extern T0* ge318ov5210124;
extern T0* ge318ov5210115;
extern T0* ge318ov5210122;
extern T0* ge318ov5210116;
extern T0* ge318ov5210123;
extern T0* ge318ov5210118;
extern T0* ge318ov5210125;
extern T0* ge318ov5210119;
extern T0* ge318ov5210126;
extern T0* ge315ov5160962;
extern T0* ge315ov5160961;
extern T0* ge315ov5160969;
extern T0* ge315ov5160968;
extern T0* ge1574ov25788419;
extern T0* ge1574ov25788417;
extern T0* ge1692ov27721747;
extern T0* ge1692ov27721748;
extern T0* ge1683ov27574276;
extern T0* ge1683ov27574278;
extern T0* ge1513ov24788998;
extern T0* ge1513ov24788996;
extern T0* ge1513ov24788994;
extern T0* ge1303ov21348901;
extern T0* ge795ov13025297;
extern T0* ge1512ov24772620;
extern T0* ge1512ov24772615;
extern T0* ge1512ov24772610;
extern T0* ge1512ov24772621;
extern T0* ge1512ov24772616;
extern T0* ge1512ov24772611;
extern T0* ge1519ov24887299;
extern T0* ge1519ov24887298;
extern T0* ge1303ov21349362;
extern T0* ge1303ov21349368;
extern T0* ge1303ov21349369;
extern T0* ge1303ov21349371;
extern T0* ge1303ov21349373;
extern T0* ge1303ov21349374;
extern T0* ge1303ov21349376;
extern T0* ge1303ov21349377;
extern T0* ge1303ov21349424;
extern T0* ge1303ov21349425;
extern T0* ge1303ov21349426;
extern T0* ge1303ov21348875;
extern T0* ge1303ov21348881;
extern T0* ge1303ov21348886;
extern T0* ge1303ov21348888;
extern T0* ge1303ov21348895;
extern T0* ge1303ov21348897;
extern T0* ge1303ov21348900;
extern T0* ge1303ov21348908;
extern T0* ge1303ov21348927;
extern T0* ge1303ov21348928;
extern T0* ge1303ov21348930;
extern T0* ge1303ov21348931;
extern T0* ge1303ov21348932;
extern T0* ge1303ov21348933;
extern T0* ge1303ov21348934;
extern T0* ge1303ov21348935;
extern T0* ge1303ov21348936;
extern T0* ge1303ov21348937;
extern T0* ge1303ov21348938;
extern T0* ge1303ov21348939;
extern T0* ge1303ov21348940;
extern T0* ge1303ov21348941;
extern T0* ge1303ov21348942;
extern T0* ge1303ov21348943;
extern T0* ge1303ov21348944;
extern T0* ge1303ov21348945;
extern T0* ge1303ov21348946;
extern T0* ge1303ov21348947;
extern T0* ge1303ov21348948;
extern T0* ge1303ov21348949;
extern T0* ge1303ov21348950;
extern T0* ge1303ov21348951;
extern T0* ge1303ov21348952;
extern T0* ge1303ov21348955;
extern T0* ge1303ov21348956;
extern T0* ge1303ov21348957;
extern T0* ge1303ov21348958;
extern T0* ge1303ov21348959;
extern T0* ge1303ov21348960;
extern T0* ge1303ov21348961;
extern T0* ge1303ov21348962;
extern T0* ge1303ov21348963;
extern T0* ge1303ov21348964;
extern T0* ge1303ov21348965;
extern T0* ge1303ov21348966;
extern T0* ge1303ov21348967;
extern T0* ge1303ov21348968;
extern T0* ge1303ov21348969;
extern T0* ge1303ov21348971;
extern T0* ge1303ov21348972;
extern T0* ge1303ov21348973;
extern T0* ge1303ov21348974;
extern T0* ge1303ov21348975;
extern T0* ge1303ov21348976;
extern T0* ge1303ov21348978;
extern T0* ge1303ov21348979;
extern T0* ge1303ov21348980;
extern T0* ge1303ov21348981;
extern T0* ge1303ov21348983;
extern T0* ge1303ov21348984;
extern T0* ge1303ov21348985;
extern T0* ge1303ov21348986;
extern T0* ge1303ov21348987;
extern T0* ge1303ov21348988;
extern T0* ge1303ov21348989;
extern T0* ge1303ov21348990;
extern T0* ge1303ov21348991;
extern T0* ge1303ov21348992;
extern T0* ge1303ov21348993;
extern T0* ge1303ov21348994;
extern T0* ge1303ov21348995;
extern T0* ge1303ov21348996;
extern T0* ge1303ov21348997;
extern T0* ge1303ov21348998;
extern T0* ge1303ov21348999;
extern T0* ge1303ov21349000;
extern T0* ge1303ov21349001;
extern T0* ge1303ov21349002;
extern T0* ge1303ov21349003;
extern T0* ge1303ov21349004;
extern T0* ge1303ov21349005;
extern T0* ge1303ov21349006;
extern T0* ge1303ov21349007;
extern T0* ge1303ov21349008;
extern T0* ge1303ov21349009;
extern T0* ge1303ov21349010;
extern T0* ge1303ov21349011;
extern T0* ge1303ov21349012;
extern T0* ge1303ov21349013;
extern T0* ge1303ov21349014;
extern T0* ge1303ov21349015;
extern T0* ge1303ov21349016;
extern T0* ge1303ov21349017;
extern T0* ge1303ov21349018;
extern T0* ge1303ov21349019;
extern T0* ge1303ov21349020;
extern T0* ge1303ov21349021;
extern T0* ge1303ov21349022;
extern T0* ge1303ov21349023;
extern T0* ge1303ov21349024;
extern T0* ge1303ov21349025;
extern T0* ge1303ov21349026;
extern T0* ge1303ov21349027;
extern T0* ge1303ov21349028;
extern T0* ge1303ov21349029;
extern T0* ge1303ov21349030;
extern T0* ge1303ov21349032;
extern T0* ge1303ov21349033;
extern T0* ge1303ov21349034;
extern T0* ge1303ov21349035;
extern T0* ge1303ov21349036;
extern T0* ge1303ov21349037;
extern T0* ge1303ov21349038;
extern T0* ge1303ov21349039;
extern T0* ge1303ov21349040;
extern T0* ge1303ov21349041;
extern T0* ge1303ov21349042;
extern T0* ge1303ov21349043;
extern T0* ge1303ov21349044;
extern T0* ge1303ov21349045;
extern T0* ge1303ov21349046;
extern T0* ge1303ov21349047;
extern T0* ge1303ov21349048;
extern T0* ge1303ov21349049;
extern T0* ge1303ov21349050;
extern T0* ge1303ov21349051;
extern T0* ge1303ov21349052;
extern T0* ge1303ov21349053;
extern T0* ge1303ov21349054;
extern T0* ge1303ov21349055;
extern T0* ge1303ov21349056;
extern T0* ge1303ov21349057;
extern T0* ge1303ov21349058;
extern T0* ge1303ov21349059;
extern T0* ge1303ov21349060;
extern T0* ge1303ov21349061;
extern T0* ge1303ov21349062;
extern T0* ge1303ov21349063;
extern T0* ge1303ov21349064;
extern T0* ge1303ov21349065;
extern T0* ge1303ov21349066;
extern T0* ge1303ov21349067;
extern T0* ge1303ov21349068;
extern T0* ge1303ov21349069;
extern T0* ge1303ov21349070;
extern T0* ge1303ov21349071;
extern T0* ge1303ov21349072;
extern T0* ge1303ov21349073;
extern T0* ge1303ov21349074;
extern T0* ge1303ov21349075;
extern T0* ge1303ov21349076;
extern T0* ge1303ov21349077;
extern T0* ge1303ov21349078;
extern T0* ge1303ov21349079;
extern T0* ge1303ov21349080;
extern T0* ge1303ov21349081;
extern T0* ge1303ov21349082;
extern T0* ge1303ov21349084;
extern T0* ge1303ov21349086;
extern T0* ge1303ov21349087;
extern T0* ge1303ov21349089;
extern T0* ge1303ov21349090;
extern T0* ge1303ov21349091;
extern T0* ge1303ov21349092;
extern T0* ge1303ov21349093;
extern T0* ge1303ov21349094;
extern T0* ge1303ov21349095;
extern T0* ge1303ov21349096;
extern T0* ge1303ov21349097;
extern T0* ge1303ov21349098;
extern T0* ge1303ov21349099;
extern T0* ge1303ov21349100;
extern T0* ge1303ov21349101;
extern T0* ge1303ov21349102;
extern T0* ge1303ov21349103;
extern T0* ge1303ov21349104;
extern T0* ge1303ov21349105;
extern T0* ge1303ov21349106;
extern T0* ge1303ov21349107;
extern T0* ge1303ov21349108;
extern T0* ge1303ov21349109;
extern T0* ge1303ov21349110;
extern T0* ge1303ov21349111;
extern T0* ge1303ov21349112;
extern T0* ge1303ov21349113;
extern T0* ge1303ov21349114;
extern T0* ge1303ov21349115;
extern T0* ge1303ov21349116;
extern T0* ge1303ov21349117;
extern T0* ge1303ov21349118;
extern T0* ge1303ov21349119;
extern T0* ge1303ov21349120;
extern T0* ge1303ov21349122;
extern T0* ge1303ov21349123;
extern T0* ge1303ov21349124;
extern T0* ge1303ov21349125;
extern T0* ge1303ov21349126;
extern T0* ge1303ov21349127;
extern T0* ge1303ov21349128;
extern T0* ge1303ov21349130;
extern T0* ge1303ov21349131;
extern T0* ge1303ov21349132;
extern T0* ge1303ov21349133;
extern T0* ge1303ov21349134;
extern T0* ge1303ov21349135;
extern T0* ge1303ov21349136;
extern T0* ge1303ov21349137;
extern T0* ge1303ov21349138;
extern T0* ge1303ov21349139;
extern T0* ge1303ov21349140;
extern T0* ge1303ov21349141;
extern T0* ge1303ov21349142;
extern T0* ge1303ov21349143;
extern T0* ge1303ov21349144;
extern T0* ge1303ov21349145;
extern T0* ge1303ov21349146;
extern T0* ge1303ov21349147;
extern T0* ge1303ov21349148;
extern T0* ge1303ov21349149;
extern T0* ge1303ov21349150;
extern T0* ge1303ov21349151;
extern T0* ge1303ov21349152;
extern T0* ge1303ov21349153;
extern T0* ge1303ov21349154;
extern T0* ge1303ov21349155;
extern T0* ge1303ov21349156;
extern T0* ge1303ov21349157;
extern T0* ge1303ov21349158;
extern T0* ge1303ov21349159;
extern T0* ge1303ov21349160;
extern T0* ge1303ov21349161;
extern T0* ge1303ov21349162;
extern T0* ge1303ov21349163;
extern T0* ge1303ov21349164;
extern T0* ge1303ov21349166;
extern T0* ge1303ov21349167;
extern T0* ge1303ov21349168;
extern T0* ge1303ov21349169;
extern T0* ge1303ov21349170;
extern T0* ge1303ov21349171;
extern T0* ge1303ov21349172;
extern T0* ge1303ov21349173;
extern T0* ge1303ov21349174;
extern T0* ge1303ov21349176;
extern T0* ge1303ov21349177;
extern T0* ge1303ov21349178;
extern T0* ge1303ov21349179;
extern T0* ge1303ov21349180;
extern T0* ge1303ov21349181;
extern T0* ge1303ov21349182;
extern T0* ge1303ov21349183;
extern T0* ge1303ov21349184;
extern T0* ge1303ov21349185;
extern T0* ge1303ov21349186;
extern T0* ge1303ov21349187;
extern T0* ge1303ov21349188;
extern T0* ge1303ov21349189;
extern T0* ge1303ov21349190;
extern T0* ge1303ov21349191;
extern T0* ge1303ov21349192;
extern T0* ge1303ov21349193;
extern T0* ge1303ov21349194;
extern T0* ge1303ov21349195;
extern T0* ge1303ov21349196;
extern T0* ge1303ov21349197;
extern T0* ge1303ov21349198;
extern T0* ge1303ov21349199;
extern T0* ge1303ov21349200;
extern T0* ge1303ov21349201;
extern T0* ge1303ov21349202;
extern T0* ge1303ov21349203;
extern T0* ge1303ov21349204;
extern T0* ge1303ov21349206;
extern T0* ge1303ov21349207;
extern T0* ge1303ov21349208;
extern T0* ge1303ov21349209;
extern T0* ge1303ov21349210;
extern T0* ge1303ov21349211;
extern T0* ge1303ov21349212;
extern T0* ge1303ov21349213;
extern T0* ge1303ov21349214;
extern T0* ge1303ov21349215;
extern T0* ge1303ov21349217;
extern T0* ge1303ov21349218;
extern T0* ge1303ov21349219;
extern T0* ge1303ov21349220;
extern T0* ge1303ov21349221;
extern T0* ge1303ov21349222;
extern T0* ge1303ov21349223;
extern T0* ge1303ov21349224;
extern T0* ge1303ov21349225;
extern T0* ge1303ov21349226;
extern T0* ge1303ov21349227;
extern T0* ge1303ov21349228;
extern T0* ge1303ov21349229;
extern T0* ge1303ov21349230;
extern T0* ge1303ov21349232;
extern T0* ge1303ov21349234;
extern T0* ge1303ov21349235;
extern T0* ge1303ov21349237;
extern T0* ge1303ov21349238;
extern T0* ge1303ov21349239;
extern T0* ge1303ov21349240;
extern T0* ge1303ov21349241;
extern T0* ge1303ov21349242;
extern T0* ge1303ov21349243;
extern T0* ge1303ov21349244;
extern T0* ge1303ov21349246;
extern T0* ge1303ov21349247;
extern T0* ge1303ov21349248;
extern T0* ge1303ov21349249;
extern T0* ge1303ov21349250;
extern T0* ge1303ov21349252;
extern T0* ge1303ov21349254;
extern T0* ge1303ov21349255;
extern T0* ge1303ov21349256;
extern T0* ge1303ov21349259;
extern T0* ge1303ov21349260;
extern T0* ge1303ov21349261;
extern T0* ge1303ov21349263;
extern T0* ge1303ov21349264;
extern T0* ge1303ov21349265;
extern T0* ge1303ov21349266;
extern T0* ge1303ov21349267;
extern T0* ge1303ov21349268;
extern T0* ge1303ov21349269;
extern T0* ge1303ov21349270;
extern T0* ge1303ov21349271;
extern T0* ge1303ov21349272;
extern T0* ge1303ov21349273;
extern T0* ge1303ov21349274;
extern T0* ge1303ov21349276;
extern T0* ge1303ov21349277;
extern T0* ge1303ov21349278;
extern T0* ge1303ov21349280;
extern T0* ge1303ov21349281;
extern T0* ge1303ov21349282;
extern T0* ge1303ov21349283;
extern T0* ge1303ov21349284;
extern T0* ge1303ov21349285;
extern T0* ge1303ov21349286;
extern T0* ge1303ov21349287;
extern T0* ge1303ov21349289;
extern T0* ge1303ov21349290;
extern T0* ge1303ov21349291;
extern T0* ge1303ov21349292;
extern T0* ge1303ov21349293;
extern T0* ge1303ov21349294;
extern T0* ge1303ov21349295;
extern T0* ge1303ov21349296;
extern T0* ge1303ov21349297;
extern T0* ge1303ov21349298;
extern T0* ge1303ov21349300;
extern T0* ge1303ov21349301;
extern T0* ge1303ov21349302;
extern T0* ge1303ov21349303;
extern T0* ge1303ov21349304;
extern T0* ge1303ov21349305;
extern T0* ge1303ov21349306;
extern T0* ge1303ov21349307;
extern T0* ge1303ov21349308;
extern T0* ge1303ov21349309;
extern T0* ge1303ov21349310;
extern T0* ge1303ov21349324;
extern T0* ge1303ov21349325;
extern T0* ge1303ov21349326;
extern T0* ge1303ov21349327;
extern T0* ge1303ov21349328;
extern T0* ge1303ov21349330;
extern T0* ge1303ov21349331;
extern T0* ge1303ov21349332;
extern T0* ge1303ov21349333;
extern T0* ge1303ov21349334;
extern T0* ge1303ov21349335;
extern T0* ge1303ov21349336;
extern T0* ge1303ov21349337;
extern T0* ge1303ov21349338;
extern T0* ge1303ov21349339;
extern T0* ge1303ov21349340;
extern T0* ge1303ov21349341;
extern T0* ge1303ov21349342;
extern T0* ge1303ov21349343;
extern T0* ge1303ov21349344;
extern T0* ge1303ov21349345;
extern T0* ge1303ov21349346;
extern T0* ge1303ov21349347;
extern T0* ge1303ov21349348;
extern T0* ge1303ov21349351;
extern T0* ge1303ov21349352;
extern T0* ge1303ov21349353;
extern T0* ge1303ov21349354;
extern T0* ge1303ov21349355;
extern T0* ge1303ov21349356;
extern T0* ge1303ov21349357;
extern T0* ge1303ov21349358;
extern T0* ge1303ov21349359;
extern T0* ge1303ov21349360;
extern T0* ge349ov5718021;
extern T0* ge1534ov25133114;
extern T0* ge1401ov22954011;
extern T0* ge1394ov22839304;
extern T0* ge1390ov22773797;
extern T0* ge1522ov24937132;
extern T0* ge1522ov24936867;
extern T0* ge1522ov24936666;
extern T0* ge1522ov24937133;
extern T0* ge1522ov24936667;
extern T0* ge1522ov24937039;
extern T0* ge1522ov24936816;
extern T0* ge1522ov24936573;
extern T0* ge1522ov24936953;
extern T0* ge1522ov24936778;
extern T0* ge1522ov24936487;
extern T0* ge1522ov24936954;
extern T0* ge1522ov24936488;
extern T0* ge1522ov24936937;
extern T0* ge1522ov24936771;
extern T0* ge1522ov24936471;
extern T0* ge1522ov24936936;
extern T0* ge1522ov24936470;
extern T0* ge1522ov24936938;
extern T0* ge1522ov24936472;
extern T0* ge1522ov24936962;
extern T0* ge1522ov24936782;
extern T0* ge1522ov24936496;
extern T0* ge1522ov24936951;
extern T0* ge1522ov24936485;
extern T0* ge1522ov24936952;
extern T0* ge1522ov24936486;
extern T0* ge1522ov24937069;
extern T0* ge1522ov24936833;
extern T0* ge1522ov24936603;
extern T0* ge1522ov24937068;
extern T0* ge1522ov24936602;
extern T0* ge1522ov24937070;
extern T0* ge1522ov24936834;
extern T0* ge1522ov24936604;
extern T0* ge1522ov24936966;
extern T0* ge1522ov24936784;
extern T0* ge1522ov24936500;
extern T0* ge1522ov24936972;
extern T0* ge1522ov24936788;
extern T0* ge1522ov24936506;
extern T0* ge1522ov24937061;
extern T0* ge1522ov24936829;
extern T0* ge1522ov24936595;
extern T0* ge1522ov24937044;
extern T0* ge1522ov24936819;
extern T0* ge1522ov24936578;
extern T0* ge1522ov24937071;
extern T0* ge1522ov24936835;
extern T0* ge1522ov24936605;
extern T0* ge1522ov24936969;
extern T0* ge1522ov24936786;
extern T0* ge1522ov24936503;
extern T0* ge1522ov24936976;
extern T0* ge1522ov24936791;
extern T0* ge1522ov24936510;
extern T0* ge1522ov24937062;
extern T0* ge1522ov24936830;
extern T0* ge1522ov24936596;
extern T0* ge1522ov24937060;
extern T0* ge1522ov24936828;
extern T0* ge1522ov24936594;
extern T0* ge1522ov24937045;
extern T0* ge1522ov24936820;
extern T0* ge1522ov24936579;
extern T0* ge1522ov24937063;
extern T0* ge1522ov24936831;
extern T0* ge1522ov24936597;
extern T0* ge1522ov24937199;
extern T0* ge1522ov24936904;
extern T0* ge1522ov24936733;
extern T0* ge1522ov24937035;
extern T0* ge1522ov24936815;
extern T0* ge1522ov24936569;
extern T0* ge1522ov24937036;
extern T0* ge1522ov24936570;
extern T0* ge1522ov24937027;
extern T0* ge1522ov24936812;
extern T0* ge1522ov24936561;
extern T0* ge1522ov24937038;
extern T0* ge1522ov24936572;
extern T0* ge1522ov24937037;
extern T0* ge1522ov24936571;
extern T0* ge1522ov24937034;
extern T0* ge1522ov24936814;
extern T0* ge1522ov24936568;
extern T0* ge1522ov24936999;
extern T0* ge1522ov24936800;
extern T0* ge1522ov24936533;
extern T0* ge1522ov24936998;
extern T0* ge1522ov24936799;
extern T0* ge1522ov24936532;
extern T0* ge1522ov24936997;
extern T0* ge1522ov24936798;
extern T0* ge1522ov24936531;
extern T0* ge1522ov24936996;
extern T0* ge1522ov24936797;
extern T0* ge1522ov24936530;
extern T0* ge1522ov24936995;
extern T0* ge1522ov24936529;
extern T0* ge1522ov24936927;
extern T0* ge1522ov24936767;
extern T0* ge1522ov24936461;
extern T0* ge1522ov24936925;
extern T0* ge1522ov24936766;
extern T0* ge1522ov24936459;
extern T0* ge1522ov24937005;
extern T0* ge1522ov24936801;
extern T0* ge1522ov24936539;
extern T0* ge1522ov24937002;
extern T0* ge1522ov24936536;
extern T0* ge1522ov24937013;
extern T0* ge1522ov24936803;
extern T0* ge1522ov24936547;
extern T0* ge1522ov24937009;
extern T0* ge1522ov24936802;
extern T0* ge1522ov24936543;
extern T0* ge1522ov24937006;
extern T0* ge1522ov24936540;
extern T0* ge1522ov24937003;
extern T0* ge1522ov24936537;
extern T0* ge1522ov24937014;
extern T0* ge1522ov24936548;
extern T0* ge1522ov24937010;
extern T0* ge1522ov24936544;
extern T0* ge1522ov24937007;
extern T0* ge1522ov24936541;
extern T0* ge1522ov24937004;
extern T0* ge1522ov24936538;
extern T0* ge1522ov24937015;
extern T0* ge1522ov24936549;
extern T0* ge1522ov24937011;
extern T0* ge1522ov24936545;
extern T0* ge1522ov24937125;
extern T0* ge1522ov24936863;
extern T0* ge1522ov24936659;
extern T0* ge1522ov24937021;
extern T0* ge1522ov24936807;
extern T0* ge1522ov24936555;
extern T0* ge1522ov24937020;
extern T0* ge1522ov24936554;
extern T0* ge1522ov24937001;
extern T0* ge1522ov24936535;
extern T0* ge1522ov24937000;
extern T0* ge1522ov24936534;
extern T0* ge1522ov24937012;
extern T0* ge1522ov24936546;
extern T0* ge1522ov24937008;
extern T0* ge1522ov24936542;
extern T0* ge1522ov24937019;
extern T0* ge1522ov24936806;
extern T0* ge1522ov24936553;
extern T0* ge1522ov24937018;
extern T0* ge1522ov24936805;
extern T0* ge1522ov24936552;
extern T0* ge1522ov24937017;
extern T0* ge1522ov24936804;
extern T0* ge1522ov24936551;
extern T0* ge1522ov24937114;
extern T0* ge1522ov24936857;
extern T0* ge1522ov24936648;
extern T0* ge1522ov24937112;
extern T0* ge1522ov24936856;
extern T0* ge1522ov24936646;
extern T0* ge1522ov24936940;
extern T0* ge1522ov24936772;
extern T0* ge1522ov24936474;
extern T0* ge1522ov24937067;
extern T0* ge1522ov24936832;
extern T0* ge1522ov24936601;
extern T0* ge1522ov24936939;
extern T0* ge1522ov24936473;
extern T0* ge1522ov24937066;
extern T0* ge1522ov24936600;
extern T0* ge1522ov24937065;
extern T0* ge1522ov24936599;
extern T0* ge1522ov24936970;
extern T0* ge1522ov24936787;
extern T0* ge1522ov24936504;
extern T0* ge1522ov24936968;
extern T0* ge1522ov24936785;
extern T0* ge1522ov24936502;
extern T0* ge1522ov24936967;
extern T0* ge1522ov24936501;
extern T0* ge1522ov24936974;
extern T0* ge1522ov24936789;
extern T0* ge1522ov24936508;
extern T0* ge1522ov24936973;
extern T0* ge1522ov24936507;
extern T0* ge1522ov24936975;
extern T0* ge1522ov24936790;
extern T0* ge1522ov24936509;
extern T0* ge1522ov24937049;
extern T0* ge1522ov24936821;
extern T0* ge1522ov24936583;
extern T0* ge1522ov24937048;
extern T0* ge1522ov24936582;
extern T0* ge1522ov24937016;
extern T0* ge1522ov24936550;
extern T0* ge1522ov24937047;
extern T0* ge1522ov24936581;
extern T0* ge1522ov24937046;
extern T0* ge1522ov24936580;
extern T0* ge1522ov24937050;
extern T0* ge1522ov24936822;
extern T0* ge1522ov24936584;
extern T0* ge1522ov24936956;
extern T0* ge1522ov24936779;
extern T0* ge1522ov24936490;
extern T0* ge1522ov24936955;
extern T0* ge1522ov24936489;
extern T0* ge1522ov24936961;
extern T0* ge1522ov24936495;
extern T0* ge1522ov24936958;
extern T0* ge1522ov24936780;
extern T0* ge1522ov24936492;
extern T0* ge1522ov24936959;
extern T0* ge1522ov24936493;
extern T0* ge1522ov24937064;
extern T0* ge1522ov24936598;
extern T0* ge1522ov24936957;
extern T0* ge1522ov24936491;
extern T0* ge1522ov24936971;
extern T0* ge1522ov24936505;
extern T0* ge1522ov24936960;
extern T0* ge1522ov24936781;
extern T0* ge1522ov24936494;
extern T0* ge1522ov24936965;
extern T0* ge1522ov24936783;
extern T0* ge1522ov24936499;
extern T0* ge1522ov24936963;
extern T0* ge1522ov24936497;
extern T0* ge1522ov24936964;
extern T0* ge1522ov24936498;
extern T0* ge1522ov24937072;
extern T0* ge1522ov24936836;
extern T0* ge1522ov24936606;
extern T0* ge1522ov24937041;
extern T0* ge1522ov24936808;
extern T0* ge1522ov24936575;
extern T0* ge1522ov24936935;
extern T0* ge1522ov24936770;
extern T0* ge1522ov24936469;
extern T0* ge1522ov24936933;
extern T0* ge1522ov24936467;
extern T0* ge1522ov24936929;
extern T0* ge1522ov24936769;
extern T0* ge1522ov24936463;
extern T0* ge1522ov24936928;
extern T0* ge1522ov24936768;
extern T0* ge1522ov24936462;
extern T0* ge1522ov24937189;
extern T0* ge1522ov24936893;
extern T0* ge1522ov24936723;
extern T0* ge1522ov24937192;
extern T0* ge1522ov24936897;
extern T0* ge1522ov24936726;
extern T0* ge1522ov24937130;
extern T0* ge1522ov24936866;
extern T0* ge1522ov24936664;
extern T0* ge1522ov24937191;
extern T0* ge1522ov24936896;
extern T0* ge1522ov24936725;
extern T0* ge1522ov24937040;
extern T0* ge1522ov24936817;
extern T0* ge1522ov24936574;
extern T0* ge1522ov24937042;
extern T0* ge1522ov24936576;
extern T0* ge1512ov24772622;
extern T0* ge1512ov24772617;
extern T0* ge1512ov24772612;
extern T0* ge1512ov24772623;
extern T0* ge1512ov24772618;
extern T0* ge1512ov24772613;
extern T0* ge1522ov24937202;
extern T0* ge1522ov24936906;
extern T0* ge1522ov24936736;
extern T0* ge1522ov24937201;
extern T0* ge1522ov24936735;
extern T0* ge1522ov24936989;
extern T0* ge1522ov24936795;
extern T0* ge1522ov24936523;
extern T0* ge1522ov24936988;
extern T0* ge1522ov24936522;
extern T0* ge1522ov24936987;
extern T0* ge1522ov24936794;
extern T0* ge1522ov24936521;
extern T0* ge1522ov24936986;
extern T0* ge1522ov24936520;
extern T0* ge1522ov24936990;
extern T0* ge1522ov24936796;
extern T0* ge1522ov24936524;
extern T0* ge1522ov24936981;
extern T0* ge1522ov24936793;
extern T0* ge1522ov24936515;
extern T0* ge1522ov24936983;
extern T0* ge1522ov24936517;
extern T0* ge1522ov24937147;
extern T0* ge1522ov24936873;
extern T0* ge1522ov24936681;
extern T0* ge1522ov24937153;
extern T0* ge1522ov24936875;
extern T0* ge1522ov24936687;
extern T0* ge1522ov24937138;
extern T0* ge1522ov24936870;
extern T0* ge1522ov24936672;
extern T0* ge1522ov24937169;
extern T0* ge1522ov24936881;
extern T0* ge1522ov24936703;
extern T0* ge1522ov24937058;
extern T0* ge1522ov24936827;
extern T0* ge1522ov24936592;
extern T0* ge1522ov24937140;
extern T0* ge1522ov24936871;
extern T0* ge1522ov24936674;
extern T0* ge1522ov24937139;
extern T0* ge1522ov24936673;
extern T0* ge1522ov24936950;
extern T0* ge1522ov24936777;
extern T0* ge1522ov24936484;
extern T0* ge1522ov24937137;
extern T0* ge1522ov24936671;
extern T0* ge1522ov24937136;
extern T0* ge1522ov24936670;
extern T0* ge1522ov24936949;
extern T0* ge1522ov24936776;
extern T0* ge1522ov24936483;
extern T0* ge1522ov24936921;
extern T0* ge1522ov24936762;
extern T0* ge1522ov24936455;
extern T0* ge1522ov24937154;
extern T0* ge1522ov24936688;
extern T0* ge1522ov24937168;
extern T0* ge1522ov24936702;
extern T0* ge1522ov24937056;
extern T0* ge1522ov24936826;
extern T0* ge1522ov24936590;
extern T0* ge1522ov24936920;
extern T0* ge1522ov24936454;
extern T0* ge1522ov24937145;
extern T0* ge1522ov24936679;
extern T0* ge1522ov24936991;
extern T0* ge1522ov24936525;
extern T0* ge1522ov24936979;
extern T0* ge1522ov24936513;
extern T0* ge1522ov24936985;
extern T0* ge1522ov24936519;
extern T0* ge1522ov24936982;
extern T0* ge1522ov24936516;
extern T0* ge1522ov24936980;
extern T0* ge1522ov24936514;
extern T0* ge1523ov24953177;
extern T0* ge1523ov24953313;
extern T0* ge1523ov24953321;
extern T0* ge1522ov24937152;
extern T0* ge1522ov24936874;
extern T0* ge1522ov24936686;
extern T0* ge1522ov24937059;
extern T0* ge1522ov24936593;
extern T0* ge1522ov24937214;
extern T0* ge1522ov24936911;
extern T0* ge1522ov24936748;
extern T0* ge1522ov24937212;
extern T0* ge1522ov24936746;
extern T0* ge1522ov24937213;
extern T0* ge1522ov24936747;
extern T0* ge1522ov24937209;
extern T0* ge1522ov24936909;
extern T0* ge1522ov24936743;
extern T0* ge1522ov24937207;
extern T0* ge1522ov24936741;
extern T0* ge1522ov24937208;
extern T0* ge1522ov24936742;
extern T0* ge1522ov24937210;
extern T0* ge1522ov24936910;
extern T0* ge1522ov24936744;
extern T0* ge1522ov24937211;
extern T0* ge1522ov24936745;
extern T0* ge1522ov24937205;
extern T0* ge1522ov24936908;
extern T0* ge1522ov24936739;
extern T0* ge1522ov24937206;
extern T0* ge1522ov24936740;
extern T0* ge1522ov24937178;
extern T0* ge1522ov24936886;
extern T0* ge1522ov24936712;
extern T0* ge1522ov24937177;
extern T0* ge1522ov24936711;
extern T0* ge1522ov24937029;
extern T0* ge1522ov24936563;
extern T0* ge1522ov24937032;
extern T0* ge1522ov24936813;
extern T0* ge1522ov24936566;
extern T0* ge1522ov24937022;
extern T0* ge1522ov24936809;
extern T0* ge1522ov24936556;
extern T0* ge1522ov24937025;
extern T0* ge1522ov24936811;
extern T0* ge1522ov24936559;
extern T0* ge1522ov24937128;
extern T0* ge1522ov24936865;
extern T0* ge1522ov24936662;
extern T0* ge1522ov24937129;
extern T0* ge1522ov24936663;
extern T0* ge1522ov24937028;
extern T0* ge1522ov24936562;
extern T0* ge1522ov24937142;
extern T0* ge1522ov24936676;
extern T0* ge1522ov24936994;
extern T0* ge1522ov24936528;
extern T0* ge1522ov24937116;
extern T0* ge1522ov24936858;
extern T0* ge1522ov24936650;
extern T0* ge1522ov24937117;
extern T0* ge1522ov24936859;
extern T0* ge1522ov24936651;
extern T0* ge1522ov24937113;
extern T0* ge1522ov24936647;
extern T0* ge1522ov24937164;
extern T0* ge1522ov24936879;
extern T0* ge1522ov24936698;
extern T0* ge1522ov24937106;
extern T0* ge1522ov24936852;
extern T0* ge1522ov24936640;
extern T0* ge1522ov24937105;
extern T0* ge1522ov24936851;
extern T0* ge1522ov24936639;
extern T0* ge1522ov24937103;
extern T0* ge1522ov24936850;
extern T0* ge1522ov24936637;
extern T0* ge1522ov24937104;
extern T0* ge1522ov24936638;
extern T0* ge1522ov24937225;
extern T0* ge1522ov24936916;
extern T0* ge1522ov24936759;
extern T0* ge1522ov24937181;
extern T0* ge1522ov24936889;
extern T0* ge1522ov24936715;
extern T0* ge1522ov24937102;
extern T0* ge1522ov24936849;
extern T0* ge1522ov24936636;
extern T0* ge1522ov24937101;
extern T0* ge1522ov24936848;
extern T0* ge1522ov24936635;
extern T0* ge1522ov24937107;
extern T0* ge1522ov24936854;
extern T0* ge1522ov24936641;
extern T0* ge1523ov24953095;
extern T0* ge1523ov24953096;
extern T0* ge1523ov24953134;
extern T0* ge1523ov24953097;
extern T0* ge1523ov24953048;
extern T0* ge1523ov24953135;
extern T0* ge1523ov24953098;
extern T0* ge1523ov24953143;
extern T0* ge1523ov24953144;
extern T0* ge1523ov24953145;
extern T0* ge1523ov24953049;
extern T0* ge1523ov24953146;
extern T0* ge1522ov24936930;
extern T0* ge1522ov24936464;
extern T0* ge1522ov24937043;
extern T0* ge1522ov24936818;
extern T0* ge1522ov24936577;
extern T0* ge1523ov24953066;
extern T0* ge1523ov24953297;
extern T0* ge1523ov24953201;
extern T0* ge1523ov24953314;
extern T0* ge1523ov24953280;
extern T0* ge1523ov24953203;
extern T0* ge1523ov24953078;
extern T0* ge1523ov24953124;
extern T0* ge1523ov24953202;
extern T0* ge1523ov24953303;
extern T0* ge1523ov24953289;
extern T0* ge1523ov24953323;
extern T0* ge1523ov24953126;
extern T0* ge1523ov24953032;
extern T0* ge1523ov24953307;
extern T0* ge1523ov24953304;
extern T0* ge1523ov24953142;
extern T0* ge1523ov24953176;
extern T0* ge1523ov24953293;
extern T0* ge1523ov24953140;
extern T0* ge1523ov24953141;
extern T0* ge1523ov24953179;
extern T0* ge1522ov24936922;
extern T0* ge1522ov24936763;
extern T0* ge1522ov24936456;
extern T0* ge1522ov24937078;
extern T0* ge1522ov24936838;
extern T0* ge1522ov24936612;
extern T0* ge1522ov24937077;
extern T0* ge1522ov24936611;
extern T0* ge1522ov24937076;
extern T0* ge1522ov24936610;
extern T0* ge1522ov24937075;
extern T0* ge1522ov24936609;
extern T0* ge1522ov24937074;
extern T0* ge1522ov24936608;
extern T0* ge1522ov24937073;
extern T0* ge1522ov24936837;
extern T0* ge1522ov24936607;
extern T0* ge1523ov24953324;
extern T0* ge1522ov24937083;
extern T0* ge1522ov24936841;
extern T0* ge1522ov24936617;
extern T0* ge1522ov24937090;
extern T0* ge1522ov24936845;
extern T0* ge1522ov24936624;
extern T0* ge1522ov24937089;
extern T0* ge1522ov24936623;
extern T0* ge1522ov24937088;
extern T0* ge1522ov24936844;
extern T0* ge1522ov24936622;
extern T0* ge1522ov24937087;
extern T0* ge1522ov24936621;
extern T0* ge1522ov24937086;
extern T0* ge1522ov24936843;
extern T0* ge1522ov24936620;
extern T0* ge1522ov24937085;
extern T0* ge1522ov24936619;
extern T0* ge1522ov24937084;
extern T0* ge1522ov24936842;
extern T0* ge1522ov24936618;
extern T0* ge1522ov24937082;
extern T0* ge1522ov24936616;
extern T0* ge1522ov24937151;
extern T0* ge1522ov24936685;
extern T0* ge1522ov24937180;
extern T0* ge1522ov24936888;
extern T0* ge1522ov24936714;
extern T0* ge1522ov24937179;
extern T0* ge1522ov24936887;
extern T0* ge1522ov24936713;
extern T0* ge1523ov24953283;
extern T0* ge1522ov24937156;
extern T0* ge1522ov24936877;
extern T0* ge1522ov24936690;
extern T0* ge1522ov24937157;
extern T0* ge1522ov24936691;
extern T0* ge1522ov24937155;
extern T0* ge1522ov24936876;
extern T0* ge1522ov24936689;
extern T0* ge1522ov24937187;
extern T0* ge1522ov24936891;
extern T0* ge1522ov24936721;
extern T0* ge1522ov24937185;
extern T0* ge1522ov24936890;
extern T0* ge1522ov24936719;
extern T0* ge1522ov24937163;
extern T0* ge1522ov24936878;
extern T0* ge1522ov24936697;
extern T0* ge1522ov24937167;
extern T0* ge1522ov24936880;
extern T0* ge1522ov24936701;
extern T0* ge1522ov24937166;
extern T0* ge1522ov24936700;
extern T0* ge1522ov24937162;
extern T0* ge1522ov24936696;
extern T0* ge1522ov24937161;
extern T0* ge1522ov24936695;
extern T0* ge1522ov24937160;
extern T0* ge1522ov24936694;
extern T0* ge1522ov24937159;
extern T0* ge1522ov24936693;
extern T0* ge1522ov24937158;
extern T0* ge1522ov24936692;
extern T0* ge1522ov24937184;
extern T0* ge1522ov24936718;
extern T0* ge1523ov24953137;
extern T0* ge1523ov24953138;
extern T0* ge1522ov24937182;
extern T0* ge1522ov24936716;
extern T0* ge1522ov24937183;
extern T0* ge1522ov24936717;
extern T0* ge1522ov24936992;
extern T0* ge1522ov24936526;
extern T0* ge1522ov24937143;
extern T0* ge1522ov24936677;
extern T0* ge1303ov21349428;
extern T0* ge1303ov21349430;
extern T0* ge1303ov21349431;
extern T0* ge1522ov24937173;
extern T0* ge1522ov24936883;
extern T0* ge1522ov24936707;
extern T0* ge1297ov21250058;
extern T0* ge1297ov21250057;
extern T0* ge1522ov24937171;
extern T0* ge1522ov24936882;
extern T0* ge1522ov24936705;
extern T0* ge1522ov24937170;
extern T0* ge1522ov24936704;
extern T0* ge1297ov21250059;
extern T0* ge1522ov24937174;
extern T0* ge1522ov24936708;
extern T0* ge1522ov24937172;
extern T0* ge1522ov24936706;
extern T0* ge1522ov24937194;
extern T0* ge1522ov24936899;
extern T0* ge1522ov24936728;
extern T0* ge1522ov24937193;
extern T0* ge1522ov24936898;
extern T0* ge1522ov24936727;
extern T0* ge1523ov24953019;
extern T0* ge1523ov24953007;
extern T0* ge1523ov24953302;
extern T0* ge1523ov24953031;
extern T0* ge1523ov24953279;
extern T0* ge1522ov24937126;
extern T0* ge1522ov24936660;
extern T0* ge1522ov24937122;
extern T0* ge1522ov24936862;
extern T0* ge1522ov24936656;
extern T0* ge1522ov24937123;
extern T0* ge1522ov24936657;
extern T0* ge1522ov24937124;
extern T0* ge1522ov24936658;
extern T0* ge1522ov24936945;
extern T0* ge1522ov24936775;
extern T0* ge1522ov24936479;
extern T0* ge1522ov24936944;
extern T0* ge1522ov24936478;
extern T0* ge1522ov24936943;
extern T0* ge1522ov24936774;
extern T0* ge1522ov24936477;
extern T0* ge1522ov24937149;
extern T0* ge1522ov24936683;
extern T0* ge1522ov24936947;
extern T0* ge1522ov24936481;
extern T0* ge1522ov24936948;
extern T0* ge1522ov24936482;
extern T0* ge1522ov24936942;
extern T0* ge1522ov24936773;
extern T0* ge1522ov24936476;
extern T0* ge1522ov24937141;
extern T0* ge1522ov24936872;
extern T0* ge1522ov24936675;
extern T0* ge1522ov24937146;
extern T0* ge1522ov24936680;
extern T0* ge1523ov24953288;
extern T0* ge1522ov24937148;
extern T0* ge1522ov24936682;
extern T0* ge1522ov24936919;
extern T0* ge1522ov24936761;
extern T0* ge1522ov24936453;
extern T0* ge1522ov24936993;
extern T0* ge1522ov24936527;
extern T0* ge1522ov24937098;
extern T0* ge1522ov24936846;
extern T0* ge1522ov24936632;
extern T0* ge1522ov24937096;
extern T0* ge1522ov24936630;
extern T0* ge1522ov24937094;
extern T0* ge1522ov24936628;
extern T0* ge1522ov24937093;
extern T0* ge1522ov24936627;
extern T0* ge1522ov24937119;
extern T0* ge1522ov24936860;
extern T0* ge1522ov24936653;
extern T0* ge1522ov24937121;
extern T0* ge1522ov24936861;
extern T0* ge1522ov24936655;
extern T0* ge1522ov24937111;
extern T0* ge1522ov24936855;
extern T0* ge1522ov24936645;
extern T0* ge1522ov24937165;
extern T0* ge1522ov24936699;
extern T0* ge1522ov24937097;
extern T0* ge1522ov24936631;
extern T0* ge1522ov24937095;
extern T0* ge1522ov24936629;
extern T0* ge1522ov24937092;
extern T0* ge1522ov24936626;
extern T0* ge1522ov24937091;
extern T0* ge1522ov24936625;
extern T0* ge1522ov24937115;
extern T0* ge1522ov24936649;
extern T0* ge1522ov24937110;
extern T0* ge1522ov24936644;
extern T0* ge1522ov24937150;
extern T0* ge1522ov24936684;
extern T0* ge1522ov24937099;
extern T0* ge1522ov24936847;
extern T0* ge1522ov24936633;
extern T0* ge1522ov24937100;
extern T0* ge1522ov24936634;
extern T0* ge1522ov24937131;
extern T0* ge1522ov24936665;
extern T0* ge1522ov24936934;
extern T0* ge1522ov24936468;
extern T0* ge1522ov24936932;
extern T0* ge1522ov24936466;
extern T0* ge1522ov24936931;
extern T0* ge1522ov24936465;
extern T0* ge1522ov24937127;
extern T0* ge1522ov24936864;
extern T0* ge1522ov24936661;
extern T0* ge1522ov24937203;
extern T0* ge1522ov24936907;
extern T0* ge1522ov24936737;
extern T0* ge1522ov24937204;
extern T0* ge1522ov24936738;
extern T0* ge1522ov24937135;
extern T0* ge1522ov24936869;
extern T0* ge1522ov24936669;
extern T0* ge1522ov24937134;
extern T0* ge1522ov24936868;
extern T0* ge1522ov24936668;
extern T0* ge1522ov24937190;
extern T0* ge1522ov24936895;
extern T0* ge1522ov24936724;
extern T0* ge1522ov24937188;
extern T0* ge1522ov24936892;
extern T0* ge1522ov24936722;
extern T0* ge1523ov24953030;
extern T0* ge1523ov24953033;
extern T0* ge1523ov24953274;
extern T0* ge1523ov24953077;
extern T0* ge1522ov24937080;
extern T0* ge1522ov24936840;
extern T0* ge1522ov24936614;
extern T0* ge1522ov24937081;
extern T0* ge1522ov24936615;
extern T0* ge1522ov24937079;
extern T0* ge1522ov24936839;
extern T0* ge1522ov24936613;
extern T0* ge1523ov24953081;
extern T0* ge1522ov24936923;
extern T0* ge1522ov24936764;
extern T0* ge1522ov24936457;
extern T0* ge1522ov24936924;
extern T0* ge1522ov24936765;
extern T0* ge1522ov24936458;
extern T0* ge1522ov24937051;
extern T0* ge1522ov24936823;
extern T0* ge1522ov24936585;
extern T0* ge1522ov24936977;
extern T0* ge1522ov24936792;
extern T0* ge1522ov24936511;
extern T0* ge1522ov24936978;
extern T0* ge1522ov24936512;
extern T0* ge1522ov24937053;
extern T0* ge1522ov24936824;
extern T0* ge1522ov24936587;
extern T0* ge1522ov24937054;
extern T0* ge1522ov24936588;
extern T0* ge1522ov24937144;
extern T0* ge1522ov24936678;
extern T0* ge1522ov24937052;
extern T0* ge1522ov24936586;
extern T0* ge1522ov24937055;
extern T0* ge1522ov24936825;
extern T0* ge1522ov24936589;
extern T0* ge1522ov24937031;
extern T0* ge1522ov24936565;
extern T0* ge1522ov24937033;
extern T0* ge1522ov24936567;
extern T0* ge1522ov24937023;
extern T0* ge1522ov24936557;
extern T0* ge1522ov24937026;
extern T0* ge1522ov24936560;
extern T0* ge1522ov24937024;
extern T0* ge1522ov24936810;
extern T0* ge1522ov24936558;
extern T0* ge1522ov24937030;
extern T0* ge1522ov24936564;
extern T0* ge1522ov24936941;
extern T0* ge1522ov24936475;
extern T0* ge1522ov24937057;
extern T0* ge1522ov24936591;
extern T0* ge1522ov24937224;
extern T0* ge1522ov24936915;
extern T0* ge1522ov24936758;
extern T0* ge1522ov24937222;
extern T0* ge1522ov24936756;
extern T0* ge1522ov24937223;
extern T0* ge1522ov24936757;
extern T0* ge1522ov24937219;
extern T0* ge1522ov24936913;
extern T0* ge1522ov24936753;
extern T0* ge1522ov24937217;
extern T0* ge1522ov24936751;
extern T0* ge1522ov24937218;
extern T0* ge1522ov24936752;
extern T0* ge1522ov24937220;
extern T0* ge1522ov24936914;
extern T0* ge1522ov24936754;
extern T0* ge1522ov24937221;
extern T0* ge1522ov24936755;
extern T0* ge1522ov24937215;
extern T0* ge1522ov24936912;
extern T0* ge1522ov24936749;
extern T0* ge1522ov24937216;
extern T0* ge1522ov24936750;
extern T0* ge1652ov27066381;
extern T0* ge1652ov27066380;
extern T0* ge395ov5963777;
extern T0* ge393ov5963777;
extern T0* ge380ov5963777;
extern T0* ge313ov5128215;
extern T0* ge313ov5128216;
extern T0* ge313ov5128217;
extern T0* ge1521ov24920074;
extern T0* ge1521ov24920070;
extern T0* ge1521ov24920069;
extern T0* ge1521ov24920073;
extern T0* ge1521ov24920068;
extern T0* ge1521ov24920072;
extern T0* ge1521ov24920067;
extern T0* ge1521ov24920071;
extern T0* ge1521ov24920066;
extern T0* ge866ov14188556;
extern T0* ge917ov15024187;
extern T0* ge917ov15024185;
extern T0* ge875ov14336005;
extern T0* ge875ov14336006;
extern T0* ge875ov14336007;
extern T0* ge917ov15024176;
extern T0* ge917ov15024188;
extern T0* ge1303ov21349349;
extern T0* ge1303ov21349361;
extern T0* ge1307ov21413899;
extern T0* ge1303ov21349422;
extern T0* ge1303ov21349423;
extern T0* ge1303ov21349403;
extern T0* ge1303ov21349419;
extern T0* ge1303ov21349407;
extern T0* ge1303ov21349408;
extern T0* ge1303ov21349409;
extern T0* ge1303ov21349410;
extern T0* ge1303ov21349404;
extern T0* ge1303ov21349411;
extern T0* ge1303ov21349412;
extern T0* ge1303ov21349413;
extern T0* ge1303ov21349414;
extern T0* ge1303ov21349405;
extern T0* ge1303ov21349420;
extern T0* ge1303ov21349415;
extern T0* ge1303ov21349416;
extern T0* ge1303ov21349417;
extern T0* ge1303ov21349406;
extern T0* ge1303ov21349418;
extern T0* ge1303ov21349421;
extern T0* ge1683ov27574275;
extern T0* ge1683ov27574277;
extern T0* ge1203ov19710001;
extern T0* ge1203ov19710002;
extern T0* ge1303ov21349399;
extern T0* ge1303ov21349398;
extern T0* ge1303ov21349386;
extern T0* ge1303ov21349387;
extern T0* ge1303ov21349388;
extern T0* ge1303ov21349389;
extern T0* ge1303ov21349390;
extern T0* ge1303ov21349391;
extern T0* ge1303ov21349392;
extern T0* ge1303ov21349393;
extern T0* ge1303ov21349394;
extern T0* ge1303ov21349395;
extern T0* ge1303ov21349396;
extern T0* ge1303ov21349397;
extern T0* ge1303ov21349401;
extern T0* ge1303ov21349402;
extern T0* ge1303ov21349382;
extern T0* ge1303ov21349383;
extern T0* ge1303ov21349384;
extern T0* ge1303ov21349385;
extern T0* ge1303ov21349400;
extern T0* ge1329ov21774344;
extern T0* ge1329ov21774343;
extern T0* ge1303ov21349314;
extern T0* ge1303ov21349315;
extern T0* ge1303ov21349313;
extern T0* ge1303ov21349311;
extern T0* ge1303ov21349312;
extern T0* ge1303ov21349319;
extern T0* ge1303ov21349320;
extern T0* ge1303ov21349318;
extern T0* ge1303ov21349316;
extern T0* ge1303ov21349317;
extern T0* ge1303ov21349321;
extern T0* ge1303ov21349322;
extern T0* ge1303ov21349323;
extern T0* ge1348ov22085635;
extern T0* ge1336ov21889027;
extern T0* ge780ov11403268;
extern T0* ge766ov11403268;
extern T0* ge772ov11403268;
extern T0* ge771ov11403268;
extern T0* ge770ov11403268;
extern T0* ge761ov11403268;
extern T0* ge760ov11403268;
extern T0* ge777ov11403268;
extern T0* ge790ov11403268;
extern T0* ge1600ov11403268;
extern T0* ge701ov11403268;
extern T0* ge700ov11403268;
extern T0* ge1594ov11403268;
extern T0* ge1607ov11403268;
extern T0* ge1606ov11403268;
extern T0* ge1602ov11403268;
extern T0* ge1604ov11403268;
extern T0* ge1609ov11403268;
extern T0* ge1601ov11403268;
extern T0* ge1613ov11403268;
extern T0* ge1603ov11403268;
extern T0* ge1597ov11403268;
extern T0* ge695ov11403268;
extern T0* ge698ov11403268;
extern T0* ge705ov11403268;
extern T0* ge694ov11403268;
extern T0* ge390ov6389770;
extern T0* ge377ov6176778;
extern T0* geic24952833;
extern T0* geic24952834;
extern T0* geic24952835;
extern T0* geic14204929;
extern void GE_init_const1(void);
extern void GE_init_const2(void);
extern void GE_init_const3(void);
extern void GE_init_const4(void);
extern void GE_init_const5(void);
extern void GE_init_const6(void);
extern void GE_init_const7(void);
extern void GE_init_const8(void);
extern void GE_init_const9(void);
extern void GE_init_const10(void);
extern void GE_init_const11(void);
extern void GE_init_const12(void);
extern void GE_init_const13(void);
extern void GE_init_const14(void);
extern void GE_init_const15(void);
extern void GE_init_const16(void);
extern void GE_init_const17(void);
extern void GE_init_const18(void);
extern void GE_init_const19(void);
extern void GE_init_const20(void);
extern void GE_init_const21(void);
extern void GE_init_const22(void);
extern void GE_init_const(void);

#ifdef __cplusplus
}
#endif


/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CECIL_H
#define EIF_CECIL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*EIF_PROCEDURE)(EIF_REFERENCE, ...);
#define EIF_PROC EIF_PROCEDURE
typedef EIF_INTEGER_32 (*EIF_INTEGER_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Integer 32 bits */
#define EIF_INTEGER_FUNCTION EIF_INTEGER_32_FUNCTION
typedef EIF_REFERENCE (*EIF_REFERENCE_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Reference */
typedef EIF_POINTER (*EIF_POINTER_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Pointer */
typedef EIF_BOOLEAN (*EIF_BOOLEAN_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Boolean */
typedef EIF_CHARACTER_8 (*EIF_CHARACTER_8_FUNCTION)(EIF_REFERENCE, ...); /* Returns char */
#define EIF_CHARACTER_FUNCTION EIF_CHARACTER_8_FUNCTION
typedef EIF_REAL_64 (*EIF_REAL_64_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Double */
#define EIF_DOUBLE_FUNCTION EIF_REAL_64_FUNCTION
typedef EIF_REAL_32 (*EIF_REAL_32_FUNCTION)(EIF_REFERENCE, ...); /* Returns an Eiffel Real */
#define EIF_REAL_FUNCTION EIF_REAL_32_FUNCTION

extern EIF_PROCEDURE eif_procedure(char* rout, EIF_TYPE_ID cid);
#define eif_proc eif_procedure /* Use `eif_procedure' instead */
extern EIF_INTEGER_FUNCTION eif_integer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REFERENCE_FUNCTION eif_reference_function(char* rout, EIF_TYPE_ID cid);
extern EIF_POINTER_FUNCTION eif_pointer_function(char* rout, EIF_TYPE_ID cid);
extern EIF_BOOLEAN_FUNCTION eif_boolean_function(char* rout, EIF_TYPE_ID cid);
extern EIF_REAL_64_FUNCTION eif_real_64_function(char* rout, EIF_TYPE_ID cid);
#define eif_double_function(rout,cid) eif_real_64_function((rout),(cid))
extern EIF_REAL_32_FUNCTION eif_real_32_function(char* rout, EIF_TYPE_ID cid);
#define eif_real_function(rout,cid) eif_real_32_function((rout),(cid))
extern EIF_CHARACTER_8_FUNCTION eif_character_8_function(char* rout, EIF_TYPE_ID cid);
#define eif_character_function(rout,cid) eif_character_8_function((rout),(cid))
extern EIF_OBJECT eif_create(EIF_TYPE_ID cid);
extern EIF_TYPE_ID eif_type_id(char* type_string);
extern EIF_INTEGER eifaddr_offset(EIF_REFERENCE object, char *name, int * const ret);
#define eif_string(s) RTMS(s)
#define makestr(s,c) RTMS_EX((s),(c))
#define eifaddr(object,name,ret) ((void *) ((char *) object + eifaddr_offset (object, name, ret)))
#define eif_field(object,name,type) *(type *)(eifaddr(object,name, NULL)) /* Obsolete. Use "eif_attribute" instead. */
#define eif_attribute(object,name,type,ret) *(type *)(eifaddr(object,name,ret)) /* Returns the attribute of an object. Return status in "ret".*/

/* Miscellaneous useful functions. */

/* Make an Eiffel array from a C array:
 * `eif_array' is the direct reference to the Eiffel array.
 * `c_array' is the C array.
 * `nelts' the number of elements to copy in the eiffel array, it has to
 * be equal to `eif_array.count'.
 * type is an Eiffel type.
 */
#define eif_make_from_c(eif_array, c_array, nelts, type) \
	{ \
		EIF_REFERENCE area = eif_field(eif_array, "area", EIF_REFERENCE); \
		memcpy((type *)area, c_array, nelts * sizeof(type));\
	}

#define eif_type eiftype /* Dynamic type ID */
extern EIF_TYPE_ID eiftype(EIF_OBJECT object); /* Give dynamic type of EIF_OBJECT. Obsolete, use "eif_type_by_object". */
extern EIF_TYPE_ID eif_type_by_reference(EIF_REFERENCE object);
extern EIF_TYPE_INDEX eif_gen_param_id(EIF_TYPE_INDEX dftype, uint32_t pos);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_PLUG_H
#define EIF_PLUG_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern int nstcall;	/* Nested call global variable: signals a nested call and
					 * trigger an invariant check in generated C routines  */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement Thread support"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_THREADS_H
#define EIF_THREADS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef EIF_CECIL_H
#include "eif_cecil.h"
#endif
#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifdef GE_USE_THREADS
#ifndef GE_THREAD_H
#include "ge_thread.h"
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GE_USE_THREADS

/*
 * Empty stubs for EiffelThread library so that it may be compiled against a non-multithreaded run-time.
 */

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() NULL

/* THREAD_CONTROL */
#define eif_thr_yield()
#define eif_thr_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj, init_func, set_terminated_func, attr)
#define eif_thr_wait(obj,get_terminated)
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) EIF_TRUE
#define eif_thr_last_thread() NULL
#define eif_thr_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() 0
#define eif_thr_min_priority() 0
#define eif_thr_max_priority() 0

/* MUTEX */
#define eif_thr_mutex_create() NULL
#define eif_thr_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) EIF_TRUE
#define eif_thr_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() NULL
#define eif_thr_cond_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr)
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) 1
#define eif_thr_cond_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) NULL
#define eif_thr_sem_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) EIF_TRUE
#define eif_thr_sem_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() NULL
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer)

#else

/* THREAD_ENVIRONMENT */
#define eif_thr_thread_id() GE_thread_id()

/* THREAD_CONTROL */
#define eif_thr_yield() GE_thread_yield()
#define eif_thr_join_all() GE_thread_join_all()

/* THREAD */
#define eif_thr_create_with_attr(current_obj,init_func,set_terminated_func,attr) GE_thread_create_with_attr((current_obj),(void (*)(EIF_REFERENCE))(init_func),(void (*)(EIF_REFERENCE,EIF_BOOLEAN))(set_terminated_func),(EIF_THR_ATTR_TYPE*)(attr))
#define eif_thr_wait(obj,get_terminated) GE_thread_wait((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated))
#define eif_thr_wait_with_timeout(obj,get_terminated,tms) GE_thread_wait_with_timeout((obj),(EIF_BOOLEAN (*)(EIF_REFERENCE))(get_terminated),(tms))
#define eif_thr_last_thread() GE_last_thread_created()
#define eif_thr_exit() GE_thread_exit()

/* THREAD_ATTRIBUTES */
#define eif_thr_default_priority() GE_thread_default_priority()
#define eif_thr_min_priority() GE_thread_min_priority()
#define eif_thr_max_priority() GE_thread_max_priority()

/* MUTEX */
#define eif_thr_mutex_create() GE_mutex_create()
#define eif_thr_mutex_lock(a_mutex_pointer) GE_mutex_lock(a_mutex_pointer)
#define eif_thr_mutex_trylock(a_mutex_pointer) GE_mutex_try_lock(a_mutex_pointer)
#define eif_thr_mutex_unlock(a_mutex_pointer) GE_mutex_unlock(a_mutex_pointer)
#define eif_thr_mutex_destroy(a_mutex_pointer) GE_mutex_destroy(a_mutex_pointer)

/* CONDITION_VARIABLE */
#define eif_thr_cond_create() GE_condition_variable_create()
#define eif_thr_cond_broadcast(a_cond_ptr) GE_condition_variable_broadcast(a_cond_ptr)
#define eif_thr_cond_signal(a_cond_ptr) GE_condition_variable_signal(a_cond_ptr)
#define eif_thr_cond_wait(a_cond_ptr,a_mutex_ptr) GE_condition_variable_wait((a_cond_ptr),(a_mutex_ptr))
#define eif_thr_cond_wait_with_timeout(a_cond_ptr,a_mutex_ptr,a_timeout) GE_condition_variable_wait_with_timeout((a_cond_ptr),(a_mutex_ptr),(a_timeout))
#define eif_thr_cond_destroy(a_cond_ptr) GE_condition_variable_destroy(a_cond_ptr)

/* SEMAPHORE */
#define eif_thr_sem_create(a_count) GE_semaphore_create(a_count)
#define eif_thr_sem_wait(a_sem_pointer) GE_semaphore_wait(a_sem_pointer)
#define eif_thr_sem_post(a_sem_pointer) GE_semaphore_post(a_sem_pointer)
#define eif_thr_sem_trywait(a_sem_pointer) GE_semaphore_try_wait(a_sem_pointer)
#define eif_thr_sem_destroy(a_sem_pointer) GE_semaphore_destroy(a_sem_pointer)

/* READ_WRITE_LOCK */
#define eif_thr_rwl_create() GE_read_write_lock_create()
#define eif_thr_rwl_rdlock(a_read_write_lock_pointer) GE_read_write_lock_read_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_unlock(a_read_write_lock_pointer) GE_read_write_lock_unlock(a_read_write_lock_pointer)
#define eif_thr_rwl_wrlock(a_read_write_lock_pointer) GE_read_write_lock_write_lock(a_read_write_lock_pointer)
#define eif_thr_rwl_destroy(a_read_write_lock_pointer) GE_read_write_lock_destroy(a_read_write_lock_pointer)

/* WEL */
#ifdef EIF_WINDOWS
#define eif_thr_create_wel_per_thread_data(a_size) GE_thread_create_wel_per_thread_data(a_size)
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER_8 console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER_8 c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER_8 console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Let's define the stat structure for our platforms. */
/* The definition is the same for both ANSI and Unicode versions on Windows. */
#ifdef EIF_WINDOWS
#	ifdef __LCC__
#		define rt_stat_buf	struct stat
#	elif defined EIF_64_BITS
#		define rt_stat_buf	struct _stat64
#	else
#		define rt_stat_buf	struct _stat64i32
#	endif
#else
#	define rt_stat_buf		struct stat
#endif

/*
 * Create directory `dirname'.
 */
extern void eif_file_mkdir(EIF_FILENAME dirname);

/*
 * Rename file `from' into `to'.
 */
extern void eif_file_rename(EIF_FILENAME from, EIF_FILENAME  to);

/*
 * Link file `from' into `to'.
 */
extern void eif_file_link(EIF_FILENAME from, EIF_FILENAME to);

/*
 * Delete file or directory `name'.
 */
extern void eif_file_unlink(EIF_FILENAME name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_reopen(EIF_FILENAME name, int how, FILE *old);

/*
 * Close the file.
 */
extern void eif_file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void eif_file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER eif_file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER_8 eif_file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER eif_file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER eif_file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER eif_file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER_8 eif_file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void eif_file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER eif_file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void eif_file_touch(EIF_FILENAME name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void eif_file_utime(EIF_FILENAME name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern int eif_file_stat(EIF_FILENAME path, rt_stat_buf *buf, int follow);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void eif_file_perm(EIF_FILENAME name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void eif_file_chmod(EIF_FILENAME path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void eif_file_chown(EIF_FILENAME name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void eif_file_chgrp(EIF_FILENAME name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void eif_file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void eif_file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void eif_file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void eif_file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void eif_file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void eif_file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void eif_file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN eif_file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN eif_file_exists(EIF_FILENAME name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN eif_file_path_exists(EIF_FILENAME name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN eif_file_access(EIF_FILENAME name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN eif_file_creatable(EIF_FILENAME path, EIF_INTEGER nbytes);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN eif_file_eaccess(rt_stat_buf *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER eif_file_info(rt_stat_buf *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE eif_file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER eif_file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 eif_file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 eif_file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_open(EIF_FILENAME name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER eif_file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER eif_file_binary_reopen(EIF_FILENAME name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void eif_file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void eif_file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void eif_file_pdb(FILE* f, EIF_REAL_64 val);

/*
 * Modification time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_date(EIF_FILENAME  name);

/*
 * Access time of a file.
 * Seconds since epoch (01 January 1970) in UTC or 0 if time cannot be retrieved.
 */
extern EIF_INTEGER eif_file_access_date(EIF_FILENAME  name);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Predefined exception codes.
 */
#define EN_VOID		GE_EX_VOID			/* Feature applied to void reference */
#define EN_MEM		GE_EX_MEM			/* No more memory */
#define EN_PRE		GE_EX_PRE			/* Pre-condition violated */
#define EN_POST		GE_EX_POST			/* Post-condition violated */
#define EN_FLOAT	GE_EX_FLOAT			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		GE_EX_CINV			/* Class invariant violated */
#define EN_CHECK	GE_EX_CHECK			/* Assertion violated */
#define EN_FAIL		GE_EX_FAIL			/* Routine failure */
#define EN_WHEN		GE_EX_WHEN			/* Unmatched inspect value */
#define EN_VAR		GE_EX_VAR			/* Non-decreasing loop variant */
#define EN_LINV		GE_EX_LINV			/* Loop invariant violated */
#define EN_SIG		GE_EX_SIG			/* Operating system signal */
#define EN_BYE		GE_EX_BYE			/* Eiffel run-time panic */
#define EN_RESC		GE_EX_RESC			/* Exception in rescue clause */
#define EN_OMEM		GE_EX_OMEM			/* Out of memory (cannot be ignored) */
#define EN_RES		GE_EX_RES			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		GE_EX_CDEF			/* Create on deferred */
#define EN_EXT		GE_EX_EXT			/* External event */
#define EN_VEXP		GE_EX_VEXP			/* Void assigned to expanded */
#define EN_HDLR		GE_EX_HDLR			/* Exception in signal handler */
#define EN_IO		GE_EX_IO			/* I/O error */
#define EN_SYS		GE_EX_SYS			/* Operating system error */
#define EN_RETR		GE_EX_RETR			/* Retrieval error */
#define EN_PROG		GE_EX_PROG			/* Developer exception */
#define EN_FATAL	GE_EX_FATAL			/* Eiffel run-time fatal error */
#define EN_DOL		GE_EX_DOL			/* $ applied to melted feature */
#define EN_ISE_IO	GE_EX_ISE_IO		/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		GE_EX_COM			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	GE_EX_RT_CHECK		/* Runtime check error such as out-of-bound array access */
#define EN_OLD		GE_EX_OLD			/* Old violation */
#define EN_SEL		GE_EX_SEL			/* Serialization failure */
#define EN_DIRTY	GE_EX_DIRTY			/* SCOOP processor dirty exception. */
#define EN_NEX		GE_EX_NEX			/* Number of internal exceptions */

/*
 * Raise an Eiffel exception.
 */
extern void eraise(const char* name, long code);

/*
 * Raise an Eiffel exception of the given code with no associated tag.
 */
extern void xraise(int code);

/*
 * Raise an "Operating system error" exception.
 */
extern void esys(void);

/*
 * As a special case, an I/O error is raised when a system call which is I/O bound fails.
 */
extern void eise_io(const char* tag);

/*
 * Raise a "No more memory" exception.
 */
extern void enomem(void);

/*
 * Raise EiffelCOM exception.
 */
extern void com_eraise(const char* tag, long num);

/*
 * Terminate execution with exit status `code',
 * without triggering an exception.
 */
extern void esdie(int code);

/*
 * Exception tag associated with `code'.
 * This is a duplication from Eiffel classes, but still used for trace printing and in EiffelCom.
 */
extern EIF_REFERENCE eename(long except);

/*
 * Is exception `ex' defined?
 * Used in EiffelCOM.
 */
extern char eedefined(long ex);

/*
 * Enable/diable printing of the exception trace.
 * Per thead information.
 */
extern void eetrace(char b);

/*
 * Is current execution during rescue?
 */
extern EIF_BOOLEAN eif_is_in_rescue(void);

#ifdef EIF_WINDOWS
/*
 * Set default exception handler.
 */
extern void set_windows_exception_filter(void);
#endif

/*
 * Used in EiffelCOM.
 */
#define echval GE_current_context()->exception_code
#define echtg GE_current_context()->exception_tag

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class REAL"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_REAL_H
#define GE_REAL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#include <math.h>

#ifndef GE_power
#define GE_power(x,y) pow((x),(y))
#endif
#define GE_ceiling(x) ceil(x)
#define GE_floor(x) floor(x)

extern EIF_NATURAL_32 GE_real_32_to_bits (EIF_REAL_32 v);
extern EIF_NATURAL_64 GE_real_64_to_bits (EIF_REAL_64 v);
extern EIF_REAL_32 GE_real_32_from_bits (EIF_NATURAL_32 v);
extern EIF_REAL_64 GE_real_64_from_bits (EIF_NATURAL_64 v);

#define GE_real_32_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_32_to_bits(v) & ~GE_nat32(0x80000000)) > GE_nat32(0x7FF00000)))
#define GE_real_64_is_nan(v) ((v)!=(v) ? EIF_TRUE : ((GE_real_64_to_bits(v) & ~GE_nat64(0x8000000000000000)) > GE_nat64(0x7FF0000000000000)))
#define GE_real_32_is_negative_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0xFF800000))
#define GE_real_64_is_negative_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0xFFF0000000000000))
#define GE_real_32_is_positive_infinity(v) (GE_real_32_to_bits(v) == GE_nat32(0x7F800000))
#define GE_real_64_is_positive_infinity(v) (GE_real_64_to_bits(v) == GE_nat64(0x7FF0000000000000))
#define GE_real_32_nan GE_real_32_from_bits(GE_nat32(0x7FC00000))
#define GE_real_64_nan GE_real_64_from_bits(GE_nat64(0x7FF8000000000000))
#define GE_real_32_negative_infinity GE_real_32_from_bits(GE_nat32(0xFF800000))
#define GE_real_64_negative_infinity GE_real_64_from_bits(GE_nat64(0xFFF0000000000000))
#define GE_real_32_positive_infinity GE_real_32_from_bits(GE_nat32(0x7F800000))
#define GE_real_64_positive_infinity GE_real_64_from_bits(GE_nat64(0x7FF0000000000000))

#endif
/*
	description:

		"Part of ISE Eiffel runtime. Needed to compile the EiffelCOM library."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2010-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_GLOBALS_H
#define EIF_GLOBALS_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EXCEPTION_H
#include "ge_exception.h"
#endif
#ifndef EIF_THREADS_H
#include "eif_threads.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef GE_USE_THREADS
#define EIF_GET_CONTEXT \
	GE_context* eif_globals = GE_current_context();
#else
#define EIF_GET_CONTEXT
#endif

#define GTCX EIF_GET_CONTEXT

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C declarations for the ISE Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2016, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EIFFEL_H
#define EIF_EIFFEL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_STRING_H
#include "ge_string.h"
#endif
#ifndef EIF_GLOBALS_H
#include "eif_globals.h"
#endif
#ifndef EIF_EXCEPT_H
#include "eif_except.h"
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)(name))

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif
#ifndef GE_DLL_H
#include "ge_dll.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(EIF_NATIVE_CHAR* s);
extern void eif_system_asynchronous(EIF_NATIVE_CHAR* cmd);
extern void eif_sleep(EIF_INTEGER_64);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER eif_dir_open(EIF_FILENAME dirname);
extern EIF_POINTER eif_dir_next(EIF_POINTER dir);
extern EIF_POINTER eif_dir_rewind(EIF_POINTER d, EIF_FILENAME dir_name);
extern void eif_dir_close(EIF_POINTER dir);
extern EIF_BOOLEAN eif_dir_exists(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_readable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_writable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_executable(EIF_FILENAME dirname);
extern EIF_BOOLEAN eif_dir_is_deletable(EIF_FILENAME name);
extern EIF_CHARACTER_8 eif_dir_separator(void);
extern EIF_INTEGER eif_dir_current(EIF_FILENAME a_buffer, EIF_INTEGER a_count);
extern EIF_INTEGER eif_chdir(EIF_FILENAME path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2017, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) (((struct timeval*)(p))->tv_usec/1000)
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement class COM_FAILURE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2016-2018, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_COM_FAILURE_H
#define GE_COM_FAILURE_H
#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

#ifndef GE_EIFFEL_H
#include "ge_eiffel.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER GE_ccom_hresult(EIF_POINTER an_exception_code);

extern EIF_INTEGER GE_ccom_hresult_code(EIF_INTEGER an_hresult);

extern EIF_INTEGER GE_ccom_hresult_facility(EIF_INTEGER an_hresult);

/*
 * Get text from error `a_code'. It is up to the caller to free
 * the returned buffer using `GE_ccom_local_free'.
 */
extern EIF_POINTER GE_ccom_error_text(EIF_INTEGER a_code);

/*
 * Number of characters in `ptr'.
 */
extern EIF_INTEGER_32 GE_ccom_strlen(EIF_POINTER ptr);

/*
 * Number of bytes occupied by a TCHAR.
 */
extern EIF_INTEGER_32 GE_ccom_character_size(void);

/*
 * Free `a_ptr' using LocalFree.
 */
extern void GE_ccom_local_free(EIF_POINTER a_ptr);

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
